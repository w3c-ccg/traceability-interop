{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ec1d1ef2-d6f0-4957-a74c-76a941a4d6be",
        "name": "Clear Cache",
        "item": [
          {
            "id": "45061a66-381d-4a9b-ab10-70c880704f8d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eeef7803-9c7f-4f8e-8803-de57d7ae67fa",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f6cdebea-8e48-4ced-9c7d-340b1ffcb265"
                }
              }
            ]
          },
          {
            "id": "f38f219f-d1d5-4bb2-8684-0cb2e11b07d3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "af9bd80d-16f3-40a4-8417-67b6ca1f9375",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0e5bc280-ee31-4673-b391-aaba3a8f6088"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5e36a7f5-8a5a-4d3a-928e-22020fef3d57",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "01d58bca-9a30-44ea-b73a-44d3ff97d36e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c42e70f1-d3da-4c6c-8c5d-2a44360c5058",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a385c18-4f11-41da-a0bf-aadb983497f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0a689cb5-f8bf-4bbd-90fd-7461039fea64"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eef0e6c4-ec67-4829-a286-f49c6de78c1c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9e1845c1-1b5a-4b8c-b74a-2fa3d182a29a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1c789a00-ee47-4ac3-b4e6-3c06dce49961",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6c710cb0-38cd-4679-892e-a05e9cd114a0"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7806474a-327f-407a-8cfb-1eef3ade6603",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "bfed85e4-74ea-4e79-8e2a-660fd67397c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9498bed-1f98-4fb9-8ae5-537180ef16b6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e05076f-b7cc-4563-84ed-2fe79e3d88a8"
            }
          }
        ]
      },
      {
        "id": "869d3398-bcb9-4a8e-a5d3-d9557f915960",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c37243d5-65a5-431a-99ef-08131c9c96ee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1c747275-714a-405b-891d-8b83be77e219",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2da81f59-f847-4025-ae2e-a290b782ac48",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "470a78c1-12fa-4b7b-999b-c676ba75ac59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8b7803b-c93d-4204-82cd-5feaff5de716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732ddba0-e4a2-4ae6-90d5-a4e9432451a5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e846a8f8-0ad5-4f8d-bfb5-52a103297d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6bf9248-29d9-4656-b669-a322179a216b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e002ec9-ce16-44cc-a856-272407151e6e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6009bdd2-308d-4aba-9314-6452138dad55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2cdaa64-c810-4612-a53c-212905bcecee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6f3e8cf8-90a2-4625-90ce-8afff73bf6ac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "71bdab00-7ecc-41f8-b19c-e6d1f7b15341",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "590cfa1b-afa8-45b3-a74f-38880f04b9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8986190d-774a-443f-b0d8-8a6b38d3b421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841bf12b-d08a-4bec-b830-abde70f06b02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "730d5823-8465-46a0-9b39-3cb422bb4bfa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1144e3f9-b35f-40cb-9372-3c658dd5d4b5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3b16ec9a-d124-4cdb-9e47-c4918d3c292f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dab24c2d-e551-45f2-a412-025d3ecd66f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f5b718f0-4387-43e5-8f92-8365c684f40a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "601e7d6f-3c64-4922-bd96-1dbbace19e78",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2f6e3e4d-e0a0-46df-9e56-4881c01740b8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "925a3625-8960-402a-8b5b-519a5991c1a1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "46b3cb6c-d48e-4a3a-89ce-d0abf1e857df"
            }
          }
        ]
      },
      {
        "id": "6e667408-9a97-4fd4-b1e7-07e2741df924",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e8d05fc2-c3cf-4469-b5c2-7ab4306aacfc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a0dee647-51db-4493-b715-9776fcb40b3a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f8f25c76-f9c4-485b-b803-1688962e4581",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "131985cd-1491-465f-ac43-35087c9ef337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96196407-da56-4a4b-a923-e58c2582b6df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2894b6b0-ad93-49f5-ab4a-95e816fdae10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05d6afa5-e66d-48f5-abe6-c0f52c25a4f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aababf2-e031-4321-8734-a86c1acbad0a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "120b36fc-c8dd-4a03-b0e5-7acd9c293ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9315a67d-f758-47dc-b917-36cb99b6c7f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "406c99cf-182d-4cea-8297-f81a4cb32bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2da0250-0d5f-4d01-aad3-4740fea07e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7afc1b31-4c0b-45f0-85ff-7b487819f686",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "355fdbc4-d099-4bb3-984d-598ae2a06e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c9adfd0-5649-40d6-af60-a30b07f12cc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44301f21-27ab-4066-b69e-3eedec51c48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4bbcdb2-e04a-43d6-aa20-2f75f18b4e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd7a7f4-65a8-4708-b772-90991d43c3c0",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4978ace-c360-44d3-9196-a0986f692fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beca8440-5eb0-4de6-aa1c-180062093810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d710722-f87f-485a-9b1d-b50a3bc1ae68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3a98d29-63d3-4685-891b-56321984b5bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef70a025-f501-4b6d-ba7d-4d264f23f674",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38836b74-2105-4dd2-9532-8709ba03e1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f45efa78-725c-4c3e-9c48-97418cb9248b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27fc7ea-6eae-4551-826f-5a0a09ad074e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92ad9f28-de98-4967-aa2b-5f3904f2ef54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1393f758-efa1-4a9a-b376-6af062933c5c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d308f41-8293-410d-9c71-d71404118815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e8f8531-88f3-4ef4-9f72-61e029187e6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e31625a-f8b6-453d-a372-b2e00272dae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1abd779d-4d1d-4f55-a7fb-1158d17754e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45794cab-3976-4518-916d-de2c46e96486",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6c6772-a3a2-4c18-9d9c-501f09c80bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f35fe41-17cc-4ccd-8754-9ec6c1f58634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62f1756-964d-4a68-b4d2-6a6d153dcb9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c7f8543-8be4-4bfd-b952-2f94b9b2284d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b64a392-d6af-41ab-9b07-3c18dd7007fe",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0fa27ce-5902-4987-80f3-1b53310a416f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5429e8a-25ad-41ae-a309-f2bf5fa200ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "069dc31b-44bf-4e93-a83b-8dcf4734a3d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a030104-27a2-4117-b1c8-967fd22c5ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea07e31-86e7-4b14-a201-6b3b05af11cf",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a100795-9b1e-423a-a905-5ccd053582e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acc73bb8-a485-46a2-b419-666538bfac17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b168cf03-ede4-4913-81e7-342a8c9c6500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f08e419a-59b6-4628-adc2-6f749369cfbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47410280-641c-4edc-aec8-bc1406430084",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16580616-93d9-4e6c-a8e3-da935ff63372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "924573d0-9415-49f7-b1e3-3f0ada8787e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6383d8df-296c-4341-a8f2-7cb6d09b4e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b5161c4-a51a-456b-9b28-c72975e4cc99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79b2b93-ab89-469f-aab2-ea9f425f3109",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2de076-7582-481f-8af1-585aa535e0aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63f229d7-493a-4884-a261-648408cb6917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dee6628-647b-45c2-ab24-d81206bdd666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c494acd-a555-4b07-b871-891a796948d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cbcbdc0-a623-49c1-a3ec-c449856f9125",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9246b68-30f2-4ebe-898c-ba031688ed19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93389a54-6a52-4b8c-ab3f-1b0114dca206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593c4255-63fe-42d2-8dda-30ff67a5a457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9225324-3959-4f29-b1ec-816862128821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf7ab1b-c0f3-4708-91fc-8788f9cb087f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61b89c0-125c-453a-b857-f6e3ced4872a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1345d7c9-2f39-45d3-aecb-d2af06b68a12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6fe9c7-465e-4645-9a63-4312427eb1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8745ee99-690a-4a43-9ad0-970b76e97c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23709ae-dbb8-4b8e-a014-7db62e588ffa",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee8a421-63f6-4b1d-ba16-2eca62594c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3413935e-7328-46ed-8b20-34cb0c0ae8fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc63a7da-bd85-4509-b035-f820987e7188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ccf1420-9c59-4262-8f62-4077f6a8bc6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d098e4a9-e5ff-4c09-b76d-2770aac32bf5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf14c00-3113-4e82-98e2-cfd4b964351c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d19aaffc-ceb8-45bb-842e-3063bdf4b7a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f42a63e-f29f-4878-978c-a88703d325d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8eb1d48-4f6d-4324-a23a-2b629147a4a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db6251f-f4af-41e5-9d54-b28fdb2f644b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "872ced34-e069-4d3f-9cc4-e3d84e4111b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1159f13a-3a8e-45a8-81a3-24c09323be3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c748f9e-938b-4c29-96a6-54960d265de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99f27ac6-9190-4eb1-8f79-0bdd181e0757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d952257c-ac2e-4d18-babf-da90714546a3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b6fd1e-daf1-461f-a219-55f804525b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12887c45-3fb9-4f9a-bc37-1197a5f5a582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895ae393-c62b-4267-a6e1-761eebe361b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e40cb92e-ad1b-41d0-93dd-7e1feb9fdcd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab96bef8-6bf7-48ce-8fdf-5f6eca12bd59",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68bb6b5-8316-4e10-beb4-8ad5da16b538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "566f944e-a84e-4d5a-a8c7-a1aeba306e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024977d4-6a1f-4e38-80d4-1a83e2431460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a70f5688-bcb9-415a-8bf1-10b0a9bbf024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5698a89-1d88-4fb4-b907-a9ff0ab4840b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f24dd8-6ca6-45eb-b9e2-a7dab7b82531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "023d9bb3-f939-44dc-8b0c-ba5d0b78f634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5cd8825-cc5e-4bb1-8e11-5e114b59beec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d30a358b-9137-4434-b1e6-54872c6acf5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3ce787-06a8-4c5f-beb4-20897c1a25c4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7386c904-3bfb-4be2-a741-86cd857dec4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "914f40f4-c6c6-46d0-ab8d-816c69f96e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3406ee67-cfb7-4f68-8053-102a92e0eced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1254099a-d3b4-4dd4-9149-5588fd246c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b99c69-6de2-4e6d-8e3e-2db1662f1d97",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5f36fe-8659-4d6c-8885-151041ee767f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e569a60-a848-44a3-88bd-f0d7a000aa2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38fe4b4-cdd6-4a8c-b07a-54daf717187d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aca542ba-0d38-4fe8-b202-59ca7c1caaff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f75ccd06-1f8c-49b7-8c50-9e3258086aa7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f82e82-e287-42fd-b399-c96bef45baa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41201c8f-4fa8-4449-90bf-538fc4c1bf39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895bae89-87fc-4391-b2f8-d4458d549259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b004cfe-ba64-40d6-96fa-583fc729bcfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2480d1a8-bd29-4af3-b499-cfa4cbcbffda",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "932f0961-1228-4224-ae86-e832a208e681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f8d4a05-9dbb-41d5-a1e7-09806f54b2c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ecf34a2-ef77-449f-b672-38795e13eb5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c018ded-4f0f-451d-a4f6-e26d5418edab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217e573b-9884-46d3-bfa5-5ca163561e64",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4161aec-302d-467d-931d-ca7197492bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2230a9a5-2cac-4d74-b361-cd26e8439a0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f7d758-3063-412e-b5f6-593df34ce4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3788fd0a-4a4a-452d-8f3f-a6d7451acf93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0bfe05-d6c0-4c49-a7c2-a400da98a7e1",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e002b07-da91-4669-9981-5b0a212501f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e9a77fd-169e-49e7-8c97-ce1b22075a91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc5414b8-ca6d-43ff-b82e-d0fc7fab8c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7bb0490-5cba-4028-9a12-ea0e50463b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f556266e-46cc-4a7f-af9a-9c0ea9b1084f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d05108-0b5c-4dbb-9354-44b0f1753076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3dca3be-2715-4ac4-b51d-474d74950502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780f3140-733e-4fc8-a7aa-9cabdb0690a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "096e094a-7b70-48cf-9342-ded2ffc58486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb12abb-921f-4581-8f04-4dc37c3b63eb",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b9c38a-df8e-4c92-a5d7-ca57af906007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e836b0-9da5-4c77-8248-4aaa1e874388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ec8b58-e221-4881-8c55-9dd3d13be7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9408ae6-2978-478c-8aef-2299308f6752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aee294c-b2a6-4d97-b91c-f0666472a091",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "855cab2f-726f-43ef-b1a5-ff0033bbd865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d065e53c-2c0c-40e1-baef-d2c6945a4790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e2c278-21c3-484e-97b8-b8ca5167e092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ecd0123-44bd-4ef7-84f3-f79decf31bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c9c271-c246-40f2-9c82-c1ac24d39821",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf81758-c1ae-4214-b78a-386f0f84a317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b5a9a0-4c91-43f4-b329-d02fbfab9cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca851ea5-e9ae-40b5-86f8-49948e101a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f810b74-6dce-4cc1-9932-1ad8a85c1e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1817e83a-0fa6-4068-b893-dffcf00fea19",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b356f2e-d45f-4e7a-ba08-d68264572249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3174d0ec-cf97-4a8c-b8a8-38dfc9911fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c01474-1f29-4251-9839-b9cc969527b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5420354-c273-4f9a-a26a-0cda437200c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f7a7cf-c1dd-403d-9072-7c6f65bdd0a4",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f8d928-fabc-4988-88cf-9447c583cef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c628961-2cdd-44c4-bf66-cd90e21378d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66bf7a73-587e-4ab3-81a5-d9228e199b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ead1c230-f7e3-423c-8360-778b8b4edb38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a529c054-ba87-4281-89d8-aa35cd67ba95",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4daf89e-bbe1-4932-b0d1-7a815a66f69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97b83a0c-0307-4346-926e-35b6bd2b4c6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c7a613-b0f6-4358-b6be-7547624b2511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c41ed6ab-7dcb-4477-96bb-8762b988565c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b7020b-5667-43a1-b179-a549decc3ad6",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "709450d2-22ec-4296-9a8f-c13f4e46d43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fe597d0-dba5-403d-b796-e6cb141ef6be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76cb5d03-5b00-4d57-a17f-465eeddad148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9eaeadc4-e44a-4c36-8382-4f593980be88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32021e72-8a4e-4345-a0cf-5595ad27c6b7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f39a835-f5fa-4336-8a91-6aa90a8e91db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eee594f-8ac2-48d5-ae4d-c51d3aaa2e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29ee054-f76d-41b8-8f64-a9d24966df95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a84cfee-962b-473c-b0b1-7617a0f07640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785ef823-9a00-4338-93d0-dd748b9139b9",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ffee728-5b2f-470b-98ee-dcf7f823b7d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b3bf63-cfc0-424a-b7e8-b5c8e9265bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251a4c50-4e33-4e71-ab99-86c5b7bc706d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "42d74c77-6410-4b84-ac29-190f2228bd01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870d7dec-91ec-4362-8ba1-346467b43948",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9124d6c9-0aa0-4812-8f49-a155d313079d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "25d1255b-16cb-4de0-ad2a-abe219511ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e47f8f2-5acd-42cc-b41f-506f8dd9c9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "95d2298f-0294-4c3a-9013-144a6292bc24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dadc70d5-a29a-4d58-8a65-ab0cbc91df55",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "169f08dd-1da8-45e8-bed5-bab9db532ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3507cf16-6ccf-4741-bc50-a0f848f4874b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e927b41-f358-4e46-b283-1a4ad3566490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8c4edb5-f5a1-4b8a-874f-bf390288e231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3c37ea-4b30-4514-869a-ddba68db89fd",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "503af5ec-1b06-424b-805d-00fbabf87eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2075c7d-dbbc-4f1e-94a1-b1e67dddf9b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2073ba8f-07d3-44c5-8fc5-6ad54e6a6e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "124b7e15-d9e9-4c7b-822f-d1b4121b49e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f92af3dc-88ab-4919-9ae6-a5ec27a6d458",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "317853b3-7fe5-4060-b178-37a4e70cfd1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bec34b8-8a21-4e71-a133-62612d37c882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d98f108-c3a7-48d5-8f86-3985e75bd8a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b970b769-f12a-4d43-b27c-56009eba22fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da9be46-7ec8-405c-8209-50de750abde3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62cd876-bf15-47fa-bdbc-3c9d9b466d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eed7c1b8-aef1-4b55-991d-83d9f1fc36ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e610e8-4789-4bc7-85c4-4eafe33e2d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "48f6899b-5f23-45e8-a4d1-6c7f71ef3fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c602b3-6f5a-4b04-9411-b1aaa5c1f8ac",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c0b935-ee90-4a7e-a203-1bf43e3267b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87cc840f-3d96-46e0-8ac6-78f6b7fafa27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae23722c-9634-45ca-9d86-bf5281f49088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1b57417-3e68-4ca0-92c0-92fabd5afba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2effed14-7785-4033-aeda-29ab64a5fbc5",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1a57f2-ac29-449c-b344-1b889270319e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d33b4f21-a90f-438a-b046-d595fd7f6363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84076a22-4978-44c3-a3ef-d1fc5dcab272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4c4b7b2c-cb7d-4a13-8bd6-b112e56790e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a104bc7-9dff-4d16-8a9b-70b513fb2d20",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b39d52-ce8e-49d3-af18-51ff1b58e32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e552086d-6d75-4824-977e-f319cba33faf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea2975d-cea6-43f5-83d9-1f7c9def0b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2975a9f0-5636-4f88-af74-200d1474a2b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe9674f-784a-42b3-aae8-e32620c24472",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75e687a-5570-4074-81d8-21fb7e1d737a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25cee4f0-5481-4b2b-9c7c-64b3719b848f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cddcd8a-5973-4f58-9d38-c455f7576da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6645f203-ac90-4674-b0fe-258bf3accf61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c584d36-be83-4858-8e15-11928906787a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6abf70ac-3d90-47c8-96a0-582860da662f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eb0a620-a609-4354-9d5f-0fda1b3fe513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e0f8b4-67d9-42dd-bb7d-c3ec899eadb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e7d9a5a-0d3c-4911-8998-c7ebeb29016d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6aaa8e-6b35-43b5-a461-f3ba9648e960",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b7f85c-a17e-4c12-9360-84b36ec42424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e6a76c8-874a-4621-ac94-2ee946b4c47d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a4adab-8425-4034-ac50-aa848e151a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdf0f973-66ad-4383-a924-b5861baa895d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88729616-65f3-4db9-bf1f-f271b7360d2b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6c4b55-9d08-4cb2-b79e-ecee13e4cd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8233276b-2950-4349-9b65-1b79878dbada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0e2b06-9fa7-436c-862e-ce826448d1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "79ac2269-ef42-4c4a-b6a4-d7d57e441d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f095192f-c2fc-40d8-b3f2-f76aef4ce76b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "401631f0-6bbb-411e-9034-788ab15e733a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "186e69d3-bc95-4345-b642-969c59d09a61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a118f5a3-3ad3-4cf5-9fac-9e287a9128a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b159553-3c7b-4a51-8559-d76aee082448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d86ef8d-5e7a-4a1f-9378-28a4b5ed585b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7eef560-13be-45bd-b7a5-39947f7f7857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "299a60eb-7cb3-40e1-ad52-0386ead745f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7b4c83-2df3-4991-b28a-04c66ba3d57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "70bf152f-3cb9-4aad-9fdc-4657153b5b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cfe1577-cacf-44b7-b89e-6e5d65807e55",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4b67a4-b202-4e14-965a-7a7ba7d5c529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a76e8d8-a248-4f40-a4b4-3d1c0d93f663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eba3323-4047-4b56-8b5d-3e9e1e971077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e9edf1bd-df7d-48db-bcb2-fbde5b8ce00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a12cbb-7c1e-43a2-ac05-1feb97054e89",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac76da3d-0047-4c2b-a484-f5e49a5ecd6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2efa6967-077c-4e33-a010-d2ecda6d1073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bbffd90-b9c1-4b1f-a030-ddbb1ad02033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3cae226-e4ef-483c-b9fc-49be33425b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621d8225-f746-471f-9c89-6b4952de53b4",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c81839f-f824-4bd9-b0e0-14979c7a38a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ec9d4bd-531a-4645-b68e-437dadd3e556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39e9c13-66f8-4129-954c-c66a71cb0052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7eea862c-f127-4cc0-b002-4ca66011fb40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b8e394-548d-4126-9b11-b984044ce3e0",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "231959bb-071a-46f3-8400-9539cd0d1127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6168f28-59f1-4b4e-9d19-275bb7b69e15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761ad843-dc7f-4a78-af51-c467f5241e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "89f61a3b-312c-4c03-a7bb-bdba2af4717a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505b5886-fb24-4367-a028-3d2b2d906326",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfbdf0b1-71e0-4367-a36e-9405bad9395a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "199f2f81-4aec-4435-a48b-531ee1da9616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb62dfab-668c-4970-bfb7-3a8a4dc41a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd6e6cb5-32f6-4361-af9f-93aa2ce09341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d45f52-5a83-4173-8075-4a9d5f412c6f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a9ee6f-819b-4634-b22c-7c597e40998d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af2bdc48-e443-44e7-a50a-a46e77d000b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5bb5592-e510-4cb9-8a60-48fc9416e1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "83fb01c6-4609-419d-bcec-e57a5a2dd5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e87511-73b5-4a14-96f9-64b9dddafdbe",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd81735a-92c3-44c6-b027-2c4b28806b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e837c53-9a8a-4ef8-9b43-33629a34ed71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c77a3ea-5501-43e7-9626-8a4366a8403b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd6d84a-1189-4152-919d-6d57a98e285a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776d30c2-8fa7-47e5-843c-2e331bdf4483",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37d7576-eac5-4b88-9a51-64c98707abd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93ffd33f-ba60-47c7-a545-73b6f4a721a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97a4b31-42c3-4ca4-bdb9-f222a882e45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd1e9f24-fa05-4c9b-b0e4-0bd0e9fa4c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32a718f-ac28-4706-9aa1-32a1c5bccf2c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "718a54c3-e4f5-4bc2-b6aa-e3b0f3ab91fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f12bac-10d1-493a-b87f-511cef0e26f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152d0255-5f3b-4727-9304-639b82b8d225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ea3e1ea-c883-45bb-b2c0-3339b6e87122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ca4ca9-ae3d-4805-a311-531eacced046",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ed33f3-bb9b-49c9-a477-de72c7b0cafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a650dae-24a2-443d-b6f1-3b86131cd88a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310ebbbf-9209-421c-97e2-34c9ba650017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "89388f9c-95ca-428b-8519-b31e64dbaa4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc9e2284-ad44-4567-ae0c-38a153001d11",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eacdaad-17ac-44e1-8295-b135c012b75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06879ef1-1b21-4f58-852a-25ab06e82c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8035bb-b3d3-4da3-96bb-ae0c0dfdedea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "40ae3596-51ac-4525-96b7-3352cf56b600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25803c49-e8ce-4b7d-83e0-23f8b03b6513",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a31b97-98f4-40fa-a9a2-5c479bdb85cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ae7ce32-bf01-4f42-b5ad-c7276a48c92f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655c40c8-bc90-4549-9d95-60957451ad2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7717a8f-dabe-4a76-81c8-c708c00933f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88952c71-6afb-4060-bd33-d56078e97d7c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f37b900-ab01-48b1-b706-fdc494538e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc22b4df-e036-4206-9d3a-32e3dcec2fa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a298eda-cd55-40a8-87e6-74dd92194218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b309d57b-0134-4300-9190-8c6efe6a37b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b14692-be84-4c1a-84b6-ef454f82cc2d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68eb51b2-7ad3-40fe-aa1b-0b10ebfd337e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "392a7011-1075-4f02-83e2-c57d07552ba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae551cb-08d6-4452-a5bd-359e384cea1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6041d8f1-79c6-4997-96b8-a660f0facc27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aeeb72a-3ee0-403e-91af-09924e21362b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c37e64f-fb38-48bc-90d1-3656609ceea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33e30292-4dff-4e34-9a23-03dcadc8f498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af4bb8e-9a91-4dcf-8b27-6f1b52fa63aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "575da4e8-172b-426b-bff6-881fc9c3865e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b003f04-2071-4493-aab5-0db8321846ef",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "590a30bb-9d38-487e-b4f8-278776a81e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0fe6329-83b2-43ea-bff5-2c141fd3cf62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "876f81d4-1e95-44fb-af06-2949e654a150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4eeb647b-72ad-4dd8-acec-ba13446f8ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7b992f-18bc-41db-bfb3-97e7da60ddcc",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67964d07-4b83-4d9c-9d31-8750faa83bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14b0d9d4-4f40-443c-b72f-be94e5d08a45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60aa282e-37f1-4dde-a90a-d6317411e565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "67e42a7f-68bb-4047-b00a-28d5aa04b8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea43e78-603b-4884-9196-33f80119822b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7890ed2-fbf4-4d7e-9709-82c5b26e7a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3dd03e0-1df3-4193-812b-b9b6144c1a01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bfe4f71-39f1-4f1f-bb57-3dd72b6fb750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aefcc604-bff1-4620-96e4-9e78550e78a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9e8375-6b80-47ac-9df6-7497320506a8",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bb1b24-5292-4b20-a89b-eb7a759c99ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e4333dc-9996-4ad2-91b3-ae8034dc0795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a13952-d90d-4383-b502-9ccf223ac8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e1de1db-e02f-43d4-ad39-5d2a5e7ed09b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45212797-af7a-4cd8-b6cf-c1ad7804a3aa",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69aaa68f-4410-47af-b4fe-4f271536ce41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3887555a-85d4-43f0-bc4c-42064f7443be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5a244c-18a7-411f-bf50-a06ca5858bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e07b41-11ea-4ae4-89d1-89826a08c91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53555908-93fb-44b0-b1b9-bea88fa41e92",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4479e190-36b6-43ab-9212-65c7d0b7b8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b501da57-a847-42e6-9a77-410e51d77221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4269767-9c13-4d4c-8061-1b518f0b973e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea938395-cd89-4d2f-a7dc-03ba48be78fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb1ae2d-9b47-4e13-964b-e545cd629331",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bcb1c4-2547-4c0c-9cd9-256deca1f402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f29a98a1-ea8a-4374-aa07-150a9c3a9444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3304a86-c6d0-4248-be30-a6ea484073ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8ec2d04-09c1-4529-be08-6c06ddb38b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "172256d2-58b9-499c-97e1-448450a1e216",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "377d18de-7224-4a8f-a240-f4a0cd32b31e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83c4b3f3-8bb1-43dc-80e4-1ebc3a8a7556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f0d70c1-9b98-490e-8b78-1effca3a27db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "85287803-2e53-44d0-9532-1fc287e3ddfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7c81ea-19c1-4a4c-9e4c-cff7abcce963",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99dc3c5-0820-4c51-928b-fc76373a8743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b9b163e-11f7-4915-b747-1add81e9b1c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8abc7018-81bc-4339-b66f-a493eaa85bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd495f7d-d409-41e2-bae6-acd376f954e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116497be-0039-4bdd-b29b-c7f6ec2888d8",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0233d7-7ccb-46d1-8e7a-7a40a68b46f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca5ffe93-058f-488b-93e4-a2d1369134dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd93ad2e-fff4-4ce2-bcb4-fbfe7074ac20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "82684545-abe8-474b-9d5b-d4ff7f4e8277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5988020-6d17-47fe-8a89-83ec8f63cf3a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aeab40e-9a12-4dac-b641-f84d5c068625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5efece50-f89c-4f61-8685-8d4559b919d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59bfd57d-816e-417b-8ea2-3ded6ac1de87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "922d35e8-9ae1-4d24-9104-16fe96133880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c7ea10-2e22-49e2-b830-d65e3b0f4403",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ac4458-81e7-4c32-b0f4-2d31f7cd7379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38c2d79e-7de5-4b76-bab1-f2769ea38542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0858f664-ec57-4d9a-b30d-4799844d86f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6fd86ac-34a8-4c43-8092-eefad20548c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92171d7-aab3-4eaf-9c88-6078cc875fcd",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5499af6-b101-4e9a-986f-a76b9d20e8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f25c5151-8590-4a1d-8d89-2dd29f4fe6e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0529db-2ada-4e0e-b572-5f1ab0dd0506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfcf5ee5-aec9-4cb6-b514-8ed5dc5b933b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1659edba-4fba-4850-bba1-e16523e34efd",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ef88a7-1aa8-4a00-a838-e280ade1e611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ecca0d5-8f65-4502-8091-c6ff74cf6ccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a249b864-9334-4d5e-95f8-8a0004025c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3236e0ff-175f-46a6-bfcd-b942e29597fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5b3b05-9fcb-4d8e-b415-9063d82dfda6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a3c940-5d08-423b-850e-67ee1c6db7ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caf387f0-452c-4439-a74d-06bc7a7fa0e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf1d9e6-3576-4730-a3f8-da682f52ff65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "28863f97-b662-483c-abe9-d833b225e6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c45f4b4-33f5-42ee-87c1-d7bd2b959723",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "688e64c3-e07b-4909-ace6-bd46a14d9b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14be8dc8-fff4-4ccb-8673-845d5e096410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8af62c-5d4c-4f9c-b2f9-3c2a57b904d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b952958d-770c-460e-b7fc-cbb680fecfa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee563582-8543-46e1-b363-c76bd4f64e72",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "716a186c-6737-48d8-a141-b68a519aadbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f892ab-113b-489d-9276-9b0923486417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd801d7f-49ce-4bd4-a7b1-915da01979d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "54b2975e-3afe-4041-8e75-e2a15d3d5172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7626030-35a7-486c-9840-79e020885335",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4a9aa1-2bda-4ebe-aa1f-2c307996d5b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae14423a-0c3b-49ea-bcbf-71b17410e30f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909d1010-a332-434a-a7f1-d7f1d2a29c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "702bbdc4-c14f-4528-a0ca-316165243f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7089466b-bc60-4ddf-8067-b0caf4e2f9b8",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5849e2a6-2ea6-4d19-9023-6c4d159ab7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b5db26f-316a-447f-b0ce-b49328c0205b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41bac7b-155c-4cf0-a83f-c3cd10ce722d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fd8b800-6ce6-40a3-b555-66d3d6f128cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69446663-c880-4680-9621-4a230f203590",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50711327-fc2a-4514-8bc8-f27580118677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e58e6c24-de73-4cc7-a457-d28aa15dfc1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf41247-f4e9-46be-9d52-5e64a4d30653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d901f6d2-8b9e-4f53-bb39-cce00be554e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa05c215-197c-45cf-bb3b-9f8322f69d5d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa86d69-815d-4c3a-9e01-af443a7d5926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5a003c1-1b91-49ca-ab52-ee3447f7e580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c917fa9-967e-4b34-b976-b1654cfdb23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0c547f6c-6b8a-4bff-8300-23fcd9100898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57fc958d-8d9d-40c3-b16f-460cc26fc252",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b6df35-bbc1-4157-b36a-76f9264534af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ba8a49-f5a6-473d-932b-e22a938d3715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fe65d0-0b3d-4b62-bfc7-fc504cc804ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c079c789-a22d-4b0b-adae-fc4b47bae00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb17485f-f6bc-4056-82e1-fb7428e7a3ff",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9afb9a-5f3e-4cbb-9ff6-8ad67b6e2d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb56dbff-c6c8-4768-96f7-2c2ce2c7ad1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f8f1aa-ae66-4338-b5d3-f65103cfcaed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3666c7ec-008f-4d93-9dbc-93b20f575818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a977e6d-cd5b-4e6c-acd9-3a1985906ef2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad377828-eec4-4c64-9f89-e384fede2a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e49529f-738e-491e-8fc5-71f6a26fb775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea509b75-4176-4d35-b5d3-67f3bcb4b720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "835e7839-62b4-41c0-b886-4bf19bb628ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824c3372-37e0-4c31-b407-81d5e2662216",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a549d9f-1e74-4bf0-b865-4d98e7cda0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "438195a4-5d95-4b85-90dd-c3001bdba88e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d185da68-8604-4732-b48e-7a36fa382c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "88f0acb1-53e0-4cab-a0e0-aaa58b6943b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7561c462-d42c-43cf-9483-e1d65222bf14",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "363469e0-f440-4891-891e-7699208b6a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb908c6e-c152-4425-9081-373a3f919437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6e5acf-9147-491c-b200-6dff9c51652d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b82fc3d-fd81-4144-8f67-fd1baad12c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d90ae4-2a28-4b55-8240-4810a59ca7eb",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "640f4783-ca49-4b0f-9677-c2fe75d48963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca53752a-e6a2-4cb8-915b-7faeafa074ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f366cab-13fa-468a-a066-ecc893fa74ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3bf4ebbe-aa73-43ce-8c18-7484941928bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8b9508-77cd-46f1-9c0f-d8273ce196aa",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ca81bd-c4a6-4153-9a9b-2ed0eaa82312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a235d64f-b721-4479-bec5-6d440adf9fc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e081c460-e2bb-4d67-b017-3786caad98d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8a02846-dcf3-4e6f-95e2-3431892207cc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1b2d2f55-68ec-45f9-870a-e7044a0f3460",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "57e74d5c-3655-4388-859f-a7e988d970e5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31acbbb-86c4-4876-8dff-bc5af14f956f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9723be45-cf28-4722-9729-7d414137308c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5e50f1-1729-49c0-afb9-906abd247370",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1eed2747-d4c4-4620-aabc-8bf002bb390b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8faeaf47-4aeb-4f67-b734-dee6fe497f94",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "090ff7cf-3cdc-4554-9d68-adbed5209735"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8c3d990-9516-4534-b85d-230155b12509",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46b8f350-7d2f-47d1-85c0-a5266fce1b1a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0198292e-51d3-46df-8313-17f102fa1d90",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5c2172c6-83b7-4b8d-95a6-91d4e115edb2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "06fc29ed-859e-440b-8903-492fedc0d697",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "db49426d-503e-4b64-ad8d-1c51e6e1e3a2"
                }
              }
            ]
          },
          {
            "id": "2b141f43-b3c1-4cd4-ba62-f097268bd314",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ec1f6828-bb2b-4567-b54f-eb266ffec652",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "873ef460-1237-489c-8ecd-2f21e0edb55e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7aacf11f-e51d-4855-bf38-7df7bb312ccd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e36c5adb-2bab-4590-953f-988b94ebe52d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "73931161-5164-46d6-b5b7-cb36b9e9c4d2"
                    }
                  }
                ]
              },
              {
                "id": "7e2e458c-3866-4f50-947e-f444656d9d08",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6be77a8b-dfe6-407b-b21d-3e3135fa4edf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "76c5474c-c62d-41e7-8fbd-5c9e199b07dd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eea7f7f2-e053-425b-905f-c17520c17b47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c8988057-979d-4a0d-b29d-dd4d0ac519ad"
                    }
                  }
                ]
              },
              {
                "id": "1d87c3cf-be34-4f2c-af25-a336b754a5cc",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a3680a7-8f36-45b4-9579-a7e2fad4203a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9b55824d-e7f2-443a-9af3-1683ddf888ec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b6cf174-e80c-4eff-99b7-4507e4634ed7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d4a50e09-caed-4db6-bb33-1742c238934f"
                    }
                  }
                ]
              },
              {
                "id": "ccb46546-4dcf-4e5d-aa94-7ee364acbad9",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a668b5e5-e224-43a8-bb15-f690ffbbbffa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b81af943-faf8-4cd1-a307-e79c14b4a585"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "813de524-2ecb-4bab-ba05-ec9348a987d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7560e7fb-86ff-460d-b6a3-7cdccd6dd530"
                    }
                  }
                ]
              },
              {
                "id": "5bad0367-f7bc-48c2-906c-a3ffcedefac1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a5e49b3-283f-438c-b2c1-2ffe026305f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "06002e67-0ac9-4280-a6b7-7b1d4b931ba9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7086864-52df-41a9-a934-2f30de60b4e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0a90c40c-6a09-4f83-aa03-315bc4255afa"
                    }
                  }
                ]
              },
              {
                "id": "c4ab06f8-20ec-4ee5-bff9-7d40b416adfd",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "660e6829-219f-47d9-b782-e38b9c625cfb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b3d91fa2-5eb5-494f-8162-d7d1c0b36799"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "233e0e7d-9b55-4b4b-92af-b4122467622b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "16a9e104-9899-4e1b-8130-ae1949c18e8a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8c9c22e5-a5bb-4a3c-b264-d7b9124b2732",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "20781146-e916-4c14-b7a1-90c9619dd2c0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "56196ff7-3449-480d-ab5e-ed69dc487910",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f4c02cf0-77d1-4382-a5f6-682e7efade5b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5876aa39-f16b-469f-ad5c-93522e5c6ed3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "432bd547-6ba8-4092-ac56-45bb2d8bc41d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f9199b9-eb72-4fe0-9662-d27e66083b29",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "69e7ba13-c806-41c2-bc09-31b09d67c7b9"
            }
          }
        ]
      },
      {
        "id": "487dcfe2-abc8-4ecb-839e-aded3e07587f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "cb711bee-b81a-4595-b331-87cb582710ab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bf655e68-bdc1-4ca8-8195-15c6aeff1147",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0e7d779a-8335-4568-bac9-f04c9cbf7a39",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37660cf8-f036-4864-a817-e4f2cd5ed142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61123240-7967-46e4-83f7-430c514b25ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df5af71-ac82-4b64-9757-d6c8324e8681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b68116a1-66aa-4047-ac01-b721ae774d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e839d50a-9de2-4007-a0c2-ccb982b04256",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "194ad720-9a81-4e4b-bd12-10517c04dfbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b84dbfa8-5baa-4780-900e-593db6f6c44e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01cdac0-c4cf-4d00-a47e-04c95590a561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "746eca98-b18c-4e47-8d4f-a443c6f82bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8669ca8c-b2c9-4af7-9380-881258578c2a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4726257c-98f2-4e2e-983e-a91a04f7e446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696f38ba-2fd9-4ee7-90e4-c5c3c432a486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7247beb-ffb7-4b8a-a2b5-1cdf06640945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce8769de-d7d2-4864-bd9b-4f75f5990179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca78b0c-6d25-4171-871e-80dc7edff3a8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47435a8-c8fb-47ea-b5c7-e6fc2d61e0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd19c648-8160-4e7b-81ed-aa083351a080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdfe434b-5ac7-4269-999f-d54cbcd3607b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fa98f7e-e4f6-4f88-b5cf-a9ae218a896f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae46530-9dc4-46ae-adc5-73ba6bc47d01",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c72786-45c4-489e-b07b-6e80f663b372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd36c699-4a27-402c-a693-1fb7dca27e55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cebe241-6bcf-44c4-919d-041dfcd16cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "925949e2-a476-4e20-aaa2-8d3ac9a464b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8bfeb9-383a-4b15-a508-47a91d2e0686",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41854a3-8faa-48ca-9425-9713e1ecb4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "426c82a1-e82b-4f50-bce8-6ac1e8e8ed58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142812c4-116a-4857-b011-4a8dfb7a4514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a456285-74db-4797-a5bd-aad1fe56bb0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05710d2-525d-4712-a65c-f2cf110e42d4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a9db17-dd7a-432d-84fe-b8193c15d8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db4707ea-0058-4702-afdf-7d3b1de99abf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe526757-ce49-42b4-bb48-25eaf45a8331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "da5df066-bef5-4476-8f4c-42e4571a7a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "901c35bd-b98a-4d12-afdb-6cff606b82b2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d2199b-1a02-4bf5-8b2d-419c9c229ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a01fb278-f507-45d9-82f6-a2b0f8a728f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d82a62-edba-4e96-8aa3-f6325d2b5df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb3e8219-0259-43be-815f-4ef0efaeda2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe20dfa-d6e3-4f55-8689-f027b7f50017",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e1810a-2876-47de-9c24-dc0c40a934a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c331aa66-71f0-4036-aa4d-c3cfef05aab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28dce092-b83c-4866-9926-6c14e69d3eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74ca1fa7-7d2e-4b24-be84-86dfc1dce259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed5913b-1a19-49fa-a83c-e63cc0e1d50f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d276a80-a6d1-4426-b5dd-92a392670e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba84986c-7d3d-424c-a77d-b400a1fc7abd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c6b90c-412f-4eac-8a16-a341304f3627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "171b3e76-7871-44a2-8a96-af2240dac1a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5edeefb5-fc7a-429f-894c-06ff4931fec0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f9c872-9305-4f52-9ede-8707b915c43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8fd3467-bea3-4078-8851-b4f558fa35be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ed9b25-0d41-4caa-a787-fc0122e15ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d3692947-c77d-4e98-a678-98154f6ecbc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58224a0d-34d7-490b-af4c-983358ec7d21",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23fba2b-6375-4806-be6c-ec6a0f3f48d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77fea73a-a2d0-4f08-9f1a-81dc90d8d101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681ee99d-4d30-488c-9f3c-5215487c1733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "15cf7062-b5bb-4dba-8124-55328a380603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dccd035c-f6bd-4fd0-87c0-7c98d9b6c281",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3763291d-9315-4e05-bced-4cd7ff45bb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd7dcec-6765-40e2-ab0e-376529afbba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d965af-4ba9-4961-8b9f-e3885d36a6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "83bbc84a-c9e3-4b3e-a264-b709e140cf19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d2d080-7769-4a93-b34d-ca7bf2d7ff6d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30182433-c1b1-4bb6-ac24-1b1a530f4948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9983bef3-9c7c-4971-a363-fa9e8d85494e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f799816a-f3c2-4fc7-af5f-7725767aa225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "22847255-78ae-4837-8682-c63e913ad980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9ebf5a-538e-41f9-9c50-54aef6348a9c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b06f786e-6239-4b1c-9662-c7cdc445a9d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c074b553-9c73-4aa5-9a77-5e4fc94d687e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54cb8426-c71d-433b-8b5d-e9c8ab717958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a1341b4-4c86-401d-a79a-efd8a7f6e2b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ddc77c0-0327-4e03-a4ab-b16c59e6ea96",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9505710-0165-4ba6-babf-21ffd43d5d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3249e793-25de-4e7f-a077-6c1b997cb287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82f49ed-7baf-4085-ad8b-674047d2e9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7133391-31e7-43b3-a80a-114ae7d82fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea90cfd-29b2-4870-86b5-a4cde0c816fe",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16860586-49b6-439c-9f50-091eb1b7e8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a8ce4a9-de8e-4beb-ac2b-07b50e7480b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e8e06bc-9dbf-4a7c-9ebe-36cbc9a62444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9b0a49a-77a2-4bc6-b8ad-da3d6e50e466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151e752b-8632-447a-a74a-1a5868963c28",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94e7f45-62b1-4d2e-987a-3ed475afa939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e754c8e-587a-4bbc-b592-25fbcb4ffb8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd3a553-b7d8-488d-ab66-58f234211b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f6e2a53-525e-4c0f-84a8-8120b067eec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac0a36f-e733-4ba7-9494-c6d5b02f2f24",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24aaf8b4-b1f4-49b5-a05c-18c38b0e4ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b997f879-1742-4fe4-a816-2eb74321ad7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14654f8a-4767-4a65-9041-fc84155c6089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c705856-9e8d-46eb-846a-04fcaae06063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed22979-5898-411b-bee0-6e069dff5502",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ea7e77-7e60-42b5-8ac0-7f69188fb592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5092f71-7719-4976-a797-817b8b465be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01555aa9-62d9-4372-81b3-1342264b74f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e1202ad-ca5f-482a-9553-7939e65a420a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98110206-94e4-4bdd-b9cf-af92fdb58ee2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "593d271e-c7d1-486d-b1a3-af4b81ede25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70df79fc-dbc1-4b00-ae4a-e347c009c97c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a57918f-d57f-49e4-883b-be7de19354f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7eb6b421-0fc7-4a1f-a829-834e221ef159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a21d649-b5ea-4d62-b922-7f64f25809ab",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a576e64-9827-4640-97f2-b6752a24a991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bc17235-3802-4a71-b0c6-c33bb694deac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443e29b3-13e5-401a-83a8-0b707e229480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc7bd4fc-280f-4193-90b1-408df14d8660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19a72d9-3bf7-42a0-aeee-45b24f630457",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d0cdbf-68a3-4022-9ea1-1b2e02db6fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a80926c4-bb96-4f8e-8786-61f95e32d815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521a48f9-6af3-4c04-ae18-5247e42f77ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d86d32b7-58b1-46a4-abd0-7e9a12c28635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52bcc8e-2b2d-459c-b112-9d792643550e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ed3fc3-2c75-42aa-b301-293ae98bc3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01ea135d-a24b-4788-b932-790d82a95d6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3c7c50-f4df-4be1-b2c5-70f26e367871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "266b0a7a-580c-45cb-82b4-c92cebd5c83a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a2863f-6866-4163-bbc5-3c4496ad27e9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "235a64d5-b5e9-4fb2-a17e-80288d416e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "037dffd3-1a2e-4edc-9f90-13eee35d0d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f64f66e-a76a-4153-840d-b1c4a18adf39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "378b0c55-66d2-49b5-913f-6cbd79e5ced2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c35cfbb-d4f6-4077-ad7e-fa241198bacc",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce058609-dd3d-480d-824f-bf253f89d801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ab8bf4-aa03-4d7f-b5ae-dd595f6fe263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44574ef1-8ca6-4e80-b9c6-405db77ecca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5504d22-d3da-408b-8318-64219fa7ec4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef199365-2716-4e8e-b5d6-5348d9176c2f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5431b57b-43cf-4e5d-a8df-b18cfe7c3a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2df623a-8cf6-4071-a5ee-3ad4e37b3ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a65ba08-e573-4cf2-beb3-155577690815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f9a7d25-ba43-4972-b8be-7e501d86aafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc7a0b3-c8b0-4470-84d4-65991c592805",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ccce25-6d39-4d60-a0e6-e088524fe4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cf4a194-09ec-4742-9570-df1e08eb7163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90bd850c-7864-42ea-8edf-a0ced3b57501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08b490f2-ce08-4ca6-a1f7-313cc68ae52f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25d62d4-0a6c-484c-8366-a6ed94aa405e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02215d01-f6d6-47d9-98a1-84890a6118ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f38538d8-72bb-4049-b640-95a0c3d6aa2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def4b532-750a-40c0-ba34-1cf5da0e30ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "224a8cb2-a8c6-463a-a7a4-c7c6b2c8cbe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b787d57-9a94-4ddc-b957-1d431e737449",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6e8b74-74ed-4059-b7fd-46a63f06de0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63bd3adf-245f-4c0d-894d-8630c7cd2bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6b87d4-91c3-418b-a1a0-73c436e0dc3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38d40d3b-c806-468c-9c13-d2693b906d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f9a4f8-3fb4-4caa-97c4-99d12734a713",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f1a576-d66e-4bae-95df-19b296696879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd2c8bef-6865-4858-a62c-e0e42dd3f2fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ddb8d8d-6074-498e-9f8d-4de2fc2eb1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "611b8bff-b804-4efc-9ead-1ba181f40965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f7acd8-9c6b-4aea-921f-e1c9435dba73",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eefbc54-3c9d-4a80-a5b6-82681c70820b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ff341b-3d99-4b7a-8846-3031677325fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c2fef8-0ac1-45c1-8656-373b65163fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05f5b828-198d-4102-9ac1-1b30d1f2e2f4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ddcaadf1-8af1-4acc-b3ae-8e3bcfaf95d7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "777b83b5-2275-4520-a2da-29ba1c5610a2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e22a7c-53ad-4a26-8dbc-8ea5efb62805",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "287d8c0c-c2bd-4b67-8a35-ff3f80f89573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d273cd2-e73a-40d0-8cc2-b4d2159b8837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9dda2ce1-dd85-4647-b65d-b33d0742e96c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "097dd7ee-4e7b-46cc-aa88-8af7407636f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1820790-05f5-4c3c-b83b-7e126d3ad726"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0db4bacb-4c53-4028-aefa-3d7c79d6fc08",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6946f033-e331-4d7c-90ed-b9e5faa7519a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a03873e9-9837-47b6-a0b0-6262d0997763",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4969f6d1-0435-42d8-8e14-f6b7a8fecc31"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "44e67f42-a3c8-410c-bcdb-66f19fd4f0a4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e55ed9af-a20f-4599-b5c1-c9c053b29a57"
            }
          }
        ]
      },
      {
        "id": "8166a2e0-17be-49cc-a299-a5278ff4a28e",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "32cd2c52-1e61-4135-8aa6-1f232edcf7de",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0ff0cf51-db2d-4f53-b72a-f1d5e17dc9ce",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d453b7f0-a925-4cbe-9aa1-cf1b9435c7a0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e04e2d-9eb8-48d0-8d4d-01ca359eb902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ced55da-219d-473d-8f16-d626fbe45bb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11943359-4fb5-42c6-8ecb-a2ee83bf7cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "084ebb99-3c14-44a5-9ac4-57306f807d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea74c60-e0a9-4331-868f-f83b460581ca",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7a24d4-a65f-42e7-86ac-3768e5100cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a12cb69-b3df-4103-9e97-ace751849b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe527da3-ba57-4ae0-ad1c-08912ca7fcef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a70d7b50-97c1-4847-9494-5db640a6b3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c9c767-6ab0-418f-98ed-1b4f785dc960",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77ee84b-db91-4b12-9adf-d57417e758e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5063a631-1f3c-48d8-93d3-3da0e5154d4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17552bee-4e11-40d6-8e37-7ce47047a404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3a91574-83d5-40b6-874e-bb311e328059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d771073f-7220-459d-b4be-30129d62a54f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "045aa5f6-b43c-4d8f-84d1-24af94320528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eab6a2b-d361-4006-8684-dcce5a251bd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd1eb1d-b185-4f15-a1a0-20180e2cdb81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17bef607-05a0-488d-a4bf-5581166cb988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5e0d70-66dc-48d5-8295-6c9a3bd2378b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aadc4502-0b19-4440-b1cf-876609f87422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd3a1a28-b60b-4ad7-a5bc-051e3a06c9e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7472876a-f982-460d-ba11-b5f02f2a31f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "44274d14-664f-4089-8b0e-f69171e0832b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a16695-18c7-4180-839d-abf85ddc17d4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c0ce3b7-d744-44e0-a921-5e932e86d811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd27bf34-3518-4151-8c99-46a156a5aa15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8e5faa-f752-4677-a19e-a20d697fe5b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3da5c53-5e2d-4dce-9b65-ad4098da3c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40fbbd71-3564-4f4c-9248-69f972ead262",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8b7fa7-ffa1-46ad-b6cf-2f6ded5f8b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae7c812f-718b-45f3-9061-87116f220c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27fee22-8e8b-4495-bfdf-1a7612656c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f574d03-9d6b-4eae-8310-89adafaf7983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a7aa55-307f-4222-a259-506f4839cd6f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5349b3-3048-484a-b2c4-d5af5a06c591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9bbd549-5879-40f2-a913-c72493930ac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68c65dd-b53f-444d-9a7a-b4cd17ec17e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cd0f1e1-afe9-44bf-8b6a-783520f0663f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9725f989-24ec-4850-97b1-843415d8f229",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8303594-0896-4cb4-bede-99c9ecdafd92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "819273bf-77d7-41fd-adf2-04cf575ae841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a7a1f3-ef58-44d7-89b3-5814312e6c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc881f23-13d7-47d2-a8c9-8629bea7c495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d461575-dd9f-4569-a72d-6edeba99be52",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "243b167d-b362-4ef4-8f42-3a70c882e38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac0f2857-7090-4092-9e0b-65b6d514bb72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b73dff1-799b-4718-ba34-e0f0330d7eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "307e72a2-d082-4656-ac9f-7f70572493c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eebb218-bc6d-49df-a08b-739f99b7233c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f174719-5d10-45a8-8f1f-3f570b85083c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38a1dc74-f3a0-4262-a46c-65b0218cfe05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99262d36-906e-4db5-91a0-edd00e0ec99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "31326c48-b243-4679-98f6-32b8875e8412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588466b0-6a6d-486a-8c4e-0caa1a92afc9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0fa334-0e95-4075-8f4f-dc84c937b955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6990e985-7c1c-4087-9255-8bdaab0ab0ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c477ce-714d-43b7-8911-aea29ecdec47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2ab45edd-67d3-4129-bf60-a49a63cbffee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2211b3-5391-49c7-a7be-55f81e1a1a83",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f10e85-e1a8-45b4-8b63-4ef957891554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b03dbe2a-67f8-4c64-8de8-b2da2f920a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a81f3b37-18d0-466b-ab98-90be2b73ef15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3185e0a-d20f-4de4-975f-0d0ea76b672c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39929a93-e3e0-4b81-af75-221748ef44b7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8800ae2-7cab-4fee-ade6-44c7e87a9706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9ca9502-cc01-4d5b-a3da-e2c6d47639bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d448ca-d0c6-4c2e-9200-b80c1ef44ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b7c29d5-4e99-41af-ae0d-199827c40ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9dff53a-edad-4976-9693-2ebf7ab2618d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18feda66-7c39-4be1-9287-951150ac6e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f04eb30-3fdb-4e12-8bb2-c7e75bce7afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b257d7a-fd1d-4347-ba18-7cdaa5fd3825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0653e7de-2ab0-4fa6-924b-2cb612bfaf94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa0be1d-1d4d-4cd6-92f4-ed416b50bbf3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "945e2773-c225-46a3-b344-f63c922487d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a691fb4-0c54-4044-b2c5-82a5231ac2bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e15663f-e23c-4236-9ccd-33c00925b7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d7268a0-a783-4d8f-825d-42b337d1b691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8ab31e-8030-45cf-bb55-70c504d9cc35",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a5ba8a-947b-4fd6-889c-ac0eae963bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d2be5d-c419-4b35-a42c-aaaa8a2cf64a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf69b10f-16e0-48bc-a1cf-145e8013f0cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "375ee2d9-fc35-4f1b-9c7a-8838aff01d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e32326-d962-473c-8791-331001c5d2e7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b6a157-02af-4f71-ac68-fca5de9c4292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bea4cfe-936a-4233-94f5-40b72cceb12e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057baebe-beda-4d75-95f4-487d3b333b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "71417b32-9b44-4559-aa48-2dec3a913d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a948792-0189-4793-b58f-7231adf35fed",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "727c0bc4-4972-40f3-abb4-ed2b089b1e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f93faba-6d4e-433d-bd4f-cc0203be603c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7922256-f04d-4f87-b2a1-e520bdd065d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad64df05-b9c3-4ff5-ab1f-23ca6f235d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010d1d53-6682-491e-bb3c-989adf70a0b9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1124964-a932-444d-9081-20eb41294da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a83fc768-0661-4e6e-84cb-665fc5f95305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c186ae-3bfa-452b-9195-04d5929a855b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf705414-a685-44e2-8d1c-2cb1841615ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72897c59-c4ff-4925-b5c8-ae1afd1ff39b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d258e118-9cec-49c5-bcd2-daf56bf11f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82625ba8-0996-42ed-b3a5-0163da7c75c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f53e6ac6-d62f-4cea-a988-5b59a65a984b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2ac361d-61a7-4f60-afc8-2f9d5cc87b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98369056-de76-4b8b-bf6e-342f22363580",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd62626-66dc-44dd-80f6-b5d0d9d3009a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c95535-eb6a-4f2e-ae36-d622f56e9c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9189608-03d6-40eb-a650-fca5ac3ce7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "825df388-4e86-4823-8be2-31e276c656b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6352c32-0799-4957-9935-e3b156de15bb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af532029-6930-440a-b53d-f35e27a7636b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7f173d5-491d-4d41-a293-80e63d167fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e187a9aa-07e1-47a5-8dac-be45a0062c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba696ae7-760f-4193-bdb8-609784875d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec4d989-9785-4427-8dac-2cb289dc15fc",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca72b43-25c8-4377-b856-c46960c5203d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24040568-9893-48fe-a085-edf0f7a9175f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280a6677-2f06-43eb-8b2f-46a256fc7ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02172c86-a2cb-477a-9516-093555cbae37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2da311-94de-4ade-b57e-6677de256a64",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c9a95c-989a-4637-9dc1-f4ba3e9cf88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d05679-9244-4714-97a8-dc53d6efd248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cadfd535-d61f-43c9-aa04-3074965e15cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4b9f387-91bf-403d-acc5-51cffabb4181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "382b45fc-33f7-49e4-83a3-a1daa5933a8b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "783dd7c7-14b2-4612-8d66-eacc64af7a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64d9e69f-dc32-4d71-9f87-e3837727ba63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6274e1-e272-4b76-a48f-54790e96752f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac3adaa1-a9c6-452a-a28d-604187c7fb57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe4f7a8-0ad7-442b-b5e1-14ee07f529a8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c91c50-f3ae-4a42-a380-58e1f1e48bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56867036-5cb6-4204-82ed-63bc3831ff6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a07cce-2a1d-4e4d-8b85-2c033a037860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea13461a-49ad-4627-ae3b-6c15f7d2f7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97678be-01b9-40f2-9bd5-1c47be7348b8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4da6c63-5aae-4104-b415-e31776b07fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e28136fa-b907-4e79-b2da-cb857c62eb60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c970b0a2-9571-44a8-b198-d87ea0e22b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11083163-9434-468e-ad60-1b2662d1f806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6dea41-4ee0-40c8-a14a-11236d86e58f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5696d21-1fd8-4a4b-8283-23118ff0ad07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46764d23-ee53-4682-a47a-9c2dda3c01e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b725c99-d0b3-430b-b963-3472bc32f39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16d93c4f-47a6-4981-b418-b4b90942eaa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2021674c-4dc9-47d0-99cf-084329084cc6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d2b534-882e-4d92-bd19-ad156d1a2cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a1c5b89-0d52-4eda-8970-fbca2320727a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de11c347-c76d-4275-b3ab-4aa2dc1db18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36448894-88a4-45f5-8dea-788f0358bdd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b812cd66-1cd4-4f17-a164-f7e7cb3f2df5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9d4e93-a1fa-41cf-b708-083544baa946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8de38cdf-d6f3-4488-a5ee-b6a42a5d323a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5636582d-f47a-49ca-9038-73138862c705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71fe3ac7-f3a9-4496-a5e5-16a6ef543aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65800abf-e2fd-4127-9c33-0ea0a4abd7c9",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c8092a-87b5-4713-ace8-6c957489bf5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61758a31-04b6-424d-80d1-eeed8d5fb294"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eaf147d-05d5-4fb3-84c9-00734f3f955d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a59b02c-e0d4-4f0a-b759-d998e2deb1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b400ed33-4197-470d-a1c3-674d8d229d62",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "840c95ab-3804-4ddf-b646-ddea59764f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577d1b44-7903-48ce-ad79-317be7c2ecd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0381c35a-b78c-4441-8a6c-b1db3cb58076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7dc2128-6ce8-4c84-8dd3-09cec2162624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46011345-f955-4b48-aa33-3fe735dd7525",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b979822-11e4-442a-a9bb-09e728d82126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd7d297e-2f6b-46e5-b629-11f58ace5f99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8b4e4a-9367-4b74-b9d7-55514effde7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1fa2c66-5044-4d21-adfb-0c69f099655f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8e4438-f144-41b7-aa24-fdde6cd7ee88",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4e85c6-1034-473a-bb73-6e021412005e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9307282-89ec-4ae0-8471-406fbf947a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b312346f-5259-4a3c-91ac-75ba6be931d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53611568-c7fe-4ec4-ab23-827bc9085227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07adca14-d7da-45dd-9bc1-b9a66b921fe3",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08cd5bec-391b-41e6-9883-4484b865a4f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b6baa07-f74f-4dbf-9823-3203cd31b914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50878c54-a8b5-493a-bc57-8feb83dd91cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e2f2e19-4393-494f-a1e4-5c6f41ca9311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14cd7a3f-784f-4fc6-a904-cb42ab60bd50",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf46bac3-cc6a-47a1-ac79-9a25004920d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff905ced-33b4-419c-89dc-f7258045c17f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37c022d-92f4-431f-9087-a703c7e5b014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fcdc6e7-6dc7-4936-a2d1-20dcbc497900"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "01037765-f2c5-41a7-b63a-ba4a107f33b1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aa47f11f-9f1a-40c4-b36a-56e102ba9393",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115b3967-f315-4249-9dab-baf335645e21",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "28b7b692-e33c-4270-91a8-e209809b5590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db2a6def-0eab-4bf5-ad9c-33d352205b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b59f77e-2682-4586-a413-b10e49d278d5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c536bd1b-1373-4e65-872b-303921d9b28e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73732a80-4012-46ad-9624-8342b757f2f8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "77f1f496-a76f-497d-9e56-8229c2b7e143",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7db676ee-b92e-4c69-843a-ca3afac5d362"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e1a06416-1824-4dd0-84a3-3cf44b956e59",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0c96327b-cb69-45f0-91e6-1897f3273ff6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d0612642-db26-4e63-a51f-ecbcdf468884",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9d296aa4-aa9b-4f0d-8fe0-14f7cef933ed"
            }
          }
        ]
      },
      {
        "id": "96326141-02e8-4e42-9147-f3c2ad5a72c7",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "392e8af2-0336-4517-8ce7-9ea4ffcb4643",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9d0bf82d-eb90-4ff7-97aa-caf7ec272b2e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "64ab82c5-bab3-47ce-929c-7b6c72dd8834",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b867954f-dc62-44cb-99f4-33c63a221bc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96ec86ff-c39e-4b1b-ba3b-40dfe7673091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b9daa3-2c81-4618-9ecc-c6341db3cd46",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb304157-6095-441f-9476-97be4cfe2e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4c2ac71-734d-4996-95cb-8e8f3962190a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5161db55-b67e-4d4f-968e-498f17c1d1c3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e2730c-82f8-4d25-9df8-b0e0b750a6d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b61c3504-05fd-4d9c-bd6d-d82b721bb827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10cbf4e7-878c-48d8-a17a-8c0c7ee0a871",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef504ec9-7143-4d56-b5d1-1c40c7901ce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "909985e2-ba1e-4e60-8bfb-f4faa7473c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf45846-f9c9-44e0-8af9-7f11dcbef490",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e1051d-6191-409d-82ff-4fd64dc53a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6fde6e2-d460-41e6-90c2-0ce2ff826c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f5805b-8747-4c9d-b699-a58ec6351c96",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8ec885-9868-42de-bb3b-439ec5d945b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91472203-b5ba-46e2-ae5d-e1ab74183007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5e17ee-9cd9-4bd9-a332-92df2cdd2989",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8436ee3-da7d-4937-9b60-dc25cf89d2ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b88136b7-b779-450d-afea-c172420d1f48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0270a240-fb18-49d9-a809-a27863ebb7d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b23e62d5-4296-4dc0-adf2-17e078d6baef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb92d7b7-a7cc-47bf-8889-ca2921220718",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b21f307d-2298-40dd-ba86-734b8d5399e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d63a81f-f674-45c0-9796-92929b967715"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "685f4186-5789-443f-8ef8-420d480fd69d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c03cf770-c59a-4a34-988e-fa91267963bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b3e9f14-c8cc-4f0a-a9ee-759911800361",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e77be1-e3f5-4ede-971f-16ecf095f58f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3157f12f-0b2f-4848-912f-d635b07a2c44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ecb115-6fc5-41d9-bded-f121edcb5ccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a50afa9a-4d2d-40f9-ab5c-9d6bc07a7b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44cc10d4-e042-49ca-8a2b-4c3c8b8ac5a0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777a497e-a17d-49b7-ba74-6b8c5d9b47b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb08f03e-fb55-4fb8-9bf9-c62143b77d82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a55ae51-9063-49c8-a4bc-9bb265e2af3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "577786ab-5a71-47e9-aced-a80314d6b33d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbde6d3f-b694-488c-994f-b7069680fa6a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7561977-856d-4fef-8bf0-c22a2ff6cb1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40942ece-7735-4f99-92b1-74e609844328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8510297f-bd59-4f69-a7e7-2de94c53f15a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c2ca302-9332-4948-ab3c-e3f4d8e6a328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9562a6b-5f44-4585-87c1-19a9b0d40cab",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb719f43-ce0a-4d30-bdeb-4d627f0aa358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0317235-df8c-4ddd-a753-0771be0aa0e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60cb240a-f55e-4a56-994f-3f3ca5ca1937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "121d3764-d72c-4ed8-9113-0169e70ec18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2938ff7-f47b-4e03-9fd2-6b54e0a5e7c3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18155ac3-ad9c-4f30-8bd6-45e4ce0abddc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1165e8ef-5ea9-4835-ace3-72b980c9608d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a014b4-b06a-4165-a678-ea9dc47c34de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30746cc1-937b-4ecf-b315-c65a6893a011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e14d57d-096c-473c-a19b-1ba7cc516d3c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c984a4-697f-41d7-bbb9-8f62a5169c14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ea32ace-f8cb-4a2d-8546-db10985e4729"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "476d3ebb-a925-4ae5-9825-ea5e806e3372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e346600-a150-448d-a538-04fba4ebc00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a353a89a-c3c0-41dc-a475-eb10b9e2c718",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5bdf4bd-d67c-4afa-8c68-b5b012b4514e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85e1005c-e08c-4d39-93fc-3a89215ede92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f561316-57a5-4950-93a2-131fd4845d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80b57ca0-af36-401a-905c-48c80f3a4c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e57fae66-0c50-40c0-96fc-c8c7f24f83bf",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89a0253-b4d6-422e-8405-207bcf069e23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e788ba77-eca8-4950-9d6c-276f9a09c46a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c32049-17f9-4f2f-bac8-6fa8525e9c15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c046366-86d5-46f3-87d3-7f061924c11e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ec9f8e-56e7-463d-bbef-7801f696ec35",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451db012-8a9d-45ad-bcbe-61a1fd7d8f04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46a51a7a-0413-4bae-b140-ff6224cbf810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58209f6-d8e7-4911-b877-ebccfd11243c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fe02e28-812a-48ce-b4b1-1bf9748b37f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11ee0bc-7e0e-44f4-ada2-10d4c756e104",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c634936-ab87-4248-ac25-f7fd1146399e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1b8a416-d935-4662-aebc-2c87e277dc6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "963e447f-36e7-404e-8f2c-0cbbc28aa9c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eb2a725-7e8b-4cec-8a67-3f25aaeda3af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4f9f12-12c2-456e-86ba-508d118edb50",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba09f34-78ca-4f70-857f-b155103b963a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7210c62b-e969-4dd0-866a-c2b3d16aa477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b357958-183d-4969-bcf1-12035f8495ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32521d32-9ba0-4b39-b6c2-d88c02aab349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c09416d0-faf8-4e8b-8ae2-a48d85adb783",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e58c7e18-5b8e-40a4-82f0-8fe179869c31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9e0f190-acfd-446b-9f3f-2f31d721e730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21923752-95dc-4de9-9f91-144dd64aa6e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "814302f4-3c2f-48a0-b6f9-90bd0d3385b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f6d897-313d-4e15-b56c-afe0bff6e131",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c419357c-d680-4778-8a9e-c5b0b0c35b2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfba070a-dfec-4c02-bcfc-8712de0cfe93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec4553a-9802-4219-bceb-2380aa34e74b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "243db22c-9290-4671-a560-852d61954e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e975be-d5a2-4baf-9319-21c0cac59707",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd339dbd-97bd-4988-b347-59044f2c450c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc7ab45f-4265-433d-8747-cfbec385e864"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "119c015a-72a6-41fd-a3f7-b9cb47e16fe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5f31898-1a8b-47d2-8d57-5e64bca70064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b84873-c020-47d4-a6c9-724e6163a767",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc3a63c-c820-410d-82cd-0685aec27ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "080bc357-dd3e-487f-b34a-1a5edbde2c55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88543d43-32b6-4a70-a798-26ba2590baf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d6e1dc-6ac8-42c5-8108-90660723d68c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1141028f-a533-4f1d-8ed1-27129bb6bbb5",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67afb9d-d50f-49ce-9dd1-55844969acf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39cc9d8b-9a41-4fd5-918b-8ef365041d14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "872819ba-da6d-4b35-b917-39ecff756bbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1373af12-0f11-4fc8-b799-096917c1ad22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635c33ee-1794-477c-a38c-2f1c3b2a41ee",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82af1f3e-a45b-43ab-a0b2-d6063e332c7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82e80ec7-9566-43c6-bf48-e581ce85e7bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c12be0f-ef67-4660-9dd5-8df2cb4a29f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be2eb906-1fb2-4ad5-8391-75db799e4a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c0b5af-f30a-4ea4-968a-5752ba2a553b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd5812d-56ae-4a66-9705-9c13d4f5c678",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "000a0eff-6f8f-40e4-a9a8-9c05b5012d81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79de03c-b5e0-40e1-acaf-eb20f942378e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff65790d-1655-4aef-b553-74d6b70a2c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2727e5d5-e903-4bdc-ac5e-b295e6a617d0",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38deefd7-0214-41a2-a33d-1be0a93cd3b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99be1bed-32e8-4548-9643-7e48400ac2ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f5f5dd-fc88-418b-997c-890080b50088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6855658e-bf96-4698-bbcf-e8449efbfd44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801336a8-6ddc-411b-a698-3a53e1a3a25b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e930c99-8eda-4172-b24c-dfd7f47047bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5a43dcd-6d35-4388-a33d-d0f714d6a0e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82b836c-fb78-4f34-ac88-fbea016adb8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b17ad16-c73c-4b94-aef4-429f98ec9d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04efd8c-0120-4748-905d-d85fa723d638",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6914591-7ffa-4043-a6da-8991427b447e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d9d4e65-8d26-42eb-b0d3-bf722782d2e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acab5f46-f806-4bab-b141-70c90cc53e15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bee25ad-ca19-4b28-830f-d40059a230bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203dc9f5-7e99-47b6-9bab-b0a74578c40d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efcc694c-0629-4436-a7ac-c78b19c83668",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4973a0a5-efaa-4167-a9ea-66ab78fd0e0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b91d09d-3e23-4fa4-8639-7d3f508fe1c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21dbaf7b-f85c-4ba1-97f4-6acaf871495f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f093a4e5-be23-4f4d-a2e9-5787f96d66da",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb36730-f23b-489b-9dae-229129639871",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e4c43d7-76db-4c17-84ef-8f6d8fe90a13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2a9fac-858e-4438-b406-32dcbc8c70cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a080dec-7cfe-419b-9d9b-ecb8e0d09ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43982bdf-bd7c-4986-80a9-fac3cb7e1932",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d88e828a-61ce-4f86-992e-7ab2f158204f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd02ca48-5690-4720-8a28-f964371cdfc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb05c53a-8630-4e8a-82eb-74dce5a1161a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9664e6ac-6228-46e9-bb89-10d20bb77824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe78e40-e24c-469b-8d3f-5ed23a1c98a7",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fcc7472-0e8b-4014-a5e8-f10c67e17322",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e550ac8-9257-4f2d-9b90-d8f932a66eb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef8ba106-65af-4706-9ae8-6706161855f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d39a77cf-0465-4ad7-bf20-c7aa39d93683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e8eeba-389f-462d-a4ac-6b1c66344f44",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19267d95-6a74-44c9-975f-734a203a084f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f897c2f2-47cf-40b3-94c4-17a7707237f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce20d01-d47e-4940-8e77-87fa137eabf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9f5711a-07b1-490e-98cc-5ec6811da89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f3d508-f06a-4d7f-8d3c-e3cc2222f668",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e005d0-ab0f-4464-b6f2-e77e917ea9e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e09b8e-9fd2-441b-8f7b-40f664340f3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8b3edc-1710-4924-a18c-d2c6164b5a74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b98be000-4430-4d0a-b494-7fe7f2173a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93534d4b-2e25-4677-8d28-f08431ebc0de",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9005db-132d-40c2-a959-02d477b48b07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27530515-3567-4582-8e60-20bb05e1869e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c50543a-0430-4373-850e-c548609e5404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10cec535-5621-49aa-8eb5-1b69478d73fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15d4184-6b48-43a3-b063-7b86e0b62738",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb50129-23c7-4219-a089-27c7f3d9756d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "381670a7-9a9b-495c-bdba-94010f116c07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b1a30d-5317-41fd-b009-1dab54fb5c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1312365-1add-4cb2-b559-4af42e882868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dde186e-aa77-473e-920c-ab3f4d535e57",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "390f8af2-3d2a-4cfc-ad05-fb91a1a4baa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b092a181-41da-400d-8473-866af348958e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ea77c4-3479-4396-82c5-b561ab15e36e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "365f10a9-bdcc-4165-8e7c-589e8e78fb7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd08d99-3a75-4035-8ac7-89ffa72eb398",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d149256-4740-48a7-b724-b766f269ed21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06b76849-7712-43b2-90d3-b5c29c1af09c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca24b82d-c66c-42f5-9e43-6ccb8990b406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0076c01a-6089-4374-8a5e-99da61880a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0c8ce4-92d0-4c04-ab5b-861903db64f6",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b86e2d-c2ba-4dff-bd31-a85ec02bdb9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "760f9471-f114-466e-ae23-151d9645ce64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c80c20-c417-4a9c-b4d1-631f19264bc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15500e2b-494d-4f06-b9e2-57e7c85801c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19987cb-ce80-48ca-a10f-8fd0e315a5bd",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f412348-4ebb-4e6e-aa43-88236b0076be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98dcce4a-8261-460f-8acd-3cb59f771950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41120464-187d-4e06-8701-2efe47b66333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98cb811e-410a-4d0d-aa10-d27c09d443b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13319334-06b8-4ad4-917d-977b9af546cd",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dad10da-c4e6-4994-b20a-418a469312f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c645808b-1d87-4cef-803c-ae6598b4421d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9299a591-97a1-4b69-9aa8-308065404a5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51cf5972-7120-43e9-ac55-e32000f22abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53fbfb8-7978-4873-820e-3624abbd728f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bdbd49a-2516-4570-bdb7-4a0a7a3ebf10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ebb218f-c231-4f74-98ed-e41a093150c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4f0537-47fc-4a14-b5d9-6d076b278c90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a708ce77-c9ec-4204-a0b9-4bfbe4ad3de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26714224-e1d6-4c07-8ac9-6cc156a2e01f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3347efc9-a117-4611-ba74-a602fa8195cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8077c280-8bb8-4adf-9fef-5fda3e2895a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4391f34-8521-4b6a-8eec-693ee2f93eff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "812020a8-800a-4ce6-8020-9f025692fffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5bd1ca-a868-4288-8aee-381ed269c06f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba59223b-66da-4243-b312-3457f0f87950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b030c2bb-fa9f-43f8-af12-270d1280a915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "887038ee-ec04-4307-a788-1b63ca9b079d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5df996d4-cad3-4502-8afe-4415f719ab9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001b74a8-dfaf-4b86-b025-c501ce09cfa1",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8acba406-25b2-4f84-9166-467038a181db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3572c1d9-9cf3-44ac-a840-44b1e88df18b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ee81b3-13e8-40e6-8696-47fa480e2b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47161fe3-d71c-4ec5-a89b-54a84df2006a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6b8abc-2634-44a0-baf4-ca3eaa1b1045",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc9167c-43f9-45d4-b7af-cd4c03fa7799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4d96106-35e6-4e98-9700-b69e898ab76c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17828d13-e884-41ba-82d1-616389c5c629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9abbd25-ee4e-46e3-b363-8c83ab901a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3ae3f7-bd2e-4bae-abac-6cfe824c9bb1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ace1bf-db56-4cfa-b3d5-5e84ffdde84d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13b87949-e381-439e-9fc5-72f2ea3169ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0fc6ebc-c7d9-40b8-9bfc-8bee4b0d2359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4918567-332b-4fda-bb33-0c5d331b8832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2182c5-4ebe-40cc-acfb-f441647c8f9d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911838c7-fc05-46fc-b8b3-31d5f5a6feb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a95c127-cd2b-41bd-ab8b-a7f321346109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90127200-2536-4ae4-8fe2-528daae70805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b45312b8-fd9c-45f5-8837-82bf9ff09e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9788b579-8e10-491c-82e3-f12b4744c3c7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db14e19f-8f9f-4f2c-aa31-531c13ddcb27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c39b9d67-684d-43b6-9163-b455a7634933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0fefb21-c018-4697-ac3d-358e248cdd3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5daf28c-df02-4069-8ee2-989a974b5434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473e8d58-ece4-4534-94a0-bd44877862d3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4af21bc-2c0f-4341-8379-c7e28ab01c8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "313784dc-3e0d-4b1a-8b29-1ed1f638f0b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48578ee4-ffb8-436e-ab24-50104afe853e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "003e676c-0f3b-42d1-b6fe-89a963f0c46f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a17b6c-172f-4b9c-883c-68f8e63dc199",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856f7e19-7a78-4d50-bf8e-85a535bb382d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de45ba16-c44d-46f3-b858-a25e0a14e81b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19a8682-aec0-49aa-adc6-d67a5ad793e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee7a1864-202c-4338-b2db-247178ceef71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6950d288-c7f3-4431-abec-4c40635c1685",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feceb4f8-ca60-48fc-bad4-bb82250cf594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13de5160-946c-43fe-883f-6fb136581cc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1367f7-642f-41e1-b589-ecbc4769c061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16d437fa-ad69-4fbd-abb1-0c96888e58c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79692f59-2246-4b64-92d5-e829ab07400c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49bc803f-6472-404e-a3ad-d8987fae7196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59997d88-0c5e-4ab2-bbe8-58865596446b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8346719-d0a1-4c87-9a37-eeda71d60df1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11ab528a-38c4-4d8d-984b-77818ab5e5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e52a3b-c7f8-4b1e-a1bb-1980f36085ab",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67704f5-d36a-4ab0-affe-1e2cd70dca10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddabc71d-c1be-4740-9261-4d13c53a4c90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a092a30-6356-4287-9f3c-9eb22ff7743d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46654978-8761-4e2c-bc87-b56d8f1c18be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd615873-6feb-494e-a1a3-df54fff43923",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b534ff3d-bf81-4b10-ac67-28c39547bac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "497a7aaa-0e2c-4eb8-88a2-d8c128ead07c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e56469f-57a2-4fdb-b7cb-3783221e8b51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e48cb012-e43f-46eb-85ea-2752b5c375d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7e76f6-383f-416d-979b-fa5a41648a82",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32678d3-cb39-4f43-b6cf-133a998dac9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca0afcdd-6e7e-4d22-9111-323ee661b4ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "119d8b26-56a5-4df1-82e0-aa83b263d208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00c8bb8f-8c37-404a-8dac-3187dfbbc927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed948f23-94f9-497b-8f74-826b5ae5508e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5414ca6-5d63-4fe2-a0b7-ed739a351e36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f364d80-de47-4aec-b7a0-91300c3e354a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "304c15d1-8251-4d62-bd39-e4c9696003c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d72208db-f9b9-479a-91d8-9ec00fa6b7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c92135-657d-4b9d-b9d4-b74b284cecf6",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22fbce62-ee44-4773-b300-81b7a9ede82d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0743832-eb4b-4304-9e62-dfe80de85a1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f12541-8f42-46d8-9eff-b199131e355f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28fc464e-0cc7-41da-9aa0-f38311280f0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570fc5b1-a60f-454e-bdd4-60a81aa38b46",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141b4106-c055-43d5-8ed4-21f9eadcef6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a55fcb95-0d5e-4b02-8046-4ba44569e80f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c2c180-c13d-4c4e-afa4-356fbc0e76bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb5a522-31fc-4dea-92b9-03f049ee325f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da63967-326d-43d6-93b2-cd8c975c460e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4f20fb-3aa0-48bd-a2ae-53d9ed3192af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe676cc1-f5c2-406b-8595-603f320330e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1514ff8e-fed8-46d5-957f-59b65c69e14e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45362ecc-9617-4d1b-bf50-de74d2696449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23299a85-6a37-4a63-9042-073734e7b99a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1dc298-a26a-47ea-91ac-79ee6248ecff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "283c5a3f-accb-488c-ab93-dfd0a9698dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8e8bb3-2d2a-4bef-b686-85965d35c3d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac28efee-8b26-43d1-a14a-ffb47bb5f34c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018caf69-ed80-4d57-9fd7-ae70b084a1e5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88394fc4-9d0d-430a-8492-b922791aade8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d24a235-db00-44b7-b61c-e2334586453c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0022fd1-5a19-4dc4-8c04-2498bd107de1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8877d1b8-5bbf-45bd-afdd-1484e6a08378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a5ce74-adaf-4495-8a02-a9c505160e05",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30305526-766f-45bc-8dd4-03ed329f856c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf7c7ffc-a358-4a67-9fea-b7c3467e152f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4435f69b-c931-49bf-bf2b-243468982057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd89914-062f-458c-8e47-b3ee77fd6255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae4c20d-d08a-44f4-8639-9edba4debd0f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370f7d4b-1465-4dc6-8749-333eb263c681",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa05069e-bbab-47ba-85d7-901db3f3a00b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06609403-7eef-4f47-b2cd-1e32593cc77b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dddf13d6-5879-4684-98c1-9adf68e9672a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f41d52-b98d-4db5-a7b4-60d3b7aa4acd",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf4aa56-26b6-4bac-9cd5-89126247d849",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17e973c6-23cb-411a-8663-5bfefecf1754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6fc2530-7f1a-4cd1-94c8-3fab4671e520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51aec8fb-5057-4b96-bc48-d00e3d06b35e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ffe6e60-09c1-4690-98f8-fd0837313f09",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fca8e94-6646-4e0d-abb6-797131a616f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfc7fb63-78e7-450f-b937-c42b6f91d476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc37a9a-81cb-4c5d-b187-86b09025e354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58b5d696-47d1-41df-8077-34868cab8db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65a65df-b166-4cf6-9f95-be29d48d3b0a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c1dcd5-c60d-4e7a-9810-988aea031954",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89a1b61a-93c9-419e-905c-94b3c6ee5b4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d304d8-6e64-4ddb-9352-d7fabf5b57d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb89b696-591e-450a-8f75-8ee99213d833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe4234f-8023-4e86-a840-ff2d7f42c9d3",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6371902c-2b8a-4e2a-8403-369b4e6e5281",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "877ef19e-b840-40d6-a3fa-3fd3c04b475f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd3f3c8-1fe1-4b53-9f5b-ce0dfc6987d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efaf8e03-a6db-45b7-8fdd-521438b5fb00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7661e850-bae3-4355-aeb8-ab572196d0e2",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c5377f8-1f1a-4c5b-88ea-ae50a3becb39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf0ec23b-4a91-4579-963c-10ae68a3fa8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63fc921b-3ccd-4b47-87f7-12a3753ae1b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "835eb857-1523-4815-9267-3de71255341b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724a6572-f2a3-4c50-8b16-1bfaf50ff1a6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66e47b1b-5b70-4ec7-b28d-a46bf7e02bdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "206330fc-d2a6-4d07-9ca2-5e2a64638577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7eecc9-b4d1-45c0-84c0-183b465b9f49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d9c5518-d471-4ab0-98b8-471f42469708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb78766e-fec6-4a6b-8f86-a02a178a714a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04345824-233c-4101-b0f3-304af3c1ee13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6f78a79-0d37-45c2-ba5c-1fda865afcc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15d649e-b395-45c4-8c55-7d3d4d859e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "862df6f0-260a-4897-8c87-a9bab73ce1c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dca8cfc-fdfa-455a-ac7c-d742169120ba",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a96ec722-3182-48d0-b0fb-0b64aaecaac0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e23f651-930e-4001-9762-6e023bd8903f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e064660-448a-44bd-a3e8-3f4e404ba7de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14ede52f-ef73-4894-97e2-1d6c136d8765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ad9a09-4f41-414d-ac17-e65eb89b2d93",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ac392e-4d5b-4d28-92f8-652eac4b1555",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d23625b-63a7-4219-a016-43d14c9d764f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ab4d4e-e225-4c4e-b2f1-c8925fc76bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5227f36-f4d1-4a3b-a3e3-91bc5ae4d226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734de3cf-5c87-42e4-9a7c-9d7573306494",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e201ac-b6ed-4e63-8224-2f87b561a656",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab39b422-e986-441a-9ecc-5b1b6cdf83b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "052c1e2f-00a2-4b7e-98cb-9ae2ca72110d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86d73547-2de1-4878-b918-88bd121f64ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22dbd349-5446-4100-b1a1-4dea9f1329c3",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3432bf5-1904-4aa3-bb41-823c0ea996b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8db2fb90-a1c5-4add-a870-414daa9d5cad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf335b8-6ff2-4e71-9d8e-7b8bfb5cc853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5a5de6f-0e44-4710-977c-4ef73fd591f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c331071-625c-40e5-b3c9-653a44988d75",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe0684f-7b04-4950-8117-368e12ea8a2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7740129f-a04c-4576-b0ee-c565004c163a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "005c6b7d-5342-4c34-9f69-dd7212525a47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae4b990f-4c66-4869-ade2-d58f369043b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c2c5ba1-b68a-4fa9-9b4e-151d49c34afb",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0fff426-96e9-44cb-bf63-18360c71539e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82c49517-6521-40e9-9b57-8e7bec8dd60b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38568f57-215a-4bd8-9102-2553cc5eae34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f0f5a25-62c3-4feb-8b9c-57cece1d8afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606df8bb-d05b-4734-9992-a435679b4ab9",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271241f0-f930-4f38-a841-84b0b3c501cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "971e3f47-7f8d-4a75-9074-cc054c1dec24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8a39d5-d8b6-4ce7-83ae-3cc574d48b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f50bceb7-032a-4925-80d1-6d7a5b6d0ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dddfeda-769c-4562-aca6-17daeada4422",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be36086-40cf-444d-b201-0a97d22ecaf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b13153d2-baa6-4adc-a956-cda7e4fc3aa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d156296a-d69a-4086-8474-94fe9f039759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bb08cd4-0325-4dbc-9016-27bbea068289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7f4ff1-59bd-43fd-974a-53db273b109a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1903fcd-143a-4808-80e5-a97f9aa0716b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad323d38-2039-4a92-8503-2114b5b7c12f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac728112-662e-4559-bd96-c44117aa1209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9edc8622-d8f0-4fe3-9d28-1ef36432a3ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da331b3-e3e5-42be-ac2a-798fb8bd97dd",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11bd7444-a439-4afb-bd0a-b9e1c0db6424",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7213c1d9-33ce-4b55-8f65-107f53793f8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb8c57c-1485-417c-9d14-e14f4eb136cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8dba161-c599-4b82-9075-b4e6f033f17d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f3e91c-f720-44ea-a8c7-69a4344e5205",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "481caa17-0ae5-455e-98c6-3c0ae74c0ae7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b9b6d3a-0d2b-40d2-8d80-d9c37baa05aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8564ec18-4fb2-4cb0-9a04-ae491c052633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3075681-ef8f-4582-824c-7211a58971c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a40c3b-da6b-444d-b1dc-6cdb2cb9ae1d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e92e37e0-9d36-4feb-ad29-3ea02b6e43d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8b42e9c-41f8-4f04-956b-bf30193eb9e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc28bb3-d5ab-4541-bf9f-3320fc3b05c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3dccd56-7534-4055-b3a8-6f34cfc3df83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de707bf0-3efe-4e95-8d5e-f5cb2cd3dbc3",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1dbda77-ddf2-47de-8fef-e082ddf1bc22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f38ad17-7977-4651-a6a2-789c995258d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f08c48e-fb23-4412-b8b7-3a8cb5c53746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68c4b77d-3903-4ba2-83d5-4a4b5b9bb305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c301537d-80cb-4d3c-8c5c-c9703ef28ff3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c2cab2-7159-459f-bc43-94aa603dcab2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95508ec5-164b-412a-ae02-e98e30eaed46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1391e771-1783-475f-814e-1c670d6bf3b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac03eeda-f4ae-4051-9c67-14a30264cac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4316a03-a925-4d36-927c-24098e902abe",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e787f0-e149-4455-bf88-9aed92531522",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1e96562-c435-4c0a-a02b-479038d2d64e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d133cd-2bae-4950-964c-11c6980a5c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e2f9c91-d605-468a-9fd2-55c02d49f171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "970a8855-0212-4e0f-9e87-97f8dd7bf840",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c0d2b9-7d2c-416b-b229-52f540d8456a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db44687b-1cd5-41d7-9828-cc39f771ffb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20d39d8-4a0d-4f72-bcc4-f95436b19c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44f383ba-9744-4432-955b-d026576dc1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdbc037a-2208-4ad8-a7e4-204ced17f253",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee6c219-e3b0-48f0-9353-f16ea31d87fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3541334d-ce8a-4396-b241-d5aabc93737f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8915af1-293e-40de-8a28-e0adcfa956a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cadd896-9f0a-45f0-ae5a-3d002f46e328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2829cc18-d437-4cac-8a2e-e862aee9a357",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d67d1a-b84e-41d4-9eef-0e6a4a85f180",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b85a08a-7dff-40e5-ab44-3fdca6978386"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc964ab-d687-439a-be77-6035ecb7f6c3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b1a4e93-c936-479b-8257-2585811048ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069aff60-8d86-45a0-9f07-368be5821651",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b16369-0108-47ae-9807-2bd109eca398",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c07c3d81-e707-4e0f-a798-1ed6ae2c7d04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e305b8d6-fbd5-441a-86d9-014c9d07ba09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bb1f680-ab40-49ec-b945-2ae58fbcb0cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86fbb882-e411-4200-a640-6b84586cec41",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831dbe9f-100a-4e52-aaf4-64bd5c83e04a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a89d5080-6e0a-4d5e-bbdc-b55065b57b7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1c061c-85e1-4a2e-816b-73db005fa89a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6831a1c6-0ad8-422b-b636-f33a86e0f9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7464fe-745d-4ab5-832f-a65084e527b1",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7e35e8-fd1a-454e-b7d7-573793eeffcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfd8506d-d7e2-4d0d-bd23-baa992888f5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "937f9c7a-c348-4c46-af1d-af1f6e10cba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dffb333-b0b5-4397-87b8-0550da25e0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48002f00-6601-4ffe-8627-4b224e6ff4d7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1304c0a1-bb7f-4d5f-87f8-ff5b3e56928b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "627c6278-4b4c-42c1-a681-8578f57919d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2813b3dc-4f05-45e2-95d0-2526ded88984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6abdff91-d377-4d56-901e-046ae27a5e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d38be3-d186-4c6f-849f-8c33fb077eb6",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac15370-c9fa-413a-a0ce-43a5d4dd7fa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09a35afc-39f2-427e-832a-d38cc5bb60f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d58144-fc6f-4dff-ac7a-c98baba901cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8d8cb75-8d78-4b55-a42f-a0dde321690c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d467bb6-7412-4afa-9316-9217e3414fbd",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6485cf7d-60bd-4d8d-b2d3-8d5b514d394d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9633a8de-80c5-4d0b-abe5-e15073fb11ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25322c70-dbb5-4f52-94f8-1591d2d0a472",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cee358a-1323-43c6-8e7f-d0ed6bcdeab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706ffc4d-afd4-4b01-bc3e-c2a365eb011c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e20d3c7-a87f-4a57-ba23-a21c229f5409",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cd542b8-7a20-45d2-9b47-dca5f50e5e87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd8b188-98cf-4579-9773-0f4d6d9c93be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c883dbd5-7187-4d14-bd39-9bf4a44738cf"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebde0359-ca2c-4410-9092-70f62554612b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63251963-7f0d-4124-b663-213cca67a374"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8029d8f4-50eb-4de5-a3ca-cf0e4a18c507",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3449ff92-c12f-44ef-ae7e-e17a433fb469"
                    }
                  }
                ]
              },
              {
                "id": "31cfc7ad-ae61-4f2b-a2bd-03a5dfb55f5a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0a5d7998-3f73-4399-87e8-7606a37e90f1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49116e81-0886-418f-a74f-084f0c55fec1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "476ac25d-474c-4dcb-8179-f61ebb96994f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23488de8-c44a-40e1-860a-74c6281e8a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e75c6932-3fc1-4827-bf57-b800cb6597d4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea269dc3-0e7c-4c50-9632-d6ec8d16cfe6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5df0b962-d578-4fc5-9b21-a00f016d1e08"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5e8cd33-08e3-4bc8-b2ca-1b2b44a01f18",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee6c2e71-083b-4c3b-b824-e737b9f0eacf"
                    }
                  }
                ]
              },
              {
                "id": "dbbeb96e-cba0-407c-b721-8cb64af7d268",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "17a1741d-7011-469b-8fd5-d24d0d3ce3b3",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca41e5d6-58ef-4971-a7f4-4390f835c9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7fd7a8ed-fb37-4bf7-a022-c14fb48adc20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2319cb57-70fc-4786-957c-ad4e702e92e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3630e9a0-366e-4436-93b0-b9e49a77e068"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9dfb81c6-60b2-4ab2-83f3-fee8b595454c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "77301f58-d6b1-44a1-9129-5e3a9c063282",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e234f9bc-51d8-4b6c-a788-e663d7650dd7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e5f3e4f7-0b7b-49d1-bef6-bc8fb5eb6119"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18bda164-a802-4276-a702-5fe907f180be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c36f3d8-9414-4347-a1d0-8e571ec30645"
                    }
                  }
                ]
              },
              {
                "id": "57af6cf7-770f-43b9-9653-2bcb527efc27",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c306b1f-5ffb-4258-bd5b-f0c5e1b27d55",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "48704cda-4ec1-4d35-88b9-b494b63d865c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e7f21ee-2ef6-43ba-953e-a6d3c6e0896c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44ec75cc-4359-4606-b795-4ccd4eb4a1c1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "41e223e3-97d6-4a53-84a4-ccf90c652725",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e1f89a55-86dd-495e-859c-b224b4f5e588"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8bb03925-0d6e-453d-8a00-edc4d0592bcb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3738cdce-7b3b-4510-a5db-626dfe600aad"
            }
          }
        ]
      },
      {
        "id": "8db85218-146d-4121-8c87-9b64f82bec2c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1d315659-3649-4332-8b4e-693b5275fe85",
            "name": "Negative Testing",
            "item": [
              {
                "id": "daeb51f6-75ad-4386-808f-a07c4cc86b59",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8a94c182-3763-4d15-93a0-5ad3a39156f0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3d46df-cba0-4b7f-833f-8ec7736a8944",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "267dc7f3-d16d-46ae-a78c-a8ce8eb4c4cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64397ba-cc99-4554-8774-d5c4a8d3f932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d3202d2-7921-4a63-968a-7f3eeba21acd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45b1fb25-a399-4630-90e5-13b85c504562",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a93871a-fdfb-4176-9446-74f6760d14ba"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "309b9799-442c-476e-ab7e-90c45e543ba3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "459bd10f-3719-449c-ab61-b73fbec6ad73"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "306eea64-b597-401f-93b3-65a3e0cb2871",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "38ee5bb4-ec19-47a9-b8a1-9f381d4d3362"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd61583f-0355-4015-a562-863e639a3128",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c054f6a0-ae94-42c6-8ac8-0e09c69cc370"
            }
          }
        ]
      },
      {
        "id": "dcea694c-b1d3-48a9-9ec5-ec5db9fbf5c0",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7365d809-09a0-48b0-949d-9e96b892e982",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b8914159-8641-4413-87a6-5d871f7ec028",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9d5be69d-d5a7-47c0-9806-51fc7de5e988",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb618697-0652-4d32-9367-83f4323342c2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b50dc98d-be6b-4ba1-a92a-abf8e9c3e55b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0262dd-4c76-40c7-b2cf-a29f2a5e6f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "82918dea-933b-4f58-9c57-a97666a4a279"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2b42891-e083-4220-b7f0-85052befd7ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f8cb72b-f31c-450d-946f-0c9cc3a2019f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6a57428-3108-41c3-9850-01d771465093",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4ebba06-9ddb-4898-93ce-61bffe921397"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a8e1eab5-8752-4237-b2f7-67372b1c7848",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fbe1a941-ba99-4058-b696-4110b49c495b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "96a9e082-fc5f-4f5a-9eb4-8a34c25864f7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "594dd983-a2f7-43a7-89cd-9bcd6809378a"
            }
          }
        ]
      },
      {
        "id": "365617f2-c19d-4124-aab4-7513cee321c4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9a055ad4-992a-43dc-8105-47e942ddaaa1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "58ad0852-4e13-4a77-98a4-361628a2ad88",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7b6e0e61-50aa-4d37-b8ed-391954cb3bb7",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e37f2b4-2a8d-4915-b6bc-a8fa92cb0d39",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8df19f8f-d277-4c57-8c01-face0603d92d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf3f873-9031-4e16-aae9-babb3c8738ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99708da5-ac16-4772-ab9a-8105c4e8eb13"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5073945c-0c35-4d3d-96de-6a42c3152fc6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93792375-330d-40b4-9b21-d8ecf9cf06f5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dba938ef-695e-4401-88e3-bfce6d9dbcd5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5080cfcf-45ae-4343-b308-d05b7c9aadc2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c5ff73be-6fd0-4723-863d-dced9c1964a7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3fd78c06-c122-46c3-9241-cf3c269e0d88"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4dc609b3-201e-4abb-b5fb-07a588e813a9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d51c95d1-094d-4f97-9f3c-391487b0d33d"
            }
          }
        ]
      },
      {
        "id": "0fea24ba-c901-4924-8c5b-b9a2cfa71650",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "58dd99b9-77e6-478d-bc3f-b4913989103d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf066e22-6096-43d4-a766-936407691486",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "36a8911d-6863-4553-851a-11183eef00b2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af0eefa8-3ae8-47f8-b61a-08b091c3084f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "571fe2d2-8ef5-4925-8a25-0b2fa83b2a81",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 770.4366197183099,
      "responseMin": 14,
      "responseMax": 7227,
      "responseSd": 816.9653091811647,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1688431692778,
      "completed": 1688431925975
    },
    "executions": [
      {
        "id": "45061a66-381d-4a9b-ab10-70c880704f8d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "51302bf9-5704-43ac-8301-9f878441c03e",
          "httpRequestId": "e49ea9e6-db13-4fe5-afb4-e44e8db8ba70"
        },
        "item": {
          "id": "45061a66-381d-4a9b-ab10-70c880704f8d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "02aadff6-a6b8-4d66-aa57-43305be0b8ff",
          "status": "OK",
          "code": 200,
          "responseTime": 98,
          "responseSize": 0
        }
      },
      {
        "id": "f38f219f-d1d5-4bb2-8684-0cb2e11b07d3",
        "cursor": {
          "ref": "6761075f-1ce5-49fa-9cc5-1dd8a77698e8",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "fea90896-394f-4623-bd99-f41d052853a1"
        },
        "item": {
          "id": "f38f219f-d1d5-4bb2-8684-0cb2e11b07d3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a37f2dc9-9d84-49c0-a0a9-c140b3be1a8f",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "c42e70f1-d3da-4c6c-8c5d-2a44360c5058",
        "cursor": {
          "ref": "f0501046-515c-4085-b98c-26b59f09d859",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "49b9d7b7-0ed3-45d1-92e6-7b3fc4619598"
        },
        "item": {
          "id": "c42e70f1-d3da-4c6c-8c5d-2a44360c5058",
          "name": "did_json"
        },
        "response": {
          "id": "c7a4d729-8698-4dfa-83d7-b661e1eb2997",
          "status": "OK",
          "code": 200,
          "responseTime": 1073,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da81f59-f847-4025-ae2e-a290b782ac48",
        "cursor": {
          "ref": "b79d4d79-dc77-4dbd-905d-5e7d8e41fd5b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "884308a6-3f6a-4c76-8fe7-490df2063767"
        },
        "item": {
          "id": "2da81f59-f847-4025-ae2e-a290b782ac48",
          "name": "did:invalid"
        },
        "response": {
          "id": "c7fe05a3-3aaa-4c03-80e7-261812c8a231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da81f59-f847-4025-ae2e-a290b782ac48",
        "cursor": {
          "ref": "b79d4d79-dc77-4dbd-905d-5e7d8e41fd5b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "884308a6-3f6a-4c76-8fe7-490df2063767"
        },
        "item": {
          "id": "2da81f59-f847-4025-ae2e-a290b782ac48",
          "name": "did:invalid"
        },
        "response": {
          "id": "c7fe05a3-3aaa-4c03-80e7-261812c8a231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732ddba0-e4a2-4ae6-90d5-a4e9432451a5",
        "cursor": {
          "ref": "5faec6ff-7af2-4264-b59d-0f2d0d2b495e",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "19206e4a-6592-47c6-8c13-47c0caf811b0"
        },
        "item": {
          "id": "732ddba0-e4a2-4ae6-90d5-a4e9432451a5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1e529963-7be6-4f5d-bd0b-8ceaf7f5ebe2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 877,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e002ec9-ce16-44cc-a856-272407151e6e",
        "cursor": {
          "ref": "60e4cda3-262c-472b-9450-8876c93515e3",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "42267e53-b8e8-452f-b37e-562b42626d1e"
        },
        "item": {
          "id": "1e002ec9-ce16-44cc-a856-272407151e6e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "33f79618-b7d3-4e82-92b0-01e646ea178d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 677,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71bdab00-7ecc-41f8-b19c-e6d1f7b15341",
        "cursor": {
          "ref": "57b02edb-1938-472c-aac6-ef413d6eda2b",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "35840d2e-fbe3-41cb-b631-ca924dc7bd3b"
        },
        "item": {
          "id": "71bdab00-7ecc-41f8-b19c-e6d1f7b15341",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8b6334e9-6d49-4389-882f-00875e0cf8eb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b16ec9a-d124-4cdb-9e47-c4918d3c292f",
        "cursor": {
          "ref": "d735ec82-b511-480f-8b74-6d0091c24934",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b53be350-5ac0-4eb1-bdca-456433675f48"
        },
        "item": {
          "id": "3b16ec9a-d124-4cdb-9e47-c4918d3c292f",
          "name": "identifiers"
        },
        "response": {
          "id": "25683d71-911b-4ac1-a452-923bdb09de03",
          "status": "OK",
          "code": 200,
          "responseTime": 1426,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f25c76-f9c4-485b-b803-1688962e4581",
        "cursor": {
          "ref": "114cc19c-235d-458f-b362-f0001e64e52b",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "fb7f1775-e7a7-4915-ab34-e2787207fdcb"
        },
        "item": {
          "id": "f8f25c76-f9c4-485b-b803-1688962e4581",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f8c1062b-11d5-404c-a128-19d33436e10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aababf2-e031-4321-8734-a86c1acbad0a",
        "cursor": {
          "ref": "5803dee8-859b-4c32-ae17-b835a64a82d8",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "533dea99-f25e-4efc-b245-83e5f9ae26f0"
        },
        "item": {
          "id": "1aababf2-e031-4321-8734-a86c1acbad0a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "50fa997e-8dfd-44b6-bd95-f8a56ab63716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7afc1b31-4c0b-45f0-85ff-7b487819f686",
        "cursor": {
          "ref": "da90bb5f-5057-44cb-8bd8-452145e5a2b4",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2c243581-e9d4-4e7f-a855-0834a21b2a1c"
        },
        "item": {
          "id": "7afc1b31-4c0b-45f0-85ff-7b487819f686",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e7c1a974-c698-4761-a739-6a63fc8af7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd7a7f4-65a8-4708-b772-90991d43c3c0",
        "cursor": {
          "ref": "ca8bab33-c6b1-490c-996d-78109090c0f1",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0b72c6be-b85c-4006-9823-61610c778616"
        },
        "item": {
          "id": "3bd7a7f4-65a8-4708-b772-90991d43c3c0",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "82438fd6-59ed-4c81-894d-15576221b02e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef70a025-f501-4b6d-ba7d-4d264f23f674",
        "cursor": {
          "ref": "4a2ec440-fe6b-4794-b815-6904d41d77e6",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2e8a5bc3-1260-4879-998d-daa1ac9d85f2"
        },
        "item": {
          "id": "ef70a025-f501-4b6d-ba7d-4d264f23f674",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "57aba07b-f1f1-418a-9d5a-f0092327957d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1393f758-efa1-4a9a-b376-6af062933c5c",
        "cursor": {
          "ref": "b43ecb64-ed8f-40fd-9fd6-5974d51ab7ec",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3b943156-531a-4116-b4ac-f4fc2c1fbdf5"
        },
        "item": {
          "id": "1393f758-efa1-4a9a-b376-6af062933c5c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "bf6cfe82-ae06-4e00-b43b-7edece2f7e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45794cab-3976-4518-916d-de2c46e96486",
        "cursor": {
          "ref": "3ceab03d-af93-4770-a225-e71968b0c980",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f8eff7ca-4383-4ace-8a84-e805d4817a2d"
        },
        "item": {
          "id": "45794cab-3976-4518-916d-de2c46e96486",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b905a000-cc5d-4e3a-9fc1-3c51afd0a9db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b64a392-d6af-41ab-9b07-3c18dd7007fe",
        "cursor": {
          "ref": "1ae6b306-8d0e-48ce-92cc-53d7112d5bff",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d505ef02-28a3-4fa6-b9bf-bffde6b41c11"
        },
        "item": {
          "id": "3b64a392-d6af-41ab-9b07-3c18dd7007fe",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1d77edbd-9f12-49c1-a469-155ea4a89f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea07e31-86e7-4b14-a201-6b3b05af11cf",
        "cursor": {
          "ref": "df7d1129-17b9-407a-977d-69ea5e07f4fc",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f4c31519-69f4-4576-93be-a7d3255dec5b"
        },
        "item": {
          "id": "fea07e31-86e7-4b14-a201-6b3b05af11cf",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "bba93018-856c-4d4f-b492-16e832d6a05f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47410280-641c-4edc-aec8-bc1406430084",
        "cursor": {
          "ref": "9dc3d6a8-3d66-4736-9763-062216dbc3ca",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "37a5e76a-548c-4bef-85fd-937d21f8575b"
        },
        "item": {
          "id": "47410280-641c-4edc-aec8-bc1406430084",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "74520e31-7db5-4fe2-97d3-7083cbdac115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79b2b93-ab89-469f-aab2-ea9f425f3109",
        "cursor": {
          "ref": "a461438d-5d88-400a-80bd-bd317e602912",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "581135c2-c780-4ec6-81c0-d7d2dbe7bd11"
        },
        "item": {
          "id": "a79b2b93-ab89-469f-aab2-ea9f425f3109",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "53fc85af-6dbe-4c0c-8c08-050010939668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cbcbdc0-a623-49c1-a3ec-c449856f9125",
        "cursor": {
          "ref": "2c7bcb72-c15b-452d-8c6e-a6aa9fc5a637",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "af3dd070-588e-488b-97fe-ecf30cde22dc"
        },
        "item": {
          "id": "1cbcbdc0-a623-49c1-a3ec-c449856f9125",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "db6d9a3a-0ff7-49ee-ae4a-d59f66262a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf7ab1b-c0f3-4708-91fc-8788f9cb087f",
        "cursor": {
          "ref": "63fa6346-ff79-4315-bf95-2b4002d0ed0d",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5b594c2f-b5f8-4001-8d7b-2fa1550a41b2"
        },
        "item": {
          "id": "ecf7ab1b-c0f3-4708-91fc-8788f9cb087f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "49ca2e85-fd47-4dda-9cdf-485e1b714aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23709ae-dbb8-4b8e-a014-7db62e588ffa",
        "cursor": {
          "ref": "9cbf9f52-88f3-4a72-9554-ba5b138e38cf",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "017241cc-2abe-4557-b474-e55439262fc2"
        },
        "item": {
          "id": "c23709ae-dbb8-4b8e-a014-7db62e588ffa",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "262047d1-70cc-411a-b345-4a93514f0ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d098e4a9-e5ff-4c09-b76d-2770aac32bf5",
        "cursor": {
          "ref": "4a9a2ac3-b45c-485e-a1b2-bf885510efdd",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a13452c8-9017-49a6-9f45-208620164966"
        },
        "item": {
          "id": "d098e4a9-e5ff-4c09-b76d-2770aac32bf5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b3b75f97-a002-4bc9-b7c6-cd78c1f0b024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db6251f-f4af-41e5-9d54-b28fdb2f644b",
        "cursor": {
          "ref": "5282eb06-e340-4144-96bd-c98aef1846ed",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d97959c8-165d-45a1-838f-e12a6f5a3a69"
        },
        "item": {
          "id": "1db6251f-f4af-41e5-9d54-b28fdb2f644b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "cac615e7-8504-4235-892f-fdab6996b76d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d952257c-ac2e-4d18-babf-da90714546a3",
        "cursor": {
          "ref": "ed621a23-92b8-4a27-8d07-2230dc81bff0",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f6f4513f-7694-486b-a23e-407d834a037c"
        },
        "item": {
          "id": "d952257c-ac2e-4d18-babf-da90714546a3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "914e8f80-b940-4a48-86e8-93439cc0acb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab96bef8-6bf7-48ce-8fdf-5f6eca12bd59",
        "cursor": {
          "ref": "782d0f37-16c1-4fb2-be20-8a8ee1d6b7f2",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "01622547-3f66-47aa-beda-2afb2b7e6227"
        },
        "item": {
          "id": "ab96bef8-6bf7-48ce-8fdf-5f6eca12bd59",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d5c4c986-27cd-4652-8d0e-a53988caf80b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5698a89-1d88-4fb4-b907-a9ff0ab4840b",
        "cursor": {
          "ref": "7b052511-2b9e-426d-8e98-dd46c76f4b39",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f16053e8-d2dd-4563-8235-62543a69d6a5"
        },
        "item": {
          "id": "e5698a89-1d88-4fb4-b907-a9ff0ab4840b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1db99c4a-075f-4b80-8b86-b1a6140b6c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3ce787-06a8-4c5f-beb4-20897c1a25c4",
        "cursor": {
          "ref": "0449461b-b97a-4c98-8127-062c92ab7944",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "df7ffda2-756e-4f1e-9e81-a8f69990677b"
        },
        "item": {
          "id": "ea3ce787-06a8-4c5f-beb4-20897c1a25c4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6c03b092-1b64-4128-9923-9f14a86c0ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b99c69-6de2-4e6d-8e3e-2db1662f1d97",
        "cursor": {
          "ref": "97b86856-9ad0-408c-ac85-d9656d2e3aed",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "56d4da0f-a3c7-40d5-9a40-7463510d18b2"
        },
        "item": {
          "id": "31b99c69-6de2-4e6d-8e3e-2db1662f1d97",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "60d0eaa3-063e-4e30-bfb7-231826a45027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f75ccd06-1f8c-49b7-8c50-9e3258086aa7",
        "cursor": {
          "ref": "f01bb283-6ba7-49c8-8d09-edf4e35c2525",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a0f31055-5e98-43a8-9c15-038b5fa9ee51"
        },
        "item": {
          "id": "f75ccd06-1f8c-49b7-8c50-9e3258086aa7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "71f6c809-2259-4d91-a2fa-472f5d8fe261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2480d1a8-bd29-4af3-b499-cfa4cbcbffda",
        "cursor": {
          "ref": "02f179d0-457e-43ce-80d6-67f32d71bd46",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "21dc8c4e-bd57-4e41-8a49-f398efb86aba"
        },
        "item": {
          "id": "2480d1a8-bd29-4af3-b499-cfa4cbcbffda",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7341619d-ba51-433b-a6e1-744265dd8af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217e573b-9884-46d3-bfa5-5ca163561e64",
        "cursor": {
          "ref": "85fe525d-645f-4e32-93ec-fd11e4c2932a",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c2792fe8-b54f-4816-9f70-490428720e28"
        },
        "item": {
          "id": "217e573b-9884-46d3-bfa5-5ca163561e64",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "289b9974-c560-4770-995c-5265e1d253e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0bfe05-d6c0-4c49-a7c2-a400da98a7e1",
        "cursor": {
          "ref": "c51e756a-4b7f-4773-8494-fe1a6610b361",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7985384d-e231-45e5-9159-6cf77a80dcf2"
        },
        "item": {
          "id": "ce0bfe05-d6c0-4c49-a7c2-a400da98a7e1",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ee4edfd9-452a-4386-bcfb-7becca6b1691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f556266e-46cc-4a7f-af9a-9c0ea9b1084f",
        "cursor": {
          "ref": "19b68205-1e17-4ec9-8d79-9dec733a4f6d",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "01e83db4-b11b-4390-a61f-c42fbee48a82"
        },
        "item": {
          "id": "f556266e-46cc-4a7f-af9a-9c0ea9b1084f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ebc9cb5b-9199-4639-afb5-a7b4f19ed9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb12abb-921f-4581-8f04-4dc37c3b63eb",
        "cursor": {
          "ref": "0f1e0487-1aa8-4909-9565-b3c6c49fa937",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4fe9e0fe-ce6b-4a7f-87a5-534407b222a0"
        },
        "item": {
          "id": "7cb12abb-921f-4581-8f04-4dc37c3b63eb",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "459021a7-7e69-4326-baa9-e6dd39179733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aee294c-b2a6-4d97-b91c-f0666472a091",
        "cursor": {
          "ref": "39658ba9-6d42-40ee-bade-178f37c85152",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6706bac5-cc55-4af9-acb1-b7b57f1361ba"
        },
        "item": {
          "id": "4aee294c-b2a6-4d97-b91c-f0666472a091",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0a5bb972-e55a-460f-977c-fa3407c3dd47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c9c271-c246-40f2-9c82-c1ac24d39821",
        "cursor": {
          "ref": "5f70c641-c6ed-4a5b-b5ff-c6dc3b18893b",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "71b917bc-afbd-4510-9104-d470f5711195"
        },
        "item": {
          "id": "68c9c271-c246-40f2-9c82-c1ac24d39821",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1a956359-38e7-4591-a687-8dddda81e727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1817e83a-0fa6-4068-b893-dffcf00fea19",
        "cursor": {
          "ref": "5b749758-fb8e-4b66-bf9b-96813a12f083",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0236e28e-46ce-4991-b9f8-d1826199b380"
        },
        "item": {
          "id": "1817e83a-0fa6-4068-b893-dffcf00fea19",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "651bc377-7cf9-4e28-bbc4-0e40b404d692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f7a7cf-c1dd-403d-9072-7c6f65bdd0a4",
        "cursor": {
          "ref": "dff64829-bf35-49c2-8f12-eec8dee15c2c",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "253d1e48-ac2b-4fa2-92f7-4f3a31ef1157"
        },
        "item": {
          "id": "e1f7a7cf-c1dd-403d-9072-7c6f65bdd0a4",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5cb947d6-ba97-41f1-8dc8-55ef4eff20f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a529c054-ba87-4281-89d8-aa35cd67ba95",
        "cursor": {
          "ref": "5a463792-9a00-4fab-899a-0518c97608e0",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "44092f3d-a6af-418f-9db9-c1af250fa3c8"
        },
        "item": {
          "id": "a529c054-ba87-4281-89d8-aa35cd67ba95",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4e931647-7078-4cc7-9094-b74f1dbc11b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b7020b-5667-43a1-b179-a549decc3ad6",
        "cursor": {
          "ref": "2e99d362-5632-4e7e-9e09-194e8ee8fd8c",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5c2ea094-8e77-4a8d-9904-0779690618a4"
        },
        "item": {
          "id": "95b7020b-5667-43a1-b179-a549decc3ad6",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "73ba3061-b0a6-4f3b-a01f-f2cdb75eed3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32021e72-8a4e-4345-a0cf-5595ad27c6b7",
        "cursor": {
          "ref": "712734ec-6026-4704-9bf6-7cc56e91f91f",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "78aa8ff6-d60f-4fd7-a650-0136045d1b61"
        },
        "item": {
          "id": "32021e72-8a4e-4345-a0cf-5595ad27c6b7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0ca54946-8cad-444e-927f-adbc7422fd89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785ef823-9a00-4338-93d0-dd748b9139b9",
        "cursor": {
          "ref": "75745de3-8ffd-41c1-8254-45ef3405ff5b",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ac4e0912-ad52-44a4-8931-811fe9dbac7f"
        },
        "item": {
          "id": "785ef823-9a00-4338-93d0-dd748b9139b9",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0d65e97b-01ca-49e4-a3fc-36f239400973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870d7dec-91ec-4362-8ba1-346467b43948",
        "cursor": {
          "ref": "1f6d485d-ce17-4a66-8fd2-bf2a29022ac7",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d088543e-4a4e-4207-ba12-a80dab9dba3c"
        },
        "item": {
          "id": "870d7dec-91ec-4362-8ba1-346467b43948",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "658a18de-63b0-4924-b47d-badd85ccf805",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 875,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dadc70d5-a29a-4d58-8a65-ab0cbc91df55",
        "cursor": {
          "ref": "0912ecca-8893-49e6-bb23-16dbb91abf66",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1d393585-fc5e-41d5-b0b8-ca5b13c0152d"
        },
        "item": {
          "id": "dadc70d5-a29a-4d58-8a65-ab0cbc91df55",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "681decf8-139d-4ec9-89cf-dd6862e2f109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3c37ea-4b30-4514-869a-ddba68db89fd",
        "cursor": {
          "ref": "b31e685f-9492-4787-b445-750cc733e231",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5d0f414c-314d-46cb-a076-541c8587b8e4"
        },
        "item": {
          "id": "0f3c37ea-4b30-4514-869a-ddba68db89fd",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2b51e069-b416-40bb-b4e7-1124ce228856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1287,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f92af3dc-88ab-4919-9ae6-a5ec27a6d458",
        "cursor": {
          "ref": "db81b6cb-968d-464b-a103-6d2f8c1002a9",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "31d22eba-050d-43e4-9ade-42701d8d6a22"
        },
        "item": {
          "id": "f92af3dc-88ab-4919-9ae6-a5ec27a6d458",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "08257a61-5f3e-4265-8149-2469d401c782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da9be46-7ec8-405c-8209-50de750abde3",
        "cursor": {
          "ref": "8f560866-2208-48ea-8e29-36f73b76739c",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "87c4ea2c-8dae-4a44-82aa-54a7178ba8f9"
        },
        "item": {
          "id": "0da9be46-7ec8-405c-8209-50de750abde3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3bfd0ebc-0166-438c-9192-d6a74a0b0e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c602b3-6f5a-4b04-9411-b1aaa5c1f8ac",
        "cursor": {
          "ref": "149b388a-4ec5-43c3-be57-880257e23a0e",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "bc8e0a2d-73c2-4d15-a1db-982122c03cbf"
        },
        "item": {
          "id": "49c602b3-6f5a-4b04-9411-b1aaa5c1f8ac",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "512115ff-de0d-4cb3-a042-10dc431e1dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2effed14-7785-4033-aeda-29ab64a5fbc5",
        "cursor": {
          "ref": "f6a52c7b-ced5-49f6-9906-54d901449990",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "fbab1049-f40a-46ea-8ea5-93dadc0ae93a"
        },
        "item": {
          "id": "2effed14-7785-4033-aeda-29ab64a5fbc5",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "175f939f-bc55-4296-ab50-fbbfa6897d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a104bc7-9dff-4d16-8a9b-70b513fb2d20",
        "cursor": {
          "ref": "33356c2a-0bb4-47ae-8875-b6a8f6ae8926",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e59c2953-b702-4bdb-ae21-3e969ef938ac"
        },
        "item": {
          "id": "6a104bc7-9dff-4d16-8a9b-70b513fb2d20",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0432d94a-3dd6-4d2f-b7ae-f899d0e3ddb2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 860,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe9674f-784a-42b3-aae8-e32620c24472",
        "cursor": {
          "ref": "d93f03fc-46f3-4588-a1c1-f5166bdbbf42",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2941e219-a71e-49db-9a0f-654964595596"
        },
        "item": {
          "id": "3fe9674f-784a-42b3-aae8-e32620c24472",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c474488d-5f99-46ed-a74a-326e0abbf823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c584d36-be83-4858-8e15-11928906787a",
        "cursor": {
          "ref": "18b2b5a6-9e35-4868-8ef6-077acbcc7d6f",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "83f460db-9480-4549-8c53-9d95c5b19ef4"
        },
        "item": {
          "id": "0c584d36-be83-4858-8e15-11928906787a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "fb3665b7-6e56-47fb-a369-9ac18bbfafa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6aaa8e-6b35-43b5-a461-f3ba9648e960",
        "cursor": {
          "ref": "593813f9-6a1d-404e-a9f3-9f0b70c9faed",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4e2478f8-a2fe-4731-823d-e62dcacb5a66"
        },
        "item": {
          "id": "bb6aaa8e-6b35-43b5-a461-f3ba9648e960",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d7ee1cc2-69e9-4135-9c5a-9a4e9cb4b973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88729616-65f3-4db9-bf1f-f271b7360d2b",
        "cursor": {
          "ref": "32183c0f-6959-4854-9c5d-624a665e9663",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9094119f-58f8-4adc-abfa-ea500917b242"
        },
        "item": {
          "id": "88729616-65f3-4db9-bf1f-f271b7360d2b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "65d7e36c-717c-433c-abde-7307cb7a9950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f095192f-c2fc-40d8-b3f2-f76aef4ce76b",
        "cursor": {
          "ref": "9d438662-2ae8-4cf6-b546-bf31c40d3df2",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3f8ececf-69d6-486b-b4ca-d48edd5d9c82"
        },
        "item": {
          "id": "f095192f-c2fc-40d8-b3f2-f76aef4ce76b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1fbebfef-ffad-4495-b3c9-f0b66bea3c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d86ef8d-5e7a-4a1f-9378-28a4b5ed585b",
        "cursor": {
          "ref": "cca5934e-7441-407e-94d9-a02419145d87",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8f4708b0-ab1e-4cc6-8b4b-e66ef06732d3"
        },
        "item": {
          "id": "9d86ef8d-5e7a-4a1f-9378-28a4b5ed585b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6083d8ba-3179-4e36-beb5-16da7a19f476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cfe1577-cacf-44b7-b89e-6e5d65807e55",
        "cursor": {
          "ref": "6d4237d4-f69d-45dc-899e-262abbb9eb2c",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "863bcfcd-4e60-45f2-8a91-8bcd1e3f2899"
        },
        "item": {
          "id": "5cfe1577-cacf-44b7-b89e-6e5d65807e55",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4fa9a116-15cf-4c80-ad04-4c90b20e6813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a12cbb-7c1e-43a2-ac05-1feb97054e89",
        "cursor": {
          "ref": "ba6d1cd0-2eee-42f6-826d-ac6baf0384a1",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "894f2acf-c65d-456a-a7f8-c8fc00c69b52"
        },
        "item": {
          "id": "92a12cbb-7c1e-43a2-ac05-1feb97054e89",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2d701104-96de-4147-85f6-d5cfbfbe76c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621d8225-f746-471f-9c89-6b4952de53b4",
        "cursor": {
          "ref": "7117faef-e522-430b-b1d8-c1f6f59ef2ba",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "86299bbb-c1f3-4dbc-8a39-9bdfe33bc660"
        },
        "item": {
          "id": "621d8225-f746-471f-9c89-6b4952de53b4",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2071bf3a-b00d-4e14-b8ec-6e01f8b62cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b8e394-548d-4126-9b11-b984044ce3e0",
        "cursor": {
          "ref": "a2c3a21f-3c2e-493e-beb8-b64170870fd7",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f86c466a-8144-4409-8094-c513f9cf455c"
        },
        "item": {
          "id": "77b8e394-548d-4126-9b11-b984044ce3e0",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "82a1a275-3d53-48d4-a171-679b32e902ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505b5886-fb24-4367-a028-3d2b2d906326",
        "cursor": {
          "ref": "0991da0b-e966-4bc3-8992-e27f48c71425",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0f1e0d9d-e705-4e92-bd29-cecec54917e5"
        },
        "item": {
          "id": "505b5886-fb24-4367-a028-3d2b2d906326",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2b44262d-29f2-468b-ab27-ecee12acd22a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d45f52-5a83-4173-8075-4a9d5f412c6f",
        "cursor": {
          "ref": "1baae300-559f-4333-97af-91d852cb2b97",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f31fd501-0d76-4272-aad4-ecad7571a5ce"
        },
        "item": {
          "id": "39d45f52-5a83-4173-8075-4a9d5f412c6f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ff39c63f-444d-4456-adae-b59d9db8af98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e87511-73b5-4a14-96f9-64b9dddafdbe",
        "cursor": {
          "ref": "5ccf1959-b569-4642-bfd4-40bf54395d6d",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a4e64386-d451-42e3-89a3-f926997dec67"
        },
        "item": {
          "id": "a0e87511-73b5-4a14-96f9-64b9dddafdbe",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f303387e-d19f-4d67-8fb2-4618df1b3e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776d30c2-8fa7-47e5-843c-2e331bdf4483",
        "cursor": {
          "ref": "cfc7b0ea-40f4-4a91-8825-9e6a29b52073",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "64361124-0180-45e8-91e0-633b3c258277"
        },
        "item": {
          "id": "776d30c2-8fa7-47e5-843c-2e331bdf4483",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "31919615-97c5-4fb2-9e85-9109d364b7d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32a718f-ac28-4706-9aa1-32a1c5bccf2c",
        "cursor": {
          "ref": "a60983d6-ee41-48b5-9f9a-6e1058b57701",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "add0da0d-90fa-4f6d-bebd-f441b91fb9e3"
        },
        "item": {
          "id": "e32a718f-ac28-4706-9aa1-32a1c5bccf2c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0b7c52ab-101b-4cec-8ae5-e7bb57c661c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ca4ca9-ae3d-4805-a311-531eacced046",
        "cursor": {
          "ref": "6dc20eb8-f8aa-4c19-8178-7cac0149bd62",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "0ebd8d2c-1fd7-4337-be82-792e74f8928e"
        },
        "item": {
          "id": "55ca4ca9-ae3d-4805-a311-531eacced046",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "627dac5e-be74-45eb-9e33-b0df7257d2d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9e2284-ad44-4567-ae0c-38a153001d11",
        "cursor": {
          "ref": "8a2b9884-3a24-42b9-90b0-15304bd3a9bc",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b827a623-2a01-45b6-9d1a-012e75bb623d"
        },
        "item": {
          "id": "cc9e2284-ad44-4567-ae0c-38a153001d11",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4cd8dcda-05bc-49ce-b4d4-f5bba41fe57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25803c49-e8ce-4b7d-83e0-23f8b03b6513",
        "cursor": {
          "ref": "1262dc06-8f80-457f-bd8f-932725f6fa3a",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "df46d499-ec33-491e-b801-2da9dfd58a56"
        },
        "item": {
          "id": "25803c49-e8ce-4b7d-83e0-23f8b03b6513",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "53b85779-8afe-437e-9fee-078f31a43a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88952c71-6afb-4060-bd33-d56078e97d7c",
        "cursor": {
          "ref": "1dd8e19d-0afd-4f09-aaae-766df30049b0",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "07eb23b6-6921-4a16-8b3a-fc0158f0d2d5"
        },
        "item": {
          "id": "88952c71-6afb-4060-bd33-d56078e97d7c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d24980c8-ee41-4071-b5a7-c9cc09a3a01e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b14692-be84-4c1a-84b6-ef454f82cc2d",
        "cursor": {
          "ref": "5ac82044-40b8-4145-b224-9a105a43f199",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4838e843-d5ce-4baf-afd4-77071e3b1993"
        },
        "item": {
          "id": "d3b14692-be84-4c1a-84b6-ef454f82cc2d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "576edbdf-1d30-4a51-b459-fb8fc2bd4b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aeeb72a-3ee0-403e-91af-09924e21362b",
        "cursor": {
          "ref": "a66877a2-32a4-4032-b8e6-2d43008da67c",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2fabb198-003f-4427-90b8-e0cc6cfc3c9c"
        },
        "item": {
          "id": "1aeeb72a-3ee0-403e-91af-09924e21362b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "22bfe2ec-9458-4dad-ae4c-09a490d74869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b003f04-2071-4493-aab5-0db8321846ef",
        "cursor": {
          "ref": "84a2eff1-0d52-4e8a-aca8-58622a9df6ec",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "223b86f8-be25-41b7-bc1e-b3ea69706c71"
        },
        "item": {
          "id": "3b003f04-2071-4493-aab5-0db8321846ef",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "cc708a9c-6832-4d8b-aa47-c6b5a4bb1661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7b992f-18bc-41db-bfb3-97e7da60ddcc",
        "cursor": {
          "ref": "89775474-7f77-4750-aecf-f4bac9c7f4b7",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d676482a-0a2a-4f95-a31f-6f31dda80c1c"
        },
        "item": {
          "id": "6b7b992f-18bc-41db-bfb3-97e7da60ddcc",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7d85eeb8-82e1-48b8-b73d-4e7124816fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea43e78-603b-4884-9196-33f80119822b",
        "cursor": {
          "ref": "f370eee5-5dc3-4636-950a-62e0c289a31b",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f4182acf-4519-4aff-92d5-4cfa4049ca9e"
        },
        "item": {
          "id": "bea43e78-603b-4884-9196-33f80119822b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c1b806c1-d807-4562-a30d-f51826b88094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9e8375-6b80-47ac-9df6-7497320506a8",
        "cursor": {
          "ref": "91f7dd74-0b6f-45d9-8295-003382e1d5dd",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6edc4979-44dc-4ee2-b2d9-6c465502b1d7"
        },
        "item": {
          "id": "6a9e8375-6b80-47ac-9df6-7497320506a8",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b288202f-7a40-4c1c-83cc-195ff5d859b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45212797-af7a-4cd8-b6cf-c1ad7804a3aa",
        "cursor": {
          "ref": "afb853f3-424b-462c-9496-c9dabd66c10b",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2c217714-af5e-456d-9db5-3110601ea635"
        },
        "item": {
          "id": "45212797-af7a-4cd8-b6cf-c1ad7804a3aa",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "affc51c7-efe4-48ce-8ba6-6a8414652f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53555908-93fb-44b0-b1b9-bea88fa41e92",
        "cursor": {
          "ref": "24ba1565-769f-44a1-9ad6-12afbfe752b4",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "95641eb7-fb83-4615-9cbc-4ab4b1c08806"
        },
        "item": {
          "id": "53555908-93fb-44b0-b1b9-bea88fa41e92",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "bf00be09-1b4f-434f-a7fa-630e65ada534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb1ae2d-9b47-4e13-964b-e545cd629331",
        "cursor": {
          "ref": "04d1ea79-fc05-41e6-ba6b-33b230bb919e",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d68007ea-1320-4d47-8382-72470af541ec"
        },
        "item": {
          "id": "fdb1ae2d-9b47-4e13-964b-e545cd629331",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "60e8e3d8-774f-4b15-a741-5540fb5c8a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "172256d2-58b9-499c-97e1-448450a1e216",
        "cursor": {
          "ref": "9460c370-387a-46f3-b532-4950ba971409",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ff5d9977-3b9a-441c-8ca6-57396d7dd859"
        },
        "item": {
          "id": "172256d2-58b9-499c-97e1-448450a1e216",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3cf4d7b8-7d64-4c4f-b5ad-aefee95d5dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7c81ea-19c1-4a4c-9e4c-cff7abcce963",
        "cursor": {
          "ref": "2bb24687-8963-441a-9720-e67c6823b3b1",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e28c24cc-fb3b-4e45-b1f0-259b1e31de32"
        },
        "item": {
          "id": "7d7c81ea-19c1-4a4c-9e4c-cff7abcce963",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "393fbf43-8148-421f-8586-89f3283c58bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116497be-0039-4bdd-b29b-c7f6ec2888d8",
        "cursor": {
          "ref": "1ded1acb-5370-40ec-bbbc-50d3c8e81dab",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a145dc3a-d465-497f-9ca2-6b51d846b08d"
        },
        "item": {
          "id": "116497be-0039-4bdd-b29b-c7f6ec2888d8",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1db082f7-10db-44a6-9e60-a7a55e6c71c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5988020-6d17-47fe-8a89-83ec8f63cf3a",
        "cursor": {
          "ref": "7b2d5f02-f393-4ae5-9b5d-093423e57c30",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0885f0c4-2284-43db-8fe2-05ed5bc5c0ed"
        },
        "item": {
          "id": "a5988020-6d17-47fe-8a89-83ec8f63cf3a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1aecfd08-9c61-418a-869f-67aae13bb0e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c7ea10-2e22-49e2-b830-d65e3b0f4403",
        "cursor": {
          "ref": "a4967641-02b1-4ab3-9dc4-c4185a3759f9",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4497b843-88d6-4a00-9c54-d3b7adb1afc6"
        },
        "item": {
          "id": "00c7ea10-2e22-49e2-b830-d65e3b0f4403",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "410dbbf5-7c5e-4a78-a4e7-69d7d2b63a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92171d7-aab3-4eaf-9c88-6078cc875fcd",
        "cursor": {
          "ref": "4047bcbc-a466-452e-a022-b27a922ba852",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "daec96d4-526a-49ae-88bc-a19363cb5f94"
        },
        "item": {
          "id": "a92171d7-aab3-4eaf-9c88-6078cc875fcd",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e85d32b2-58af-424c-b2aa-22cd57d907f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1659edba-4fba-4850-bba1-e16523e34efd",
        "cursor": {
          "ref": "3a21ff30-1045-433f-8540-5fa92feec9be",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3237202c-e7b8-4ab6-b97f-13eb9011d88c"
        },
        "item": {
          "id": "1659edba-4fba-4850-bba1-e16523e34efd",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9a4e24c8-0e5b-4670-a6ce-3ee30e6d2b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5b3b05-9fcb-4d8e-b415-9063d82dfda6",
        "cursor": {
          "ref": "579f624d-eff6-4695-b2f4-965ffa548b10",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d2bebf39-f1c4-45e6-97b1-01455aa0b3b0"
        },
        "item": {
          "id": "5a5b3b05-9fcb-4d8e-b415-9063d82dfda6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "df0b35e9-c90e-4586-93bf-c3aab340e704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c45f4b4-33f5-42ee-87c1-d7bd2b959723",
        "cursor": {
          "ref": "3ab1487f-3d98-47e7-8248-d2dc638762bf",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "865494dd-16ee-4c80-be6b-bfec3ae71631"
        },
        "item": {
          "id": "7c45f4b4-33f5-42ee-87c1-d7bd2b959723",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ae3d3d7f-bbe5-4bd7-8b57-e983f4ff7015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee563582-8543-46e1-b363-c76bd4f64e72",
        "cursor": {
          "ref": "8b048a60-9d3b-4973-9f68-905dfa123922",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1fa4f59a-4bfd-45c2-842f-d48f907d0301"
        },
        "item": {
          "id": "ee563582-8543-46e1-b363-c76bd4f64e72",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "365fe078-cc23-4e6e-9464-f93bbeab7fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7626030-35a7-486c-9840-79e020885335",
        "cursor": {
          "ref": "2c7bccdf-5cd1-49d8-a3e0-5a5991075fe7",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6daa8ce3-28f6-47b0-9887-1829356cf71d"
        },
        "item": {
          "id": "f7626030-35a7-486c-9840-79e020885335",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b238afff-1d93-42e5-a277-a8a41cbed9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7089466b-bc60-4ddf-8067-b0caf4e2f9b8",
        "cursor": {
          "ref": "2316ff2c-0b78-4498-a49d-d3f55f7f80e3",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f710d69b-8998-44b2-8712-5628d6d8836f"
        },
        "item": {
          "id": "7089466b-bc60-4ddf-8067-b0caf4e2f9b8",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "be70bf41-8a71-4792-9ac8-3eaf43f2e698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69446663-c880-4680-9621-4a230f203590",
        "cursor": {
          "ref": "4167b3fb-2ca9-4a8d-b41c-c2de831f69ac",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "117ca9ad-52b0-456e-89b1-73249f4939a6"
        },
        "item": {
          "id": "69446663-c880-4680-9621-4a230f203590",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4098dbb8-2677-4d27-b3bc-32551cee4a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa05c215-197c-45cf-bb3b-9f8322f69d5d",
        "cursor": {
          "ref": "11e3fec0-25d0-467d-acb0-af86d546b23d",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6e742a90-e77a-4d41-b42f-1d954f690b5f"
        },
        "item": {
          "id": "aa05c215-197c-45cf-bb3b-9f8322f69d5d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "13891fbd-543a-4a22-a9a3-55fc3c36ac9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57fc958d-8d9d-40c3-b16f-460cc26fc252",
        "cursor": {
          "ref": "4781e544-53f6-4cf8-b998-6e5856dd94c7",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "daf8ccfe-8cdb-4d8f-946b-cd5a7ebe3ef0"
        },
        "item": {
          "id": "57fc958d-8d9d-40c3-b16f-460cc26fc252",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "853deb11-a929-40cd-8874-eaa6ec2be427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb17485f-f6bc-4056-82e1-fb7428e7a3ff",
        "cursor": {
          "ref": "3b104a71-3990-47b4-9eb0-a977b42cbe5c",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9aa79e18-e23a-4f61-9864-9b4c56ea49fd"
        },
        "item": {
          "id": "fb17485f-f6bc-4056-82e1-fb7428e7a3ff",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1b8532b6-7ff4-4ca6-934b-a556cae253ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a977e6d-cd5b-4e6c-acd9-3a1985906ef2",
        "cursor": {
          "ref": "b7701627-6776-48da-bbaf-52e88b7124ce",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6d8734b5-ad5d-413d-b1e0-4d68a443cf20"
        },
        "item": {
          "id": "3a977e6d-cd5b-4e6c-acd9-3a1985906ef2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8206349c-8eab-4dc8-af05-a4858a0ab6f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824c3372-37e0-4c31-b407-81d5e2662216",
        "cursor": {
          "ref": "5bbbca2d-b6ac-4345-9b48-54a3d5da4f93",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "bd68d9be-31b1-4617-97e0-1702ae34db5a"
        },
        "item": {
          "id": "824c3372-37e0-4c31-b407-81d5e2662216",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d05bae16-d54e-41fd-ba76-15b666fb8958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7561c462-d42c-43cf-9483-e1d65222bf14",
        "cursor": {
          "ref": "600b99d0-3953-4a0b-a63e-bd1207b8fe38",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "84930719-a6cd-484c-a09c-c791e8cd88e8"
        },
        "item": {
          "id": "7561c462-d42c-43cf-9483-e1d65222bf14",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b9d3fc20-c531-46c3-b265-41d9ae501dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d90ae4-2a28-4b55-8240-4810a59ca7eb",
        "cursor": {
          "ref": "efc8f6e5-d57b-40be-93e4-6ed64788d8bd",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "83001ac4-eccf-472c-a634-1d099c1e7bac"
        },
        "item": {
          "id": "c1d90ae4-2a28-4b55-8240-4810a59ca7eb",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "38f44340-5292-44f4-aa78-0526437d3769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8b9508-77cd-46f1-9c0f-d8273ce196aa",
        "cursor": {
          "ref": "c8211d36-3f6a-4e92-aafc-73c19d53cfea",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2cfdee76-87ac-4214-8cec-fe94bb5f2ba7"
        },
        "item": {
          "id": "ab8b9508-77cd-46f1-9c0f-d8273ce196aa",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "cde3d14d-5f2d-487d-bf8c-87efa1199ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e74d5c-3655-4388-859f-a7e988d970e5",
        "cursor": {
          "ref": "83608ae2-5d30-4723-9cf2-ea7c6734e0ff",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3fed1997-ffc3-4e9e-bcc5-32f202b2114d"
        },
        "item": {
          "id": "57e74d5c-3655-4388-859f-a7e988d970e5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f0362ec1-c17c-4612-aa09-e30102db4218",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1f6828-bb2b-4567-b54f-eb266ffec652",
        "cursor": {
          "ref": "5ad08a8c-f480-420f-b3af-e449da8f4981",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "eecbd007-b0fa-445b-a3f1-72f1f62f49a9"
        },
        "item": {
          "id": "ec1f6828-bb2b-4567-b54f-eb266ffec652",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ce8d1f06-fe67-4607-964a-8c890f44135c",
          "status": "Created",
          "code": 201,
          "responseTime": 6546,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2e458c-3866-4f50-947e-f444656d9d08",
        "cursor": {
          "ref": "c043d40e-8804-4338-8b3c-136d8ecc615a",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1bc6c18c-8674-484c-9813-414c3e04673b"
        },
        "item": {
          "id": "7e2e458c-3866-4f50-947e-f444656d9d08",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7b8980b4-8d35-4892-ac65-82ea5fc331a6",
          "status": "Created",
          "code": 201,
          "responseTime": 6419,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d87c3cf-be34-4f2c-af25-a336b754a5cc",
        "cursor": {
          "ref": "fb2bda61-acf0-4bae-8d8a-94f28499f40d",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b544d88d-eef2-4fe6-85dd-527f811bd1df"
        },
        "item": {
          "id": "1d87c3cf-be34-4f2c-af25-a336b754a5cc",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "afe7899e-1956-42d2-9e5e-1ff7daec8c53",
          "status": "Created",
          "code": 201,
          "responseTime": 6754,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb46546-4dcf-4e5d-aa94-7ee364acbad9",
        "cursor": {
          "ref": "0632c817-8abd-4d5d-bf33-308f2215f5a0",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2ec34b4d-49f9-47f1-8f20-e71de82b0741"
        },
        "item": {
          "id": "ccb46546-4dcf-4e5d-aa94-7ee364acbad9",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1a167db7-2cae-45cb-8950-5589f2fd6596",
          "status": "Created",
          "code": 201,
          "responseTime": 6239,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bad0367-f7bc-48c2-906c-a3ffcedefac1",
        "cursor": {
          "ref": "439f815f-9dc7-4500-bc7a-09432c79f79a",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "bbf8b9d7-2e78-4ffe-a9de-9f0b200523a2"
        },
        "item": {
          "id": "5bad0367-f7bc-48c2-906c-a3ffcedefac1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8e04e3d5-09f6-4a4c-93e5-7c2dc8f93528",
          "status": "Created",
          "code": 201,
          "responseTime": 7227,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ab06f8-20ec-4ee5-bff9-7d40b416adfd",
        "cursor": {
          "ref": "79da7b80-d8fd-4c8c-8f63-66e67271bdf2",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e65f1783-507c-459c-923c-87a8335aa995"
        },
        "item": {
          "id": "c4ab06f8-20ec-4ee5-bff9-7d40b416adfd",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4e627046-51e4-407b-ad9c-e5c0bc7879ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1185,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "0e7d779a-8335-4568-bac9-f04c9cbf7a39",
        "cursor": {
          "ref": "f583bd72-f3e6-4573-9ab9-86891ed6b3bc",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0c15675c-bb86-403e-b5e6-b270541c4f76"
        },
        "item": {
          "id": "0e7d779a-8335-4568-bac9-f04c9cbf7a39",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5621a010-274e-4f6b-a14d-5dbfb9f659f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 849,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e839d50a-9de2-4007-a0c2-ccb982b04256",
        "cursor": {
          "ref": "ba1c8ca5-1a53-4f7d-9dec-be3838c94da2",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "476bc0fd-ef87-44f3-a952-39956f304e7a"
        },
        "item": {
          "id": "e839d50a-9de2-4007-a0c2-ccb982b04256",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4c119b2c-b9c4-4d42-90a1-7eef690bfd0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1149,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8669ca8c-b2c9-4af7-9380-881258578c2a",
        "cursor": {
          "ref": "a686659a-d8fd-48c2-ba3e-1e7481126c67",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a85bc615-7d0f-4fd3-8d9f-029eeb1a4d20"
        },
        "item": {
          "id": "8669ca8c-b2c9-4af7-9380-881258578c2a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "12b1ccdd-756f-4898-b31a-3539c7367c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 982,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca78b0c-6d25-4171-871e-80dc7edff3a8",
        "cursor": {
          "ref": "425acdc3-234a-4854-9bcf-3b50961c0e72",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "78c75b83-92d0-4d2a-b82b-2451f97b5b2e"
        },
        "item": {
          "id": "6ca78b0c-6d25-4171-871e-80dc7edff3a8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8091f237-e748-433a-a6e6-a6102b506862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1062,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae46530-9dc4-46ae-adc5-73ba6bc47d01",
        "cursor": {
          "ref": "25c38607-e94c-4595-8ecf-b5a8822daad0",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "45946877-7e4f-4498-a333-2d464d243f34"
        },
        "item": {
          "id": "dae46530-9dc4-46ae-adc5-73ba6bc47d01",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "378378be-b325-4adb-9c2f-b4671a64f0c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1080,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8bfeb9-383a-4b15-a508-47a91d2e0686",
        "cursor": {
          "ref": "a37bd57d-bfd6-49bc-9115-46dade567857",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c115f001-29b8-4fd0-b2c1-bc659613a7df"
        },
        "item": {
          "id": "4f8bfeb9-383a-4b15-a508-47a91d2e0686",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0e6b601b-04bd-4a8c-9467-fbbe2ed92f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1050,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05710d2-525d-4712-a65c-f2cf110e42d4",
        "cursor": {
          "ref": "c9623312-d6ef-4904-bf14-c172beb6921a",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "130832dd-9798-493e-9493-98b6ae73b983"
        },
        "item": {
          "id": "b05710d2-525d-4712-a65c-f2cf110e42d4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a5529bdc-db33-416a-93ba-c33ad64a9084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1076,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901c35bd-b98a-4d12-afdb-6cff606b82b2",
        "cursor": {
          "ref": "55f30762-7847-4003-9003-3952c678df2a",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b673a561-e8fe-4761-b578-ec08b9a831bf"
        },
        "item": {
          "id": "901c35bd-b98a-4d12-afdb-6cff606b82b2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f6b4b95b-d170-4be6-a66b-79c83cbb01c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1063,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe20dfa-d6e3-4f55-8689-f027b7f50017",
        "cursor": {
          "ref": "f2036ab1-7ee0-40bd-aa71-b593faf4362d",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c6854077-ed69-4ba0-8b8c-9c9ca035d391"
        },
        "item": {
          "id": "fbe20dfa-d6e3-4f55-8689-f027b7f50017",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7b6c4594-de90-465e-b46a-d84c9a04e43f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1011,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed5913b-1a19-49fa-a83c-e63cc0e1d50f",
        "cursor": {
          "ref": "2fdf7cb9-9be3-4215-9dfb-d1b4acac9954",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b53f72d8-7b10-4038-9d74-2cb4d8f6c40f"
        },
        "item": {
          "id": "8ed5913b-1a19-49fa-a83c-e63cc0e1d50f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f19af687-1d55-4c43-b4a8-fc94ac4c670b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1049,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5edeefb5-fc7a-429f-894c-06ff4931fec0",
        "cursor": {
          "ref": "b2ab84bd-e5f4-439c-8432-65d528abcd2b",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "55b07944-c33f-462d-83be-a11ecfa1092c"
        },
        "item": {
          "id": "5edeefb5-fc7a-429f-894c-06ff4931fec0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8020922e-2c18-46c3-b4e4-5806bd1adc40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1010,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58224a0d-34d7-490b-af4c-983358ec7d21",
        "cursor": {
          "ref": "2bc7a241-b69e-4787-adb1-d4f08936322b",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "517f77b2-3cee-4c7d-a93f-160d798bde75"
        },
        "item": {
          "id": "58224a0d-34d7-490b-af4c-983358ec7d21",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "74c42f29-c259-4f4b-a705-009471acbc79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1031,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dccd035c-f6bd-4fd0-87c0-7c98d9b6c281",
        "cursor": {
          "ref": "d00202f1-6f76-4986-92f5-238a5a13079c",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8fa26c00-66d0-41e0-bc51-8693ff936818"
        },
        "item": {
          "id": "dccd035c-f6bd-4fd0-87c0-7c98d9b6c281",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "145dafd1-7f37-470b-90d1-d7e90851a1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1008,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d2d080-7769-4a93-b34d-ca7bf2d7ff6d",
        "cursor": {
          "ref": "82538f45-0683-4e23-8354-ce408369e72f",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "98763c85-dbd0-47e4-9a14-5fda098aef59"
        },
        "item": {
          "id": "f1d2d080-7769-4a93-b34d-ca7bf2d7ff6d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "74fcdd5f-1788-4a5b-a47c-dc52a9885e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1061,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9ebf5a-538e-41f9-9c50-54aef6348a9c",
        "cursor": {
          "ref": "db4a4853-6f14-4a7b-97c9-9c8c9027c9b2",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "11ac2c49-9aa5-468b-9724-4b232185afff"
        },
        "item": {
          "id": "0e9ebf5a-538e-41f9-9c50-54aef6348a9c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8f83df5c-f1b5-4d37-b981-6a7eb736dc77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1053,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ddc77c0-0327-4e03-a4ab-b16c59e6ea96",
        "cursor": {
          "ref": "78cf2736-f46c-4846-81ff-561b779c1f52",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f1d8af71-f30a-4fa2-a439-c8ee3906f771"
        },
        "item": {
          "id": "9ddc77c0-0327-4e03-a4ab-b16c59e6ea96",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "99147472-2e4d-4845-a70b-24c0b6224ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 953,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea90cfd-29b2-4870-86b5-a4cde0c816fe",
        "cursor": {
          "ref": "d95838ec-7e92-44e0-9d1c-4057bfabc7c8",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "72db2dfb-9745-441f-97a4-8df87b68abd4"
        },
        "item": {
          "id": "6ea90cfd-29b2-4870-86b5-a4cde0c816fe",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e97edaca-10bd-416e-b4a1-fed56e6446b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151e752b-8632-447a-a74a-1a5868963c28",
        "cursor": {
          "ref": "dde4001d-339b-467a-849f-148273f99247",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "21b0fe06-8ded-4a3f-a4e9-e93d001af177"
        },
        "item": {
          "id": "151e752b-8632-447a-a74a-1a5868963c28",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "502c96df-ffaa-4333-9d6d-2509259ef5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 804,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac0a36f-e733-4ba7-9494-c6d5b02f2f24",
        "cursor": {
          "ref": "1418046c-87be-4df9-8a48-016eaf9717d0",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ee6b092f-67cd-4fdc-ad77-d3481ecf2aa2"
        },
        "item": {
          "id": "eac0a36f-e733-4ba7-9494-c6d5b02f2f24",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d305f235-4b3b-42a1-8cb9-d68301b4c361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed22979-5898-411b-bee0-6e069dff5502",
        "cursor": {
          "ref": "f186ce4d-0a5b-4364-9c41-9f8021f0dd66",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a389a33e-cbf7-40a6-b9c8-ec06a83fc34c"
        },
        "item": {
          "id": "8ed22979-5898-411b-bee0-6e069dff5502",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "793e4d90-d63a-47c3-ac63-67a2e524bb3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 800,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98110206-94e4-4bdd-b9cf-af92fdb58ee2",
        "cursor": {
          "ref": "cda0c2b8-97e4-4826-a164-2699e081dff9",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1df53c20-88fd-4bc4-954e-2faf0fb0a0a2"
        },
        "item": {
          "id": "98110206-94e4-4bdd-b9cf-af92fdb58ee2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "70fccfa6-70a6-4908-917b-f63d6e50b472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 826,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a21d649-b5ea-4d62-b922-7f64f25809ab",
        "cursor": {
          "ref": "e843ed6a-425f-49e1-8a2e-3f96c2b98b22",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0de6247f-3bc4-4159-b814-7a0e89fda03b"
        },
        "item": {
          "id": "1a21d649-b5ea-4d62-b922-7f64f25809ab",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "16233a3c-7559-491f-8a81-fb4efbe43598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 800,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19a72d9-3bf7-42a0-aeee-45b24f630457",
        "cursor": {
          "ref": "2113e51a-5511-4e64-8957-595ea5b90a5b",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "28ce5bf9-9f2c-4e4b-bdeb-302f2efb2584"
        },
        "item": {
          "id": "e19a72d9-3bf7-42a0-aeee-45b24f630457",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "18c4d9eb-40b4-4897-b03d-26c00b717dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52bcc8e-2b2d-459c-b112-9d792643550e",
        "cursor": {
          "ref": "605bdeaf-c146-48f6-9263-bd532ada628f",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "559d34a7-6a43-453f-9499-9ebc445b69e6"
        },
        "item": {
          "id": "f52bcc8e-2b2d-459c-b112-9d792643550e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "85c181cc-fa49-4047-b04f-509282a16552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 816,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a2863f-6866-4163-bbc5-3c4496ad27e9",
        "cursor": {
          "ref": "febe0ecc-9ad0-4b37-9877-ad27399e86ff",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b61e8c5a-350e-4e88-8290-290837bc8f2a"
        },
        "item": {
          "id": "f0a2863f-6866-4163-bbc5-3c4496ad27e9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a2cb17d0-2381-41e5-a9fc-094e50509962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c35cfbb-d4f6-4077-ad7e-fa241198bacc",
        "cursor": {
          "ref": "c0f90e22-1659-4633-b945-558fdca93f84",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8bb729a1-d6b4-4841-83b6-2852d312ca29"
        },
        "item": {
          "id": "5c35cfbb-d4f6-4077-ad7e-fa241198bacc",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "418b0742-70d9-4c5b-b699-79a73f08f065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 819,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef199365-2716-4e8e-b5d6-5348d9176c2f",
        "cursor": {
          "ref": "29ea74ff-b69c-4e4c-92b3-b2d692814208",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8a20c0d9-b35b-4554-a3b6-38c35b28ba3c"
        },
        "item": {
          "id": "ef199365-2716-4e8e-b5d6-5348d9176c2f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "231e286f-58a9-4873-adc6-47451cadd22e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc7a0b3-c8b0-4470-84d4-65991c592805",
        "cursor": {
          "ref": "2749c854-40ba-4224-a595-8c068b604256",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "dd844e10-c7eb-4f49-a071-09358b79490f"
        },
        "item": {
          "id": "7cc7a0b3-c8b0-4470-84d4-65991c592805",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "61241bbe-c396-4ab0-b25d-ba1ece841cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 823,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25d62d4-0a6c-484c-8366-a6ed94aa405e",
        "cursor": {
          "ref": "05f5969e-f867-46a7-9bcb-47ed6154211c",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3775b959-b9f6-4473-ace3-65b18428e62a"
        },
        "item": {
          "id": "e25d62d4-0a6c-484c-8366-a6ed94aa405e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d5d1e46c-4f5a-4514-969f-35b35ffa75a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 806,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b787d57-9a94-4ddc-b957-1d431e737449",
        "cursor": {
          "ref": "681c756d-ebae-4370-94f7-f96d84ad6071",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9756ae98-f1cf-4178-bc1a-dc16c03f9477"
        },
        "item": {
          "id": "0b787d57-9a94-4ddc-b957-1d431e737449",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "32008473-f25e-4f69-a180-6883f75d4e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 826,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f9a4f8-3fb4-4caa-97c4-99d12734a713",
        "cursor": {
          "ref": "49912383-7273-4edf-9f4a-676ed5167e34",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "dbe7bbf4-9316-44aa-9e23-b1b9b7f8fcb7"
        },
        "item": {
          "id": "82f9a4f8-3fb4-4caa-97c4-99d12734a713",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d3060a14-095c-4652-bcdb-e7357a634337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f7acd8-9c6b-4aea-921f-e1c9435dba73",
        "cursor": {
          "ref": "c7b2dcb6-9cbe-4276-9062-3b39f26eef3f",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2a53a7f4-ebfc-4f05-b196-63dc2101a881"
        },
        "item": {
          "id": "95f7acd8-9c6b-4aea-921f-e1c9435dba73",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "20cdedcb-8329-45f1-98f3-33af48441160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "777b83b5-2275-4520-a2da-29ba1c5610a2",
        "cursor": {
          "ref": "2c602d26-ca04-4c57-a6b8-fdadab6167b0",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1de30605-2216-4b9a-99a6-55ffce87c173"
        },
        "item": {
          "id": "777b83b5-2275-4520-a2da-29ba1c5610a2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9c559e51-42d9-491c-8bf6-77ac5d2e2d3e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d453b7f0-a925-4cbe-9aa1-cf1b9435c7a0",
        "cursor": {
          "ref": "104ffc80-34e4-4162-a6b8-102cc056ea4e",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4c14e8b1-979e-4444-bea8-2c84159228ee"
        },
        "item": {
          "id": "d453b7f0-a925-4cbe-9aa1-cf1b9435c7a0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "36945a58-4c0b-47a0-b8b8-ea3e5be79e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea74c60-e0a9-4331-868f-f83b460581ca",
        "cursor": {
          "ref": "b15861f9-e3fa-438d-ba93-0d43604b7929",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c7907a7e-d69d-476c-bf13-a115b2d91951"
        },
        "item": {
          "id": "8ea74c60-e0a9-4331-868f-f83b460581ca",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4c6f47f2-2a5c-48d0-9f8b-996b4a56ba9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 801,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c9c767-6ab0-418f-98ed-1b4f785dc960",
        "cursor": {
          "ref": "7cd88a4d-725b-4c2d-9c98-3de85219d8a7",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f603d863-6870-4c06-a290-0533493431a0"
        },
        "item": {
          "id": "69c9c767-6ab0-418f-98ed-1b4f785dc960",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "da6a029f-3892-49a5-9d56-9a4acc7f7471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d771073f-7220-459d-b4be-30129d62a54f",
        "cursor": {
          "ref": "5a70468f-c3a6-483f-a5e3-02a1f5fa9793",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b9f0077a-9c7d-4514-a005-848f4b847e05"
        },
        "item": {
          "id": "d771073f-7220-459d-b4be-30129d62a54f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5e135600-59ab-4475-be66-4531fe03f9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5e0d70-66dc-48d5-8295-6c9a3bd2378b",
        "cursor": {
          "ref": "fecdb3d9-0c2b-43b2-8a39-70a3801bd806",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "27ebe648-e5eb-486c-8365-0e2f9bd2be10"
        },
        "item": {
          "id": "1b5e0d70-66dc-48d5-8295-6c9a3bd2378b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ead34a8c-246a-4d26-8218-f207d8bd0e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 776,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a16695-18c7-4180-839d-abf85ddc17d4",
        "cursor": {
          "ref": "67f99f31-a73e-43a7-bca4-6c62249e3bf2",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8a7232ad-2082-468e-bb18-e577ca03c2e8"
        },
        "item": {
          "id": "00a16695-18c7-4180-839d-abf85ddc17d4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6a826809-c98f-4234-b034-3bc20ea3bed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40fbbd71-3564-4f4c-9248-69f972ead262",
        "cursor": {
          "ref": "b0d7091f-4dd6-477a-81c0-d64d6af8cbe1",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fbd9f7a5-5678-425e-9806-2e9b596c3c70"
        },
        "item": {
          "id": "40fbbd71-3564-4f4c-9248-69f972ead262",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "be681b23-cce7-4511-9dd2-221fb315d5a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a7aa55-307f-4222-a259-506f4839cd6f",
        "cursor": {
          "ref": "5ede46cb-d382-47d8-8624-6f8be72c10af",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3a2a3b45-ed1b-4c3e-92a4-2c09582bd4ce"
        },
        "item": {
          "id": "b9a7aa55-307f-4222-a259-506f4839cd6f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0dc79314-0ea4-4402-a91b-6a7ff4d01112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9725f989-24ec-4850-97b1-843415d8f229",
        "cursor": {
          "ref": "fe4322d4-157e-47be-8cb5-34b381533960",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "40d01a6c-17f2-4f70-bf84-8f07aa883900"
        },
        "item": {
          "id": "9725f989-24ec-4850-97b1-843415d8f229",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3ac8898a-db09-4e16-afc5-7d0b05d66702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 796,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d461575-dd9f-4569-a72d-6edeba99be52",
        "cursor": {
          "ref": "a9a53040-1d81-4854-9016-104397c539c6",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ca040afc-81cd-41fe-8168-85c403db6332"
        },
        "item": {
          "id": "6d461575-dd9f-4569-a72d-6edeba99be52",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0038c7ae-79f9-4297-8d30-17565dd1b99e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 848,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eebb218-bc6d-49df-a08b-739f99b7233c",
        "cursor": {
          "ref": "293538ff-584f-49cf-b48f-0e323ba5fc07",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1b017775-e5d1-4d58-8f25-c3ab21db02e5"
        },
        "item": {
          "id": "2eebb218-bc6d-49df-a08b-739f99b7233c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f606a7f9-02b7-45ff-b056-4c7925ef673f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 871,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588466b0-6a6d-486a-8c4e-0caa1a92afc9",
        "cursor": {
          "ref": "564f2d57-2f50-48a5-94d1-fecb3067832f",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "02e89190-0ae2-47ae-86db-5b4b94c033ba"
        },
        "item": {
          "id": "588466b0-6a6d-486a-8c4e-0caa1a92afc9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6d1d309b-d0f1-4248-b03c-24bfce43e3a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 797,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2211b3-5391-49c7-a7be-55f81e1a1a83",
        "cursor": {
          "ref": "9b23ddc6-a950-41bf-8fd8-a155c95c9e6a",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f02c4e33-0dbc-47f3-886a-4fb0fc6c57b0"
        },
        "item": {
          "id": "5a2211b3-5391-49c7-a7be-55f81e1a1a83",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c399e4ea-303d-42d7-8196-655d07f4e807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 782,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39929a93-e3e0-4b81-af75-221748ef44b7",
        "cursor": {
          "ref": "0c274447-1d43-4c93-b5bb-48d1c41a0f9e",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1e5c94ac-2cb7-46dd-987b-7e92fef13d8f"
        },
        "item": {
          "id": "39929a93-e3e0-4b81-af75-221748ef44b7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e81cdcdd-4ddb-497e-b90c-e27b5444571e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9dff53a-edad-4976-9693-2ebf7ab2618d",
        "cursor": {
          "ref": "839080b3-6d59-4edb-9dff-59c67569a659",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "82dcbfd1-ef4f-4b96-a5e1-1b7f779b636e"
        },
        "item": {
          "id": "d9dff53a-edad-4976-9693-2ebf7ab2618d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d909b227-0bfb-44c8-a61f-919db2362da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa0be1d-1d4d-4cd6-92f4-ed416b50bbf3",
        "cursor": {
          "ref": "a521b8c3-2806-48bb-92bc-1aab44c02231",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "93616abb-c5ea-40ab-bed0-35fc9c1640f6"
        },
        "item": {
          "id": "eaa0be1d-1d4d-4cd6-92f4-ed416b50bbf3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bf120135-92cb-46ec-8907-c1d2364f070b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 782,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8ab31e-8030-45cf-bb55-70c504d9cc35",
        "cursor": {
          "ref": "5fe86f3f-a927-4e40-99dd-3c17d410df88",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f140036e-d16d-4a2a-a321-09e9c7e40339"
        },
        "item": {
          "id": "eb8ab31e-8030-45cf-bb55-70c504d9cc35",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "94ad52da-020a-4627-857d-ffae7f29a9d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 814,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e32326-d962-473c-8791-331001c5d2e7",
        "cursor": {
          "ref": "1fdaf81f-05ae-43ad-8384-c6a6d1c0fd02",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "105d4d3e-f53b-4bc3-bde2-18a085ca9fea"
        },
        "item": {
          "id": "d1e32326-d962-473c-8791-331001c5d2e7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "03cea5f4-8966-4564-a6ab-fb1105bab129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a948792-0189-4793-b58f-7231adf35fed",
        "cursor": {
          "ref": "fd746ff8-882f-48a9-a32e-1e4c4fc90479",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "bf8136d5-ea2d-4d35-a039-9e35de548112"
        },
        "item": {
          "id": "1a948792-0189-4793-b58f-7231adf35fed",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "80af28db-56f5-4a3e-a0f0-439bf6652019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 789,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010d1d53-6682-491e-bb3c-989adf70a0b9",
        "cursor": {
          "ref": "a21d2403-bdc2-4591-83f0-91e5c5dd8053",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a0b492e0-8dff-43fc-8c8c-ab74e96017f0"
        },
        "item": {
          "id": "010d1d53-6682-491e-bb3c-989adf70a0b9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9827d468-5d16-4694-8beb-bb85e10ffac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72897c59-c4ff-4925-b5c8-ae1afd1ff39b",
        "cursor": {
          "ref": "dafa2e60-af40-4189-9fc0-03976747c602",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "245785a4-4869-454d-a2a8-0cdb295fa2e0"
        },
        "item": {
          "id": "72897c59-c4ff-4925-b5c8-ae1afd1ff39b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "10715262-f830-429d-8abf-01e7eae07da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 796,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98369056-de76-4b8b-bf6e-342f22363580",
        "cursor": {
          "ref": "f93ac32b-82e3-4a9f-96f8-09c41bf92f69",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5fc475c4-9044-49db-bf41-0e8d23dd79c5"
        },
        "item": {
          "id": "98369056-de76-4b8b-bf6e-342f22363580",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6cfd2157-4590-41c2-bd5b-d4f854efc120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 799,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6352c32-0799-4957-9935-e3b156de15bb",
        "cursor": {
          "ref": "8b352d0d-0daa-4df9-929d-1e5156d986bf",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "aa9db481-7dd5-441b-bbb4-f1199cc7aa06"
        },
        "item": {
          "id": "d6352c32-0799-4957-9935-e3b156de15bb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c0bffc31-71e8-4ac0-8c95-8a6beb55eabe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 818,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec4d989-9785-4427-8dac-2cb289dc15fc",
        "cursor": {
          "ref": "25796480-3edd-44b3-8305-901a3061ddea",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "84dfcf4a-1121-47b4-8c14-2a78a1a424f3"
        },
        "item": {
          "id": "7ec4d989-9785-4427-8dac-2cb289dc15fc",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a8576cc8-cda6-44b0-bd3e-a5348b4a30cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 790,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2da311-94de-4ade-b57e-6677de256a64",
        "cursor": {
          "ref": "ab6972cb-8520-4444-9ea3-441ed05d10a9",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "252816e1-1bde-41e5-98de-60b5b4ff269f"
        },
        "item": {
          "id": "1e2da311-94de-4ade-b57e-6677de256a64",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "80125104-b9ec-4338-8189-2ca567ec4ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382b45fc-33f7-49e4-83a3-a1daa5933a8b",
        "cursor": {
          "ref": "d6f3b2f4-b7ec-4f07-b9ec-ad886e549424",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "00262622-2560-4fca-8a1c-d1a057051e71"
        },
        "item": {
          "id": "382b45fc-33f7-49e4-83a3-a1daa5933a8b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "51989608-fc47-42e7-baf0-3483e85b69e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 798,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe4f7a8-0ad7-442b-b5e1-14ee07f529a8",
        "cursor": {
          "ref": "7ebdac24-6b3d-480f-82a7-0927d8f62117",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a02689e8-5aba-4b19-b134-cd6d8e0d778f"
        },
        "item": {
          "id": "0fe4f7a8-0ad7-442b-b5e1-14ee07f529a8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "64d7812a-a91e-4230-89e2-242b8fa050f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 810,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97678be-01b9-40f2-9bd5-1c47be7348b8",
        "cursor": {
          "ref": "ea273be6-dd33-4bcc-b164-243dcc4ac21a",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "458fc50d-6965-4f00-a150-bbd4e495694b"
        },
        "item": {
          "id": "c97678be-01b9-40f2-9bd5-1c47be7348b8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "643975d4-a45d-4849-93ae-2d404b94cb1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 847,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6dea41-4ee0-40c8-a14a-11236d86e58f",
        "cursor": {
          "ref": "2bbbe5c7-aab2-4dc8-ad4a-15f0b6cc7bae",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "146cede2-c03c-419d-bc04-e6ce9cecad24"
        },
        "item": {
          "id": "ac6dea41-4ee0-40c8-a14a-11236d86e58f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "480faa1a-1937-4608-b4fd-0227731b778b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2021674c-4dc9-47d0-99cf-084329084cc6",
        "cursor": {
          "ref": "c183aeda-e131-497b-9a76-d74c08d8073a",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "af01329f-f952-42e4-85eb-3dca8cbd38ad"
        },
        "item": {
          "id": "2021674c-4dc9-47d0-99cf-084329084cc6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cf5911a5-4b8e-4791-aa7b-cc5bbbe7583b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 848,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b812cd66-1cd4-4f17-a164-f7e7cb3f2df5",
        "cursor": {
          "ref": "d02de002-5a92-4220-9964-141c7d05fb27",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0a88203c-20f2-4071-afbe-9e48e7916d7a"
        },
        "item": {
          "id": "b812cd66-1cd4-4f17-a164-f7e7cb3f2df5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "af59ee9c-b454-4ea2-816a-6af16d419c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 841,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65800abf-e2fd-4127-9c33-0ea0a4abd7c9",
        "cursor": {
          "ref": "d843cae9-9d88-4c45-8343-e19b1c497362",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f21e61d8-e929-4ee8-9f5e-a7745a0883ce"
        },
        "item": {
          "id": "65800abf-e2fd-4127-9c33-0ea0a4abd7c9",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "63f77dde-3797-4326-b514-6efad030e91d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 797,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b400ed33-4197-470d-a1c3-674d8d229d62",
        "cursor": {
          "ref": "4cd50353-85c5-4931-b106-92280541083e",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0c18c43c-a13e-4bd3-988a-ed8919611a17"
        },
        "item": {
          "id": "b400ed33-4197-470d-a1c3-674d8d229d62",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "9f43eb2a-b31b-4e42-9def-d7d9213c0f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 806,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46011345-f955-4b48-aa33-3fe735dd7525",
        "cursor": {
          "ref": "61776ba1-5742-4ecb-9a4e-3466bc823c9c",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "21f9bf70-2544-4a76-931b-1c9ca04a4170"
        },
        "item": {
          "id": "46011345-f955-4b48-aa33-3fe735dd7525",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "09633a99-89eb-4645-b206-fab07712adc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8e4438-f144-41b7-aa24-fdde6cd7ee88",
        "cursor": {
          "ref": "22e24372-af3e-49a5-bc67-617a10da3b86",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "96f4cc6b-1487-44f5-9d72-7881845d3685"
        },
        "item": {
          "id": "9a8e4438-f144-41b7-aa24-fdde6cd7ee88",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0c086601-bb62-432e-b637-268ee4d44517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 862,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07adca14-d7da-45dd-9bc1-b9a66b921fe3",
        "cursor": {
          "ref": "bae1964b-0ba4-4bf0-b735-e0a942231077",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "775b97e5-1d8f-42f9-a266-23dc477b27f0"
        },
        "item": {
          "id": "07adca14-d7da-45dd-9bc1-b9a66b921fe3",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "c176b459-67c6-4bf6-9666-40583cea23e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14cd7a3f-784f-4fc6-a904-cb42ab60bd50",
        "cursor": {
          "ref": "1b68eba8-b57c-4a0e-bc19-dee5cd0d7e70",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7367c0ef-a648-42d1-aaf9-ba20837081d9"
        },
        "item": {
          "id": "14cd7a3f-784f-4fc6-a904-cb42ab60bd50",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ea73c26e-8e67-47cf-b2b1-f55a964f3d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 804,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa47f11f-9f1a-40c4-b36a-56e102ba9393",
        "cursor": {
          "ref": "ff75b23a-63c3-4b3c-91f0-3402825adac1",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "31598824-950f-4319-91fb-5a0bec400c31"
        },
        "item": {
          "id": "aa47f11f-9f1a-40c4-b36a-56e102ba9393",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "744cfd1a-8548-4c79-9cc1-858b95ad34aa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ab82c5-bab3-47ce-929c-7b6c72dd8834",
        "cursor": {
          "ref": "a89ee538-1250-4466-bf16-8ffe52ddf8ee",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "66cbbfa8-6acf-4498-b47f-0957882e5124"
        },
        "item": {
          "id": "64ab82c5-bab3-47ce-929c-7b6c72dd8834",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "81451479-ce6c-4240-8046-f008e334baa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b9daa3-2c81-4618-9ecc-c6341db3cd46",
        "cursor": {
          "ref": "bf4524b7-c76f-4cd9-ad5a-8b36e73b18a5",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "bb217513-7cfc-45ba-8e01-14106948fc25"
        },
        "item": {
          "id": "a8b9daa3-2c81-4618-9ecc-c6341db3cd46",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3fa2d87c-5591-46bb-ad9a-d85ed1fdb49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5161db55-b67e-4d4f-968e-498f17c1d1c3",
        "cursor": {
          "ref": "c1a24d4d-051f-4c3e-8557-54ee90518eeb",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1512eae5-966b-443c-b4a9-7b70540b2bf4"
        },
        "item": {
          "id": "5161db55-b67e-4d4f-968e-498f17c1d1c3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "27ebbab3-01d3-40c4-83e8-9fdd95d19e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10cbf4e7-878c-48d8-a17a-8c0c7ee0a871",
        "cursor": {
          "ref": "00dedb38-fb61-4394-94a8-7a0165844d0e",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f5efb090-9651-4a19-967a-9969486295ef"
        },
        "item": {
          "id": "10cbf4e7-878c-48d8-a17a-8c0c7ee0a871",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0a8b41b8-c26b-4898-9697-e3aec4098faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf45846-f9c9-44e0-8af9-7f11dcbef490",
        "cursor": {
          "ref": "c53c76c9-546b-4f4e-a09f-6f6831ef2526",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ce5036e6-84dc-48db-aaed-3a0cda8fa306"
        },
        "item": {
          "id": "8cf45846-f9c9-44e0-8af9-7f11dcbef490",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "19dc0a8b-56c0-47fe-88b2-3c8a42b9205f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f5805b-8747-4c9d-b699-a58ec6351c96",
        "cursor": {
          "ref": "36b17a5a-7ebb-46b6-8eae-5f5499790cbb",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "cc0b4818-037d-40ca-95a3-6511b3e9416b"
        },
        "item": {
          "id": "77f5805b-8747-4c9d-b699-a58ec6351c96",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a12dd6f3-e338-44ea-8acf-ef1bd34a2fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5e17ee-9cd9-4bd9-a332-92df2cdd2989",
        "cursor": {
          "ref": "8a8fee4e-c9b4-4d64-9798-fbdf8b64bbb7",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "625846cd-1a71-4193-b574-e6cf02f8ad0a"
        },
        "item": {
          "id": "3a5e17ee-9cd9-4bd9-a332-92df2cdd2989",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4497c381-6cb6-4b60-9d94-1c96aa5981ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb92d7b7-a7cc-47bf-8889-ca2921220718",
        "cursor": {
          "ref": "232e2a4b-436f-48d1-b7d4-e6b1b9aa7147",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5b3ea2ce-2970-4a01-a0f7-470985399d50"
        },
        "item": {
          "id": "fb92d7b7-a7cc-47bf-8889-ca2921220718",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b0bdd36b-6912-4d4a-9c21-ccb7e4bf0442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3e9f14-c8cc-4f0a-a9ee-759911800361",
        "cursor": {
          "ref": "d7e1d3e5-22b0-441a-b8fe-a29ce9a6b638",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5762558a-a541-4d81-b148-2f8be514f1b1"
        },
        "item": {
          "id": "7b3e9f14-c8cc-4f0a-a9ee-759911800361",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ce84c0ee-4c6a-41ab-a2ae-22f853905310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44cc10d4-e042-49ca-8a2b-4c3c8b8ac5a0",
        "cursor": {
          "ref": "03f8fbaf-da3c-4aa7-a36d-30a28f443971",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d3a0544b-c819-48ad-b47e-499cfa3b28db"
        },
        "item": {
          "id": "44cc10d4-e042-49ca-8a2b-4c3c8b8ac5a0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4103f6ec-0a4c-4b9f-8661-5847e8a8deaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbde6d3f-b694-488c-994f-b7069680fa6a",
        "cursor": {
          "ref": "df10701e-5c14-4203-b95b-ff444658a8d4",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "04ff5be4-f4a7-4b8c-ac79-8f95e6fba433"
        },
        "item": {
          "id": "bbde6d3f-b694-488c-994f-b7069680fa6a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c0513067-1feb-429b-9167-f5416a9b1b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9562a6b-5f44-4585-87c1-19a9b0d40cab",
        "cursor": {
          "ref": "4cda554f-1a87-4f93-a41d-9ad5f92fb3de",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b6f7dd57-f54e-4bcf-84f9-3886f6b42e58"
        },
        "item": {
          "id": "a9562a6b-5f44-4585-87c1-19a9b0d40cab",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0eeb8c42-932c-4a24-94f9-6a213b72f9a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2938ff7-f47b-4e03-9fd2-6b54e0a5e7c3",
        "cursor": {
          "ref": "60defe8b-d42f-44ee-9c0b-1fb55b47b3fe",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c45e04d9-f160-42ef-9231-3168217a86ad"
        },
        "item": {
          "id": "e2938ff7-f47b-4e03-9fd2-6b54e0a5e7c3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "be2a2853-bd49-42f4-9e6c-a66f0cdebd96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e14d57d-096c-473c-a19b-1ba7cc516d3c",
        "cursor": {
          "ref": "f5c72d0b-1925-4212-ba22-3b464c203531",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "940e7c11-28f5-4539-b1e0-c02536b3d1d0"
        },
        "item": {
          "id": "7e14d57d-096c-473c-a19b-1ba7cc516d3c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1df652b1-a36f-4efe-baae-d14b2356f91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a353a89a-c3c0-41dc-a475-eb10b9e2c718",
        "cursor": {
          "ref": "8c4bdd94-6242-486a-826e-e1f407818e55",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b8a67908-972a-4942-a6c2-4e6a94eeba98"
        },
        "item": {
          "id": "a353a89a-c3c0-41dc-a475-eb10b9e2c718",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1679e01b-0d6a-4945-a22a-83d253190e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57fae66-0c50-40c0-96fc-c8c7f24f83bf",
        "cursor": {
          "ref": "9c2a90ec-3e0b-4b1c-afb1-1711fd01b505",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "433d86ce-8eca-44f4-bf7e-b890bdf9176f"
        },
        "item": {
          "id": "e57fae66-0c50-40c0-96fc-c8c7f24f83bf",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4342566d-4213-4ddd-8472-ba390e321f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ec9f8e-56e7-463d-bbef-7801f696ec35",
        "cursor": {
          "ref": "1c5921aa-1333-436b-b8a0-215c4a8b9acf",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c7564339-8a62-4a8d-b377-de478b93b814"
        },
        "item": {
          "id": "96ec9f8e-56e7-463d-bbef-7801f696ec35",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "16e2f21e-998f-42b2-8ae4-487c0706e561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11ee0bc-7e0e-44f4-ada2-10d4c756e104",
        "cursor": {
          "ref": "a75d0f98-1d87-4a55-a84d-00792b313392",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a76be957-1857-4e12-a38e-703c07ef036d"
        },
        "item": {
          "id": "b11ee0bc-7e0e-44f4-ada2-10d4c756e104",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d66f2a66-f2f5-45ca-ba1b-53844abdb130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4f9f12-12c2-456e-86ba-508d118edb50",
        "cursor": {
          "ref": "ab744034-8957-4e21-b1c7-8cabb57eafd1",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6347ea4c-6595-4675-9078-6019aeba5740"
        },
        "item": {
          "id": "af4f9f12-12c2-456e-86ba-508d118edb50",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "66d31ef7-6ef2-4956-abae-f783c3c2643a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09416d0-faf8-4e8b-8ae2-a48d85adb783",
        "cursor": {
          "ref": "8f6cdf61-7acb-495c-b25f-20ffc6a3503c",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "cfa2d5ca-8a01-44fb-b18d-8c947185fd65"
        },
        "item": {
          "id": "c09416d0-faf8-4e8b-8ae2-a48d85adb783",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ec78d0ef-b249-414f-a142-cdc1353c7d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f6d897-313d-4e15-b56c-afe0bff6e131",
        "cursor": {
          "ref": "f260b812-f8af-41b8-8fe3-33a994832b22",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b85ed3f6-659f-4a48-9287-0c8b3a80879a"
        },
        "item": {
          "id": "81f6d897-313d-4e15-b56c-afe0bff6e131",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ee2232e4-e250-4256-84d8-ad338ec2b2e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e975be-d5a2-4baf-9319-21c0cac59707",
        "cursor": {
          "ref": "78c9c933-b2aa-47dd-a849-77995f08f0ea",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "cc474854-5f54-45e6-890e-4f1f63ea3d76"
        },
        "item": {
          "id": "a5e975be-d5a2-4baf-9319-21c0cac59707",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d7a830b9-e43a-46c1-b916-5992c3c8d2f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b84873-c020-47d4-a6c9-724e6163a767",
        "cursor": {
          "ref": "be0a5311-9104-49ff-9c2c-cfd4efe19548",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7adfc793-5ec8-4e80-9949-29ce4a3a934f"
        },
        "item": {
          "id": "11b84873-c020-47d4-a6c9-724e6163a767",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3ff9bf42-3bd0-434c-ae80-b5a788b9bbf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1141028f-a533-4f1d-8ed1-27129bb6bbb5",
        "cursor": {
          "ref": "c7a2616f-1d2a-4df8-8b58-9038c2616e7d",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "09e108b7-0772-440e-bbd8-58258516d1e9"
        },
        "item": {
          "id": "1141028f-a533-4f1d-8ed1-27129bb6bbb5",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d1baeda9-d264-428b-abe0-5ad464bd4528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635c33ee-1794-477c-a38c-2f1c3b2a41ee",
        "cursor": {
          "ref": "8b8c2528-85b6-43a6-99bc-449a40c197cb",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e63c282c-efbf-46d8-bed4-be184a11a2b4"
        },
        "item": {
          "id": "635c33ee-1794-477c-a38c-2f1c3b2a41ee",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6142cb7f-5e7d-4d68-bc8b-039d1e6abe2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c0b5af-f30a-4ea4-968a-5752ba2a553b",
        "cursor": {
          "ref": "8698039c-eb74-478f-8df5-4180f3fef33d",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "fb0044f2-1845-4319-9ef6-06a68403f6b6"
        },
        "item": {
          "id": "51c0b5af-f30a-4ea4-968a-5752ba2a553b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5f97c9ec-2244-4049-baae-a2f3b2d8b86b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2727e5d5-e903-4bdc-ac5e-b295e6a617d0",
        "cursor": {
          "ref": "c76265ec-1222-451e-9cc0-d86937edf4e6",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e1835c79-2cbe-45a5-816e-c97de2b0d872"
        },
        "item": {
          "id": "2727e5d5-e903-4bdc-ac5e-b295e6a617d0",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3fc528e2-4057-4271-87b4-e159ab0e73b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801336a8-6ddc-411b-a698-3a53e1a3a25b",
        "cursor": {
          "ref": "0fc60876-48b3-4e18-affa-00326a52b66d",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4a59c4ec-8870-486c-bc1b-8537e1a0829c"
        },
        "item": {
          "id": "801336a8-6ddc-411b-a698-3a53e1a3a25b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2c4a6138-9631-4163-acf2-139807a8b4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04efd8c-0120-4748-905d-d85fa723d638",
        "cursor": {
          "ref": "1f627f3b-ab7a-499e-be72-3246395ac07b",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d692e142-5ec1-4249-9ce6-f8cfe3c0004d"
        },
        "item": {
          "id": "d04efd8c-0120-4748-905d-d85fa723d638",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5f76fd27-b904-41f9-9bd2-dc7a9fada385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203dc9f5-7e99-47b6-9bab-b0a74578c40d",
        "cursor": {
          "ref": "1b7ce60b-4ddc-42e6-b694-1e60936daba4",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9f3b0ef4-3c5b-44af-bf32-69b8740a485e"
        },
        "item": {
          "id": "203dc9f5-7e99-47b6-9bab-b0a74578c40d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5921308a-6041-4331-8a93-f0a7467029f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f093a4e5-be23-4f4d-a2e9-5787f96d66da",
        "cursor": {
          "ref": "37aa8eb5-21b7-4a4d-8aa3-a64c5453ef33",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "987955d4-789a-4132-88ba-afe3309a21c0"
        },
        "item": {
          "id": "f093a4e5-be23-4f4d-a2e9-5787f96d66da",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2a60902f-38b9-4927-a8e6-ea4ed792030c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43982bdf-bd7c-4986-80a9-fac3cb7e1932",
        "cursor": {
          "ref": "0a817444-6b93-4725-b2a6-6aa5356b392b",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "96a0815f-de20-4398-8e01-21f2ec0cc937"
        },
        "item": {
          "id": "43982bdf-bd7c-4986-80a9-fac3cb7e1932",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b771de25-676d-4a4e-bf83-4752a509c0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe78e40-e24c-469b-8d3f-5ed23a1c98a7",
        "cursor": {
          "ref": "2cc475d7-0bde-4766-b846-b06237545a5a",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b99280e7-ddfd-43da-be3e-9ceaef892500"
        },
        "item": {
          "id": "6fe78e40-e24c-469b-8d3f-5ed23a1c98a7",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b79640d5-caf4-407a-a625-1699483a1c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e8eeba-389f-462d-a4ac-6b1c66344f44",
        "cursor": {
          "ref": "874d1498-11e0-4a66-ad22-87968a47ebd2",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "789e5753-1008-455a-9f00-0e70e24aabfe"
        },
        "item": {
          "id": "24e8eeba-389f-462d-a4ac-6b1c66344f44",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "abe713b2-f716-410b-8e8f-04ac22089903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f3d508-f06a-4d7f-8d3c-e3cc2222f668",
        "cursor": {
          "ref": "ee8e740c-f6a0-428d-aed4-130c5ccd3375",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7541d4d6-0f14-4840-aae0-85719068983b"
        },
        "item": {
          "id": "c4f3d508-f06a-4d7f-8d3c-e3cc2222f668",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3052e7ea-26dc-416a-ae25-0c468e7ea8b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93534d4b-2e25-4677-8d28-f08431ebc0de",
        "cursor": {
          "ref": "3530822a-71c5-49e2-ba68-d60b42019485",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "67c4c093-f4a2-4958-8db3-67bec4e505c0"
        },
        "item": {
          "id": "93534d4b-2e25-4677-8d28-f08431ebc0de",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a5258952-f28d-4662-b115-1cda57c0cd66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15d4184-6b48-43a3-b063-7b86e0b62738",
        "cursor": {
          "ref": "e1ffb8d1-20a8-44db-b173-00a0cd808a48",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "eb3026ec-1190-48ba-9e2e-66c327be7fbc"
        },
        "item": {
          "id": "d15d4184-6b48-43a3-b063-7b86e0b62738",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0e42bfea-93e4-450f-866f-640befb0d1a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dde186e-aa77-473e-920c-ab3f4d535e57",
        "cursor": {
          "ref": "d6edaf4c-14ba-4c56-9c04-9d31ff3d6330",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "99dbf2b4-dd07-49b7-af15-75e22c7e29d7"
        },
        "item": {
          "id": "3dde186e-aa77-473e-920c-ab3f4d535e57",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "22fb9eb3-b5e3-498c-9c71-c886fe9f6701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd08d99-3a75-4035-8ac7-89ffa72eb398",
        "cursor": {
          "ref": "06e5778e-be49-44df-a8b0-6c83596dda0e",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "fb5faf86-83fd-4bcb-9178-1bf056796406"
        },
        "item": {
          "id": "5cd08d99-3a75-4035-8ac7-89ffa72eb398",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "89b402c8-d2e4-4893-8407-0d743299a8d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0c8ce4-92d0-4c04-ab5b-861903db64f6",
        "cursor": {
          "ref": "bf2de924-795c-4ee4-9c4c-94f4e137c36c",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6c6da71a-1b58-47f8-a53f-e94369232f99"
        },
        "item": {
          "id": "bd0c8ce4-92d0-4c04-ab5b-861903db64f6",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7132822a-d48b-4874-b57e-812e5bdb6b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19987cb-ce80-48ca-a10f-8fd0e315a5bd",
        "cursor": {
          "ref": "886ad822-1bb5-4ba1-a191-4c891914e419",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "61e86560-7398-46d0-ba00-3d7afcaad981"
        },
        "item": {
          "id": "e19987cb-ce80-48ca-a10f-8fd0e315a5bd",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5653a3f8-8622-4ef3-960e-fc8ebaf8f076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13319334-06b8-4ad4-917d-977b9af546cd",
        "cursor": {
          "ref": "e3a6d1e8-18a1-4e54-91bb-22a0e25c27ce",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6e780e94-0c7e-4627-9d89-6467a6193009"
        },
        "item": {
          "id": "13319334-06b8-4ad4-917d-977b9af546cd",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6c894d29-b5ae-40f3-8cd8-d8285014f62c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53fbfb8-7978-4873-820e-3624abbd728f",
        "cursor": {
          "ref": "3b60fedd-48e4-4c3a-80be-fc1c63c38193",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "155a7cef-e9d4-481f-8796-1c3e7a484571"
        },
        "item": {
          "id": "f53fbfb8-7978-4873-820e-3624abbd728f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "102a2cbf-ff02-4de1-89fa-c66985ffee10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26714224-e1d6-4c07-8ac9-6cc156a2e01f",
        "cursor": {
          "ref": "266880af-7a4b-457e-8d16-dca0da7e666c",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "12e82fad-730a-4fef-aef4-59f59b8f902a"
        },
        "item": {
          "id": "26714224-e1d6-4c07-8ac9-6cc156a2e01f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0e7f0a80-9ca7-4b38-9af9-117209b52ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5bd1ca-a868-4288-8aee-381ed269c06f",
        "cursor": {
          "ref": "3482b120-eaec-4cb9-9f92-3ec7adef6272",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3b2a460b-379c-4f45-87f2-ffb7a55de623"
        },
        "item": {
          "id": "8a5bd1ca-a868-4288-8aee-381ed269c06f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f60ef097-3996-43b7-b077-6efbb2386ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001b74a8-dfaf-4b86-b025-c501ce09cfa1",
        "cursor": {
          "ref": "9327b2ac-134a-4b77-a3c5-6fcd7fbce808",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fe64a880-5074-4e56-8675-bf2ae61d7cc1"
        },
        "item": {
          "id": "001b74a8-dfaf-4b86-b025-c501ce09cfa1",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "88897237-1bce-4958-b997-79f263ecfe97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6b8abc-2634-44a0-baf4-ca3eaa1b1045",
        "cursor": {
          "ref": "c166feb3-a3ef-40ef-804a-6b456f52e939",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2bbdf38b-7bbd-4057-bd63-0a3845dc366f"
        },
        "item": {
          "id": "9f6b8abc-2634-44a0-baf4-ca3eaa1b1045",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "87a15e4b-7f7b-41cb-864d-375ee9b91e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3ae3f7-bd2e-4bae-abac-6cfe824c9bb1",
        "cursor": {
          "ref": "0424a9cf-4882-4924-bba1-9e3f14793e58",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "cc3fe581-11f5-4eb8-970e-2ff7fd174664"
        },
        "item": {
          "id": "9f3ae3f7-bd2e-4bae-abac-6cfe824c9bb1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b91e0385-5696-46c8-bbb0-f48cf81d60b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2182c5-4ebe-40cc-acfb-f441647c8f9d",
        "cursor": {
          "ref": "56a3f6ab-210d-41de-bf38-c2a83697d6db",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7e439313-4775-4b50-acb7-3e75f2ce444a"
        },
        "item": {
          "id": "9b2182c5-4ebe-40cc-acfb-f441647c8f9d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bfd9fe07-18ae-453a-82d1-46a310c9e5cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9788b579-8e10-491c-82e3-f12b4744c3c7",
        "cursor": {
          "ref": "e5eb9c1e-d7db-46d0-b07c-a821f0d025b6",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "7a1d744c-60cf-4ca0-bbce-5654c7ae0457"
        },
        "item": {
          "id": "9788b579-8e10-491c-82e3-f12b4744c3c7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b44f7804-50bf-48ea-8a31-84c984437669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473e8d58-ece4-4534-94a0-bd44877862d3",
        "cursor": {
          "ref": "0501fca3-a55a-42c8-a2b9-15808402808f",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "801098ab-a051-4465-ac31-4e9d6d93b18a"
        },
        "item": {
          "id": "473e8d58-ece4-4534-94a0-bd44877862d3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1e4b0fbc-f32d-49b7-aa62-7b19f1aacbe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a17b6c-172f-4b9c-883c-68f8e63dc199",
        "cursor": {
          "ref": "f3cfb52c-ec50-483d-9725-dac8a3965a2b",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0a243f5a-d2a1-4bd2-bc27-0d99db0f3fea"
        },
        "item": {
          "id": "e8a17b6c-172f-4b9c-883c-68f8e63dc199",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "30c8f794-d38b-4649-afda-d8377b46e792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6950d288-c7f3-4431-abec-4c40635c1685",
        "cursor": {
          "ref": "b5e68b74-0591-4a91-9584-4a28b0515a0c",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "fe279d8d-7d96-4ae6-8b3a-388e1cf13b97"
        },
        "item": {
          "id": "6950d288-c7f3-4431-abec-4c40635c1685",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b0687fd3-7007-47e1-9595-4e7414ca038c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79692f59-2246-4b64-92d5-e829ab07400c",
        "cursor": {
          "ref": "2719e2a8-c839-49a3-b9fe-fe5163bacd16",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "135fb1c5-d7d2-483f-8948-115b29f4bbeb"
        },
        "item": {
          "id": "79692f59-2246-4b64-92d5-e829ab07400c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "faf3282c-144c-49d7-ac2c-3cd468a43e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e52a3b-c7f8-4b1e-a1bb-1980f36085ab",
        "cursor": {
          "ref": "5937553c-f291-4381-88ac-99f2b305f089",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "522e43f7-325c-4d76-a31a-828d84446fcd"
        },
        "item": {
          "id": "a6e52a3b-c7f8-4b1e-a1bb-1980f36085ab",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "310bf1b8-2b99-4f63-8f37-371eae7f782e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd615873-6feb-494e-a1a3-df54fff43923",
        "cursor": {
          "ref": "529150ce-1a36-4902-9e04-51d7468c411d",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "802e81b9-003e-495f-ae70-556e1e564a9e"
        },
        "item": {
          "id": "bd615873-6feb-494e-a1a3-df54fff43923",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "92cc6845-a4d0-453d-a5a2-e732ab2ea851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7e76f6-383f-416d-979b-fa5a41648a82",
        "cursor": {
          "ref": "919a9853-1643-482c-9760-a807569d2bac",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f29ffff4-c0b4-40df-998c-15bc237a352b"
        },
        "item": {
          "id": "5c7e76f6-383f-416d-979b-fa5a41648a82",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "af68ea67-981b-4df4-8366-bab1feb553e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed948f23-94f9-497b-8f74-826b5ae5508e",
        "cursor": {
          "ref": "93f46950-826c-4bcd-90fc-4e3a8c0843cd",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d93875d8-8698-4096-bcf5-530c46be24a4"
        },
        "item": {
          "id": "ed948f23-94f9-497b-8f74-826b5ae5508e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c3e43eda-79a6-487c-84f6-0ef632f9542a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c92135-657d-4b9d-b9d4-b74b284cecf6",
        "cursor": {
          "ref": "70e8a06f-b7f6-4f4f-87bd-387a6657bb52",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "94d02255-85a1-410f-acfb-23f1bf7d3b38"
        },
        "item": {
          "id": "e9c92135-657d-4b9d-b9d4-b74b284cecf6",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "15248a04-6592-4719-9068-acb63dcaf148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570fc5b1-a60f-454e-bdd4-60a81aa38b46",
        "cursor": {
          "ref": "ff66e7c4-f078-47cf-8e7e-7f913f93f17a",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2a7abe66-7f73-409f-982a-cb08a81af380"
        },
        "item": {
          "id": "570fc5b1-a60f-454e-bdd4-60a81aa38b46",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c5917bf3-80f0-4dbf-a67e-67e09ad9937c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da63967-326d-43d6-93b2-cd8c975c460e",
        "cursor": {
          "ref": "5bbe3bc4-59a6-44e8-a86c-fa8f9900933d",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c3152c49-006b-4b37-96fb-1a1598a8aa64"
        },
        "item": {
          "id": "2da63967-326d-43d6-93b2-cd8c975c460e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "da68a20e-c477-4d7b-bf19-fac936eab778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23299a85-6a37-4a63-9042-073734e7b99a",
        "cursor": {
          "ref": "8816c47f-2b89-487e-a09b-3fdf40021f99",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f18d958e-fbc8-4139-b8f7-e62df714dce0"
        },
        "item": {
          "id": "23299a85-6a37-4a63-9042-073734e7b99a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "665aa099-a221-40bc-9982-42ebe9806438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018caf69-ed80-4d57-9fd7-ae70b084a1e5",
        "cursor": {
          "ref": "d6187124-4dd8-44ea-a098-77585328f617",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2ce5e04b-8fc4-4f02-bbc7-ef5a06c0106c"
        },
        "item": {
          "id": "018caf69-ed80-4d57-9fd7-ae70b084a1e5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "fe844be0-0376-4241-9bdf-544178597a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a5ce74-adaf-4495-8a02-a9c505160e05",
        "cursor": {
          "ref": "a57bde9f-9e45-4158-8454-e4f1927c2bcf",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6166a519-041d-4aa0-887c-704168eec8a8"
        },
        "item": {
          "id": "e1a5ce74-adaf-4495-8a02-a9c505160e05",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0fd39106-b8c9-4999-954c-1857e3a14a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae4c20d-d08a-44f4-8639-9edba4debd0f",
        "cursor": {
          "ref": "5ef84883-8e32-48a7-8c47-eb24ceb054ea",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "263de129-6112-4137-8d46-584d83d49656"
        },
        "item": {
          "id": "8ae4c20d-d08a-44f4-8639-9edba4debd0f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7bcdb5d3-0e56-4d34-b6b9-a9432679d34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f41d52-b98d-4db5-a7b4-60d3b7aa4acd",
        "cursor": {
          "ref": "70219237-99a6-4b95-ac14-a1d2cf99e60c",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ffd0c4f1-8158-44e2-a15d-e5c9f28e24ea"
        },
        "item": {
          "id": "f6f41d52-b98d-4db5-a7b4-60d3b7aa4acd",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "9cacc70d-3606-414e-a847-4dc4d3cfac53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ffe6e60-09c1-4690-98f8-fd0837313f09",
        "cursor": {
          "ref": "7c96312a-bd69-4ff9-8a2f-13fe47fed9f1",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "26780648-13c8-40ec-9bdd-51c37932c9fc"
        },
        "item": {
          "id": "8ffe6e60-09c1-4690-98f8-fd0837313f09",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0fb0a827-018c-4c9f-aea6-86b8b305ecde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65a65df-b166-4cf6-9f95-be29d48d3b0a",
        "cursor": {
          "ref": "874836d8-fe0a-4c36-b689-84a06c804407",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c00af510-eb3b-4f6f-9fd1-445cf3fae5c3"
        },
        "item": {
          "id": "c65a65df-b166-4cf6-9f95-be29d48d3b0a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7e3a09c3-939a-46df-a6b6-1dbda7d88348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe4234f-8023-4e86-a840-ff2d7f42c9d3",
        "cursor": {
          "ref": "de787c49-f16e-45e6-99f0-55a963e49003",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c37cce75-2db6-4e70-8aaa-a8672d93085d"
        },
        "item": {
          "id": "9fe4234f-8023-4e86-a840-ff2d7f42c9d3",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4284e0e3-0938-423a-851d-b24356574d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7661e850-bae3-4355-aeb8-ab572196d0e2",
        "cursor": {
          "ref": "be859cb2-c575-4a45-bf38-778e5cef486d",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "cc922c60-f16b-4828-8321-9c79861d229b"
        },
        "item": {
          "id": "7661e850-bae3-4355-aeb8-ab572196d0e2",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9e63f6ed-9801-4822-8a4a-0be99c0dd0fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724a6572-f2a3-4c50-8b16-1bfaf50ff1a6",
        "cursor": {
          "ref": "4dc2acb9-9359-41f2-94b9-d9ea10727601",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f093c441-c30b-4a80-920d-0a39a0320ecb"
        },
        "item": {
          "id": "724a6572-f2a3-4c50-8b16-1bfaf50ff1a6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "31d0f408-150b-4faf-9664-a45a0f097f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 731,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb78766e-fec6-4a6b-8f86-a02a178a714a",
        "cursor": {
          "ref": "77343b02-92e3-458d-b693-fc9116168b58",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "aa9af56a-ce8f-4693-9248-7ba8c8fbeed9"
        },
        "item": {
          "id": "bb78766e-fec6-4a6b-8f86-a02a178a714a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "41ab7073-3638-40d1-8678-f8ff62020fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dca8cfc-fdfa-455a-ac7c-d742169120ba",
        "cursor": {
          "ref": "e2e46d35-f903-4525-baeb-cc9306be03e9",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1b341165-0754-44d3-9a3d-e6f1b3ffc087"
        },
        "item": {
          "id": "4dca8cfc-fdfa-455a-ac7c-d742169120ba",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1efcb370-e5cd-40be-bf80-b41fc14111ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ad9a09-4f41-414d-ac17-e65eb89b2d93",
        "cursor": {
          "ref": "6426ec34-abca-46a9-8a8d-976d766f15f9",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "2547fa38-3457-41f5-9a8f-8ff9b61bd7a5"
        },
        "item": {
          "id": "a8ad9a09-4f41-414d-ac17-e65eb89b2d93",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b64b8883-7801-4326-baae-bfaad33fa0eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734de3cf-5c87-42e4-9a7c-9d7573306494",
        "cursor": {
          "ref": "fc85437d-e064-487d-95dc-d540695c896b",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "fb29e63a-3417-4e70-b546-e56ba0568cbd"
        },
        "item": {
          "id": "734de3cf-5c87-42e4-9a7c-9d7573306494",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ceeb6935-b1ed-4a3f-b37a-e295dcb39729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22dbd349-5446-4100-b1a1-4dea9f1329c3",
        "cursor": {
          "ref": "e5cb799f-a73d-4365-a7b9-9a23b2ca1a8c",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "b95af98e-7980-46dd-8430-9b63feffa2a6"
        },
        "item": {
          "id": "22dbd349-5446-4100-b1a1-4dea9f1329c3",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5f6242a4-e0cd-4a93-abe1-5ea34163cd14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c331071-625c-40e5-b3c9-653a44988d75",
        "cursor": {
          "ref": "7fcaa2a4-5ee9-4142-b927-43c86fa91607",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "3203acf8-1ac8-40e8-b38d-d2b97bf66deb"
        },
        "item": {
          "id": "4c331071-625c-40e5-b3c9-653a44988d75",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "56618fee-7cd5-4ed2-af2e-c282188bdb1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2c5ba1-b68a-4fa9-9b4e-151d49c34afb",
        "cursor": {
          "ref": "32604765-9967-4408-9858-bb7999a6f336",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "caec4660-0d24-4b20-9ea9-750ee3827c0a"
        },
        "item": {
          "id": "1c2c5ba1-b68a-4fa9-9b4e-151d49c34afb",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8495925b-5747-4923-965e-b3eb6ab453ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606df8bb-d05b-4734-9992-a435679b4ab9",
        "cursor": {
          "ref": "2e83e063-c62f-4ecd-a724-19baf4166ac6",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "58f2dbf2-16ef-4148-8127-95cb9377d0b3"
        },
        "item": {
          "id": "606df8bb-d05b-4734-9992-a435679b4ab9",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "278f4815-75f5-4dc1-a455-ddfd0093b451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dddfeda-769c-4562-aca6-17daeada4422",
        "cursor": {
          "ref": "8bbf2016-d1a9-4954-a4ce-5da9a146e3fb",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "02268fec-8f7a-4610-99de-306f4d29e318"
        },
        "item": {
          "id": "0dddfeda-769c-4562-aca6-17daeada4422",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "6bca8a6a-5ec1-459a-a2fd-40ff1be5a201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7f4ff1-59bd-43fd-974a-53db273b109a",
        "cursor": {
          "ref": "f1fe5185-34aa-42c5-8b88-60153f7acc90",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "b168a9b8-5d39-4aaa-9bc1-3c6ac6380b80"
        },
        "item": {
          "id": "4f7f4ff1-59bd-43fd-974a-53db273b109a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "df751206-368f-4199-be32-788c57ec88fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da331b3-e3e5-42be-ac2a-798fb8bd97dd",
        "cursor": {
          "ref": "4d12a917-e5de-41b7-859d-536ad885c050",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "137935d0-b4fe-4365-bf77-8137e7ca34bf"
        },
        "item": {
          "id": "2da331b3-e3e5-42be-ac2a-798fb8bd97dd",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2d0820a8-14e8-4c36-997b-6c8c03305c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f3e91c-f720-44ea-a8c7-69a4344e5205",
        "cursor": {
          "ref": "dfb1362b-a4c6-4dd3-9b0c-84cc389464a8",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "49957a62-94c5-48af-9b91-2fdad883d8fb"
        },
        "item": {
          "id": "c1f3e91c-f720-44ea-a8c7-69a4344e5205",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e33c5ad1-f573-47d6-8696-013a6022c8e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a40c3b-da6b-444d-b1dc-6cdb2cb9ae1d",
        "cursor": {
          "ref": "8c023954-62c2-471e-ba72-c56080d494b1",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "870c8fc4-93c2-4bea-8049-be14a42e82ba"
        },
        "item": {
          "id": "15a40c3b-da6b-444d-b1dc-6cdb2cb9ae1d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4bb659ad-c4cc-4f43-a6a1-b166e3103953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de707bf0-3efe-4e95-8d5e-f5cb2cd3dbc3",
        "cursor": {
          "ref": "13f82c0c-91e7-43e3-a18b-a157cf4c107a",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "5575b1b8-552a-4dae-8d29-aa07cfd4556e"
        },
        "item": {
          "id": "de707bf0-3efe-4e95-8d5e-f5cb2cd3dbc3",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f035811a-a09c-475e-9e9b-f7933f734fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c301537d-80cb-4d3c-8c5c-c9703ef28ff3",
        "cursor": {
          "ref": "850358e4-1199-4bc4-b4fb-3525df7121e1",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "3d80acbe-e585-41da-835b-d5a31fa3c948"
        },
        "item": {
          "id": "c301537d-80cb-4d3c-8c5c-c9703ef28ff3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0692aa6d-4361-4e80-a392-27de80faa1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4316a03-a925-4d36-927c-24098e902abe",
        "cursor": {
          "ref": "f8969276-7ec8-4997-afed-45779e72991f",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "80faca84-fe46-4963-bf9f-4f2288c2e6ed"
        },
        "item": {
          "id": "e4316a03-a925-4d36-927c-24098e902abe",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "eb022add-5b9c-4bcc-932b-0ef10d3bb35c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "970a8855-0212-4e0f-9e87-97f8dd7bf840",
        "cursor": {
          "ref": "19cce4eb-cb01-4d6a-b7db-5f3d619f413e",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "80105576-bfda-41c2-801c-2404a8117b29"
        },
        "item": {
          "id": "970a8855-0212-4e0f-9e87-97f8dd7bf840",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "efcc2cd4-114a-44c5-836a-a4e1febab18d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdbc037a-2208-4ad8-a7e4-204ced17f253",
        "cursor": {
          "ref": "c63bf4d6-593f-456e-9706-3bdcd83219c8",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "d701f3eb-2c27-4a04-b795-af6860aee1ee"
        },
        "item": {
          "id": "bdbc037a-2208-4ad8-a7e4-204ced17f253",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "73be6205-2889-462b-847c-3d1963033fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2829cc18-d437-4cac-8a2e-e862aee9a357",
        "cursor": {
          "ref": "1ecd15c6-20a0-425f-8854-116c99bedc96",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "708cf47c-6df4-4077-b757-e16161e8d4b3"
        },
        "item": {
          "id": "2829cc18-d437-4cac-8a2e-e862aee9a357",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e0f1883f-6b9a-4569-b7ae-529f54ec7bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069aff60-8d86-45a0-9f07-368be5821651",
        "cursor": {
          "ref": "1f3306ab-4653-463b-b8e4-736e7639b2b0",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "7351b751-c567-455b-9ca5-53da5e9338e8"
        },
        "item": {
          "id": "069aff60-8d86-45a0-9f07-368be5821651",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "dc56f46b-de15-4290-894f-03621b6652b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86fbb882-e411-4200-a640-6b84586cec41",
        "cursor": {
          "ref": "9e0461fd-cf34-423a-9bba-7442eb23872d",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "409e19cf-9efa-4e37-94b8-0cde7ba25082"
        },
        "item": {
          "id": "86fbb882-e411-4200-a640-6b84586cec41",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b4ab26c7-748d-49f2-9707-663dbefc539f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7464fe-745d-4ab5-832f-a65084e527b1",
        "cursor": {
          "ref": "3c112d38-9957-498d-b4f9-11cb28f8f8a1",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "74afbe12-0938-48fb-b1b1-02ac6e784d26"
        },
        "item": {
          "id": "fb7464fe-745d-4ab5-832f-a65084e527b1",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0c7a503c-cc0d-4479-8565-88bd7ab46b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48002f00-6601-4ffe-8627-4b224e6ff4d7",
        "cursor": {
          "ref": "54d436c9-74f0-4f07-ba1b-8beb4e53eb0f",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "ac3802c9-ab3b-4b37-bfe6-f7fe3f4564bb"
        },
        "item": {
          "id": "48002f00-6601-4ffe-8627-4b224e6ff4d7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "00fe8cf1-9eda-4cc0-b5a0-d54064d27f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d38be3-d186-4c6f-849f-8c33fb077eb6",
        "cursor": {
          "ref": "3c0ecb8b-a99a-4b0c-a1df-e6196e867ffd",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "f9221dc5-7f60-473d-ac99-85d6e97126cc"
        },
        "item": {
          "id": "33d38be3-d186-4c6f-849f-8c33fb077eb6",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0a04cb2f-36c8-41ef-823d-ef5560b439aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d467bb6-7412-4afa-9316-9217e3414fbd",
        "cursor": {
          "ref": "8965aa7d-5437-4310-b3b2-b99d6f75930a",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "ac930ac0-b68d-45ad-9e70-6f24a145bef0"
        },
        "item": {
          "id": "6d467bb6-7412-4afa-9316-9217e3414fbd",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e6fafcd0-107f-437f-ac7c-79166162c8e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706ffc4d-afd4-4b01-bc3e-c2a365eb011c",
        "cursor": {
          "ref": "77f7570a-3de6-45fd-be29-54389e275fc6",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "2e77197e-382b-4611-868c-eb1de92a0ff5"
        },
        "item": {
          "id": "706ffc4d-afd4-4b01-bc3e-c2a365eb011c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e6379847-8286-42d0-a75b-512bc353c676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5d7998-3f73-4399-87e8-7606a37e90f1",
        "cursor": {
          "ref": "95866830-b8fd-4323-a91e-3aeb2ee75676",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "e3caede8-73cf-40b2-9335-a169a3aad24c"
        },
        "item": {
          "id": "0a5d7998-3f73-4399-87e8-7606a37e90f1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e1bbeda6-5510-460b-96fd-8824c8b607e7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a1741d-7011-469b-8fd5-d24d0d3ce3b3",
        "cursor": {
          "ref": "9e2b609e-a5fb-4cea-a2eb-c68cd1c43d03",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "b8437ffe-1c4a-4192-8fec-3b43a21caf77"
        },
        "item": {
          "id": "17a1741d-7011-469b-8fd5-d24d0d3ce3b3",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "49c40ffd-c36e-4f84-9801-27f9d1566fe7",
          "status": "OK",
          "code": 200,
          "responseTime": 501,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "77301f58-d6b1-44a1-9129-5e3a9c063282",
        "cursor": {
          "ref": "16950332-93c1-4f73-ba60-4e75604a55e8",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "4fc1da75-c67c-4c2d-baf1-61afda8ffce2"
        },
        "item": {
          "id": "77301f58-d6b1-44a1-9129-5e3a9c063282",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c96baedf-6ea8-4186-a353-db624d7b4ee4",
          "status": "OK",
          "code": 200,
          "responseTime": 1672,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "57af6cf7-770f-43b9-9653-2bcb527efc27",
        "cursor": {
          "ref": "a288e1d9-f3ce-4b9d-ad30-d616e55cf432",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "3aeab308-0ad6-42e2-8435-16dd441b8621"
        },
        "item": {
          "id": "57af6cf7-770f-43b9-9653-2bcb527efc27",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1130a052-db0b-44cd-9f88-8f9793560922",
          "status": "OK",
          "code": 200,
          "responseTime": 1915,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a94c182-3763-4d15-93a0-5ad3a39156f0",
        "cursor": {
          "ref": "1a696b97-1e20-45c6-8abe-2efd6b35961e",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "2abf5901-2e2b-4531-8fe6-c5495890f9c5"
        },
        "item": {
          "id": "8a94c182-3763-4d15-93a0-5ad3a39156f0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8787b10b-2d61-4ce8-8111-34752db18428",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a94c182-3763-4d15-93a0-5ad3a39156f0",
        "cursor": {
          "ref": "1a696b97-1e20-45c6-8abe-2efd6b35961e",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "2abf5901-2e2b-4531-8fe6-c5495890f9c5"
        },
        "item": {
          "id": "8a94c182-3763-4d15-93a0-5ad3a39156f0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8787b10b-2d61-4ce8-8111-34752db18428",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5be69d-d5a7-47c0-9806-51fc7de5e988",
        "cursor": {
          "ref": "f1802092-3443-442b-9be6-82a0e887df16",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d0f5e5d0-1491-41cd-a809-205c1d051a72"
        },
        "item": {
          "id": "9d5be69d-d5a7-47c0-9806-51fc7de5e988",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "400fefc7-4df0-4bb7-94cf-9a7e1e4b3188",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6e0e61-50aa-4d37-b8ed-391954cb3bb7",
        "cursor": {
          "ref": "ae7cbbff-541f-4d88-966c-ded8408e1f15",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "1c2d0ae3-4341-42ca-a7b6-0bac86288f5e"
        },
        "item": {
          "id": "7b6e0e61-50aa-4d37-b8ed-391954cb3bb7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "52b3355a-af42-43d1-bc71-39a21bf63832",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}