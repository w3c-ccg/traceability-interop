{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "adc8c20f-e3f0-4ef7-aef7-5037950228eb",
        "name": "Clear Cache",
        "item": [
          {
            "id": "76c68421-1cfc-4718-9ebd-f9f9212d02a3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f72fbf8e-d058-49ce-a354-dc6b66b18f3a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d4fc8749-2ded-4793-95e0-0be533cbdf90"
                }
              }
            ]
          },
          {
            "id": "b6a23d43-6fe0-46c2-b51d-76fb910d3f42",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "08c8829f-dda5-4dc4-afb6-ab87dc51d11a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "75367790-bdaf-4727-80b0-88abdea802d5"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "aa25174c-83b1-4d18-888f-c1d54b18fa3c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a9460d2f-3883-4156-aa12-981a0f84d8f0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fb286d27-e727-4167-beb5-ec15e04d02f7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a60d510b-fac3-4f16-9184-0d69dfce5bfe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "38170ea9-2c0d-4d6d-8711-cbec1f5ec252"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ca996957-c874-43b4-9302-7abe336b0ea8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "11c2fbf8-c81f-421d-80ba-122e2ad46649"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1bbaef0d-4ce8-4e28-8216-24ed4899ac03",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ebd377ef-3251-46b6-b2ae-05e9383cc2af"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4202a575-2606-4407-89a1-874f424313af",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f45086cb-b659-44b3-932a-75ee6b8a78b7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81c0bfab-a4f1-4533-9a36-04caabce27fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "79f779bf-1223-45f6-9ada-93013cb8840f"
            }
          }
        ]
      },
      {
        "id": "442166a8-99a3-454a-9496-8fd5c560dd71",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "130f6516-4a99-4966-95a3-51f571e0cf1f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "421de103-92f6-498c-89a5-a4e62919d72b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2aa107a0-0e9f-4a81-8f97-c3054f297827",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beec54ea-6cca-45be-8b82-0fb06a860ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2a89462-7e5b-4a35-8693-d8d8954ae106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e43059b-ac40-46cc-86e0-6149d7cca8e5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f729ba96-da91-4d64-b527-36046b0ab139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c972f80-8b31-4f1f-973f-ecba54656c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ef5b14-4a47-4f22-a5de-54c48de48319",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8966d4a4-d047-4b45-93e2-efe705d5760f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35bdbb91-7b86-4264-b1e8-0380be26a3a6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6865ed43-5fa0-4966-8e14-12d24100f20e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "11f62f92-1441-4ced-9496-b26c50a52334",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3981761-1396-42a1-8b4c-84096750a1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30791bd0-22ec-4d8a-a022-a26e60fd3c23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eac6a8f-71ca-4260-b22a-bca8870431c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dcb51b1-7669-452a-9d0e-17d12a8e1bcf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5922f058-1572-4325-8e78-dc12ce152f03",
            "name": "Positive Testing",
            "item": [
              {
                "id": "38dc6fbe-6b7d-48e9-b7f7-e5b9696b9500",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9c90cf4-b94b-42df-8f11-14a1c1e7b6d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "03b11fdc-74c3-4f63-90cf-61d50c775d61"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "92314e5c-7f5d-460d-8299-2e3f2efc7a65",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "aeb81e2a-b24c-492d-a7d4-339a135746db"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "240cb92b-bad9-441b-851d-c95782b1ce93",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1d2a0355-4130-40e8-95cb-ec1025cbd8ba"
            }
          }
        ]
      },
      {
        "id": "d64ae3e3-23a6-447f-8cbb-a93ea94f9465",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b2219f94-3ef9-4bc9-aece-7fa49969ec95",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8e0eedb9-2ff7-472c-b947-ec8a0bb2542c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d0ab2e0f-59f0-4e63-9e2c-52ca6e0c9d0a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd72ea2-b3c1-4e49-9123-5f49c156b118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8a2c614-fb47-4ee4-926a-47596f4ff7b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6100b5-1612-4a1e-8a1e-b34b0ecac523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7126423-c09f-4504-98d0-196713fc1ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ba6c43-7018-4003-9871-06addf69e71c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f44a35-6eae-43b2-990a-dc14dde7df54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed3cad4e-6296-4c63-9087-b1f93d18bd19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d98b93d-03b7-4dc2-b815-2a2da0c77e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a44dda1f-d988-4df5-a96c-2c2f8f84405f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624932da-62a2-469c-ae21-4dcffdc57121",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e06223-a911-4b59-8092-59107dce1d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef38c81-6ea6-4617-a211-e2e521777b4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498ea382-af5a-4d71-b19c-3a6417d63fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df8f3015-3104-471c-9aa8-d0083006baef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0171c311-5c9d-41ac-9503-da4dc963f1ed",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90540f3-27db-4861-9b26-74a1fdbf3ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a86a1f27-d6c3-48c1-bd6f-675efea49629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce112f47-c5a3-4c6d-bf49-031c78367b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14c4bdb4-8970-4d07-bbb5-4e12512d49a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf7446d-f4b9-4c1f-9fbb-bdabb761a917",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8d5dac-a73e-4fd2-8050-675ef092e519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5e57d6a-3413-46f8-9fc2-a274f754ba57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a12cf8-71f9-43f2-bbb8-6270a35a911b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "331e859d-21da-4ff5-b2db-35918b35010e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c248aee-dc86-4f0f-9bfb-7719e6d69161",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d4dcb4-788e-480e-b6e8-833aae2707cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac9964e-d491-45b8-ae8a-1e16e95e918d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f54ac2-bfd4-4df1-8bdc-e5dbe399d401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "609049d9-c6e8-46b8-9f62-ad2120e0dbb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07361370-13bf-4dd5-8246-92a2d2780477",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f2ec61-e4f1-4874-8c0e-40ec04e04505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa510cfc-cd8e-4246-97f8-f7bccea4b1ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365c74db-10f9-4a42-b3d4-9c92d0d591ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a9e23e0-42d5-4f75-accc-f18d12f86c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f600694c-c250-4e44-84d0-adaf12313c8f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f70275-acdb-4c98-bb40-81928123d362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c28da3f9-447b-4a4f-979a-5bb50ec31ad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2986d4-d2d9-4f38-af6d-c0364aecc0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4118ea1-cf3b-46d7-a17d-76d5ecf5776a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc01fd9-b5aa-4632-9e6c-6a270fd4a17d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca6282c-774f-4cdf-addd-8198f18057c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c07b91ef-8d5b-4441-bd35-702174e1d9ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e50b49-6c43-4dd9-a146-8af4ce359050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61996b1d-30fd-4de1-9dbe-7f5e0a867674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56cf586d-c002-4eb6-9f2d-c88244ffa7ae",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f611ab42-7fb5-41fb-a06a-a691b0d61973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d02b2a4-ca65-4bee-b35a-6d6faaabbf99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c6a4b8-f6f8-4ab1-b817-48860c305e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b03b139b-228f-48ce-a357-d687fb33646f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4590d86d-6846-4c87-821f-966e81c02d0c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f66ccd5-17ef-4ed6-84ae-309ce328879d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df64b5b6-8642-4e21-b487-86fea2d20024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac0cb02-8ded-4af9-b4c4-d24a33bf4c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2210614f-6213-4261-9c12-895f165ae54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e69683-13a4-49ae-964e-beb4cec08eb8",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14031c14-088e-45e9-b662-3adb52095461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c21b270-5362-4638-ac2a-7eb844014664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecffda2e-a361-4534-a309-1ddd7c31191b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "128dccc1-55e6-4e26-8d3f-6827c700345e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02796cb0-936e-4da2-ab98-a247c6c3a636",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "076fe729-5668-4fe0-b8d1-56600626f0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97c02b32-4e04-4bf3-a618-946a8477a3ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc61f9da-c612-4afa-afa6-ca474ec0e5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "963b9754-a6f7-4c35-9c77-d997c9e63b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c76d2df-5d60-47e6-8c1d-42022ef0899b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45b4202-63bb-44a9-84c3-ee113814c841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8459716c-d099-4249-ae7d-4913b5ab6db8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2395ff05-244e-4893-bf1e-3f365fa7bf39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6fd09d22-7e15-4956-a5c0-d0ef0afc4afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c485cd2c-6c70-499b-b573-0b741cd8ab1c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44420b0b-2896-4e6d-810d-24cb73166c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d994880e-937d-4bd0-96c0-f22de8b9e529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24dafdc9-9754-4689-8429-a670631fbba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "142eb3d0-bdfb-4849-ae29-32a26ddc70e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac0ad82-8f4b-4c8a-8ac4-8f586c4b0a71",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25c873d-5667-45b5-96d6-3658410e088e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08919100-88f6-46ea-bad4-e8010aca30d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb6c8e7-2486-4018-af00-06ce2e30e149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2706e329-ffa1-43b6-9dba-5fc6e29e0d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c7fc9c1-a1a8-45c6-b655-ae2d0bda1d10",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fb7e81-8635-4811-85ac-ff7aca773f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db5505fe-2aaf-4259-8911-7bedfcd76aa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0152ab0f-77c5-49b9-b483-a06065bc4ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07c1ea13-a848-42b0-910d-1679819de815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d936e55-1c88-4996-8e72-e6a5d291462e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea678e61-dde5-4422-930a-15215538bd5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47a5f243-f594-465f-90a3-15046dde19ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d2a63b-7164-4f3e-9ef7-2e5a3149057f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c429bfc-c65a-47d2-8e16-0c842558bbe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b4e4da-8fd9-4901-8d70-0a29a1fba373",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64fcbf63-be8c-40f5-876e-cdf3ccbd55b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75e849f4-b777-4634-9b27-099ade6c543b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f1d1b6-c28d-4fe6-a30b-3f0235dd8983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9001a744-ead7-4456-9704-9bcf2839d3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10437cc-022f-487a-aef6-cefb73491cdd",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67241834-4e8f-4280-9490-2d28fedad56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3cf710d-c18e-441f-b243-e5f2417b9d0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848dd9ad-f540-4306-9727-b57f36eb545e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "becbcf92-38dd-4d64-acaa-59b977f07902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59df4d93-ab7e-46fc-879d-b642d0321246",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "746458d3-24c4-49bc-8f80-0d42e158f1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f04f8811-c547-4f4d-9983-403074337576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d323bf53-642b-4352-99c1-52f889508288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7783bc59-5d26-48c3-9df9-fde528913f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9514e25-39db-49f8-9f4a-d340e369728a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ab1587-912c-4548-9f17-0e0d72d2c6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bed6fe31-57b1-490e-82da-0b34a479303c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f95f74-3ecf-4f3c-a61f-bde752f78607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b963f2b-b39c-4afa-9940-3968df1cf450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766f6142-af53-44c2-9165-acae2a8f3245",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be895f70-725d-4ed4-989b-2c9b1207db2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd539233-091f-48ec-b42d-48f10c35b970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd08787a-91f4-48d9-ba98-f0d21ad7f51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f829fca1-3164-4d53-be5b-dacb12716d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee33d9b4-1e84-4f63-a783-30719d958219",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f558c2f6-96a2-44c8-998f-fabc0ca5aef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b80fab13-5e46-4dc7-a18a-7c21875cef5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb0822d-be99-4343-b5ff-1913286e3f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e8b0bf1-bb9a-4a76-b472-c7d98f809acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d573c23-5f68-45db-b723-45de116ce8ec",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c43e7d7-899d-4d47-aea7-d00af6ff5ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349d51ca-b709-4e9d-8478-3a8f44a74986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d94ed0-5b88-4d68-a280-f2fb28436ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6188d632-0cc5-4b91-8c30-99185aac9db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7690c9-a48d-42ff-a8ce-275b8383e242",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b228c7-431f-4da9-8e4d-98ebd1e7f1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daab6cf5-5534-427e-a96e-598097fea668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac95ab04-9955-4edf-9e3e-fdf49550770a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c90ca7a-c0c6-4379-aba9-facdff475427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb706f5-9d7d-4e03-85c6-030ddb0831f8",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73870b41-2115-4e83-8e6f-3dd46f25000c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5d92265-4837-4c42-a31e-671308214d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da549203-88bf-4217-a6bb-cca193da9281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d31491c-df58-4d8b-ae91-37f18ae772c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bfe5e4e-d6ed-4ec7-af20-29098e3affd2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f777cd-52b2-4428-9e30-fc57500b5a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc03565f-de29-41f0-9994-49d0b045354c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757b8fa7-6b49-4934-afda-2864a72ec2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d0a95fe-b81e-41ae-ba53-67361c641a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbe3015-5a19-4881-8fa0-c6ff33acbe87",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6adcea4d-708f-40fe-b9d9-3d1ebfcc4305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff61c396-5a5b-4e73-ac0b-5ec453ead47a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12bd1d6f-8542-4f86-9b93-d2b139d96892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d44c617-b264-4c37-9e42-810a7b35dcc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab047f1-9be6-4506-bf59-2a6eb6a40220",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f00713f-e9c5-4063-a61a-07a7a18fc865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e03f546-10af-4b9c-a413-09dc971baa4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42836ff-d319-40f8-a5c4-cfe07ea85df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c935da67-11fe-49ac-ac3b-9634e6b0b56e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8127e1-51b8-4039-a612-730ff81f2f90",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b238c4a-687e-410d-bf82-56d70dc26853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f1a0522-9a64-4ab9-8711-40b3566eb733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d10c59-6be3-4ce1-8fbf-9529a1898171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c894d74-5b05-4204-acb0-b90967144224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632ddaf8-5914-4aef-8c2f-6d757ac564ac",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "924edf7a-d03d-429f-a8ca-03b8aa2b6216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f93e95a5-7be4-47c6-b534-93c9af36be5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be79a06-f789-4ac1-94e5-91f49284e5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb5d4461-2997-487a-b3bd-010273afcdf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "277b8557-2db3-41eb-99d7-1eb0643366ea",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb8fc50-9647-423c-91e8-3377a3a8fd17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b10ae5b-2c53-4002-8f8d-1f943cf9be44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4fac28-80f0-49eb-a55f-a66bddd21023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6fd58e9-c77c-43cc-ae15-ab5b0a94fe23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb4fb8b-a411-4840-8c74-80e695fb19fc",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "441be574-416e-4931-a6cf-1e66fa661d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f10bb9e-3241-4a80-8d27-783fa323e566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6757e766-5057-4110-b741-8e1289a87cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "85d003bc-9758-4414-92fa-1f45285ca9d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "507bb0a0-81e1-4650-ac8b-b505307eab14",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22413024-d47e-4a5f-9c98-8bd706dcf1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c03ab3db-5f84-4c6b-9e7a-9a396b104f48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428d0274-1e15-4d2f-86ef-c3009689cc74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "75d507f5-4d7e-4a15-ba44-dfe5b0c61ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e16db864-5bba-4e9b-83aa-e393a815c4a9",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f31ca45-4fb4-4c2f-957a-8a8d2d800f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c64fd1cc-e444-4b48-bc58-116a92637da9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1c9fb3-7745-429d-af00-61a17dd65c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b5d93cfb-9bd8-4ea7-b813-bc9bbd5460ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35acc125-bf42-4bdc-9e3c-d8d619f35d83",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f7d894-3235-49fd-a43e-25455ed12e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2348272f-7ba3-4960-ba50-43caa86a00fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "585d4c9c-0b20-4267-b9d7-b735c3616b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "19ecb61c-33ca-4720-90d9-b95c2e808533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd256281-1bd3-447b-b85d-0f0044ecde26",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "418cce3f-6ba2-4cac-bb8e-b34ce3877ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02cba2f3-eee3-4d20-b1d8-c13dab3c4659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606f8631-a43e-4385-9c5b-95eb0c1464c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b85a5dae-5ae7-46cf-bfe3-0e0ebacdf08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d62521b-ca12-4363-a849-5a74138f3d3a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab66abc-df2b-4137-a49d-597b1bf58f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2965cf0-bcf7-4802-b6c9-19ac871bbd84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a604ca-d7da-4724-9bc1-20ddead5194d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5d1c9ca-5ff7-4f80-b2df-e53611fa6a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b48fb814-e304-40be-b9bf-d0236031a922",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "735c3d7e-8d4c-4134-846b-eaee7a38ed07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f974bca-0425-40b6-8308-3019945569f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40a76a6-8070-4c07-af76-60add3041bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9757cd97-78b1-420f-a872-0a41e2700419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ea7089-2cec-42ae-8bef-56e4ac3189de",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a455a908-e7b6-4820-bb01-64e377955c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e17673f-95cd-45ec-a5fc-870fecd383ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565637b0-baf2-404c-b370-5b8c8c42f4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "94d75299-34a1-4cc8-8486-7a4773fe304e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e3b52b-2829-4132-9d72-6bcd65116f9e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d725ceb-566c-43ca-a6c6-8751fed7aeac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "779a00b5-448f-4a00-a25b-8f812003e8e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d9e01c-d7b1-4347-914f-b9eb0c9eac8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "abdd7229-09f0-48df-a15f-caa1743311c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d66834-8f00-4827-88f7-05073af2740f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af5267c-1292-4356-b105-900600712bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acbd0013-efcf-4d96-bb6d-2a5f0fcad3d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c09ead-5372-46e2-85ac-a038b055988c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a95b5fc-7089-4044-bbf0-a305d3b996b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a41a2c-a3fb-435b-90ac-1a72bb99b89a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2718d502-599c-416a-a82a-45d2a906a70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1127ea4d-5877-484c-b40b-d301b2327928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f249f9d-faab-476e-b877-380861ed7b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "81d3117d-6ba0-4070-bb34-83935d68650f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7011bff3-f2f9-402b-943b-2010c5060d10",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9709efa3-c85c-463f-899a-6b9a12e400c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f51ab0f-7ab4-4bf5-8d5d-29552af70dc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5bfbc0-ffa9-4144-99d6-5ec3c4e86ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba39df10-6c84-4711-86d3-a5602fa0cdb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "153a38e6-3b66-46ba-8192-f0f934ad7106",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbfe0b4-5af3-49e8-b11a-7ba0095f0575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51d90d9f-45f0-4acc-a76c-acc1ed570dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49e8e76-7650-438d-bf12-eae12aef77a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12fe0d47-a8d1-401d-87ca-aed9170f3b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5f09be-dfb6-414e-b220-99e2da42867d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2f72be-f8a0-4f19-9ec3-58d17aef8888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fe8d22d-4761-4a34-a405-b6aa27651df8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2e6359-941c-4c17-a692-2b322f67f579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2eb44682-a71e-4f96-b3b6-df793e7b229b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca475e00-c0bf-40ba-ae7d-d17274dd20d4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "456afbce-cc5c-4167-a9e2-f753ee549e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4313a906-364d-48c4-b25d-6d30d6d1aefe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b85a56-7ab3-42c2-bb99-5c21ed10a857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7847e98f-70ce-46e7-9a9d-49b3158a35b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a21d683-b8b0-4533-88a2-9ef72435e6cc",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "303821ae-d64f-49c2-ba71-256c8f40a1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0779880-b07c-482e-933d-cfc259c670a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d091bc0-9508-438a-971e-3b10baba4081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a56a191c-c5be-4f60-9d09-8a8d64282686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3064d604-9019-4814-920c-147a0148be1d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ae4319-1946-44a4-ac8f-4f061d3b7690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41ed7813-3ad9-42c8-8d60-fbb9845dd019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5edd6fba-a48d-4a0e-9aec-f73470e723ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1468f234-7526-4fef-9a29-70071d91b3aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af00ab1-7cc3-4de8-abd4-0569afd7749d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8e5324-970c-46d0-b771-cf9c9bd52387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cbcfb26-086d-46d0-98eb-490f104abda2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ca472a-af1f-45b7-b3af-649d5ad507e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d79fbdf-b4ec-400c-a0b7-5909849a3b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50dab01d-86a6-4b3d-945e-b3afd72e17a0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d43e2e9b-8ed3-431a-93af-df8788150951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a86aa810-fdec-46f2-95ed-349e09a8b906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55602d7-37f0-4556-9d52-f3bff5e15e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9704bb01-9159-4c9d-8aef-c0c9a21ea788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6dddbbf-17c5-4df8-8b4c-df4811cf3b7c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3f7490-0f13-42d9-8858-9e0a943d18a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ce41908-aee9-4ff4-a4ea-d9080b21949f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1089c0ac-100a-4b2c-b4ca-14f088264842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b93352c-fdad-4d52-8c21-8289fadc4c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83efebfe-73e6-41eb-b4c0-45446c36fa0b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae7c191-5e85-448b-8955-803d2ee7ff2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfce74d5-f88b-442d-be9f-fce89e2ca1b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04869c09-f7b8-4934-b60f-fe7877ebcd61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "533b1c7d-f975-4c65-8625-a4c777f20f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a20ee5-2626-4b26-9844-8b1f4e4ab4e8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2d3e80-cccf-433f-85e9-73aeb22aa323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d461371b-f642-407c-8b44-874057b0eb61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3faed9eb-007e-44ce-a9d0-cde3ded75f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e77f918-afcf-49cb-a4ff-3291dfbcbe20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286b1408-c740-4803-b5a6-6880e23457b5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "472ca141-e4a8-4e9d-bae1-182693da5219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3287af5-2a04-4dd7-9b0d-ae14b37d8b43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22238fea-9259-4b42-89f3-5e566ff51049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4da16a38-e1e4-4e1f-9a9a-b939d9ad6c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1501d3b8-5bd9-4165-9490-7f50a9aa81cc",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91820b06-1f10-4c44-8077-33723d4b701a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d313c24-9d20-480b-b9bb-b96c2f3c6ee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d17cd9-25f0-41e8-82fd-ccecf7eb660f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8ec8de1-0467-430d-b305-de3fad877a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a356dcd3-f0b2-43ec-8db3-9a9641bb813f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41173656-35e2-404e-99a0-7682164da14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e72c78d6-49e5-44b3-bde6-f91a916ab327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862eca01-7a2d-44b8-93d0-a66951b9e5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "372a4d95-4ac7-41ba-b7c5-3f29cf9e47c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c42f5f-23ea-4f00-b092-042dd1b72fd5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4b9c25-5943-4dbe-9b79-8f44eeb1b0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "874db728-3726-4192-8992-f4a752224e73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e269d8a7-a18f-4f2d-ba44-2f37e690c98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1033c20-b55c-4092-ac13-94a9914580c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14117dbd-ddf7-428e-bea7-7680b71d1c47",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1790596f-6f24-467e-9d68-05693012a5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "196a1f36-3f61-4ffd-a957-afc44f2bb216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67b1a3e-cc4a-4848-95c2-339e8067ea7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b5227b9-5b03-4888-b8cf-4e01bbe8f69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baec25c5-62b6-4f17-b491-be8d7ea21e46",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c98ef8c-d657-4ab9-89ce-c51b3e97433f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "420d4d27-ecf7-434e-b1cc-5b44dc0354a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da550286-d8ea-4e2c-a3c2-7b50cfb83ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c8f8265-d685-44ec-ab88-34a534635be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f2c19a-e47a-4f17-b39c-90df8bcafb61",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7558ac59-6c75-4e56-93f3-77f823b12fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b2025f-b6ff-40a5-ae95-e1223e5a0b84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187e31e3-188e-47a0-ba50-bd8b0bf6700b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "48857837-aa0c-441d-801a-7f3f7a59e055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aacbf130-03af-4e82-bc59-fddf1ada3e4b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "472e574c-463e-49cd-9492-2c925a1d7ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e0535b-f2e1-4753-8ae2-1a20feda0748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e860a2c-627b-461a-b1f0-1b99e01a4e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "035d8c5b-e751-4a71-a5b4-ec856650d9d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f88299f-4422-4139-a02d-7fb0c196631c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61515a0d-10ed-4822-b9dd-42f794587fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd43cd3-2654-41ac-bf07-eea284d6363c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec494b6-3f1d-40d1-9ca2-3fc315b5c931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9feadc29-aee8-4b8b-9432-c52b5afddf6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57cd7728-ed57-4c04-bb38-cb4e97fa4bf9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02e21fd-0082-46b5-a63e-c08759d08289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf3f20a5-05df-4070-b7fd-fed5e3a1543c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbfc1fb3-5f3d-4052-b9e8-ae8a89977750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a209c6e5-63e3-4cd9-9de4-2e979eced89d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e0abf2-7ceb-4844-b360-9fc9a0b072aa",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a456d8f-f3ac-427c-ba7e-31e6a7221081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73dc7781-3acd-450a-85b3-f9aa5d469dae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bef7d1b-790c-4f84-8a78-3030df1b07ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f83fc313-6871-4131-b8d8-1fe29c0da8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927ef156-4a36-4aa2-a28c-4fb9910970db",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5fb73c9-1f41-4cf3-bf7c-a5bafa3aa371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86c4363f-24ea-414f-975e-b4c01e039c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd78a66-c7e8-4714-aa0a-4fb0fd23d313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3c708863-73ba-4793-a381-096b9f0c170c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3575cc9e-6cb0-4a60-a6ab-9e1b59a429ed",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d066daa5-4ca0-4e88-abe0-1c72173a1b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5d43f40-674c-4405-a3a9-540b62a70bc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c11e805-70f1-4836-b5df-bf896c68a4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "af3829c9-74c6-45b6-b81a-61c3746f8d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9daa5a8-0a86-4b80-bcf9-24c4c2b1b954",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56125ae5-1c8a-44a0-b9ac-8d5fc09cedbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ae64443-76e7-4af8-ad8c-4ada88d0305d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b82dd5-4742-4d5f-b804-3487f26b1121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8be8294d-fa5e-4154-b184-7b0b75fc8d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8315777-c5cf-44c8-ba8a-1dd76cba6ad2",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b77f39b-02d9-4022-8f40-d759dcd1e971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5ad1281-bcf9-4d73-8096-65bb806440d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8b6e13-74db-4fb9-9420-4e5fd8a2e69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e09e499-26ac-4c8c-a16b-0bb77ee3bcde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dff00b9-ea3a-4bd6-aebe-29709c3692d7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad472a73-cde8-4896-9a10-44c044649840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f0e122e-85cd-4289-aa34-b6d2012b54ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990ceee5-7f00-4083-8f82-3cc398f6e5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c93dcedb-7bf7-4ec0-acb3-a667b2eeffd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f12d10c-4e07-4051-b0fa-9a4169c698fe",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b97955-6ec0-4564-b52b-2c5b45c0ec9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b885d6-98b3-4401-84c8-4b76fe7569a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3eee4c5-2758-481e-83a0-979c0d90e696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4f06d72-c0b6-4f58-b102-32278c7828bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3023e2-e680-4fb0-91e1-2faff5af95e4",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0fd4f3-819d-4212-af37-bf763fd33cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b060a14-ed97-4cf7-a7dc-544812f36021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7254bb76-2efd-4edd-8c33-aab7aad11cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e356c67-a4ea-44d8-b566-92ae941afd17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fc515f-7419-46c8-bf42-bfd23ffcc5df",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82e51ce-7a1a-4b00-95fc-deb81202bc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d89df0ac-57cc-4698-a237-0256195ddd6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed40229e-46ed-4a8e-9cf0-1a039a01c7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0c29cd86-df87-463c-9fc6-2160f72b5d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34e6c9b-77e5-48f5-9929-f3a4a89bcbb4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00141d97-d59e-47c9-a441-6bf911c8740d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "599a17b1-e4b0-4933-9da2-558e009285d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e36906-49a9-403a-aec0-036926f91efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7842c8df-7f7d-44e0-beb8-4c10943366e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67fcc93a-e9c4-4b17-8be1-712b81e47251",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4abddfa1-34f7-4807-9ad1-53f09c63e6f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6b32f65-d342-4e4d-8109-d81b528ff6aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ba04b9-447f-4bc7-8770-077cf75e4900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e53b4e7a-ab03-4252-9254-82aec88f4ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8dfd98-4db5-43a7-a97b-a688c5e97fd3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f01289b3-e51e-445b-9e55-ea6a220686ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30353fb0-d4b0-4bef-b39f-a3849d06ee23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f6a0bc-3666-466e-9976-f25c8f3a9246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c2b2b2c-fde2-4a65-b48b-8c1619d3d5b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2058e1ec-47db-4c81-bf59-9a1553078051",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3698b97d-cf2b-468e-8fc1-b9c719f50e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "791a7eac-1b53-4973-b267-c842b803afc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aad8706-a55a-47f7-885b-3f00d4272591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce7d0f84-e428-4295-a984-92a6b5d5c786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e120b69e-20ad-4344-8978-0b17eb21df63",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c95806-6533-4d30-93f5-74c4d4f21e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8859a81a-9f46-4a7a-9166-e940c4264bd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1f7a05-d16f-4c87-acba-e2b388ca28ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e4bf747-c115-4b44-90f3-3d0524932dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e20574a-e45d-4e60-beaf-7d7073ae66ec",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6bf6cd4-5ba5-4c5f-be30-298172202004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f664e268-6e10-4619-b0de-94ea3a80d822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a353c2f-78e9-4def-a4bd-6f74f975f6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5077669f-521a-4722-9284-fd112def81ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ed749b-f74e-457c-a395-b3bb062650a4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bfa1a78-7e88-4754-a681-49f10fa0f2b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "528582f5-5cfb-4531-be76-df1a859716ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff33ed10-4a2f-405f-ada8-265e0b225071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c414984e-ca3b-4ad4-a3c7-1350ee1debbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7efb00-9c32-4ee5-9ffc-f0791d512033",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00da540-6009-4f38-8cf4-c22b879f6c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b16076bd-43b6-4a8f-9098-b3a7b640f390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6483d03-3973-44c2-b6d7-f56c3ff7d667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "904b6fcc-e3aa-4b20-bbf8-bda4059bc190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0afbba2-eb20-4ca7-a5b3-2504f945b26a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89deb390-5fcb-4013-8f53-1b46608e1b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7ccb70d-f6f3-40cd-b531-2de7e171b034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2ef0e0-6bf6-40d2-b6fb-1911bd9206c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f2f4881-af67-4ad1-943a-77463293fa75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c7d2bd-c04a-471e-aacc-6445af805c75",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52c2953-bae4-48c8-b71d-8f2e18dd8473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e42fbc6-3182-43b3-b0e9-5a76fedbaa6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad282d6-0c58-447e-8c1b-a0e3e249609d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6eeb4a7c-f778-48a1-a5cd-3086290d568b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f080259-3c16-4f3f-81dd-401c1781fbcb",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3807d943-a998-4149-8f33-9f17753dcbd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f0e0ae4-b27e-43cc-8568-54775b97a2df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb9afa1-b539-4800-9440-64b48d6ab330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1efbfdde-7f1a-413f-a65d-7e455f365d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdef2520-a604-4d3d-a9b7-456dcfbe977f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "890ccafe-3e6e-4375-aa62-5034371da072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aed8bba0-b6d6-41c6-b1f1-5ffafbcf1027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7aa0cc0-7e1d-43d6-a1b2-01cf470a77c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbb89622-dc46-410e-8ded-5141437a123f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e702a20-89fe-4b21-b736-490c73b47a37",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "269f94d3-2b17-4784-b364-457fdda018b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ccef67-42fb-42bf-bab9-bbd0abb6ec83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80253b1f-668e-4336-88af-1aa69601c912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f494c639-c47f-4b86-9064-059ee921aed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e2f7bd-7a3f-43d6-b40c-59c18ba3f0c8",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "728814d9-becf-4ac9-b3f0-311eff5ac775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccb1625f-656b-453a-ac7a-05741960ccba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4bef53-f2fe-40f4-be30-9f6388087915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "beab4e22-6736-469e-814c-fbd2548ef9b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74314a08-3c22-4f81-89b3-8303578aa976",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc45466d-e54d-4598-9dcb-608cc07994d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1bf11d4-c296-473f-b229-146d98418487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d111e1f-9b7c-4030-9ae9-0dbb82fa7bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b8b2bc2-11cd-4fd4-a8eb-efb42edc0153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ffe52a7-5e12-4bca-a351-82108e90520c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1989fb6d-cc25-457d-aacf-4e167d86e40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1777f289-011d-4116-9833-16220f5e3c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d0aa28a-1711-42e3-a289-a984380cf5ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "630fd56c-96d9-4b15-a7af-21a43227faf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61d2816-72ca-40e7-badd-e366e0d53fa3",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ad9dd5-57cb-4396-b779-7d2e3270d56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b9cc602-7561-41fe-a2d1-a5ae27a8544e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c9f6f6-83b4-421a-a78f-bbc7037f13e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0d242e0-0e24-4ed9-a3a4-6fe6c6773e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b6d1bd-6f46-49f7-b555-9d1a8a8a5b1d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9263d96-5db6-436f-bbf9-81bedb8cee4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "72a391bd-063c-4f7f-b8ad-cc057c87c6a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e859f7d7-f403-47c2-983c-b8f88c133d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "264f480f-c5c6-4fbc-8ecb-cddadb0cff7e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0bccecc2-4fb2-4980-812c-2fb20a3fa5f7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2fe21247-ca1e-450f-9cff-7e477c7023b6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8bce86e-728d-4ee0-ba0b-911a4866d0ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6ce3795-43e9-4c2a-98ca-d4f000092bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa9c022-14b9-4572-91fe-fc030f0c8cb7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9dd397ad-2d8d-44b2-b14a-57c3609846f1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0db00db-c5fe-4cb8-82c0-32cf982d9507",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ea878a2-5b30-4e53-97d6-2975ac9f0518"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4af25176-bc9f-4f7d-b8f1-e004228690e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81853dc0-b0fe-4496-bc68-092aa2d25b72"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "af9ad5ef-47ed-4736-bf4c-7ceeb9c819e1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d9e1a10b-c520-49e3-b886-971f6deba162"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "74aa63c5-c70a-4be6-b245-e70935f1ec1a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "67d77821-04ad-4fb3-b13b-7d90466b85f7"
                }
              }
            ]
          },
          {
            "id": "143a200b-4942-4fe4-abf0-4e01e7fdd141",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2a456eee-0839-4ea1-b625-4630e28ec623",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6645f37-5dd9-40b5-890b-0161e170ad1d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9fbaab09-2f98-4844-9345-db9c9e7439e8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f05b2b5-be68-44b0-9e8d-c13192856d45",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0a1fb621-8afb-47ba-a566-c3935d58c810"
                    }
                  }
                ]
              },
              {
                "id": "161eb816-61af-4b42-b341-d91477139a52",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "395f74db-bcf3-4dac-a2c3-4e14aff83dc4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eafc4e83-af19-4904-b69e-49640c8aa3ac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0c294e1-e602-4bbb-9576-5a31ac684812",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c3f7b94a-f13e-4c88-b21a-0bd35414c803"
                    }
                  }
                ]
              },
              {
                "id": "b1394487-adc3-486f-9c1d-0fd9c4ba90ba",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1929e521-0167-4070-a49e-2304f7bd13fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a5654de4-04ea-4e7a-965d-b2b7b53f5366"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8410456c-6df1-4d0c-94a8-10fb8b31bb96",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9714fc95-d669-4c03-934f-98f16711f154"
                    }
                  }
                ]
              },
              {
                "id": "8397a40f-1e1c-4e85-a005-829177bfd892",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac9a6d8d-b814-4aac-8e8c-83149dbf0afc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5f7d5076-6e05-4987-806d-ed1733bcee03"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fda2fa04-98be-4700-bd76-89e3532937f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a8794e03-7e14-4745-9bc6-593a6f31b83c"
                    }
                  }
                ]
              },
              {
                "id": "8946a151-1a19-4a94-846a-98d25b223cb3",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7881fa5-1e81-4a2c-807f-4657e5737ca0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "60bad0dd-112a-499f-923b-8e5bbff69f6e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8da37242-b62d-47cc-a9ea-e22b9cf8545a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "eb9e3e86-23a5-45f9-a044-d0451d3d4ad0"
                    }
                  }
                ]
              },
              {
                "id": "3cbcb29b-50a7-4788-95c9-082c7a71feb0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a9dc84a-a4e4-41c7-a730-bcc19fe2dffe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "877413d0-118b-4201-ac6c-b5581335c831"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c3b5f68-ba12-4288-ab18-2b755898ec3c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "121652b5-1268-4664-8fc3-02d68f5e0a7c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dc06b6b4-7e6a-461d-9a90-4e69bc194129",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a5d12b21-df97-406e-aef1-b12c2ff31539"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "236c0ffb-e2a8-49ac-b5b9-44d356453f5c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3e691088-bcaf-48d9-9955-f28332d22ae7"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c7aa0ec3-1c88-4e3e-aff4-e97c80b90e90",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c687797c-9fad-4168-958c-23860de395f7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "92f7fd8b-9885-49ca-90fc-77f4bd3a19a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6e61cb18-e52e-464e-85a6-26b34a1aee7b"
            }
          }
        ]
      },
      {
        "id": "36d549f5-46bd-40b4-b486-6a31b71f90fd",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "25002931-99e9-4614-9686-f53ab2cbca0e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e8cbd5a4-b80f-43cc-aeaf-b6433921439c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8a2ae10c-7339-4971-ae4b-0cde749d43fe",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d068f8-9fc7-4991-8e59-59ddd01a4380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2f76ecf-f679-4908-9080-7969db79da1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e682460-16f3-43a6-a993-0a1d9184258f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d1fc8b8-87f2-4174-b7bb-b5f58fd90721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e12e10-95e7-4f94-ba66-bdf9d573e9a4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "465d0a78-80b0-489d-9997-207dda29edfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fbc3db9-f7da-4232-b381-3758cd0cf7e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c53251b-533b-46e4-bf23-bb0ef5680be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "795b6799-a69c-4012-998f-7801e9e79393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42255c39-6e8c-4d2f-8050-399e293b9ad7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790897fd-f38c-4ca3-935e-32918e52d48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1c1f178-0020-41c8-83b9-e5e9f9d6e0c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36f6777-dfc9-4018-82ca-13a329009a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a93dc8e-31a3-44ac-879a-5ffe719306e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba17b1cd-1e04-4bc6-b38f-625b593921ad",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8324eb9d-8a37-4903-b2de-5b367e7a7ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "757d1449-0971-4d83-b6af-8de8cae97b34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ffb6e2-437c-4add-9877-edaf6512f773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e8ec21c-1241-4385-bb5b-5927fee48fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f412d5-8798-4d1b-b3ac-c5f1bf09df26",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccee6be1-e16c-4a74-8415-35cfae66c563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2253b19-a750-4af6-abdb-1d0cc1dd755c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f26550-799b-4ae5-a732-df50311c4461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b635852-7b72-45f6-a8e9-323e856d33a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c2a556-e515-45a3-9b06-75ec9ab3356d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfeb69fd-333b-43cd-8546-4b9231599706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d610abcb-3610-4739-8c4b-66a207f82e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4bda8e-c04d-4866-b1f1-76d594a64d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "80106ab7-49f3-4b22-b768-83e6a62a245f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19493f1-ac46-4f22-b978-70cbab38ab95",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c3de22-0b09-419a-9054-c9029153c466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9fc12b3-0d0f-4776-b230-922262ec294a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f7a3ee-547a-4fa4-9ade-3c41fda9730f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d2b93f6-2360-426a-adf7-1cdd38f7c7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a01cdf-cdb5-4d97-8a54-fb8501e7e215",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dfa0c8e-4da0-4b9d-a2c1-6d07262e9f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a24f44-4e62-48bd-9911-f77b10d3a3e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a183452-ede4-494c-b519-f5385fe80673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "55dfa2b2-71d2-45da-ae8d-54fed35563c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb8b637-145a-49e2-9f29-5effe1a9019c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36fd593-f116-47ab-82ca-1d2da7ccef54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4308f932-3dbf-4627-81ce-7aa6466c945c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a349d7-886a-4868-b0c2-595b38b3bbd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48feb9c4-c79d-4eab-9c23-955f8f81e2ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67622bf9-0151-47a9-8ad0-6d6d0c4687e0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "772bcc9a-77e6-41aa-ae59-524467e3f87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84dd5b4c-3f28-4140-bf6e-af8828595917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56630f90-7597-4ffe-bf1f-15c4f6a6f94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "55b381b9-4a28-4c3d-b2b5-c7db2ff80583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc3a085-18f0-4440-a71a-ce13ef478aec",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25574e0b-3521-4d03-b95a-e2fec7b3cdbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80a13529-5a29-4eed-9116-c8a9c68ea09b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25553a52-33df-4794-ba4f-2b25e103c51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "287dce55-996c-4b68-9467-0164711070a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5720a370-957a-4d3c-b5b8-a1f5640a0bd3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8a4417-76f4-4f82-9bec-a8e2c3c3ac28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1392edb-594d-44c3-ab35-f56624a2b700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce288db8-204d-41f4-bb97-0966543aa753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "79f968c9-8fe6-4450-aaae-1b4e4ca7f600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a016a2fa-e677-4084-a68f-509e61d20e25",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ccc5322-d829-4d5c-a316-b927f6a58400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e00b4fb-1649-4e3e-ae74-9e9f3e653d27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1576052-2b02-4eca-be64-a66efa5b0da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0473ff6-63fb-4899-932c-d2990f74a423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d735a88-c3dd-4ad8-8541-3acdcf2c7659",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31376cc-9720-40b9-b6a2-8484f75e68a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdcd4799-d8de-4ea9-b059-a5ae36975ef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe7f12a-2575-46c7-b87b-6f79f8d5bf54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "76c2f28a-2f11-4655-bc20-ed10e45500c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92fde11b-3307-48f4-9508-15368b6eac9e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54549cab-0837-4f28-94f5-7ac9e5fe3108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e6ee067-b63b-43f6-a3ef-896baa1e3618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d9c4f2-578a-4f0b-9389-48195aed8122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c53ecaa-2d0f-45c8-bf19-b6e0be6c2d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cae7e25-05b8-4f9c-adee-5c2770c66081",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "613d1b87-3a1e-40d8-8289-802b1f61304b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0f4a306-2795-465c-9afe-c7fbddd5db3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7861c33-7eab-418a-8f6f-034f097823e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b9991c2-a894-4098-8d88-32f04b5249c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176d6c31-09db-4de2-a76a-7f69e2d52cef",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5344f14a-9ea1-429b-a9b0-dfdadfdc6d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95ea3d37-82fc-4323-ae58-e31eb9948dd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab020e27-95d1-4a0c-81e9-18afb19ab462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d857e2ed-0b32-42e2-a726-74468669fd7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc0bab6-461f-4eb7-8056-b7964eebb2e8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a79160-ca9c-41ae-839e-6b00cbefbed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7207d3e-3845-460e-91ef-c50c08a94bf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f911dd1-15d3-4ecc-b2ae-66f9190a5e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfe22f49-4fc3-41af-8928-eebbfff02662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c014bea-abc6-4dae-b099-e19e064b2c55",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "450598a6-4ffb-4e2b-b071-32a1429a7162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba83c684-6e6b-44f9-a355-06a0f6c44ee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd24a56f-d6d2-42f5-a774-b352855ee0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd3cdf9-9723-4067-a4c1-fd63716c81b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6a07c6-36ed-43fd-b3af-f0d687f98ede",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbf17b5-1b3d-4522-bbe4-4ffebd221ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5451eb5-936f-4e27-b4ed-66509adb2120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94bceb3d-2ede-46f7-840e-76ecbe858e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97f5df15-0e64-4a80-8f5b-a2372194fe79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8111424b-c880-42e1-ae5f-0bfb41d7ec99",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c2046e-1cd8-4479-928f-8d8a418e0196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf5bf31-5c34-4d11-8555-b044dc5d05c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5f63a5-89ba-479d-b9cc-831af5da0684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e958756c-895f-40d9-819a-17c1b4357875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b568d28-3609-4783-8648-8a735a230a08",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3220f990-4051-45b3-8dc8-fc69235c375e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c6825c-9edb-4324-8891-f04eac6ed84c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5438e1-e00b-46f6-a230-d0fb89424d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f3a99e7-10c6-4053-a88b-54dbd83f1018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766badd6-5b38-43ce-8fc8-e7ea435a7555",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cabd905c-5358-4a3c-bfc0-1ed3e518de87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f87d43e-6871-4f97-912a-69d267729eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75c25e0-6f81-4556-8d36-b950a3825fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b835eb25-4750-4fa9-9424-43b1883e3d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb16ae98-0832-4325-8c20-d96340e2c515",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68a1b21-ac49-4cbf-8cda-e29be5ed580a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57079c86-4199-4f5f-ab9e-c3b0386dcb18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2cbb88-5c43-40c0-8c5f-ebcadd24e2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c1a375b-bb2b-4465-994c-637fcbd6c61e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e16b50d0-0ba4-4360-acf9-86cecda94a18",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a5f53c-7cf7-4bca-9a29-b7b14a073ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51153f8b-1bd3-4bd9-b94d-86c314c1acfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4bef458-9e0e-4cfe-9dc1-9e394c8a36b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92cd6bba-765e-4778-9d3a-86b17a820b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50096ad-a6bb-4436-b608-4ff6de877ec7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d60e65d-b76a-4a6e-a7ab-448f8349d379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b615c8-6803-4dfe-90de-26c5fc39f2d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ee6dfa-6e93-4bfc-b1b4-4c4c53de2b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "774939d7-a3b4-4fcf-91ee-f1a7afba9bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2bee24-fffd-4b90-b432-1c717b1b1eb9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9aa03d9-8e36-4e13-ac1f-cff696149ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e83ce465-8d4e-489a-9838-a018ff2ced52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004eb027-6bbf-496c-b5bf-3a73ef0a738b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33c306a0-facd-4147-a89e-908f6cd8d46c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76beba3f-8738-46d4-be9a-4f11266075d5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05fa6544-15f8-42fa-b914-e5974447361b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d42a8fdd-bb5f-46d9-9261-74010acd2902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6160721-6118-4b6b-a34d-4a6d82834fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d672701-857a-4a0d-95b5-4c3a1882bdbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c80e16f-53a2-4c20-a758-39220707dfe2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c76d8d95-d7e1-410f-81de-8f8f6c00e496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b126adca-df13-4d6e-9450-45b7420e6467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe40735-91c3-4372-bd87-33c3da346533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b18484e-14cf-4684-a250-a0f9f5850dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5603d8ff-a701-4c50-895d-965466b8dc28",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9f74c8-36df-4b99-aebc-f266867f8870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e38cd433-341e-49b2-a537-88f979fdd34e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362d3d01-32c2-4505-9265-c1f8a497a1b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df18bc7c-31ac-4425-bf97-08c02a7f2d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e532b0-ec00-4316-8956-fdbe6e94dff8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ecd8b5-b247-44b5-8e41-01d110e81985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0294e0e9-5db0-4a4b-8520-a47b811e251e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0941711-c6ad-40ed-9cf6-5b66ba604698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c212e0a0-39e4-40c5-852e-519fd40a7104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca704cb0-b878-4ff8-be88-fa2a454f7775",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f35efe-3b2e-48e0-9fbc-b88ca6c13a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3842a7ec-f12b-4198-bd4d-23437eb45230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "299b1af2-eb02-49b1-bc6a-95dc0e0e8f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8766a9d8-55ac-47ac-8dec-b5936965e9f1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6f1e2ba9-4f0d-4bd4-8753-c8c34e070bfe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "485d2175-5c7d-4624-844a-196f7eb2bf5b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9134c56e-956c-49bf-abc6-7ecb8a7a91bb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ff8da800-4b67-4ac3-a34a-d7e5b48956c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45a2d6a-79c1-4529-84b6-1d4f69ec7e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee7b4d8c-3db7-47e7-8453-f482f19c415a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58aff4f7-0bdf-43d5-914d-465016dc5ac7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1949c73-627d-4a37-94b5-559b8274733a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0228bcf-5e4d-4158-812b-7900a9771811",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8cd5bba-e47b-4462-a092-ba8a3f852d53"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b0ec94a9-ad75-4f87-b075-f2d862af1fb7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b3981219-ddf1-43c5-b657-d7c715bd7a0f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5b3c9ef-b476-4142-a2bf-da360c5e79ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "55a41d36-d134-4272-9931-808187f92e58"
            }
          }
        ]
      },
      {
        "id": "3d626b33-6851-4c68-be29-1bb8416baa35",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "a78274ea-4723-40ec-8547-0fabfd2847ed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "235a5090-f29b-465b-b225-9bb654193f6f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d6769529-55d7-42ee-a015-8f7ad6cdb5a9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb294571-e1be-4136-ac0f-030c2d7cda36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "079aa8be-4da9-4488-bfea-953bd158a49a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "479ffe96-5dd1-4da4-967c-60bdd790631e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c6b915e-f41b-49a7-bb93-0ae8a989b4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d17890-ffbe-470e-b58f-30f1f82c0f74",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "086af387-8c1e-41fa-b234-707029f61521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "333c2d47-ce2c-422f-97d0-37525a82f94e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb2f0f3-7f58-4b54-a0d9-03f4c2cb4b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b549f8b7-c874-4c44-b9c7-2994b6993eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19762b9-5e11-407e-bb25-8f9b83792e51",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "719d3be4-99e4-4f61-97e2-d7d49922d50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c89a80c0-cdbb-4be2-958f-c57a6102c0cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f104e0f-466f-4227-b19a-15857c323938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5a67637-2732-40ba-9535-44c27f74dcd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d9d26d-32f4-4095-8b58-daa792aace0d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae6703e-ed46-4f82-b132-3a766e485e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8957b212-12c6-4dec-96cb-d4e958404c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed54cb35-15fd-4a37-af6a-4017de1724df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f72d597b-55e3-484f-b80a-7db91d188a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d83d6206-20d0-4677-a634-10768c8cbe0a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36473aca-3742-4285-9bcb-e5d06a17a7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb4f055d-2712-4f27-b5e2-ff0bc8b44cd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5141b9c7-b0d4-4838-bfdd-a034c38fb314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc3b9ad7-36b0-4d60-a9c4-cf4bca5a270e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eab1dbc-6b6c-4e45-9b23-5ec6a18ce5ec",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcae5976-140c-44c5-a74d-086bec47bd73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f1bf9a3-5bfe-43be-b5f2-d68c10228f80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdff676e-e9bc-4599-96be-6e89db0aee09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cdb7aec7-c0bb-4bb1-abf3-a467ee019ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de97628-4a5e-4c73-b5fc-ba88d1b58450",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f09aa6-ee45-4c91-ab07-6e0d529e5992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b90d8e6-1c4f-4013-808d-fa280ae04f47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2219496-553f-4b84-8f31-331960f793d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "38904729-3b0c-4b2a-9e6f-764d51e47979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929084cf-d145-4cb4-a301-3470ac00ef23",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e1e101-ce41-4f82-99a6-f172c717b43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a44024d5-93fe-4168-8cb6-4e249bd6d104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59fbe41d-995f-4474-b31f-f8424ce4efe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c5c24da-9a0f-4aac-ae6d-5a7caa5e602c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060c6f44-1064-4a65-be9f-fb0ae2576121",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2d0eb3-2fd7-44d8-aae0-fd292ad1e0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3112e0c5-c598-460b-b816-18086d1cda0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5b0c9f-a5ab-49d0-b4e0-ba3070493f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "511705a5-d267-4641-818b-f3c4aa206bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f95de59-0d81-400d-bda5-1c848a5e46a8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86375d62-b54d-4242-8ff5-fd60c3a65271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11d78103-04a1-4b3e-a8b3-4b8729583515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf1d049-5153-4869-95bc-a45d70084d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dd9251c-cac2-4b04-b981-d5e5e779746f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726f40d9-2ba1-4b38-af10-31dcf0bd8a3e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab1ae89-a625-487c-b7d7-ce3029382d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0f4f281-e05d-46c3-a5b1-59c69f0c4f87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204e84dc-1ece-4fcf-9d91-a3ddd573a316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3597087e-8fa6-4c88-8431-d333cf4f292d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2d75e2-f789-4bc0-8090-db22de64a3c8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5094e0-cf7c-4396-9b42-b68338d5586f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b70951-04a1-4d6a-90d0-276f525e0e68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f609e2-7133-4ced-9063-f1a38c3f3841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c9f3e48-25d4-4927-bc74-83235ecf09f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de216a6-8950-4054-959c-61513953c34a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f45e2e-9fb6-4ec7-ae1d-855c59540121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a75dbf7a-193c-418c-ab43-1fb5b1ed7789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e98814b-3eaa-42a0-b440-142687374e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d63731c-d7ea-4274-aaec-609dc8dd1399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c73cfa0-5a68-41e1-98bf-739d4a272273",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94aad9b6-0585-4101-b9d6-a4c4748e58d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f98718e7-10fe-4aa6-9d63-35a639ad5adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3cc1d24-5ecd-453c-9d73-29008b2853ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ace0aa86-7ea2-4295-9c11-97e0e5144952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea44eea-de56-4e35-beb6-3a4f65f1f0e5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e89732-6c82-4cb0-8317-da45f1924345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0553a69-a3f6-4ee3-971e-3e9866c32c68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d0c9899-e7f3-4b1f-aafd-3b7ebc072be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb88df1-a2df-4618-ac82-beb3bb03966e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8d2076-536b-47b6-9157-b92eee692df3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff18b22-31c2-465f-801b-f9d10ded35a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4234f8a1-f74c-479c-ba1b-14ff30bc7e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e03fb6-dd58-4515-8e5d-1cfaf77a7dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bda72be6-8492-466c-ad06-51e4699f4c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc19f63-12ac-4294-aec9-14e7e37661ff",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1da334c-678e-42e7-82cd-647bf9fac0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cfd6470-c149-4baa-8723-c85557553051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaeff408-3655-41be-ab34-db92f6380fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b88c8931-a1ec-4d2b-bdcb-151ae1e08a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5c846b-c3eb-46db-9a1e-87678510c44b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16323ca2-c537-40d1-b599-5f6b6e3bc0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0bd7b2b-8810-43b3-9e6b-31009161138b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9babebc8-5d54-4c04-be40-ea668c8f9adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc96237b-cfb2-4497-a2af-c2536820ac8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0f2008-2e13-4afb-9aec-7252f4fc6922",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64c0a10-0668-4247-ace1-22655384cc01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "495227f5-da9d-4d1a-8c35-b68b61dd7620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0078d86c-7360-436e-8fb2-65eccbccb934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb19ea3-56ad-4b69-9285-73a558edc4c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e7024d-f763-4b4b-b62b-488aab2fde00",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5368e16b-b4fa-4451-bc61-dbfefa95eb7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6adf8623-8e73-4859-bc10-3ed1aeb9244c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99712a0e-f22c-4739-9ae0-fed3f0a2c3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "260be28e-ca17-4510-a55d-d575739ad025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f6eb70-337e-4ad1-9842-f825c7491a87",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d127e582-2c61-4004-a029-9868c57aa063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "154b3356-cceb-422f-a4e5-cd770f71bc32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ab64fb-dc44-4a96-abb1-ed46d3bcf226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afa3ba89-e47b-4128-a110-7d5e93b49dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c96978b-770f-49c0-bc62-209c94634d58",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bcb0e77-76a6-45b4-9ac6-e410954591cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef2f877-dbb5-420e-a32d-55d5fcadd13b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0b096d-b7b3-46c2-92df-32d0cfc83935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57994581-f3df-4d9b-864f-7135301b9f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659f2d5f-f73f-467f-937b-d01a03365a9b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "456fb351-a518-4639-9915-d2ee02790cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a0cc365-5cb1-482f-ad1b-8482b07c632b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155a0d2d-4cb4-4908-a7f0-0e8109655aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "600e78bd-f007-46dc-b22d-02a45ea6cd94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce63cb5b-0981-4d1b-b5b7-3af30275126d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c73f700-1c50-4656-ba5e-dc5c77df8f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d00ccef-f818-468b-b55c-808999065b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28fa3198-91a5-4a63-a1e8-235e5558e729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62628751-c51d-4591-b695-213f58fad280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2935e394-1102-45a4-a0db-4c1d861cd9ad",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3b98a8-ae67-4bfa-b2fd-dbb677ce883e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe44b0f1-5700-4409-9b4b-5a99d8812817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783022a1-f58c-408c-beba-6661d8b58114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b769d3b3-8885-4272-9569-79c1b1027d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc66d633-0303-40bd-8df3-004ab35a9791",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7a4d6d-09c8-410f-a5a1-94f202a79fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d7576f6-4f3d-4d11-b955-ea3f87d8a857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74a87a7-e9df-4e07-9766-92435006ddb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d4d18db-87ba-4b38-a3bf-1ebcf9bc6397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af953e80-d65a-49f1-9423-4f1996d40042",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31bc28e4-6834-4114-94b2-dd979af49738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ede976a3-e228-46c7-b88e-3595840e807e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e58837-bec1-4a8b-9869-ee5c2d2c0d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a635eef-878b-4bca-b17f-789e965f930f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44578a86-a33f-4795-a7ce-3ca79d160c1f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d9afb0-61a7-44ec-bd4f-b3a6d7640b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd630b7-4eba-4401-8b28-c14d43a213e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb95b935-5db7-4d1b-b105-96c4d3761950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86c202b0-f51a-4359-bfd6-e9c681f7c9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2fa60f3-a5d2-4844-8b26-cebec966f633",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdbb072-8315-49a2-aa0c-c1b3fa93a148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d43121e8-e39c-40ed-a02c-fe12a32b2274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def4a977-462a-4efe-9cd8-abb4050e34ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63b7646b-90b4-4f38-9d1d-fe38409c8396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79b42e4-ab9b-448a-aaba-fb7b486dac7e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e448fc4a-a298-4091-b91d-2a367cb4027a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e8d313b-500b-4ff6-948d-a6fbc755ad1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902713b4-461f-4530-909e-9739445af6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "856eb442-db30-4454-bf36-3a40978c3988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3820ec3-e267-459c-897d-d068b7e0d74c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1363af11-d1dd-43dc-9b48-5e683cd949a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4ec614d-e964-4ee0-8fa3-cc5bcda91a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59b22f6-23f6-4cc1-8fed-5e9bb06386c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "056c4250-1978-4f37-bafa-2404f8b491ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f78785a-0ef2-4d44-8416-6984c2867a9e",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f420d10-1de5-4746-94c9-d99e79961523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5c4a5da-a989-4c9c-a9d6-7bab216ea673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad645632-0074-44b8-b392-d35f857743f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03061c1f-a972-4d86-9bfc-afb81950131c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a7f4f1-e904-40cd-9659-e4e7659ed648",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a73077-bd73-463c-81b8-850db019817b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45f52f02-0ac8-4c16-a31b-ca9c2e322b71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f01d18f-691a-4fd8-8fe2-ef3b0b3152af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbdba029-bb98-487e-8223-84055aa07bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91be9c39-fcc6-428a-86a4-5d99890484e4",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e37f69-4b02-4269-8e29-dbd672be4836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae9043d8-adff-4437-a57b-99c5e99f36d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f39c59-557a-400d-a28c-d830b1ce750a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c36ac10-6b87-491d-9a8e-9d3f399595a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2781e9cd-8daf-403a-b136-8781e7227b08",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7902e85e-3f53-4893-a734-d9d1b9cb3505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "786a0030-eeb8-4e19-acf6-2db15fe00cde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84863b29-865b-4789-bbc0-8e4e0350ac62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "081e4025-be2e-4102-a726-c419f58b6570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c07d61-e57e-4cba-8795-ba7d6982b6b0",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d89d5fa-1372-4444-bbea-1cfa2ed8a206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fadbac0-02ca-4d36-89f1-10e2a1162a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283fe73d-2d7c-4cbd-8b72-c34a83e3b9ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "506c37de-f920-41d4-a9cb-e63e8bf5060c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88514ad0-07cb-4566-b397-63f3d420aadd",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9498f91-7bbf-4da9-8fc3-e933d32acf04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74731bd4-1d35-43e4-8f8d-1810c103c624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7183888-16f3-4999-b845-66dab3fc2c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c70f92e0-896b-4950-b15a-436f1dffaa26"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7c6c8471-5959-4d5f-929a-4777794cf3eb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1349eee2-be55-4eca-a28e-507e9c25bd68",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6a9d51-6fd8-4f93-bb3f-a5138c2f57d1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "55a1d4f1-aa98-4cff-af99-c3410f17038b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3812cd-e07d-4f84-84d3-c36e98e830ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72451cbd-7e30-4d39-a86b-403dbf3b71c9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1ccbb91-f300-46ce-95ec-dea573f81850",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1ffca80-0d30-4f9c-af1e-f232142ec4ea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2fa5242f-786c-4fa3-aa29-72cb800bf94e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3f10d22-33fa-4fbf-bff5-fe529a823817"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "543158d8-13cc-4449-a1fa-bb04db849108",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "01c8f13d-337d-4e09-8d6d-1e2bc41970b6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b99ecf5b-44dc-44a4-aaea-cae8847cc326",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f2abc807-a073-4057-b61e-466de37897b2"
            }
          }
        ]
      },
      {
        "id": "01c2d812-c8da-4db5-bd9d-c025494eda0f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4e3b5414-7c0e-4f4c-91a7-a7186b098293",
            "name": "Negative Testing",
            "item": [
              {
                "id": "842ee280-4ba6-4829-b6ef-81a8f76803ef",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e88fc3b6-7f97-4cb0-b643-c5e7d9dabeb4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e98e11-0faf-4f75-a1a6-2bff6d4e73c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9882cd50-58f2-45df-a8ce-09b859739796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18964cd-20e4-484f-a47f-72f4eb624c07",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5cbbc1-d8ee-4ba6-aaef-2ec2e5a1cb21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da8ced76-88f1-4f64-9a9e-32d205d70f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e793b7ee-d19a-426f-bce3-2c8885b503ee",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "938ee3bd-c415-451f-be01-a89400dd00c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "064bc474-73ae-4cae-a43c-4bdeb2c073bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e21e93a-c758-4229-9c84-4f00cdf3af31",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25821259-e776-4076-8ab3-bc0a132eef5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca4f8b6b-3f4a-41b1-8e82-03ff3eb902fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03751458-aa4d-476c-a46e-d9c6252cb2e8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3d0cb4-6786-49f4-b6ca-8777b42e4f41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "622e856e-2751-4df4-99f2-9456e54af66f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3fbc971-b110-49db-b808-bfe607ccac4b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca6667b-f2d9-4f1f-ad8e-14e3b8ad2328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71dfdb66-1647-426e-adf4-7ae5bcd27239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2664659-6243-4ddc-801d-2f8415f10d5d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990b96d3-3fff-41b3-bea8-708b1e747c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d548e69-fd03-4be5-9b22-fd2f8b543258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe4f0d8e-3892-428f-b020-8df65df61881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08eb8616-9be6-4272-ad15-263ba10cb36b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c060131a-681c-48ca-9a4b-dffda74ab6ab",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c05433-a084-46c0-9c19-c5c5ecd975ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21476c32-9d02-4b5b-b47d-b0277a6345c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d716590b-f262-4712-86a7-c1615f7d2378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd7ac9ae-8865-4095-a35e-4711962e4cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a133fe5b-c4f6-4d0b-b96d-bacff7ac9ff9",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a900d8d-ce1a-40c1-a520-b5879309328f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d4492d8-274c-4603-a8ee-b0f2fb09135f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e07f54-f9d5-4501-b32c-c8761e522970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30b46899-2111-4568-9cf7-4a63db1806a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576c87de-344e-4595-af83-442569c75c1a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7825bc-6340-43cd-8b3f-c91a87df455f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ddcbe5b-3784-4309-9d39-2aff8fe2d204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b96910b-f109-4dd1-96d7-aefd1778e69c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a74a8cc0-e1b9-4553-85fb-151126f39f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc7d326-172c-4df5-ac9c-c8991d65ca20",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61bf8dd4-f0ae-4def-b649-79acff088b6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24ee2757-9cf2-4b15-964b-ff4c306280cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edeaa3da-83d8-45e3-a7bc-37cfa3e32867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4ed49f9-4917-4499-a8a2-2390e4d44e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1d4816-92d4-4d6f-997b-fbcb0756cd75",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d44e7ea-99b4-415b-8f71-e3011e82df9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79131be5-6a00-4571-815d-e3dc521c5b5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18c3663-4040-4e29-b237-2b9cb7abdbf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c2dd5d-e32f-4a80-9f9a-441ba80391c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b48aa901-2781-49a7-8b2e-3cdfb0ef2747",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e918b062-af17-4113-81b4-44f62927461b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "197cd28f-2a4b-4f13-9165-d7cd7d50d176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96dac8ed-4fd3-42c5-b067-aab516186f18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28f478a1-1797-4364-ad61-0bad12c5eece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611fd8bc-4a73-4c17-bbe0-ef6840f15fbb",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc58bf0-f50d-40be-97be-02e8f247dc03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e33de84-d5c7-4754-b2ef-9bf6141d5018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96145f7-98ee-4bf6-9171-3e5a9cda2405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "408b4c7e-347b-4c8d-9531-6df50e571477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40da1f02-3f50-40d5-b55b-4a2090508aed",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e97c60a-cfd4-46cd-bae3-9ec98416a7a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffa11511-aab2-4304-965d-07d2fea17455"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc463b0b-0925-43f0-91b2-1f04acf96a86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ea0b10d-10b3-453b-8f4a-d9771d62b2b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75451cc3-cb34-425b-9f5e-f4e61fb082bd",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cdc8a72-be0b-493d-b8fd-bda7656617d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7206e7e-05d4-40ae-a41d-cf931fa3c794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfdc3c7a-9479-49a4-98d7-3bcaaad5d81d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9e5ad2e-8900-4598-84dd-bb4ae8c4d7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3bc8fd4-c7b9-4e50-a95f-a1afc51225a5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05942ad-60bf-45dc-b9d3-2c28a2109482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eb07117-103c-44e8-994a-b16f4872119f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "154e9d59-2043-4992-97dc-5e63b5864a26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "541fed45-706a-4ca5-9a8f-13119ea46b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b4cfb5-755c-43be-aaf8-6569ad130b26",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c6f48c-2e2a-48ab-b513-7c77c0117c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb01e583-28cf-4d8a-a0be-2dc09fc3782b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2870f0d0-1e22-4616-b35b-3c4136de7e65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af3ec731-e70f-4414-ab1d-537a078b5ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56885e76-3535-4218-809a-764bcc6eb27d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b5b82e-de7b-46cb-8096-a1a48836b537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb0572d7-047e-40df-9601-0a1e175109e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86a9597-853d-401e-b670-5f9578210272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47b6a42f-b2dc-4465-a185-bab46eb54dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d70b46-a335-4cba-8a87-eb7ebe7d1ee7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18760426-9c11-49dc-9359-f64b3a1c5b52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30c763f-f82c-4308-9a26-55ca90228489"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "361e1507-5a58-41c4-92f7-d93c85e8a58b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df64ceaf-8158-4f1d-8c25-48f67b2724b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa11c5b0-c815-4c18-868f-04dd5a0d31fb",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057b1d56-d15b-4e82-ae0c-7bbf8ab7b7b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc064d17-0ef4-482d-b804-de86be5ee43f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdfed613-4101-4a2f-abcb-f1452fba8680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f06ec8-e57d-4f42-8936-b8c79de8c019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1bfcd19-2171-4a99-895f-8a016ea4b0bb",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2574c92-25b9-4881-9dbb-8e2e4f32f63f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8527676c-437a-4c67-9c55-5f839031cadf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3258d10a-1c25-441c-b4a7-26a5355e8e7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be2629a-4a0f-43ff-a36f-e48b91629868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc83ab3-14c5-45e6-a26f-3fa65a7064df",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be9578c-e74c-4735-92c7-fa0a8f1f9d7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "104c1e4d-c535-4455-8914-1b77d8b4f953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "decb5fd0-182b-4a93-9eef-3d03e2d9a281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68e2b107-afbb-49ac-be2d-9759bbcf1ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8bd5a7-9345-4159-8dd5-c8a83e2b0790",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454751c2-8328-44d7-aeb7-7b7e765f6eb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e34c556-d8d3-48e5-a4f7-bd2bd0cf598b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "254e4ffd-fe32-41d7-8c4a-d5f50b2fa1ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20365453-50df-4d57-920c-1941bae30064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ce7135-c5b9-4928-a7ef-a0ac1781322b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8abb0d5c-9e24-492b-8e96-2163b5dd999f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10581e50-fce2-4d03-a309-c474889d61ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20df8026-8826-4fb1-9ecb-e4bd52a08f97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e03e1b7-5934-4db4-b1a7-efcbfa8a66f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c85b6b-ccad-4517-ad8a-e0ee0ccf6858",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab8d59d2-05ce-4006-abbe-a1b1de43234c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "240ba8d5-b686-4309-8dfc-c279f827416d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf3ba37-f679-49a5-a862-90a1c43f3f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc8f732-a2a5-44fe-88b4-e83d336998e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d483c253-ac37-4a6d-8c48-f74e53e8c79e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13cb566-fbf3-4f6b-8d7b-a65474e575de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49e592bc-d759-430d-8a9a-fd5836781426"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e20177f-21e4-4b2e-bae7-8cba00798d71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcaa89f3-6b79-4eea-9cc9-e271fe9457ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293d44a6-565f-4110-8b89-68dfc3130a00",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a84ba59b-d7e1-48bc-926c-5660868e1eb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ca6e1f-16b9-48a2-af8f-562b870c2b90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fdce799-c47b-4406-9ea3-41394075a717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69598494-d67a-485b-b52c-af53ceea959f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb11387-70a0-4a08-9f1b-420e359c96a6",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d843ea-1f49-4a64-bfb8-9cf78ee32427",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8422d136-fda2-41da-88ec-6b82efbaca35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41da336-d9db-4d63-838b-0c0956c73c39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c902329-ec92-4db8-a13d-8be4090a760a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9570b0-df95-46ec-8316-979bbff7f53f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a52720-3c16-4796-a180-7f3d992ef07f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4acdc158-7d82-45d2-9061-490832f0e3a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "236be025-ec52-4bbb-bf8b-6a8862c577c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dab5c213-71e8-46b3-a5be-6d1765bf09ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53de9b3-6810-499c-8dbf-45ba21ce7a79",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93fe16e-7028-4113-bc94-f755adda65aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a430ba0-e1c8-402c-92f2-26ec9aff31f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f0e3cd8-f0e0-4531-b950-4fd960c6204e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12230b9d-edd8-4e71-877b-f817f28eb8a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cad9d80-0077-47a9-9eac-e621062868b1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a50b41-0358-4653-a6b4-47b903d0143d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e952269d-3193-40d0-9da4-067862716c7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73ba4ea-76a7-4436-8877-2aaf87acbdbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1143bf03-0143-4fa2-8c82-555fb9500ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9bcf5a9-49ef-492c-bfb5-f55c76573316",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2fd2ec-61df-46b8-ad36-876f6ee71187",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a452a6b0-74b6-4afe-b86f-811865bd6e86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07eb2c05-20df-4059-869e-44bcbcbf4e36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fbfd20e-ad96-4415-839b-f7fa449d5e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801a0d2f-e481-4a52-b99c-fd2e79c621bf",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccdfee57-6eae-40b9-828e-c3c4ed1bed09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa537b28-4c38-424e-974d-22e347e8f54f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e281ec8a-1aa0-4780-9692-a9b84a45ece3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5caddfc-2582-44b2-84f0-1f3b53a08134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318d3414-ccb6-4e54-938e-dd24ad4bdb30",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a3c7a1-9e65-44f1-b7f5-f205b239d4ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60f684e5-2355-4f90-a948-4426675724a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a674ff7-ebac-4572-b8ba-a09a75c97951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bfd599d-dafc-4d74-b8b4-f1396675cc9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1048d96-c93e-4ebf-9b25-5c1c64f2de8f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "889eb0f7-012f-41f2-94f0-3f719eb78534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07e63cf2-f468-495d-90ed-e47968e76aff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f516d3ab-1f5c-498b-b544-f2a906260fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba27f6c4-b4b4-4087-8e64-cde43c10b9ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f29b8e-7dc6-42af-9695-878ba29f0632",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d68131d-aa00-4a09-bd40-434e71a1fdd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd26bd9b-eae2-4821-a2f8-3f3bc989f088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b57bdd-2aee-4793-99dd-a916eeaa0b9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d85e4e98-9246-4165-bd98-9199da7e8577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3442e9da-254b-4993-a476-b1173949e40e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a07adbd-d4c4-472f-a74a-b3e22a9eb3e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68b3a042-8937-4592-81b5-2e4147487aef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59c40ed-d2e9-4cca-b076-830f6185f94b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c11a388-30a5-4d7a-b74f-312a9d05bdde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212ddc31-055d-4b22-b343-25b756438d03",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c4d7dc-594a-4782-b014-5606b4bdcdad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebeaaeec-9dd7-4500-9826-0bcc4abb37ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9660b699-2cd9-413e-bcc2-99c8d6279fc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dae74c8-4002-4afa-b976-a62aea60070e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a14109d8-203f-479f-b9cb-8ff63cad2151",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e102b251-1a72-4468-bacd-a8944c6761ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb76fbb5-e8e7-4ba8-9619-c8983c1ea643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "540ae813-b3a1-4f97-81c2-6c1d336a3014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe973684-5414-4ec2-881d-12294d95a452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7557a94e-c8b1-4cd0-83ad-39c8a230e249",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef0db56-1229-46de-8c35-4124910a9613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3356a402-9ab4-462d-b6fe-60867a611fd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da02480e-cfd5-478c-a214-69e032d64a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e52c2ce0-3e0a-4bcc-a51f-cf5a0f5bb9a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53468239-0d19-44df-8c16-a6657294f7a6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8cc8899-95dd-4125-bbd4-9321c1772219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcf26c81-fb84-4495-92bc-f8ee41e11b1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6003a8e-ccb5-402b-b69c-73c2ef1d5ccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d5e2bb-c2cc-4bec-a379-034454551136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc530d7a-2ea8-4647-8fe4-c622229aefb5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74852fc9-f561-4711-b02f-5054d097454d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0a2d673-ae23-4b1e-834a-241e7de2ef0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cba7238-0eec-46fd-91fd-4d517f897bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2404c17-f3d9-485e-abf6-ab1bbbda0f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c25a3e-eed4-4c0a-b7ea-d23048a73780",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "526ea763-281c-4cf4-b9b1-9f22faad070a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10531e0d-1ec5-4172-a8c1-5d6880eaaaf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb505e0e-6938-4969-a2f0-cab71abf8bb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02464124-8960-415d-9d81-a23f0a8db601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44149468-a8fe-4e35-9e0d-63c03e5c9e6c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de9a4eb-60d2-48e1-a2b8-e0ff92ee6078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "093e7cd9-faca-4d63-aa30-66c0a47aa106"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87cde0b1-b96b-4844-9f62-abdd4eedd7e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a65ad76-b1a3-457b-892a-311e22d433c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5792eb1-2806-4a6f-bac5-5543dd101d41",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176eee38-f6e0-4b92-92b4-73b364497a2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae9b267e-cc8c-4c1f-809e-4ba519942a4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4f0625-913a-4b9f-82dc-e724a687f62c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad39ae71-a8eb-4b3f-a84a-a1b88f4dc4d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b3b7e6-ac09-4671-8393-ba0fac66d28f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87110842-a294-42a9-82e9-1f3fd057bc70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05662d37-7deb-441d-a02d-a28a90b3b3d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5801ce7-e3f2-448f-9b22-35f5f39ca31f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "095077cb-119a-40cd-a681-3a3d6fe709d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54f0811-ef66-42df-bd10-8045a2290bb2",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b752d9-007c-4f9b-891f-75e07d3e3373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cda9f709-7c44-426f-8756-85cb817be6d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5b9849-6124-461f-978c-aa5ae643eeb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de0215f9-f950-4e21-bb75-5bbe6a606362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42c8f2f-03d5-4ba5-a307-030b677de5cf",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fae5427-c92a-4546-8c0d-0164c767111f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc722314-5a6a-4b72-aefb-ba672cada7c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71168d43-04c6-4e82-9058-516fc62499fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "061c04d5-00bc-4ee4-9da5-2e9061a71e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2226b3-8884-47cc-8f89-891e620c6a63",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200eae9b-9ecb-4fb4-a537-39993f63a888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34129f45-c196-4072-b956-501e125c2c32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9e05bb-2191-4e37-8784-5574e0792c3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "658687e4-bcea-4308-adf4-9ede4037cc7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b52ff3a-3b9b-4955-8564-defa8c79ee6a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c211b784-2b3f-4bfa-aef1-25c1c722dd3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3801ecf7-c13b-493a-af7a-72774a500575"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d50fb6-7e0b-4ee3-9a51-9afc195912a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a79089f6-32c2-4abe-9f2f-cda99a686f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "058a2359-1bde-45fe-8401-1541028d8a49",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5096cf54-ac33-4d48-be0f-e0e0cae01f5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9cdb4f2-94ea-4599-bf6d-198cf64b6b9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c260c3-a0c3-4a2f-a666-2356c24e80b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fda7e26a-6c6a-475a-a5a2-c992bdeef192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a311f7-5e03-48a5-aa90-54d3ba9978d4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d97e6f5-a14e-457f-9f20-a885f3fb8b75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f21e1a85-e871-4631-a9eb-78e753ced888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e345928a-8514-4444-a666-a9b7c748af51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bffafe1b-caa4-411d-b882-f4f27da497d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79919377-328e-4b02-9807-7f5ba4d39aae",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82301a0e-76ee-4c0c-bafd-89f0da4ff7c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47be36a6-2d9e-4087-a111-26decaa2a371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de14cdc-1c50-4d47-990c-b5c7f2c86a2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "737d7e94-3d42-40d2-bce6-cdc2493c35ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f417ba-0e67-4ab1-8c6d-054e88a082b2",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a522cc50-b6d4-4666-ac41-e7c585da22b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b170c535-db1e-4a54-afe6-d4bd5b880fee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20dbf129-1e53-4416-9524-4711a67ec673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db2c1f05-c0c2-45ce-a445-a82e03719c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a6cfdf-b1e0-4625-8a8e-8266bac2b10c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4089401c-c77d-4cae-b98d-da54996766ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feb6edad-16a5-418c-a150-e317a62a976b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f056fd1c-6dec-4207-9f21-6c7ae1f2239d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c8aec82-fcfd-4759-a83e-6ea4ba417cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ab190b-6cca-4281-8d47-f0ab7ceebfa0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a269f056-e3c2-42e7-a2d9-2aaac1b79fa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff84e2c5-4eb6-440f-b962-d32f9b3d21f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef924c9-a410-4461-881b-135e181c2fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "963f162c-f522-4c4c-be61-7fedd3558664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5db55a-9830-405f-8c56-88bbb4b4f6c3",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403e4ee5-e800-4254-b88a-1a915f47ae5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2aa9760-e5da-47ca-93c6-107ba8b6a0ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88d6c77-bbf4-49b7-84bd-33c98ecd6fe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac9e9d01-71da-4a0c-b675-79d6a60650d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfbf07ed-ed18-4f65-ab98-8c17446b6beb",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e18f6ca-6172-4a5b-a642-0803eb6c29dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02915b28-4865-4321-82d0-e050581005ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af0593e-9b99-4fff-b2f3-2774ba6f18c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa229afb-9d54-43df-b7bc-cea39e7838b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf3847e-f602-4fb8-971b-f0a7579fec70",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eccf8dc-0b13-48b8-94a2-22d905754f65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b16f59-6bea-4a65-926d-0777419ac1c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8369fa15-bacf-4741-a4c7-15355d18d2e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a847a1a9-5433-47bc-9cf1-3be5bdc2b475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa828a3b-ecbb-4914-991b-c34e3a877019",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00458099-cf03-4c75-be80-1dd87547b996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "319b5ab5-6d63-4889-8917-a56145216bee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b271bea-bcd3-474e-b516-ceb3a57b9f18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7015196-329e-4f1e-a7c8-4261aa39d864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90918a68-8403-4020-b450-2febbed77fb8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f1b452-f2f0-4eed-ae98-28787af91686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b32ed8e0-abe6-411f-9dc2-7244bc7670df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e93292-ffa6-406f-b008-2f686292f41a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "429fd794-fd56-4847-a00d-cd77b265f203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deabfcfd-b1eb-4700-b22b-aa6a8e7b16a9",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6bd9103-7a5e-4d8a-bff6-fbad4d824039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "915c440d-c3ab-40ec-aaad-466b1a839592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f202387-530e-4ada-9a20-846d77cebe00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ef659a7-eae5-4b35-859c-f2744b5dc6e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81e24db-c66e-4b9c-b111-78e7c03b8456",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4bb100-de02-48ca-8545-0a675a8b233d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57bb025d-6502-4ea4-9631-39cc743c6a84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c7a102f-0b30-4924-9a0f-8902343121c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6f48d95-6964-43fc-8b9a-8413d3a4a14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83dbdf30-8017-40fa-bf14-7b9c0bc8c63f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c25f754-5fde-4063-b6a6-2f541b7c7bc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "940c35f9-23c2-4564-bb27-8e1791db58aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9511f54-0971-41bd-a774-81451a4a80b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f83532-7a5e-46fb-9a01-6daeb114871a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294f5a96-20e2-45eb-9661-4c831001e8be",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9275338-5377-497a-89da-6dde412d31f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "646f6c71-6d7a-4963-bc4d-d62169be9c00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27f477e-ae1f-4bf3-95ab-bb0127466584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af88e96c-22bf-4635-bb09-3262ff32d36b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbcb061a-9723-4cb7-bee7-f01099e489b7",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b012352-d7c8-44b4-8598-4cc562ca64ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "883a6657-fbee-4cfd-81b8-cc69118659ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5cc1e0-7b12-4fef-b941-49f878077b77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b1e42d0-083e-46cd-b67e-f7f92269e6f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64cd3075-9607-4188-bfa6-8c448d498dc1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9210c045-641b-48b8-89f8-d1a5ddb987cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afc47d06-a63f-4782-a0ac-e720ccc49d67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8adeb741-696c-4ce1-b9a6-dda606ac6c40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bb705fd-4637-48a0-b105-8db07850c67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f74dd6-ac32-44d5-9cc7-477066e8db71",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1c957e-1664-4e27-829b-36b2332e4e4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc71a7f7-7316-417e-af7f-fdcc1d78dfa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccfc08bc-6762-4cc4-b57d-30df586235ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a75c2c9c-f400-4b2c-b827-cf41f4d5af23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74df1d91-8ff5-4508-aba4-76c02b5b0158",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb55db2-8f55-402e-8f9f-363eb9f444a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce84cdc5-065e-4f4f-9a82-703e0fb595d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c8e7313-6b05-49dc-a58b-f017eb2ea8ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd2db537-2a6d-46f2-ab34-0c3fcea71e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4384d969-a56f-4da1-97c2-28f76d8fb705",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1798c5ab-6a4e-489f-8bf7-b65e74b950d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d51649d-255a-410c-bf32-91ba11341a71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15d27cc-2d06-4027-8bb5-ec288a01fb77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e37b2e00-b14b-4bad-8217-302b6083b94a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14604a57-eebd-4772-95c0-6109b1c094cd",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e880db6-2190-4aa2-a8fa-fe5a870025ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5acb046-bfe9-420e-833f-aaad21963ea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "217023a7-13e4-47f5-bb9a-97626ec439d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6122d51-9342-4c14-9448-d3685af0895f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc02cf8-cd49-4106-8989-75bc6d703a2d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2aa598-f2cd-43a4-a217-36057429c70c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a70ef83d-5bb8-43e0-8f9e-0fcb1b84e5cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7221f443-1ec8-490b-a921-a7bee95f151a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e0b7a96-4155-4a60-a2c8-2e1f6bdf0ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5324e0b-ea70-4cca-8166-73738f1b3fc3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37cec4d3-11a5-4aa5-a2d1-93d15a882fe8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c95bcbd-a501-413a-8cd3-51139e094886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a01067-5909-427c-9d4d-a5b8c5be64fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2770106-129d-4c07-bf3b-45313ec0fd74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e07cfee-546e-444f-ad6c-7fd2263eb603",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256815eb-5e1d-46f5-8295-c85983d0f983",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9070e405-78cf-4f77-8a4f-766407b57730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5259ca60-311a-4650-849c-055a83390015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aebc33d2-92dc-4417-a065-d98dab73baa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4559d5-419f-47b8-a09b-21a162f6faa3",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4be927-a579-4045-b994-ee79b71e0284",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf1b23f1-4e90-4f9b-b5e3-e0bd2d9f10aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dedb5f76-d621-42fb-b96f-44f75847c2ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1bd7086-8468-4ca4-8792-325270fde22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15e00ef-69e9-4fa9-9480-fd8375f04fa7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c961160-3a8f-4190-8548-260fce39cbd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6078368a-bb87-4af7-bbe5-8eb88a260dcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cba8283-1209-4d8f-9949-0d958d6038f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebb84795-8b64-4803-b522-6c05b6146949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c304a5f-0c8f-4ff9-a56d-9ad8494fee4c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7659b97-1924-4780-8dc4-7c76e17c784f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47e2ed3f-d84e-49f4-aa82-4d940b072cb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7550f005-b773-4ff4-a41d-c37e6cd48e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fdbcfc3-0cfe-4ebc-92c6-f72cbea5b6f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49706927-5668-4fd2-845e-864c1fd71da9",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ceb62bf-1562-4c4a-a300-1859ddee202d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9334c771-684f-463b-b5bf-5de45468da54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a266b033-8dec-48a0-bc18-160082533957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2692b0cb-46fb-40e6-8d08-fc37799482d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397baf2a-cb6a-49e1-8373-e023e4e1fd46",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a823fd-5442-4db5-951b-b6c44ed22319",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a566600-63da-4c48-9a85-29c0a6786ddf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de9a70a-ff71-4582-9add-74e0fb3b52d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf97fb4b-45f0-43ef-b71a-a063d811d652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3a7eae-4420-42d4-9762-4aacbd48d580",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971f2aad-31bf-4d9e-ad4a-3fe4e5e6c9ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d0e2523-92c8-45bd-b675-ab3f75f4a126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2dd575-b5dc-4f62-9731-e1d21a861e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dbe6d81-263d-40ff-b83e-564d4e98d393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2592300d-7081-446b-98c1-ec2b3d2dbdd7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9a5e17-260e-4e9c-afa5-933e85b0465a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93753999-12ca-4e6f-986a-28e835b8fc9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0979f2-8b4d-43ec-8164-adece44b64c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf2b09a-933a-41da-bdc0-b9b2654a8f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29f1bb0-1907-4ca3-aef7-2d894e43c611",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653f2570-a95e-4193-951d-efe521fa1eee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d0c54ec-de2d-40fd-9f4c-26e0b7e0b66e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ee3ded-89ea-4f0c-94fb-96621767f7d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6b78497-c74b-48df-9a74-e20fc3e6504e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de1e6aef-4813-4e2a-be08-e90127c9ae60",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf21332-06e9-418f-b783-9a8d7e190799",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "445aa6cd-8037-48ac-b822-2ff4076124a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "250f26f4-e399-4e91-b837-9fc8d291005e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d03c66-95a1-41f4-8115-491fd5b67f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e3657c-bd93-4c99-9fb4-708dfa54319a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9094437e-3bd8-4d69-b431-e5a3823490b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bdd09d0-77bc-47ee-8874-4973c401a994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f089f3-7daf-4335-82f9-72120c197bc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d63cf474-0467-47c9-bcc6-c85c14081f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff27226-de5d-4a96-94ac-af13b5e5c53f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647fd9be-e6cd-47c8-9617-5b28d9162b5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f62cfea3-4c85-468c-90df-19485aa5ac1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0324e2-9699-469b-bfc1-679508e3369f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc966e54-5cd6-4e53-90c5-c76baef23943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72957191-add3-47f5-b445-40835dc92766",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a1461a-80cf-44b2-bdbf-d7939a6869f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b00be7b-ea80-4bc0-a76d-7937df75859b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb50537-66f9-4ff0-9eee-258ab3f737be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36177f68-e3a0-4b6c-b009-95b36e02bb0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2e474e-3c68-4eb7-963c-0fdcf288328a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc6e8c5-dc59-4407-9c72-112d4ae87d75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4b0e53b-e12b-4848-b0c5-82945e759adb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0cf54d6-b58c-49ce-a9fe-681e3bc0f8d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b45d381d-c9ef-44e9-a117-913f1c0040f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c487342f-85c1-4e23-8644-d5a534ce8921",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273f83da-0d9d-4283-bca0-b160af8b3090",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa09f93d-d1c3-4d6d-a67f-25bb98deb605"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2d65e6-c76c-4e40-92d3-c8850e3e0aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46a15bf9-094f-4885-9560-7d862a06c8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdfff201-95a4-4806-892e-41cf657bc5ac",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259b9b1d-b5c7-4f63-9552-0dcec5332cec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca4aa0be-f289-411e-a694-e13e49f6d096"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32711f13-9593-4193-a94e-2801ddfbc462",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eb3ec1d-3c42-4501-bcd5-5dfe103dc268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ea9bab-cc6f-4271-85e0-11783808e385",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4135a1-1914-45f2-9003-f447c7d47775",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b5a419f-b1d2-48d6-b57a-757badf6ad15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6579c59-eff2-48c1-90b8-89f09d71a3ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3025bb31-f89f-499f-804e-ce1dbb0a1c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a658dbc-6865-4344-9ef5-e1de77ea2da8",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1038d544-f708-4a84-b056-e96a64d59d78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abef2b17-2e34-497f-b396-fff9398afbd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6799c447-aa25-4ae5-bd52-2052e2cdbb02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f09a297-f14d-4444-a4f7-fa6cddb172b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0efef975-0c69-4ec2-b8e7-d45d708cafa5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ae17d4-ce82-44c5-93cb-0e5d8a1b58aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83abf29d-38b7-45fe-8229-16e7483aaddf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8d5091-d2bf-4fd3-93ba-9de9f7a31cfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c40049-9b14-4e86-85fa-4f1c5a28b90c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792806b9-add3-4761-bb1b-b6fe2ad168e4",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207a2f0a-4271-4861-ba01-d24562650f7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be4b2f03-42ac-4ff6-adcb-412ab26f815a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa8e690-4b4b-4701-828b-84d5797ea637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1cdc711-1800-43e3-a04c-665d22a1c6cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac9e970b-4e11-48b0-979f-02a37894a9f2",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00539c0f-5829-4a8e-98c5-7c09450b7de3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7aa900f-31cc-41bc-a6ed-0461539992c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4edf02ef-9eb2-48f8-8b01-209c06bf9ea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "729c94c1-b8a3-470f-9709-4fb52e403749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80353c5a-d069-446e-8589-6a698b0c4730",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88683300-b191-4a7e-bd10-aa78e5e8fe1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef4eb43b-d117-4458-83c0-aa5e03c6c1bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4940467-9c88-4789-bd73-76dd545f59bc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eab7a84a-3783-4b76-a3db-2d7762f7d2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aaf6173-fb46-42e0-9a27-858c5cbfbd12",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd7b4b7c-a0f1-4f38-9b50-9d7546c44269",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a70a68f5-f0e6-4579-adc5-ff6db28c7c26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db98e8e-3521-4f09-a524-7cd0f36f8691",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf36a091-3cd3-4a3a-83e6-975ef56db3a4"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7484fe85-3509-49f1-87a4-a8ebdd142ab8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c2a8abf-2ec0-4c9b-95c0-ee30c8c5f27b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f375f63-302c-43ae-b74b-28e7267747a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "656fda0b-bc58-433d-947b-41eaa4963033"
                    }
                  }
                ]
              },
              {
                "id": "aa7d84df-9561-4016-a77b-2ba12deea6f9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ced1e690-4602-45ec-af2f-6e081f59aab0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2706e84-32c7-43e8-829d-959b5a99902f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "877883e5-d265-4f73-a7f6-4b70b0ce06a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a3150c-bddc-4f1b-9bc6-0a33fba16e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4fd95cb5-7fd1-4313-bc04-0729ae4512ad"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09b13082-ba7d-4375-b74b-5712a684ae62",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11dfa5b8-c360-4843-b20b-f58bbbd5e921"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "efa80d47-430e-49ef-9782-b491eb65e24b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "264061c7-0586-4490-82f4-3b2444e01904"
                    }
                  }
                ]
              },
              {
                "id": "356a6850-844a-4f5f-8829-ac580897548f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4ba835ef-cfe4-424b-8cec-2b1eb5523e1e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00d477c-efee-4e96-8b9f-2de3c9ecdd47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6011c0ce-e25f-481b-8541-7272c411ef2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17dcb02-bbfa-4c3b-a9f8-0b752977086a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78db18da-5495-436d-ba94-cd47e60cef50"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "38d97699-58eb-434e-a51a-0790cc829f3c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3d1880da-d5a7-4526-8f05-6682ce250d29",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3693f986-3df8-4faf-bf08-3070891d8bb1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cb13b9d9-35f6-494d-9f64-182e98832d18"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d59682f2-e5f0-4c6f-baea-a9347c52a491",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bdf3b096-0a8c-4f2a-b41b-e486632d44e8"
                    }
                  }
                ]
              },
              {
                "id": "d3ba0281-57d7-4fb5-9f55-a82938222586",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf6a8978-cae9-4ad5-916c-b9c0ac5ad369",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "638a4bef-a0dc-421f-9e2e-1d694ade8231"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18c3c802-c11a-4b53-979d-9473b7fb4faf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "12d031a1-ab24-4937-b558-548e32430cbc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "892a9622-dee1-42df-845a-29549ff2d749",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9b3ebaf7-62f1-4d1c-ac4b-74ee1b8b952c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0c300989-75b9-4ccb-9f39-53806bfdd139",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4b7bb113-48fe-49ba-a5f7-dca66bdd5e05"
            }
          }
        ]
      },
      {
        "id": "3b1b4554-cb20-4781-b4ef-31888f2eb0bd",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "43ea1146-8098-4772-9fd8-cd3634481385",
            "name": "Negative Testing",
            "item": [
              {
                "id": "564c82e7-0094-40eb-9d6c-6ca880907659",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e072c2fc-57c9-4a65-a1d7-33606d21e1cf",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0894036-137a-46f8-8d2b-e52a0899bd1e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "000ff415-af42-410c-8840-a19132acfcff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18986652-790e-40a7-8d4f-c1b398f95ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8d4c11b-222c-4a0d-8d12-80bce51d4180"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8bb69d32-e4b9-4ce3-ae05-1328198d33c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa89377b-4b3c-4f4f-b1fb-be07bb2fffd1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "81b65349-b1c0-4680-a53d-cc8ea5785a59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9084825-daf1-410e-81c3-3d1afcc7b23b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "240b4a58-8e3e-423a-8b49-582098766e8b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1522ef40-3afe-4025-9ac1-d34756336d7a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f21b692-61d1-401a-93a9-faa7cea4edcc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c89d71a-fab7-47e2-bc83-2aa92007dc08"
            }
          }
        ]
      },
      {
        "id": "8aa1a882-687e-492c-9ba6-d21d41a22770",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "37afe896-38a9-4199-a038-ad85353d7a1b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "554c2501-95ec-47d2-b0a1-4d17dd2074f2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8d9e13ba-a5af-48b8-b5b9-2d7c100252f5",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29dc6d8f-d6c5-495b-bc9e-63f58196a1a0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da7f97dc-fd32-4dce-a080-33e15ecc3672"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7896a0c8-f436-4531-b2bd-429c18166300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dedb63c3-a5a5-4cd9-9263-8cf24707181b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5bf60714-475d-446e-9a99-c4b5546e45f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "afa65922-86ff-4da6-b8f5-a27ab97a5a74"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "91e65c8e-4a93-47de-9764-be411af34255",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db132dd8-36fe-4c08-be00-38342bad10ed"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5453820e-9b63-483c-8ae2-31d4e02e22b4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f0619a54-4aa5-4d5c-ac15-883c7b4f54cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe27ea62-44ef-47f4-8a1c-37e0a06e6bc4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7561da3-36e8-4b47-8cda-90f9039e50f9"
            }
          }
        ]
      },
      {
        "id": "df6c5888-8af6-4d73-a010-68b3dcd74414",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "21c80393-a466-49b1-8d3b-78e937870f78",
            "name": "Negative Testing",
            "item": [
              {
                "id": "093ca6a5-d0c1-424f-8f4d-1977c39e810f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c72ac697-bd38-4aad-a50c-6969c2824d9b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c847f03-8aa2-4622-b68c-bb51f948e0b5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b4f852c-fb8f-472a-ba7b-3fd3d16d25b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "222d8651-7aa8-40ec-b263-e1afc2eb840b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2393224d-aebd-4260-972f-27b3223d5122"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10b5b9d1-8cf2-479a-8cb3-d8a6ee5a90ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb9d1345-b212-473f-ab78-55187b644337"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1fa929ea-4fa8-49c6-a3f0-c8486f3e7523",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b4e3080-85d8-4b7c-a54e-1005e82df2dc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c9c2a1ea-bd94-4a2a-961b-ae2a89422636",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "de52801d-840e-40d3-a0c2-92963442355f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e1615afd-d9ad-45fc-a20b-605ea6a0c8ce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d52ddec5-b6c0-4ca0-8882-6a323efb335c"
            }
          }
        ]
      },
      {
        "id": "1bbe0ee0-0774-46ca-aa9f-e09b1e80da23",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "62e3c013-728d-4919-a5e4-07ca35d543e9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf6d5916-881b-428d-b481-6d4c4cb4a303",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "df5fef92-c611-44d5-add0-a62f97f104d8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b4df91dc-0b02-4f5c-858e-90cc98733bc0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81ff5362-3e09-45ba-86a0-14a297feaa29",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 78.51408450704236,
      "responseMin": 12,
      "responseMax": 5018,
      "responseSd": 388.0199779943729,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1695342797104,
      "completed": 1695342831194
    },
    "executions": [
      {
        "id": "76c68421-1cfc-4718-9ebd-f9f9212d02a3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e27a8f66-36ea-4a2b-9c7b-6d71747b855d",
          "httpRequestId": "420a67fb-17f5-4405-9e2d-eec973ecfe1d"
        },
        "item": {
          "id": "76c68421-1cfc-4718-9ebd-f9f9212d02a3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "028948a7-7599-4735-b02b-a52c17848e9d",
          "status": "OK",
          "code": 200,
          "responseTime": 110,
          "responseSize": 0
        }
      },
      {
        "id": "b6a23d43-6fe0-46c2-b51d-76fb910d3f42",
        "cursor": {
          "ref": "8dd83ad1-27e0-48d9-9cb5-d44a5b714799",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "dd37f21a-c967-4502-a9d4-6d9db8963d97"
        },
        "item": {
          "id": "b6a23d43-6fe0-46c2-b51d-76fb910d3f42",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "50b79371-d94f-435c-9bab-a090a5048cdf",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 0
        }
      },
      {
        "id": "fb286d27-e727-4167-beb5-ec15e04d02f7",
        "cursor": {
          "ref": "248dffdd-b6b6-496a-b8ec-adc14aff2f79",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "117fd465-4b92-45d1-82aa-dfa0cdce0592"
        },
        "item": {
          "id": "fb286d27-e727-4167-beb5-ec15e04d02f7",
          "name": "did_json"
        },
        "response": {
          "id": "22c649b0-cc2a-41cd-b299-7371928afe24",
          "status": "OK",
          "code": 200,
          "responseTime": 129,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa107a0-0e9f-4a81-8f97-c3054f297827",
        "cursor": {
          "ref": "6327a5dc-f120-4a13-bda5-53fa15da4b0b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fcca2875-4b02-4fd5-a8d4-b8f4f3de0d71"
        },
        "item": {
          "id": "2aa107a0-0e9f-4a81-8f97-c3054f297827",
          "name": "did:invalid"
        },
        "response": {
          "id": "3db2b8df-bf4e-4093-856d-614e82a23ccd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 837,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa107a0-0e9f-4a81-8f97-c3054f297827",
        "cursor": {
          "ref": "6327a5dc-f120-4a13-bda5-53fa15da4b0b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fcca2875-4b02-4fd5-a8d4-b8f4f3de0d71"
        },
        "item": {
          "id": "2aa107a0-0e9f-4a81-8f97-c3054f297827",
          "name": "did:invalid"
        },
        "response": {
          "id": "3db2b8df-bf4e-4093-856d-614e82a23ccd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 837,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e43059b-ac40-46cc-86e0-6149d7cca8e5",
        "cursor": {
          "ref": "60726d8d-f4e1-4fbe-b396-b68c20b04ee2",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2f315345-f783-4d22-b237-7b62125806d3"
        },
        "item": {
          "id": "5e43059b-ac40-46cc-86e0-6149d7cca8e5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4fa9fb3a-c745-46ce-9941-670d1c9c30db",
          "status": "Not Found",
          "code": 404,
          "responseTime": 49,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ef5b14-4a47-4f22-a5de-54c48de48319",
        "cursor": {
          "ref": "040ab256-c895-4ab5-a9f2-a9bb686c8849",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "085b39c2-1231-495b-bb40-01f7780ee48f"
        },
        "item": {
          "id": "85ef5b14-4a47-4f22-a5de-54c48de48319",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "438a3240-9229-40b9-9b41-83fdf09336f0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 28,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f62f92-1441-4ced-9496-b26c50a52334",
        "cursor": {
          "ref": "6823cae1-5d0a-4680-9cef-f001739403c6",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a32a42bc-fbd7-44cb-a685-315880b467a9"
        },
        "item": {
          "id": "11f62f92-1441-4ced-9496-b26c50a52334",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3da1f756-ecfd-4333-8507-25f1a9a4ba51",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38dc6fbe-6b7d-48e9-b7f7-e5b9696b9500",
        "cursor": {
          "ref": "805efd5d-d2a1-4603-8e77-4a7077f191b1",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "03ac6994-abee-4e9b-b68c-e8bc9018e068"
        },
        "item": {
          "id": "38dc6fbe-6b7d-48e9-b7f7-e5b9696b9500",
          "name": "identifiers"
        },
        "response": {
          "id": "0b589acb-d8d0-483d-97f3-d5e7238bcc43",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ab2e0f-59f0-4e63-9e2c-52ca6e0c9d0a",
        "cursor": {
          "ref": "47fd6b11-bdb2-4341-aaf7-1fb5e61e27ce",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "262cb08c-32fb-45b7-a92b-9e35c558e68c"
        },
        "item": {
          "id": "d0ab2e0f-59f0-4e63-9e2c-52ca6e0c9d0a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e172fd46-1c19-4864-8ee8-91d286ea7d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ba6c43-7018-4003-9871-06addf69e71c",
        "cursor": {
          "ref": "55143775-f712-4a31-9515-7a9e7d2ff315",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "47d249b5-8bbe-4fed-864e-5f4630815f66"
        },
        "item": {
          "id": "79ba6c43-7018-4003-9871-06addf69e71c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e6864ee8-286b-44e2-b07c-8488d0e032cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624932da-62a2-469c-ae21-4dcffdc57121",
        "cursor": {
          "ref": "ba8ea9a8-a03d-44fe-a326-8b90011ef088",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "377e3571-b75f-4d68-b550-15b6424d97a6"
        },
        "item": {
          "id": "624932da-62a2-469c-ae21-4dcffdc57121",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c71f4dac-37a7-4bdd-8f81-bb807a27720a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0171c311-5c9d-41ac-9503-da4dc963f1ed",
        "cursor": {
          "ref": "0da8607e-35f2-41ac-b011-eeab3847dc35",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8e80d4db-494f-4d6e-bddf-b6221f45a755"
        },
        "item": {
          "id": "0171c311-5c9d-41ac-9503-da4dc963f1ed",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f6d7ac67-91b0-4e82-b905-9add50a20ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf7446d-f4b9-4c1f-9fbb-bdabb761a917",
        "cursor": {
          "ref": "5f01807d-fc61-40c5-98ad-8cf0c8503954",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9155cd29-5745-4a6e-afc7-4a1158cf5223"
        },
        "item": {
          "id": "ddf7446d-f4b9-4c1f-9fbb-bdabb761a917",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3d82d184-58ec-4704-be6a-e2950ddd4a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c248aee-dc86-4f0f-9bfb-7719e6d69161",
        "cursor": {
          "ref": "ff90021f-9229-42c3-a9e4-6ff0a776051e",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "389e4d37-1217-4253-9311-3772e66e03a4"
        },
        "item": {
          "id": "4c248aee-dc86-4f0f-9bfb-7719e6d69161",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "06d41ad2-d02c-44f1-b9a7-5246545f5310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07361370-13bf-4dd5-8246-92a2d2780477",
        "cursor": {
          "ref": "2fe04967-7bdb-4f10-97ad-73f4e1df8d93",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a4915eef-be4f-4c61-bb5d-c8320405a238"
        },
        "item": {
          "id": "07361370-13bf-4dd5-8246-92a2d2780477",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "98e724b1-a316-4c75-8526-d7cdc1ef428d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f600694c-c250-4e44-84d0-adaf12313c8f",
        "cursor": {
          "ref": "41941a83-84c9-4adb-8edf-15f5f6e5cab0",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "db3d4fa2-bb06-40e7-8a10-e3bbb14980dc"
        },
        "item": {
          "id": "f600694c-c250-4e44-84d0-adaf12313c8f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "398eb307-55f5-4526-93cc-4155d30726dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc01fd9-b5aa-4632-9e6c-6a270fd4a17d",
        "cursor": {
          "ref": "b3628cd9-4044-4a10-8e93-990400577da7",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9e5abb42-4cfb-4eab-9d5b-75e1de944f73"
        },
        "item": {
          "id": "4cc01fd9-b5aa-4632-9e6c-6a270fd4a17d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c883f34b-fbf7-404b-98ba-f6bcc6cb30aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56cf586d-c002-4eb6-9f2d-c88244ffa7ae",
        "cursor": {
          "ref": "0c6ea24d-48da-4845-8f4d-974646a0232b",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d1b4c6bd-4a67-4fb6-ada1-4d573efabf9f"
        },
        "item": {
          "id": "56cf586d-c002-4eb6-9f2d-c88244ffa7ae",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "41c2fad0-be6d-4e28-b519-36f950ede04f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4590d86d-6846-4c87-821f-966e81c02d0c",
        "cursor": {
          "ref": "51365758-761d-4fbc-940f-0901a282757b",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6d12d2f3-abd5-448f-b228-8adbf2ff5dec"
        },
        "item": {
          "id": "4590d86d-6846-4c87-821f-966e81c02d0c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "89fefb92-917b-40fb-bd49-559c6b6e1a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e69683-13a4-49ae-964e-beb4cec08eb8",
        "cursor": {
          "ref": "f7c7b61e-93e5-4648-b2ad-521543076e79",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f5152e0c-2226-43f9-a60f-db11463bf671"
        },
        "item": {
          "id": "86e69683-13a4-49ae-964e-beb4cec08eb8",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6fec2233-7021-47ae-af92-325015a54388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02796cb0-936e-4da2-ab98-a247c6c3a636",
        "cursor": {
          "ref": "8c8a8b0d-2aef-4d1f-a336-fa41d372dcb9",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e3dcd2ac-93d4-458d-8e14-0b5e6b8c1b70"
        },
        "item": {
          "id": "02796cb0-936e-4da2-ab98-a247c6c3a636",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f0d526f4-419f-417c-adbe-5db9a6d14f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c76d2df-5d60-47e6-8c1d-42022ef0899b",
        "cursor": {
          "ref": "4422a38f-2894-4a7b-a6ac-173e41c3147f",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6b4cdf2f-7d37-4659-8180-9592285fa6db"
        },
        "item": {
          "id": "6c76d2df-5d60-47e6-8c1d-42022ef0899b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9c4653bc-6992-4923-a0fc-9a36706458f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c485cd2c-6c70-499b-b573-0b741cd8ab1c",
        "cursor": {
          "ref": "9fcd339e-e614-4d5e-9fe8-82c400043e1d",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b2524785-975c-4eab-9fe9-112d10c81c60"
        },
        "item": {
          "id": "c485cd2c-6c70-499b-b573-0b741cd8ab1c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "520454e7-bad4-47a6-933a-6a985ce000d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac0ad82-8f4b-4c8a-8ac4-8f586c4b0a71",
        "cursor": {
          "ref": "db718af9-a2ef-4f5e-8676-4b89d0457606",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a320ce1c-9db2-47d5-a6e6-f6c4369c3ce3"
        },
        "item": {
          "id": "0ac0ad82-8f4b-4c8a-8ac4-8f586c4b0a71",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "db03e853-dcca-4500-94b6-cac8e7962684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7fc9c1-a1a8-45c6-b655-ae2d0bda1d10",
        "cursor": {
          "ref": "903de33b-2815-4ac8-abda-7d766b609ca5",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7d8b5d44-d50c-42bc-8fe9-710a39c25685"
        },
        "item": {
          "id": "8c7fc9c1-a1a8-45c6-b655-ae2d0bda1d10",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e61932b0-2f5f-4e51-9877-6f1540d425e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d936e55-1c88-4996-8e72-e6a5d291462e",
        "cursor": {
          "ref": "46cd97b2-e96f-4e43-af2f-9782f7c1458b",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "761a0f5f-ce13-4206-a391-727162dfb7ff"
        },
        "item": {
          "id": "9d936e55-1c88-4996-8e72-e6a5d291462e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "66f58d14-3599-4271-9426-e34ebb55be3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b4e4da-8fd9-4901-8d70-0a29a1fba373",
        "cursor": {
          "ref": "b6c1e5b7-8e00-489b-b298-b92039f7adba",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "43bb347b-48b5-4b51-bac4-f3e66f17aed7"
        },
        "item": {
          "id": "60b4e4da-8fd9-4901-8d70-0a29a1fba373",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "be9c96a5-5dbf-43da-9162-222413335ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10437cc-022f-487a-aef6-cefb73491cdd",
        "cursor": {
          "ref": "3a6927ac-34a2-402f-a9d0-b6e6fd8d162f",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "91659e1e-1692-476c-9da4-8dd7c403ff29"
        },
        "item": {
          "id": "e10437cc-022f-487a-aef6-cefb73491cdd",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9dfdf7e6-51f7-4395-8ace-3a06384291e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59df4d93-ab7e-46fc-879d-b642d0321246",
        "cursor": {
          "ref": "510557de-efe0-4a77-9af7-c87c2e9b699d",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c81baca9-f018-426a-8ddd-5fa309e81ce2"
        },
        "item": {
          "id": "59df4d93-ab7e-46fc-879d-b642d0321246",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2252063e-91a9-439d-a7e0-d13be1a8fbaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9514e25-39db-49f8-9f4a-d340e369728a",
        "cursor": {
          "ref": "ba092fdc-c9f0-4b4b-8384-693c0d62dcc4",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "cca3a506-a6ec-4cbc-9a3c-46932668763b"
        },
        "item": {
          "id": "c9514e25-39db-49f8-9f4a-d340e369728a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8525f50f-fe76-453d-a262-39be73340537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766f6142-af53-44c2-9165-acae2a8f3245",
        "cursor": {
          "ref": "aaac0478-af7d-4d69-9ec2-64e92617d78f",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "85974c77-9ef6-4298-9328-0711ac8b8545"
        },
        "item": {
          "id": "766f6142-af53-44c2-9165-acae2a8f3245",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "62a29698-1b16-4b1e-bf10-099aba7ce4fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee33d9b4-1e84-4f63-a783-30719d958219",
        "cursor": {
          "ref": "c70f6f60-31cb-4968-8d6a-76998f864270",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d00db592-245a-4e5b-90c1-9b97e64d78cb"
        },
        "item": {
          "id": "ee33d9b4-1e84-4f63-a783-30719d958219",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "36b014a9-b4f3-416f-8dfd-d2281c81253d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d573c23-5f68-45db-b723-45de116ce8ec",
        "cursor": {
          "ref": "8759b287-857e-401f-85b2-f3854b629348",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "aac6a6b3-11e5-4394-8085-b1f331310f7c"
        },
        "item": {
          "id": "0d573c23-5f68-45db-b723-45de116ce8ec",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b5986f74-e546-457d-b1b0-513bcc755b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7690c9-a48d-42ff-a8ce-275b8383e242",
        "cursor": {
          "ref": "5f74d116-5d20-4f17-b0ad-29bf6f634d64",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "57b157d7-33a0-4d86-b775-b595829f846d"
        },
        "item": {
          "id": "aa7690c9-a48d-42ff-a8ce-275b8383e242",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5679c554-e0fe-484a-905a-b2142e6c823a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb706f5-9d7d-4e03-85c6-030ddb0831f8",
        "cursor": {
          "ref": "10285272-b81e-4f61-b003-1786eebe3ff7",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "66c3ba3d-5a9a-442e-91a9-ede27658df2b"
        },
        "item": {
          "id": "bdb706f5-9d7d-4e03-85c6-030ddb0831f8",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "905956ea-a3fc-44c1-8fc6-28680c5c832e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bfe5e4e-d6ed-4ec7-af20-29098e3affd2",
        "cursor": {
          "ref": "b427e9ba-df06-4983-b286-8421b8e51628",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1fd309e2-c9a3-4af7-9842-ae8c27be3c03"
        },
        "item": {
          "id": "3bfe5e4e-d6ed-4ec7-af20-29098e3affd2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "716a6ee1-6685-4bf2-95c7-54202d89ecbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbe3015-5a19-4881-8fa0-c6ff33acbe87",
        "cursor": {
          "ref": "8b09c152-776a-42f9-a23c-69c55abd6dc1",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "48078c1c-0fda-4580-848c-d1832782c3d8"
        },
        "item": {
          "id": "acbe3015-5a19-4881-8fa0-c6ff33acbe87",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "40913fce-6ab6-40ae-a262-573afad39d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab047f1-9be6-4506-bf59-2a6eb6a40220",
        "cursor": {
          "ref": "b615524a-1212-4fee-b8b8-bb4714a01aec",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ef58cb0a-e9ec-41a3-b8e8-c10cefb18ea6"
        },
        "item": {
          "id": "0ab047f1-9be6-4506-bf59-2a6eb6a40220",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "15e61636-820d-459f-9317-4d2a4af39075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8127e1-51b8-4039-a612-730ff81f2f90",
        "cursor": {
          "ref": "18b694b2-c0d9-4919-b728-eaf539cc0f96",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "144576c6-3939-4375-a8db-c304a01520a7"
        },
        "item": {
          "id": "8f8127e1-51b8-4039-a612-730ff81f2f90",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "339ae12c-fd42-488c-b471-357221304d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632ddaf8-5914-4aef-8c2f-6d757ac564ac",
        "cursor": {
          "ref": "cb6e3375-d1e4-4b5a-8a65-b4639b1a7987",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1b138853-bf0f-4b34-a18e-51dd05107ab5"
        },
        "item": {
          "id": "632ddaf8-5914-4aef-8c2f-6d757ac564ac",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c87e897c-8b58-42dd-95d4-f79c8ca869b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "277b8557-2db3-41eb-99d7-1eb0643366ea",
        "cursor": {
          "ref": "d519d6d0-ada2-4b07-b397-9edebc691e81",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7e8a9e17-9283-40b0-8af9-00a7278605a9"
        },
        "item": {
          "id": "277b8557-2db3-41eb-99d7-1eb0643366ea",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0ff40504-79e4-4294-b619-7e416ea29907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb4fb8b-a411-4840-8c74-80e695fb19fc",
        "cursor": {
          "ref": "95f3730e-5e67-4d0d-abcd-31cb61d1740a",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7c151296-a3e5-41b9-8971-9995933ed685"
        },
        "item": {
          "id": "0eb4fb8b-a411-4840-8c74-80e695fb19fc",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "04650e1e-b771-499e-bd95-36913c5c81fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507bb0a0-81e1-4650-ac8b-b505307eab14",
        "cursor": {
          "ref": "db68d553-555a-4ced-8a1a-dc315bf0aac5",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f0925711-c006-4b8b-bd7e-f7a6ff1d2d50"
        },
        "item": {
          "id": "507bb0a0-81e1-4650-ac8b-b505307eab14",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ca7529f4-9c15-4da8-866b-19ea8bfc9cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e16db864-5bba-4e9b-83aa-e393a815c4a9",
        "cursor": {
          "ref": "02c0af50-8515-46f4-94d9-eafd4d9d3c8d",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4dbcabc0-3ce6-45db-8931-623d3c2dabb7"
        },
        "item": {
          "id": "e16db864-5bba-4e9b-83aa-e393a815c4a9",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4fcdbf0b-7b42-420f-9cc4-92ccd940092f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35acc125-bf42-4bdc-9e3c-d8d619f35d83",
        "cursor": {
          "ref": "0a22f205-cac9-4efd-a5a1-d9ce0e046b6c",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b5e9a1a1-6238-4b2e-b8a9-b7a71100724e"
        },
        "item": {
          "id": "35acc125-bf42-4bdc-9e3c-d8d619f35d83",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2936820b-251a-4009-b02e-71e8f02fa74b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd256281-1bd3-447b-b85d-0f0044ecde26",
        "cursor": {
          "ref": "0660f9d4-87d3-45d8-b51c-5493f9057a8f",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0c701470-71d4-4002-a89d-556654cd5e8c"
        },
        "item": {
          "id": "dd256281-1bd3-447b-b85d-0f0044ecde26",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "62884768-37ec-44b9-b3ae-0b2ee1582ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d62521b-ca12-4363-a849-5a74138f3d3a",
        "cursor": {
          "ref": "b05cbdd3-517f-4a1b-bb97-04125c2955fe",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "9574c884-1ec0-45be-bffb-510c560dabb9"
        },
        "item": {
          "id": "7d62521b-ca12-4363-a849-5a74138f3d3a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c793858d-e829-4449-915e-3e75be85c765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b48fb814-e304-40be-b9bf-d0236031a922",
        "cursor": {
          "ref": "f0f6faba-6e97-4b2d-8277-9fe27c12ff01",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "62d5e5c4-47bd-45a9-b50e-f7b5395f5379"
        },
        "item": {
          "id": "b48fb814-e304-40be-b9bf-d0236031a922",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f48eaec4-0c31-472b-abbd-bd8d0a817bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ea7089-2cec-42ae-8bef-56e4ac3189de",
        "cursor": {
          "ref": "e12871ff-3a80-4c4f-9397-35e6dcee027c",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7d609465-051d-46e6-abe8-30e1d5cd7653"
        },
        "item": {
          "id": "24ea7089-2cec-42ae-8bef-56e4ac3189de",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "57789551-600d-4a87-83f2-cbad688df23d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e3b52b-2829-4132-9d72-6bcd65116f9e",
        "cursor": {
          "ref": "60099c80-a210-41f8-85d9-e4d1ce85f474",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8b5afbb4-3a77-41e4-a28e-26328adacf31"
        },
        "item": {
          "id": "e7e3b52b-2829-4132-9d72-6bcd65116f9e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "cb280bfc-9c75-4151-8f9d-318c98da4d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d66834-8f00-4827-88f7-05073af2740f",
        "cursor": {
          "ref": "fcce37b0-2844-434f-9919-1b8893286b08",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6bec39b0-4214-4618-90d2-49d3442234a6"
        },
        "item": {
          "id": "60d66834-8f00-4827-88f7-05073af2740f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3d8db734-3413-4ec5-9856-1e119dac0b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a41a2c-a3fb-435b-90ac-1a72bb99b89a",
        "cursor": {
          "ref": "b84dfcba-33a2-4f75-9d1d-71c36798649e",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "533502f4-7871-4f4c-b5f9-7870b1355f20"
        },
        "item": {
          "id": "29a41a2c-a3fb-435b-90ac-1a72bb99b89a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "461d3942-a603-4a4b-aeec-ed76f55a62d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7011bff3-f2f9-402b-943b-2010c5060d10",
        "cursor": {
          "ref": "66a8b35d-5de8-4612-aef2-7c2d56bb6c99",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "df0f3742-178a-465d-9e28-5c8cbca3b6cd"
        },
        "item": {
          "id": "7011bff3-f2f9-402b-943b-2010c5060d10",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "784213ba-4bf6-4551-b99f-e58d453381fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "153a38e6-3b66-46ba-8192-f0f934ad7106",
        "cursor": {
          "ref": "a1364b25-3709-4083-bd2e-f953b448d0ed",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d90f9728-10a1-407b-8dde-6290b6e48dcc"
        },
        "item": {
          "id": "153a38e6-3b66-46ba-8192-f0f934ad7106",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ed531b9c-1d8e-4b6d-b78d-bf555288c89e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5f09be-dfb6-414e-b220-99e2da42867d",
        "cursor": {
          "ref": "b9a244a0-5802-4908-8441-5717e2f8378d",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8b174fe6-08e6-4dbe-b227-dc0dbad4628d"
        },
        "item": {
          "id": "3f5f09be-dfb6-414e-b220-99e2da42867d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4541ca06-c5a9-4413-9215-31be12ba5728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca475e00-c0bf-40ba-ae7d-d17274dd20d4",
        "cursor": {
          "ref": "acd20cf9-2658-4d58-821f-8f2a21c2bd6b",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "35a84345-ae3a-499f-8055-1a2f4f8ba43a"
        },
        "item": {
          "id": "ca475e00-c0bf-40ba-ae7d-d17274dd20d4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "187a2c9d-643f-46e5-8cb8-89f4513c270f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a21d683-b8b0-4533-88a2-9ef72435e6cc",
        "cursor": {
          "ref": "71c98393-6483-4876-8a64-91d18a831297",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "70911784-398c-4b51-a337-a51f8e23db94"
        },
        "item": {
          "id": "8a21d683-b8b0-4533-88a2-9ef72435e6cc",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1a65f6e8-d4e7-4efb-b62f-7d8dffbf3e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3064d604-9019-4814-920c-147a0148be1d",
        "cursor": {
          "ref": "5da2af64-36d8-4585-9884-a15c18bd472e",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0185ed83-95f3-4b4e-a4a4-fb6c10b4b9d1"
        },
        "item": {
          "id": "3064d604-9019-4814-920c-147a0148be1d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5c8b1043-1efa-4244-b9bd-9b08802bd666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af00ab1-7cc3-4de8-abd4-0569afd7749d",
        "cursor": {
          "ref": "c7828af2-38ab-40d7-9ada-817e12e956f0",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "17fd47d8-e2ab-4249-a3a1-fcd5442d566f"
        },
        "item": {
          "id": "5af00ab1-7cc3-4de8-abd4-0569afd7749d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a4318d59-d415-49af-821c-8a6fbdb3d91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50dab01d-86a6-4b3d-945e-b3afd72e17a0",
        "cursor": {
          "ref": "29572f24-42d7-4ea1-a423-e7e56fb73966",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2849e2ce-6533-4011-9171-1b968c0ac73c"
        },
        "item": {
          "id": "50dab01d-86a6-4b3d-945e-b3afd72e17a0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "47d54869-0143-4ab5-a04f-e6df9da6d2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6dddbbf-17c5-4df8-8b4c-df4811cf3b7c",
        "cursor": {
          "ref": "1013f97b-147a-4672-9bc2-726c6c4d3df8",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "56b14c27-bb26-453f-b9fc-9bc8a2ad63ba"
        },
        "item": {
          "id": "c6dddbbf-17c5-4df8-8b4c-df4811cf3b7c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6b8520d3-9902-47b1-a5fc-80be890bd38d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83efebfe-73e6-41eb-b4c0-45446c36fa0b",
        "cursor": {
          "ref": "e50a965e-985e-48f3-a671-195640acdfb3",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d98f4fd1-1554-4d7a-aaf2-2d1b67192228"
        },
        "item": {
          "id": "83efebfe-73e6-41eb-b4c0-45446c36fa0b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0c4c164b-bc73-41cc-8779-62557a382bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a20ee5-2626-4b26-9844-8b1f4e4ab4e8",
        "cursor": {
          "ref": "10344983-27f6-4fa7-886c-c88003575f1e",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "345b0d19-a702-4645-8be1-4057aa752e63"
        },
        "item": {
          "id": "c3a20ee5-2626-4b26-9844-8b1f4e4ab4e8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c57485b9-a33f-429f-8d9a-d1dbb584e0a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286b1408-c740-4803-b5a6-6880e23457b5",
        "cursor": {
          "ref": "b6b6e92e-3cd4-4dbe-ba9a-1cdf77d3e143",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6da42895-6b4f-4979-a18a-b136458d2ee7"
        },
        "item": {
          "id": "286b1408-c740-4803-b5a6-6880e23457b5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f43403de-be91-4ac2-86d8-46719d8749d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1501d3b8-5bd9-4165-9490-7f50a9aa81cc",
        "cursor": {
          "ref": "93a30cfd-7656-4f24-999e-7c86c27ba9d2",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "96cff123-ed32-4caf-acc2-88472ae18542"
        },
        "item": {
          "id": "1501d3b8-5bd9-4165-9490-7f50a9aa81cc",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1314f581-257b-4cf2-996c-b32bec174972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a356dcd3-f0b2-43ec-8db3-9a9641bb813f",
        "cursor": {
          "ref": "f191a7ea-3cdd-4dea-9192-162a98bea8be",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e28e92c1-bfea-42b4-8520-643d8a58c4a9"
        },
        "item": {
          "id": "a356dcd3-f0b2-43ec-8db3-9a9641bb813f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "636db4cd-4017-43e4-bbb0-7bd59d8da359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c42f5f-23ea-4f00-b092-042dd1b72fd5",
        "cursor": {
          "ref": "1b035b72-34a8-46ff-ad75-fc9c6343c87f",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ab9f1fb7-c9fc-4b8e-bbfc-8cd7a4285fad"
        },
        "item": {
          "id": "77c42f5f-23ea-4f00-b092-042dd1b72fd5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b8068496-d267-49a8-8a98-171d0be377df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14117dbd-ddf7-428e-bea7-7680b71d1c47",
        "cursor": {
          "ref": "73dd6bff-caf6-4b6b-bc37-8220c76cbf85",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9dd204b7-84df-47f3-96ba-288a4a35d197"
        },
        "item": {
          "id": "14117dbd-ddf7-428e-bea7-7680b71d1c47",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c3b7e0ef-7f32-420b-b5ef-7e814a6d3040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baec25c5-62b6-4f17-b491-be8d7ea21e46",
        "cursor": {
          "ref": "6dc88a33-b205-47a3-b013-998bfeea6a31",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ba217654-2c14-40d6-9830-f3250ff33f8f"
        },
        "item": {
          "id": "baec25c5-62b6-4f17-b491-be8d7ea21e46",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "69c2a751-1965-4229-9678-9f32aa75b044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f2c19a-e47a-4f17-b39c-90df8bcafb61",
        "cursor": {
          "ref": "87d7aa19-54d3-451a-a574-a16a9c28f34c",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "14e81b93-7750-422b-938e-115f500db510"
        },
        "item": {
          "id": "33f2c19a-e47a-4f17-b39c-90df8bcafb61",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f2f2e87c-aa83-4e14-8fb2-f5969af9c10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aacbf130-03af-4e82-bc59-fddf1ada3e4b",
        "cursor": {
          "ref": "5f9cf961-0266-4406-8b1b-74757aa089c8",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "616b3fed-9c63-475e-a286-334e3f73617a"
        },
        "item": {
          "id": "aacbf130-03af-4e82-bc59-fddf1ada3e4b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "96a760e4-e79a-4686-8b91-7fedbd637a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f88299f-4422-4139-a02d-7fb0c196631c",
        "cursor": {
          "ref": "ff908646-d6c0-4f7f-a5c0-a5adbdad1689",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ba4f5457-6286-4b25-b147-390513b7b3b0"
        },
        "item": {
          "id": "5f88299f-4422-4139-a02d-7fb0c196631c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f490c23e-40d7-4ac6-9862-db51605daa32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57cd7728-ed57-4c04-bb38-cb4e97fa4bf9",
        "cursor": {
          "ref": "cbc841f3-1a4f-4539-b21c-e7ec46d66c56",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7cdcc377-b441-4db2-9002-fa091e0b2f33"
        },
        "item": {
          "id": "57cd7728-ed57-4c04-bb38-cb4e97fa4bf9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2fa98dee-9882-4dc9-b273-539ec5550cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e0abf2-7ceb-4844-b360-9fc9a0b072aa",
        "cursor": {
          "ref": "465cd77e-73b4-492b-9a30-196d67d9e6d6",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "46a9709c-7ffe-46c7-af5f-30f4e1c58cb2"
        },
        "item": {
          "id": "f1e0abf2-7ceb-4844-b360-9fc9a0b072aa",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "187319b9-b876-4b20-b23e-a229c641d0de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927ef156-4a36-4aa2-a28c-4fb9910970db",
        "cursor": {
          "ref": "32b4750d-45f5-4a2a-9d76-e47e5bd3eaa0",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1590d897-c410-4051-9a5f-43bef2806615"
        },
        "item": {
          "id": "927ef156-4a36-4aa2-a28c-4fb9910970db",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b073af53-6c53-42c9-b49f-97bf43930c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3575cc9e-6cb0-4a60-a6ab-9e1b59a429ed",
        "cursor": {
          "ref": "2b925e39-2d2f-4718-84ce-135d45de8181",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e7648226-1798-4c64-b4d1-30b40f4b1006"
        },
        "item": {
          "id": "3575cc9e-6cb0-4a60-a6ab-9e1b59a429ed",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "bfb34ed0-97e0-4720-9d86-7fc4d5f03ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9daa5a8-0a86-4b80-bcf9-24c4c2b1b954",
        "cursor": {
          "ref": "07b363fc-4a99-4cdb-bdaf-07ea40150951",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "bc67b452-d442-49c2-8ee3-bb8c64dc7dab"
        },
        "item": {
          "id": "b9daa5a8-0a86-4b80-bcf9-24c4c2b1b954",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1371eacd-8240-4ebf-8cb3-d483c2072687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8315777-c5cf-44c8-ba8a-1dd76cba6ad2",
        "cursor": {
          "ref": "e9e9bad9-3c73-43b5-94a1-38475b6ebc87",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f4b14e7b-e85e-4fe5-b73c-12577c48ef6e"
        },
        "item": {
          "id": "a8315777-c5cf-44c8-ba8a-1dd76cba6ad2",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ffed12f5-e737-41f4-88c8-c5eab86357b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dff00b9-ea3a-4bd6-aebe-29709c3692d7",
        "cursor": {
          "ref": "3b9058fb-434d-45b4-b920-f07a0ba62d5a",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0eeb8738-081f-434f-a220-c8491d32535f"
        },
        "item": {
          "id": "5dff00b9-ea3a-4bd6-aebe-29709c3692d7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "47e6cfcf-d87a-4936-8985-4bbc59c49640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f12d10c-4e07-4051-b0fa-9a4169c698fe",
        "cursor": {
          "ref": "d3942361-73ba-4bcb-b239-a29d4acb595c",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5a7666b7-82a9-4d71-acad-024655a120ce"
        },
        "item": {
          "id": "3f12d10c-4e07-4051-b0fa-9a4169c698fe",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "14884bde-61b3-42e4-a72b-69d89d6dc179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3023e2-e680-4fb0-91e1-2faff5af95e4",
        "cursor": {
          "ref": "8d81d33c-9fd9-479d-a27e-ab6daaf3b34a",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9c6b57f6-2e79-430d-963c-06d9f92d5df5"
        },
        "item": {
          "id": "3e3023e2-e680-4fb0-91e1-2faff5af95e4",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a16ace2a-c97b-4cef-9f14-64624d69be87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fc515f-7419-46c8-bf42-bfd23ffcc5df",
        "cursor": {
          "ref": "4d58bfa1-120c-489a-a017-42851e47357c",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "52c0f1ed-9b7a-40cb-9677-0686df0d1470"
        },
        "item": {
          "id": "46fc515f-7419-46c8-bf42-bfd23ffcc5df",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3a115d70-cf28-4e80-ac84-02df2870b821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34e6c9b-77e5-48f5-9929-f3a4a89bcbb4",
        "cursor": {
          "ref": "fafa7911-86e4-48e9-bf4f-ab3ae0bcf919",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "de563e03-d28d-43e7-8c06-d230483ea38d"
        },
        "item": {
          "id": "b34e6c9b-77e5-48f5-9929-f3a4a89bcbb4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "54acacdb-b6c0-4dfa-8eaa-339e54f59260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67fcc93a-e9c4-4b17-8be1-712b81e47251",
        "cursor": {
          "ref": "e2eec98f-88cf-477c-8996-68b93458bfe6",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "fb5db366-afa3-4c96-b6b7-9ccb4b3278d2"
        },
        "item": {
          "id": "67fcc93a-e9c4-4b17-8be1-712b81e47251",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5306b246-e12b-4366-b17e-f85b249c2dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8dfd98-4db5-43a7-a97b-a688c5e97fd3",
        "cursor": {
          "ref": "f45366a6-ef8b-4cdf-b920-eebc3a5b7ad9",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "78701811-a75e-41a0-97f2-f198859bc6ac"
        },
        "item": {
          "id": "4c8dfd98-4db5-43a7-a97b-a688c5e97fd3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f75cb2ca-75c8-41bd-aaf1-7a4f8480d997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2058e1ec-47db-4c81-bf59-9a1553078051",
        "cursor": {
          "ref": "d885055a-ea28-4b92-9e0c-4f4a1c74c5d2",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "41530bdf-38d3-44a4-ba8b-dedbf2752183"
        },
        "item": {
          "id": "2058e1ec-47db-4c81-bf59-9a1553078051",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "db58e8b2-8e3f-4fc6-86be-65ecbd7f7a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e120b69e-20ad-4344-8978-0b17eb21df63",
        "cursor": {
          "ref": "af671c1d-45dd-45af-b95b-3bb37cef9426",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0507131e-fdd9-40c8-84dc-dd67cbc47300"
        },
        "item": {
          "id": "e120b69e-20ad-4344-8978-0b17eb21df63",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e3e89ae3-b196-4dd1-bf47-106137634635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e20574a-e45d-4e60-beaf-7d7073ae66ec",
        "cursor": {
          "ref": "3b8ef53e-4a46-41e0-becd-bdd643e9977d",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "302e672d-d0ad-4818-825b-a5ff00d1571d"
        },
        "item": {
          "id": "0e20574a-e45d-4e60-beaf-7d7073ae66ec",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9f30c277-0235-4b46-870a-bebedd27b767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ed749b-f74e-457c-a395-b3bb062650a4",
        "cursor": {
          "ref": "ba7b8ffe-0785-4d88-8e8d-d9a70dffe0c9",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6e45cb5b-41f4-41d4-8caa-f209949064f5"
        },
        "item": {
          "id": "f4ed749b-f74e-457c-a395-b3bb062650a4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3daf6ad0-792e-4613-a2ca-ae8628d4078e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7efb00-9c32-4ee5-9ffc-f0791d512033",
        "cursor": {
          "ref": "4f0710e4-32ab-4168-b1f2-a62442d15418",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b8d30e5a-5da2-4a8b-b51e-3e84a7ab208e"
        },
        "item": {
          "id": "7b7efb00-9c32-4ee5-9ffc-f0791d512033",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0ad71c6b-db49-4677-8ded-a12ca25ae075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0afbba2-eb20-4ca7-a5b3-2504f945b26a",
        "cursor": {
          "ref": "973d300c-07fb-48dc-a0a8-939091a0c5c2",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "496e1ae7-4e5c-4abf-b391-2383b9ec7f6e"
        },
        "item": {
          "id": "c0afbba2-eb20-4ca7-a5b3-2504f945b26a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a18239c8-b1eb-4a40-a6e4-b0d01021c88f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c7d2bd-c04a-471e-aacc-6445af805c75",
        "cursor": {
          "ref": "6c0fe88f-4fc3-461b-9b05-3cf0049163ac",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3f659257-b576-4b4c-afb3-2f368d5ae724"
        },
        "item": {
          "id": "88c7d2bd-c04a-471e-aacc-6445af805c75",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "54bf8a20-101b-4f50-937d-33b7eeb4492f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f080259-3c16-4f3f-81dd-401c1781fbcb",
        "cursor": {
          "ref": "06ea1958-a568-463a-bde1-f3703c42bf5f",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0fa38042-e63c-4124-8b6d-fd4659cadafd"
        },
        "item": {
          "id": "2f080259-3c16-4f3f-81dd-401c1781fbcb",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9a19c450-4906-4236-9f86-dcd20331551c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdef2520-a604-4d3d-a9b7-456dcfbe977f",
        "cursor": {
          "ref": "79149e67-6f48-4dc3-a3f4-124d51640dfc",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ac84f2b5-7b52-495b-b0fc-3e137e72a891"
        },
        "item": {
          "id": "bdef2520-a604-4d3d-a9b7-456dcfbe977f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7dc491d4-a650-472a-97e6-27925a9bcdd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e702a20-89fe-4b21-b736-490c73b47a37",
        "cursor": {
          "ref": "dd92c66f-ab63-4c17-9e72-02a0ea40489a",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e2d76b48-49a8-458e-8677-d28ad8857bb3"
        },
        "item": {
          "id": "4e702a20-89fe-4b21-b736-490c73b47a37",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7b0a3786-3ea7-4391-9760-c03ae3d7c0c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e2f7bd-7a3f-43d6-b40c-59c18ba3f0c8",
        "cursor": {
          "ref": "39973120-046b-434f-a115-bb683edc7a9f",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "306a3ddf-1a65-4bd4-8854-104a1c5eb6e8"
        },
        "item": {
          "id": "66e2f7bd-7a3f-43d6-b40c-59c18ba3f0c8",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "eac09bdc-151a-4acc-9f51-2afcec6794e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74314a08-3c22-4f81-89b3-8303578aa976",
        "cursor": {
          "ref": "767c522c-83ec-45d9-89ae-3e2f3e714ade",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ba1e0bff-ca68-4a5b-a52c-54cd920d6d5f"
        },
        "item": {
          "id": "74314a08-3c22-4f81-89b3-8303578aa976",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b5395bfb-239e-402c-b5d7-75d102b27331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ffe52a7-5e12-4bca-a351-82108e90520c",
        "cursor": {
          "ref": "5c0e89a2-1c94-4c92-b4bc-1be25bd0236c",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "07316503-fd3d-48f0-934f-682503c49b76"
        },
        "item": {
          "id": "1ffe52a7-5e12-4bca-a351-82108e90520c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2e8f9426-6209-4248-9ef2-50424ed0389e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61d2816-72ca-40e7-badd-e366e0d53fa3",
        "cursor": {
          "ref": "5db167c7-ed1e-475a-9197-64b2b65e4695",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b48c9d3f-1882-4b4f-8366-f11ee3772f4a"
        },
        "item": {
          "id": "f61d2816-72ca-40e7-badd-e366e0d53fa3",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "903e4f94-d502-4c50-b62b-2f64f57930d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b6d1bd-6f46-49f7-b555-9d1a8a8a5b1d",
        "cursor": {
          "ref": "a155395c-9e7c-457c-b492-03f628365e9e",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "12c33be2-afc6-40cb-a3b6-816692ade5fb"
        },
        "item": {
          "id": "d4b6d1bd-6f46-49f7-b555-9d1a8a8a5b1d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ae741d62-34cb-4d46-bd6f-7a420f25a0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe21247-ca1e-450f-9cff-7e477c7023b6",
        "cursor": {
          "ref": "2064e0d3-bcd7-4a52-b3b1-6bd70a57b0af",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b285fe77-a26e-460a-b268-081a4de4ab4d"
        },
        "item": {
          "id": "2fe21247-ca1e-450f-9cff-7e477c7023b6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4db08aaf-26ed-46de-b8ee-4c77c8b6e6b0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 14,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a456eee-0839-4ea1-b625-4630e28ec623",
        "cursor": {
          "ref": "614f21de-3a3f-4441-8f74-a1471d10387e",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6064e4f3-0a0f-4541-8aeb-d6ec18576dda"
        },
        "item": {
          "id": "2a456eee-0839-4ea1-b625-4630e28ec623",
          "name": "credentials_issue"
        },
        "response": {
          "id": "92eee65a-f6b7-4f4b-9a1c-2e068b913907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "161eb816-61af-4b42-b341-d91477139a52",
        "cursor": {
          "ref": "01736de4-15d3-4c67-90f9-341e30a9a082",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "06ab24cc-129d-4942-8f6b-e9d573fd2032"
        },
        "item": {
          "id": "161eb816-61af-4b42-b341-d91477139a52",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "94061efe-c1d2-48cc-9ff9-5e46ef8536e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "b1394487-adc3-486f-9c1d-0fd9c4ba90ba",
        "cursor": {
          "ref": "9a6f739b-26fe-4c78-b04c-90a3c1796222",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1fafaeb3-cb72-4197-a3b7-a1f32d1149d4"
        },
        "item": {
          "id": "b1394487-adc3-486f-9c1d-0fd9c4ba90ba",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b5b52ac6-d17c-4426-8034-1d6857b62eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "8397a40f-1e1c-4e85-a005-829177bfd892",
        "cursor": {
          "ref": "28833b4c-0a2d-4dfe-a297-e410a21fc62f",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "eb9b3124-7b86-4d65-b5cb-29e4d23fccfb"
        },
        "item": {
          "id": "8397a40f-1e1c-4e85-a005-829177bfd892",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "fe377a80-0685-4f82-910c-b7ec7e794c3e",
          "status": "Created",
          "code": 201,
          "responseTime": 5018,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8946a151-1a19-4a94-846a-98d25b223cb3",
        "cursor": {
          "ref": "c4fa3e4d-e493-4a20-9ba3-e9da82bb810a",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a605630b-69f7-4eea-90e3-96eee8f4a2ed"
        },
        "item": {
          "id": "8946a151-1a19-4a94-846a-98d25b223cb3",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "36d028a4-4900-4bd9-b4e4-096490922b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "3cbcb29b-50a7-4788-95c9-082c7a71feb0",
        "cursor": {
          "ref": "c801888b-b8d1-4698-95f4-c8ceafbb8edb",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "744d15aa-13bf-49d1-a70e-80db28f90351"
        },
        "item": {
          "id": "3cbcb29b-50a7-4788-95c9-082c7a71feb0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6c11002c-7b28-4fc0-864a-8809262a47bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "8a2ae10c-7339-4971-ae4b-0cde749d43fe",
        "cursor": {
          "ref": "2b35a5aa-d2c1-46b7-b477-25fd9c89ab5d",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "09947622-7671-42f1-911a-cba676e1d3a4"
        },
        "item": {
          "id": "8a2ae10c-7339-4971-ae4b-0cde749d43fe",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "98c25016-0b68-49b3-883b-5c651bc63f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e12e10-95e7-4f94-ba66-bdf9d573e9a4",
        "cursor": {
          "ref": "55dab116-c004-43d2-b542-1f22fdc3840f",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "261270a0-8a80-4500-b0da-43d2da3cc299"
        },
        "item": {
          "id": "b5e12e10-95e7-4f94-ba66-bdf9d573e9a4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a8f95603-c203-4619-a9d7-da74b1db2f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42255c39-6e8c-4d2f-8050-399e293b9ad7",
        "cursor": {
          "ref": "7557c9d8-ff96-4755-b2b4-8f80ee09f662",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e511b6e6-185c-48f7-9d05-5869feb21540"
        },
        "item": {
          "id": "42255c39-6e8c-4d2f-8050-399e293b9ad7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "cf4cb7da-ed7a-4d42-b4b1-5db2b86e661b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba17b1cd-1e04-4bc6-b38f-625b593921ad",
        "cursor": {
          "ref": "28c223eb-cac5-4cc6-8faa-801e6f631575",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7a45c34e-1310-436c-ab5b-17817016986c"
        },
        "item": {
          "id": "ba17b1cd-1e04-4bc6-b38f-625b593921ad",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d98ededd-9c80-43a4-87a1-ae4df23ef625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f412d5-8798-4d1b-b3ac-c5f1bf09df26",
        "cursor": {
          "ref": "693bc831-7f68-479e-a15f-646a526be335",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3ab6c584-b136-486e-93b2-341b40f3fa91"
        },
        "item": {
          "id": "47f412d5-8798-4d1b-b3ac-c5f1bf09df26",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f789915f-2259-4851-ad6c-f4ad9d619f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c2a556-e515-45a3-9b06-75ec9ab3356d",
        "cursor": {
          "ref": "c6e9c493-cdde-442a-a61a-d8d2ee5e7dee",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "11026952-0938-44ef-9145-226adfe6b535"
        },
        "item": {
          "id": "64c2a556-e515-45a3-9b06-75ec9ab3356d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1d1d4536-87e4-4b70-8856-fd49cfac5c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19493f1-ac46-4f22-b978-70cbab38ab95",
        "cursor": {
          "ref": "bf19cf0b-e620-4c80-9a4a-519675b1c75f",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "fa43da46-609e-4e23-b372-f6d9b3182e6a"
        },
        "item": {
          "id": "c19493f1-ac46-4f22-b978-70cbab38ab95",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2b423cbf-a9ca-40fa-ba1b-623889f7f583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a01cdf-cdb5-4d97-8a54-fb8501e7e215",
        "cursor": {
          "ref": "71bada59-5c37-47bf-ba2b-ab1de566ee65",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b6b41aac-5158-4dd0-92ae-dcb6564eacee"
        },
        "item": {
          "id": "27a01cdf-cdb5-4d97-8a54-fb8501e7e215",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "59ba52d4-f535-456c-b730-5c64e5db6fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb8b637-145a-49e2-9f29-5effe1a9019c",
        "cursor": {
          "ref": "064c189d-1ea5-4360-ae39-ab8cc0439cf4",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b3daaaa4-7889-4c1b-9d60-55328ab51acc"
        },
        "item": {
          "id": "afb8b637-145a-49e2-9f29-5effe1a9019c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c9812c81-4039-4876-aab0-c5131a635852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67622bf9-0151-47a9-8ad0-6d6d0c4687e0",
        "cursor": {
          "ref": "48fc28b5-aa4b-4823-b939-477ebde69d08",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7263b708-de5c-4913-bdff-c1ef3eea2645"
        },
        "item": {
          "id": "67622bf9-0151-47a9-8ad0-6d6d0c4687e0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2058732b-5f8d-4c7d-9860-55fcb8798ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc3a085-18f0-4440-a71a-ce13ef478aec",
        "cursor": {
          "ref": "9b512999-3193-4e86-a986-cd57f9e96eef",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3dfbd14d-aeb0-4281-aa8c-849f715aacb5"
        },
        "item": {
          "id": "6fc3a085-18f0-4440-a71a-ce13ef478aec",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "bc60be59-67a4-41ce-8b8c-68f8ee20ab1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5720a370-957a-4d3c-b5b8-a1f5640a0bd3",
        "cursor": {
          "ref": "06063638-0d0c-4320-abda-eca7d976f92a",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "14766f29-85ed-4974-9219-eddd08737202"
        },
        "item": {
          "id": "5720a370-957a-4d3c-b5b8-a1f5640a0bd3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "75bb59b9-1cf8-4390-a6e1-5b98043f7401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a016a2fa-e677-4084-a68f-509e61d20e25",
        "cursor": {
          "ref": "8d61abd8-01ea-47b2-9628-cbc2dbb2de0e",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f0d04b1f-1dbb-470f-bac5-945331e7e07e"
        },
        "item": {
          "id": "a016a2fa-e677-4084-a68f-509e61d20e25",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6b14c9bd-c447-4d73-b4a5-933aecb5fe87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d735a88-c3dd-4ad8-8541-3acdcf2c7659",
        "cursor": {
          "ref": "647da947-04e8-4749-829c-495290fff40a",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e27829d2-f27e-47ef-a382-32b17962234d"
        },
        "item": {
          "id": "6d735a88-c3dd-4ad8-8541-3acdcf2c7659",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "126ca6c9-2ad3-4548-bf40-4367a5967ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92fde11b-3307-48f4-9508-15368b6eac9e",
        "cursor": {
          "ref": "be2c6b35-cb6c-432b-8a3a-f6ac8b81e481",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9c00934a-80b6-414d-9aa4-39af358ef014"
        },
        "item": {
          "id": "92fde11b-3307-48f4-9508-15368b6eac9e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0cc91801-52ad-4659-b0f3-6c2b8a32dc0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cae7e25-05b8-4f9c-adee-5c2770c66081",
        "cursor": {
          "ref": "0f5c5ec0-4f3b-4b7a-a812-8824df4b755a",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "fdd7f856-16a7-4343-94c4-e317cf754bcb"
        },
        "item": {
          "id": "5cae7e25-05b8-4f9c-adee-5c2770c66081",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "145c0123-ed89-40de-92be-d504937b2864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176d6c31-09db-4de2-a76a-7f69e2d52cef",
        "cursor": {
          "ref": "73035273-dc97-44f1-8548-cc79b6f6377a",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a8e054bb-8b5f-401c-a70f-bbfabf969bf8"
        },
        "item": {
          "id": "176d6c31-09db-4de2-a76a-7f69e2d52cef",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a301d5df-7967-4a03-b93d-171ef0983468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc0bab6-461f-4eb7-8056-b7964eebb2e8",
        "cursor": {
          "ref": "965e8429-de52-427e-99b9-53bb5a304141",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "23426081-cf78-47df-902d-d3c5ef03e5cf"
        },
        "item": {
          "id": "bbc0bab6-461f-4eb7-8056-b7964eebb2e8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5088aacf-f1b8-4b2a-bad2-2bfb565f7e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c014bea-abc6-4dae-b099-e19e064b2c55",
        "cursor": {
          "ref": "680c347b-2fa4-41c0-989e-051c468323d4",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b15efa42-54cf-4992-ae76-67e127f60277"
        },
        "item": {
          "id": "0c014bea-abc6-4dae-b099-e19e064b2c55",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "03484cf5-047b-4452-92e1-8b5aeafb0f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6a07c6-36ed-43fd-b3af-f0d687f98ede",
        "cursor": {
          "ref": "0d105bb7-a388-425d-8834-331cd6dc1602",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6a18e5da-5119-42d6-ad11-b618090d43ce"
        },
        "item": {
          "id": "2c6a07c6-36ed-43fd-b3af-f0d687f98ede",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "726ef071-bd7e-4269-b7ec-ec2cb105a1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8111424b-c880-42e1-ae5f-0bfb41d7ec99",
        "cursor": {
          "ref": "92d30e1a-d1d7-4360-9901-e84a1938da29",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c2dc9b63-68b7-4172-a792-eb8ca30cc4ad"
        },
        "item": {
          "id": "8111424b-c880-42e1-ae5f-0bfb41d7ec99",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "80efa869-fe25-417f-b593-19a10bae2027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b568d28-3609-4783-8648-8a735a230a08",
        "cursor": {
          "ref": "b46c1b5a-c58a-45fe-b5c4-1c524eec8d61",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ea114441-16e2-4013-8457-ddadf30c1d3b"
        },
        "item": {
          "id": "3b568d28-3609-4783-8648-8a735a230a08",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a40e5ec7-8707-438d-9ee4-1cfce556f383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766badd6-5b38-43ce-8fc8-e7ea435a7555",
        "cursor": {
          "ref": "409193ec-2326-456a-a58c-d2d63c366d9d",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2c43aa2d-eabb-414b-8fc2-fc63991b1c6d"
        },
        "item": {
          "id": "766badd6-5b38-43ce-8fc8-e7ea435a7555",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1cc30632-0020-4712-845a-6b340f50ea50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb16ae98-0832-4325-8c20-d96340e2c515",
        "cursor": {
          "ref": "11b51c7a-e722-4270-8a0d-6b37d11230ca",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bd1adb91-2353-4438-8bae-04566126852f"
        },
        "item": {
          "id": "cb16ae98-0832-4325-8c20-d96340e2c515",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8206b227-b91e-4578-b8e0-fb10087536b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e16b50d0-0ba4-4360-acf9-86cecda94a18",
        "cursor": {
          "ref": "e2e9319e-887b-4009-891d-5438eb26dec3",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f83f664f-e41e-41d6-96e3-096e24cc67a2"
        },
        "item": {
          "id": "e16b50d0-0ba4-4360-acf9-86cecda94a18",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "62236b48-6d42-4f18-9e9a-01c17fd2d8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50096ad-a6bb-4436-b608-4ff6de877ec7",
        "cursor": {
          "ref": "01c6b048-c66e-4c02-b353-be5bfa6dd389",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b05e1f87-10e5-4b4d-8c3c-3e6241075fd8"
        },
        "item": {
          "id": "e50096ad-a6bb-4436-b608-4ff6de877ec7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b4466878-02a9-4192-87c6-8a80b2856ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2bee24-fffd-4b90-b432-1c717b1b1eb9",
        "cursor": {
          "ref": "c819499b-2c07-4e06-a563-7f49e8648c86",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3b0dbdaf-0857-433e-b35a-0b8d27465b9b"
        },
        "item": {
          "id": "7d2bee24-fffd-4b90-b432-1c717b1b1eb9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d7955656-6490-46c0-8298-7f44be56b5b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76beba3f-8738-46d4-be9a-4f11266075d5",
        "cursor": {
          "ref": "d4f3e39f-29e5-42f4-a9e2-9f72fb4d6a4f",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "734ebb51-9668-42fd-a6f9-f0cc368072ba"
        },
        "item": {
          "id": "76beba3f-8738-46d4-be9a-4f11266075d5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "18512867-842f-48d5-8695-d6742240e790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c80e16f-53a2-4c20-a758-39220707dfe2",
        "cursor": {
          "ref": "1907768c-55d6-41fe-9228-ca9d81e1154a",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c62f2608-4b09-44e0-b869-4added37e55a"
        },
        "item": {
          "id": "6c80e16f-53a2-4c20-a758-39220707dfe2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e5a07256-3bc0-48eb-9688-42e173942f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5603d8ff-a701-4c50-895d-965466b8dc28",
        "cursor": {
          "ref": "04d4b940-4e2e-4622-84bb-1dcafa9940dc",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d332aabe-8aec-404c-acad-28d5b66d4d5a"
        },
        "item": {
          "id": "5603d8ff-a701-4c50-895d-965466b8dc28",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4ba8e67c-4f82-4889-82fe-235f2821be61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e532b0-ec00-4316-8956-fdbe6e94dff8",
        "cursor": {
          "ref": "5c21a091-fa38-44c6-84e0-4d1bf25c3446",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "96509082-44e8-4f1b-b457-376448ab7179"
        },
        "item": {
          "id": "a2e532b0-ec00-4316-8956-fdbe6e94dff8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4a470ebf-aae6-40ae-a39b-faef2a323dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca704cb0-b878-4ff8-be88-fa2a454f7775",
        "cursor": {
          "ref": "32bd6a0a-e61d-4dc2-9d84-f62445671b58",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1ed20f28-95cd-43b5-b3d7-55e777d49efc"
        },
        "item": {
          "id": "ca704cb0-b878-4ff8-be88-fa2a454f7775",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a8976df4-0267-49d3-a8d9-1b09ee728fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "485d2175-5c7d-4624-844a-196f7eb2bf5b",
        "cursor": {
          "ref": "acd2ced9-62f5-44d2-ab61-4250f9dd3e4f",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "11575c9d-caf0-4d1f-9f39-72e682496aca"
        },
        "item": {
          "id": "485d2175-5c7d-4624-844a-196f7eb2bf5b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "734bdb3d-ff75-4afc-aa2e-6c8b09edc5ce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6769529-55d7-42ee-a015-8f7ad6cdb5a9",
        "cursor": {
          "ref": "aad22e3f-1e12-4ee9-8538-c3b133343fec",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7a68df62-e508-49c7-9cfe-39c77f8cd53e"
        },
        "item": {
          "id": "d6769529-55d7-42ee-a015-8f7ad6cdb5a9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cab39f7e-0907-40b0-8d28-26d9814afcfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d17890-ffbe-470e-b58f-30f1f82c0f74",
        "cursor": {
          "ref": "2a224ae2-504a-46e5-9242-e302f4ae076a",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e90e6fd2-6472-4dba-98b1-348715cc653e"
        },
        "item": {
          "id": "46d17890-ffbe-470e-b58f-30f1f82c0f74",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "dc83f4b6-9140-4072-88f7-1852da9d5b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19762b9-5e11-407e-bb25-8f9b83792e51",
        "cursor": {
          "ref": "02b75563-b81e-4539-9647-8c5dccc11458",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4eb23b14-3531-497a-a487-e16ea8c2e671"
        },
        "item": {
          "id": "d19762b9-5e11-407e-bb25-8f9b83792e51",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e3873092-74cd-44aa-a0eb-550ba3ac1e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d9d26d-32f4-4095-8b58-daa792aace0d",
        "cursor": {
          "ref": "330e3e7e-f2ff-4fa7-afe0-09827a7e4330",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "481030ed-1991-44d2-a87e-8bebc3e93369"
        },
        "item": {
          "id": "95d9d26d-32f4-4095-8b58-daa792aace0d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "83e121b7-d6e7-43fb-88bc-d597719272e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83d6206-20d0-4677-a634-10768c8cbe0a",
        "cursor": {
          "ref": "897bc321-2c92-4322-af9b-ff7524966256",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "716920ae-30f8-4add-97b9-1dbc05898a1b"
        },
        "item": {
          "id": "d83d6206-20d0-4677-a634-10768c8cbe0a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "19edd047-5652-4d08-8e63-41c2b4d98184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eab1dbc-6b6c-4e45-9b23-5ec6a18ce5ec",
        "cursor": {
          "ref": "41157229-6a20-4501-8003-a539e02f2eff",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "23b71184-df59-4a99-a340-ed39f855a847"
        },
        "item": {
          "id": "6eab1dbc-6b6c-4e45-9b23-5ec6a18ce5ec",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1c2fe645-c58c-4c71-8551-198a2339ab17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de97628-4a5e-4c73-b5fc-ba88d1b58450",
        "cursor": {
          "ref": "e37b277a-1a88-4bdf-861f-4d0a7aced361",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "304f4f05-1c44-4779-9c6c-c863b01c37df"
        },
        "item": {
          "id": "3de97628-4a5e-4c73-b5fc-ba88d1b58450",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7f284798-29cf-4612-9f28-7e6cb18767b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929084cf-d145-4cb4-a301-3470ac00ef23",
        "cursor": {
          "ref": "8cb67ac7-e9b4-4318-9617-22c776ffb172",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a96b9563-e1d9-4abc-82bd-ee77dbdaf3b1"
        },
        "item": {
          "id": "929084cf-d145-4cb4-a301-3470ac00ef23",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1983f7a7-9a88-4502-92a8-21deaf048247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060c6f44-1064-4a65-be9f-fb0ae2576121",
        "cursor": {
          "ref": "b3267694-e675-4341-843b-ceb66af8030f",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "276001d9-1ec6-4250-aa43-661459cf607a"
        },
        "item": {
          "id": "060c6f44-1064-4a65-be9f-fb0ae2576121",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e086adfa-9460-4901-a52e-ec15b225a3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f95de59-0d81-400d-bda5-1c848a5e46a8",
        "cursor": {
          "ref": "23895c2a-50b1-465a-967e-7e0fd8b88b2c",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6bfd48de-2cc3-42a0-bf65-de0953e08d93"
        },
        "item": {
          "id": "5f95de59-0d81-400d-bda5-1c848a5e46a8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4787d950-515a-48d9-98cf-1d900d55119e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726f40d9-2ba1-4b38-af10-31dcf0bd8a3e",
        "cursor": {
          "ref": "da864d09-91a9-47f6-b472-6504cc3bc792",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ebbbaaab-cb91-4a7d-9685-ddb18bf9da2f"
        },
        "item": {
          "id": "726f40d9-2ba1-4b38-af10-31dcf0bd8a3e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a6f98080-b70a-4c38-abe6-2129cafe1940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2d75e2-f789-4bc0-8090-db22de64a3c8",
        "cursor": {
          "ref": "86f86684-6e60-4819-bee4-5a0f3b4a2a98",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f94b0d03-a2db-4b95-9bd4-cb67240b6bec"
        },
        "item": {
          "id": "6c2d75e2-f789-4bc0-8090-db22de64a3c8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c79b3c42-880e-4447-b80c-77879769a769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de216a6-8950-4054-959c-61513953c34a",
        "cursor": {
          "ref": "043ed424-c64e-4c90-a50a-cf7a43609055",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "533fddd6-407d-4581-9e3b-7d5f41cfa726"
        },
        "item": {
          "id": "4de216a6-8950-4054-959c-61513953c34a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c2ae032e-44ef-4413-98cf-40215b9dc398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c73cfa0-5a68-41e1-98bf-739d4a272273",
        "cursor": {
          "ref": "aba9b264-6fdd-42de-a874-4ed7877d9374",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d5fa33e2-dd75-4c0f-832f-4997bded03f8"
        },
        "item": {
          "id": "4c73cfa0-5a68-41e1-98bf-739d4a272273",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d99683b4-cf3e-4f2a-906d-805a18cda2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea44eea-de56-4e35-beb6-3a4f65f1f0e5",
        "cursor": {
          "ref": "2a289479-3146-4d82-8efe-2fa483c331ff",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "0e61ff3c-fc79-44ad-83e0-6a08cb07148e"
        },
        "item": {
          "id": "1ea44eea-de56-4e35-beb6-3a4f65f1f0e5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "95efc623-aa1f-4129-835a-4bc029b15e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8d2076-536b-47b6-9157-b92eee692df3",
        "cursor": {
          "ref": "6a20c13f-655a-4382-8a48-2830810ecd6a",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d11adbe6-b9ae-4edc-8660-6083cb97329f"
        },
        "item": {
          "id": "ae8d2076-536b-47b6-9157-b92eee692df3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a6471a84-5ba1-42e0-a17b-52a576bf29d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc19f63-12ac-4294-aec9-14e7e37661ff",
        "cursor": {
          "ref": "d3a3631e-c263-4f67-93e5-084bfcb692a2",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "04be16f9-e135-4f9f-b97a-65a21b281399"
        },
        "item": {
          "id": "4cc19f63-12ac-4294-aec9-14e7e37661ff",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6197df7e-ea8b-4d04-a342-78f5a77879f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5c846b-c3eb-46db-9a1e-87678510c44b",
        "cursor": {
          "ref": "0efa4efa-2575-448b-8cea-2178d09bf0f0",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "da152b44-2221-4a8f-874c-1687d2792c48"
        },
        "item": {
          "id": "3f5c846b-c3eb-46db-9a1e-87678510c44b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2ef8a897-bbf7-4918-b067-40af85818e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0f2008-2e13-4afb-9aec-7252f4fc6922",
        "cursor": {
          "ref": "edd3a1cd-11d1-4c4a-92b5-76d0f9113f47",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "373dfb3b-d16c-4143-a537-8b50e9d9bc98"
        },
        "item": {
          "id": "ab0f2008-2e13-4afb-9aec-7252f4fc6922",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "48484979-80f0-41de-9cde-cdbdd5d2fea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e7024d-f763-4b4b-b62b-488aab2fde00",
        "cursor": {
          "ref": "f5929ce3-0f04-4f1f-b152-f8b9dc4d18d7",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e41a3d3e-1bde-49eb-a8d0-741a258704f9"
        },
        "item": {
          "id": "63e7024d-f763-4b4b-b62b-488aab2fde00",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "91919193-ed56-4614-836f-bddf1860a166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f6eb70-337e-4ad1-9842-f825c7491a87",
        "cursor": {
          "ref": "96ba31b3-3f79-4434-8c6f-73ace23fe138",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "fcf0c867-496a-44a0-aef9-974a4e7fa860"
        },
        "item": {
          "id": "34f6eb70-337e-4ad1-9842-f825c7491a87",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f72f3fb7-80a0-4ea5-b1ec-415da9cfde97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c96978b-770f-49c0-bc62-209c94634d58",
        "cursor": {
          "ref": "3ee59c38-61f6-4854-b0b5-246ed7098882",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "787a362e-8fc8-48a4-ae57-4a1b42684291"
        },
        "item": {
          "id": "4c96978b-770f-49c0-bc62-209c94634d58",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "23579a5f-57e3-4a6f-a903-8cee79496784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659f2d5f-f73f-467f-937b-d01a03365a9b",
        "cursor": {
          "ref": "60e2d924-43db-4649-bb69-fafb8fe7b290",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "fdd5c523-4876-4070-8c28-7529bee4f8d2"
        },
        "item": {
          "id": "659f2d5f-f73f-467f-937b-d01a03365a9b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2de0869a-f09e-4946-83d3-14e2dd70cc68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce63cb5b-0981-4d1b-b5b7-3af30275126d",
        "cursor": {
          "ref": "ba993ecd-7219-4c9c-a62e-9c4b8f1773da",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b541529d-afdd-40ce-ae84-b8a03ccd6713"
        },
        "item": {
          "id": "ce63cb5b-0981-4d1b-b5b7-3af30275126d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c3af1329-cdb1-4d77-8607-ff4a7c2e731b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2935e394-1102-45a4-a0db-4c1d861cd9ad",
        "cursor": {
          "ref": "1a5a70cb-4342-425a-ae2f-ae693cddd4c3",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "265b85b7-b611-43fa-8e40-88111078a279"
        },
        "item": {
          "id": "2935e394-1102-45a4-a0db-4c1d861cd9ad",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "50a4e4f4-9d6a-48f5-9ba5-e655c6dd4a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc66d633-0303-40bd-8df3-004ab35a9791",
        "cursor": {
          "ref": "248b3703-3f88-4e84-be79-d7e9f7922144",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "474b9841-fec1-49be-8048-b22389118d5d"
        },
        "item": {
          "id": "dc66d633-0303-40bd-8df3-004ab35a9791",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4c9ed5a2-a224-497f-bda6-6695e03600bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af953e80-d65a-49f1-9423-4f1996d40042",
        "cursor": {
          "ref": "91b7766b-7338-4c5f-ac86-312418896db9",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d511ef41-321a-4dc0-a277-6954e1cf4bab"
        },
        "item": {
          "id": "af953e80-d65a-49f1-9423-4f1996d40042",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "85c495b8-286f-43d0-a50b-36e46c9a6ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44578a86-a33f-4795-a7ce-3ca79d160c1f",
        "cursor": {
          "ref": "469ba6b3-8b1d-496d-afb0-4e926d9879d9",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "fb82a670-2f36-4a71-a8a6-92a6023cfdc1"
        },
        "item": {
          "id": "44578a86-a33f-4795-a7ce-3ca79d160c1f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9ca5ef25-8f39-4655-91bf-30b627401631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2fa60f3-a5d2-4844-8b26-cebec966f633",
        "cursor": {
          "ref": "291cb26e-8b06-4e4d-bd28-5a70ee6de6f8",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5244baf5-0cdb-4ec6-9ac3-775e0bb1735b"
        },
        "item": {
          "id": "b2fa60f3-a5d2-4844-8b26-cebec966f633",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "62cf420f-c6a4-4a27-b3b0-ddd613ac58fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79b42e4-ab9b-448a-aaba-fb7b486dac7e",
        "cursor": {
          "ref": "2f57e52a-a1e5-44ad-8840-db489153fc1c",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4698a396-ef8d-4ec6-b523-70e1c781ebdb"
        },
        "item": {
          "id": "a79b42e4-ab9b-448a-aaba-fb7b486dac7e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bc2f60f6-5e08-44e1-8e7e-cf780eb548f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3820ec3-e267-459c-897d-d068b7e0d74c",
        "cursor": {
          "ref": "57934326-7ed8-4ab0-ad9e-59bcfea36687",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6d308305-eccb-4d1a-a74b-d3a7804ea2a4"
        },
        "item": {
          "id": "b3820ec3-e267-459c-897d-d068b7e0d74c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "538e12e9-2c4e-4119-b5e0-d16d406e2be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f78785a-0ef2-4d44-8416-6984c2867a9e",
        "cursor": {
          "ref": "4f81020a-32bd-4eac-9765-c124e06b1ec4",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6b195f1c-48ef-41d7-9234-0407d52ffbf3"
        },
        "item": {
          "id": "4f78785a-0ef2-4d44-8416-6984c2867a9e",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "c2ff2542-4ef8-45b0-835d-5b13386bad57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a7f4f1-e904-40cd-9659-e4e7659ed648",
        "cursor": {
          "ref": "9dc6456b-4c1d-4241-a712-240b38333c1a",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4f86b347-0c0b-4817-a460-5fc4f6e6125b"
        },
        "item": {
          "id": "e3a7f4f1-e904-40cd-9659-e4e7659ed648",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "470c3b33-3fe5-4ef2-955e-7339d2f15f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91be9c39-fcc6-428a-86a4-5d99890484e4",
        "cursor": {
          "ref": "ba1127e8-f3a3-4927-b826-ab1419efbb2a",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "79dd3be1-a1dd-4512-ac07-ee8cf1cf77be"
        },
        "item": {
          "id": "91be9c39-fcc6-428a-86a4-5d99890484e4",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "eb2f57e3-fa1b-42e7-9b76-7896c80b2f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2781e9cd-8daf-403a-b136-8781e7227b08",
        "cursor": {
          "ref": "2bde96b5-09cc-489c-85bf-4cdf12346294",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "247c8db2-612f-44c2-aefa-7449feb67c97"
        },
        "item": {
          "id": "2781e9cd-8daf-403a-b136-8781e7227b08",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "e77a0470-8ea0-4202-8551-51b36aaed020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c07d61-e57e-4cba-8795-ba7d6982b6b0",
        "cursor": {
          "ref": "2b9facd1-8caf-4bec-8ced-e5fba7aca908",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1f956189-9673-4ee7-be7d-ee6de199e99f"
        },
        "item": {
          "id": "17c07d61-e57e-4cba-8795-ba7d6982b6b0",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "c4cadfa4-8cd4-4266-88da-5356f17bea7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88514ad0-07cb-4566-b397-63f3d420aadd",
        "cursor": {
          "ref": "d1b8c57c-8728-4853-998b-a5c1cfafcf98",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4281e420-69ca-4763-976f-1f64595d9021"
        },
        "item": {
          "id": "88514ad0-07cb-4566-b397-63f3d420aadd",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "2b5fe133-b8f7-4901-ab60-8847dede72c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1349eee2-be55-4eca-a28e-507e9c25bd68",
        "cursor": {
          "ref": "98199004-942c-404d-9b0c-24464400623c",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b44a314c-7e90-4a73-bdc0-c26de47aa710"
        },
        "item": {
          "id": "1349eee2-be55-4eca-a28e-507e9c25bd68",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "95e5772d-0234-43ba-bc53-2cf8e457dd98",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88fc3b6-7f97-4cb0-b643-c5e7d9dabeb4",
        "cursor": {
          "ref": "1622b33e-bb88-45f5-b523-46971092e344",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6db5ff10-c00f-47c0-b847-21c908440915"
        },
        "item": {
          "id": "e88fc3b6-7f97-4cb0-b643-c5e7d9dabeb4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d17625be-4fa7-4f22-a9bc-0b7822487a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18964cd-20e4-484f-a47f-72f4eb624c07",
        "cursor": {
          "ref": "2a75a90c-d60d-4439-b104-0a31f78b75e9",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e22ee9e1-6f19-418a-809f-757928c94065"
        },
        "item": {
          "id": "c18964cd-20e4-484f-a47f-72f4eb624c07",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ca1c1fc3-6c37-4d83-8285-6c0480980a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e793b7ee-d19a-426f-bce3-2c8885b503ee",
        "cursor": {
          "ref": "7492e006-4f1a-4006-9109-44d14b203cd9",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "66ba56be-566f-42bc-a1c2-84d5d9273914"
        },
        "item": {
          "id": "e793b7ee-d19a-426f-bce3-2c8885b503ee",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d3c662eb-ecfc-48f0-88ba-8d5bb4433d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e21e93a-c758-4229-9c84-4f00cdf3af31",
        "cursor": {
          "ref": "09f4eb63-e8ba-454d-8ff0-fc9395952d11",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c3dba575-50b6-4b85-b797-01d078f544c2"
        },
        "item": {
          "id": "1e21e93a-c758-4229-9c84-4f00cdf3af31",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c96897cc-c905-4b46-97f2-fdaa74cf7485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03751458-aa4d-476c-a46e-d9c6252cb2e8",
        "cursor": {
          "ref": "42f2833c-cfe6-4324-a8ce-d4b057702deb",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ca9ddc43-415b-48c5-a168-19b5be23e3ea"
        },
        "item": {
          "id": "03751458-aa4d-476c-a46e-d9c6252cb2e8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "caba162d-e6b4-47fe-9d55-dbe497dc3ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3fbc971-b110-49db-b808-bfe607ccac4b",
        "cursor": {
          "ref": "fa52e36f-7583-41b4-b480-76703e4c88a8",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "290ac62c-da3e-4e63-b72e-6df9cf8db718"
        },
        "item": {
          "id": "a3fbc971-b110-49db-b808-bfe607ccac4b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6291ba0a-c5a6-46c5-88e2-80c04d100024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2664659-6243-4ddc-801d-2f8415f10d5d",
        "cursor": {
          "ref": "f03f11f9-4d53-4a93-9bdc-214f4719138e",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "5db3899e-15b0-473f-b375-c476387f56a9"
        },
        "item": {
          "id": "e2664659-6243-4ddc-801d-2f8415f10d5d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2cfb20fb-0414-4926-8cdf-c873e2207f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c060131a-681c-48ca-9a4b-dffda74ab6ab",
        "cursor": {
          "ref": "effcccbc-fdb8-4bde-919d-75cbba58a211",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "274e9866-533a-40a2-865c-9d4236b2e1aa"
        },
        "item": {
          "id": "c060131a-681c-48ca-9a4b-dffda74ab6ab",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "48160ecc-a978-4fe9-8c1d-feaeade8220f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a133fe5b-c4f6-4d0b-b96d-bacff7ac9ff9",
        "cursor": {
          "ref": "4e57b579-b93c-47df-8085-3f444fbdd599",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "38022cbc-a826-43d4-ba8d-575f5b4df9e4"
        },
        "item": {
          "id": "a133fe5b-c4f6-4d0b-b96d-bacff7ac9ff9",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "299b7e59-8ac6-4e38-887e-0c87df2a938a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576c87de-344e-4595-af83-442569c75c1a",
        "cursor": {
          "ref": "404bd4db-b2a2-401a-aaeb-58685b8564af",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "cb5507a9-bae1-4165-86c2-bacc9b0aac00"
        },
        "item": {
          "id": "576c87de-344e-4595-af83-442569c75c1a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "020775c0-7d24-4fdf-b760-e4450f999d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc7d326-172c-4df5-ac9c-c8991d65ca20",
        "cursor": {
          "ref": "9fa2f6d7-fd41-45fc-8c34-37ff870f6edb",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "cf6ff0a0-f67b-4f21-8da2-dba959d27245"
        },
        "item": {
          "id": "8cc7d326-172c-4df5-ac9c-c8991d65ca20",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0384fd48-a27f-422b-91c5-ec6d4f76f47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1d4816-92d4-4d6f-997b-fbcb0756cd75",
        "cursor": {
          "ref": "46403706-aa21-4e40-a34e-4af80b3cf0a1",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "48ea02c6-d84f-4d78-86ad-07e6e7154364"
        },
        "item": {
          "id": "3c1d4816-92d4-4d6f-997b-fbcb0756cd75",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3aefef71-542b-43f5-8804-017c055e4650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b48aa901-2781-49a7-8b2e-3cdfb0ef2747",
        "cursor": {
          "ref": "7e257486-6bf3-42ed-9d90-d590d8369744",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "21545415-03d5-4f1b-876f-79854fe17981"
        },
        "item": {
          "id": "b48aa901-2781-49a7-8b2e-3cdfb0ef2747",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2c9a6c76-cf6e-4c9c-a0a4-c13d3f00a44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611fd8bc-4a73-4c17-bbe0-ef6840f15fbb",
        "cursor": {
          "ref": "f26cb4c3-c0af-422b-988b-b1b8182e0caa",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "66ba10b8-9055-4c77-9488-13437861d668"
        },
        "item": {
          "id": "611fd8bc-4a73-4c17-bbe0-ef6840f15fbb",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "867df1e4-3f71-45b0-92c2-8d03ec92a351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40da1f02-3f50-40d5-b55b-4a2090508aed",
        "cursor": {
          "ref": "67958900-8b72-4c1b-a6eb-eeddfbbbb264",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e8c3ef53-0b32-46cd-bf8e-c0568ddd6c13"
        },
        "item": {
          "id": "40da1f02-3f50-40d5-b55b-4a2090508aed",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "028a90b3-0034-4f0e-840f-45922d11f00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75451cc3-cb34-425b-9f5e-f4e61fb082bd",
        "cursor": {
          "ref": "2fb0f122-a9e0-44f6-89c7-8a1dc877e83e",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1fd53ff6-478d-4a96-8a71-484817a32c6b"
        },
        "item": {
          "id": "75451cc3-cb34-425b-9f5e-f4e61fb082bd",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "22e6213f-7621-4237-9431-4263bc2c6248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3bc8fd4-c7b9-4e50-a95f-a1afc51225a5",
        "cursor": {
          "ref": "b30ffdcd-3fd9-4751-aed7-66e2a9e8fda3",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4640b1f5-f158-472a-bc15-9d16cd87eeef"
        },
        "item": {
          "id": "e3bc8fd4-c7b9-4e50-a95f-a1afc51225a5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "89894c4a-a490-4432-8437-2cfc398106ad",
          "status": "OK",
          "code": 200,
          "responseTime": 569,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "e8b4cfb5-755c-43be-aaf8-6569ad130b26",
        "cursor": {
          "ref": "f9b91b1a-3ab0-4ec5-88cd-5a178e3a7406",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e4c46914-a428-42ca-868a-a76a96ccac7a"
        },
        "item": {
          "id": "e8b4cfb5-755c-43be-aaf8-6569ad130b26",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1eae14cc-7d3c-4a92-8460-3e96e0dcca5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56885e76-3535-4218-809a-764bcc6eb27d",
        "cursor": {
          "ref": "a0194234-0d98-4e67-870e-31b3d73226f2",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8a138263-2d2b-40b5-9e2f-6c532a73483c"
        },
        "item": {
          "id": "56885e76-3535-4218-809a-764bcc6eb27d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c259928e-16a5-499b-a467-ca8680018321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d70b46-a335-4cba-8a87-eb7ebe7d1ee7",
        "cursor": {
          "ref": "3c454ab6-1862-4b09-a29b-dd599795cab3",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7fb5255a-3697-4222-9002-430b490bbbd6"
        },
        "item": {
          "id": "b8d70b46-a335-4cba-8a87-eb7ebe7d1ee7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a0be92ee-a69c-4993-8bac-c6b44fbd3a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa11c5b0-c815-4c18-868f-04dd5a0d31fb",
        "cursor": {
          "ref": "61c672da-7847-42c9-82f7-3dedeff7ba83",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1177a31f-7135-44c7-bc77-5ea726a0551d"
        },
        "item": {
          "id": "fa11c5b0-c815-4c18-868f-04dd5a0d31fb",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "eecffc2f-46dd-41b8-ac91-5a138bbe51a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1bfcd19-2171-4a99-895f-8a016ea4b0bb",
        "cursor": {
          "ref": "4bdda3b1-5224-42d3-a3ba-5a3ecda4a9eb",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e4c45b56-9f6e-49e3-9ec5-004fec6c602b"
        },
        "item": {
          "id": "e1bfcd19-2171-4a99-895f-8a016ea4b0bb",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "51a503b9-a83d-4e6b-bd01-34a2391eb489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc83ab3-14c5-45e6-a26f-3fa65a7064df",
        "cursor": {
          "ref": "4239b820-36a9-4b7a-b40e-2d3c17c4087e",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1ca983bb-0ebb-442e-9c1b-ab5f14c4c98d"
        },
        "item": {
          "id": "5dc83ab3-14c5-45e6-a26f-3fa65a7064df",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "587fd836-037d-4346-8f23-e1abdc0391cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8bd5a7-9345-4159-8dd5-c8a83e2b0790",
        "cursor": {
          "ref": "896bbc0b-6e89-4094-aa56-f63ebf7cf979",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "51b471d0-ba58-4400-a2af-dffb537a920c"
        },
        "item": {
          "id": "bc8bd5a7-9345-4159-8dd5-c8a83e2b0790",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "30a295be-6458-45b5-b127-904cd3430e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ce7135-c5b9-4928-a7ef-a0ac1781322b",
        "cursor": {
          "ref": "63cef636-2fb4-4bb8-befb-5cca94c26b20",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7e73a496-a021-4778-a6dd-fa419cdd7aa5"
        },
        "item": {
          "id": "b7ce7135-c5b9-4928-a7ef-a0ac1781322b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5d1b6f2a-2258-4bd2-8b70-79a896a67d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c85b6b-ccad-4517-ad8a-e0ee0ccf6858",
        "cursor": {
          "ref": "ee834784-ed25-42e3-8ef8-dd6736178f19",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "fec2b00f-b250-4ff9-9dde-a60bca98305e"
        },
        "item": {
          "id": "72c85b6b-ccad-4517-ad8a-e0ee0ccf6858",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "79fa68ee-f927-4563-af69-1321ecac46d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d483c253-ac37-4a6d-8c48-f74e53e8c79e",
        "cursor": {
          "ref": "1064ea26-caa5-4289-95fb-5613ad784fd5",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6a88d261-e02a-4ad6-87aa-8a759e2ed4ba"
        },
        "item": {
          "id": "d483c253-ac37-4a6d-8c48-f74e53e8c79e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3f2684ae-3ca2-49dd-a50b-4631ee2fad33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293d44a6-565f-4110-8b89-68dfc3130a00",
        "cursor": {
          "ref": "1e37a9a4-9865-4081-ad7a-9e33ddbf7991",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a5a668fa-bee3-4316-9902-50ca688cba2d"
        },
        "item": {
          "id": "293d44a6-565f-4110-8b89-68dfc3130a00",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "acd2f3c6-91d4-4f53-8115-b16f060d7010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb11387-70a0-4a08-9f1b-420e359c96a6",
        "cursor": {
          "ref": "38369c04-fc7e-46d1-adfc-973a75b005d1",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b4ffbc03-cb97-4e80-bce5-da1aa5efe9d8"
        },
        "item": {
          "id": "beb11387-70a0-4a08-9f1b-420e359c96a6",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a157e749-7fd4-4911-9754-6e61eb325db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9570b0-df95-46ec-8316-979bbff7f53f",
        "cursor": {
          "ref": "74abb02c-3980-4282-ab5c-e8dff48edfcb",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4d0c3569-6dd1-4e01-af9b-e93640902da2"
        },
        "item": {
          "id": "6f9570b0-df95-46ec-8316-979bbff7f53f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4436e93b-1b2e-44ce-bffb-b5c1ede8673f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53de9b3-6810-499c-8dbf-45ba21ce7a79",
        "cursor": {
          "ref": "a223cc49-f220-4d87-b911-74e4d08650f1",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f936fec4-0e89-4016-907f-d25de815dfca"
        },
        "item": {
          "id": "c53de9b3-6810-499c-8dbf-45ba21ce7a79",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1ed5f4d3-d7aa-4df7-8a10-9e9ccaba3b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cad9d80-0077-47a9-9eac-e621062868b1",
        "cursor": {
          "ref": "bd648fd6-df0a-4979-b917-cadc6395449d",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6e4cf972-a4bf-4051-a175-c274d1bd8f2a"
        },
        "item": {
          "id": "1cad9d80-0077-47a9-9eac-e621062868b1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "bf937480-58f7-4fd0-81ee-66fac286d4d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9bcf5a9-49ef-492c-bfb5-f55c76573316",
        "cursor": {
          "ref": "7c295a85-c236-4149-9a2b-df438994c9e1",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a77d845c-7624-4771-94a9-2478d68f0619"
        },
        "item": {
          "id": "b9bcf5a9-49ef-492c-bfb5-f55c76573316",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0f15e283-211f-48db-9dfe-fac65750a1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801a0d2f-e481-4a52-b99c-fd2e79c621bf",
        "cursor": {
          "ref": "513408b4-6edd-4aaa-9203-ce1b6abab5af",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c39ca52c-4b35-4384-bb1a-4e5c82802f12"
        },
        "item": {
          "id": "801a0d2f-e481-4a52-b99c-fd2e79c621bf",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e0fdc18c-584d-4fce-bdb4-9ac53ae7a1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318d3414-ccb6-4e54-938e-dd24ad4bdb30",
        "cursor": {
          "ref": "8340ab5e-d2d9-4b25-adc5-dd43e272a26e",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c5c25260-2fe4-43c8-838e-24524c261108"
        },
        "item": {
          "id": "318d3414-ccb6-4e54-938e-dd24ad4bdb30",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a09f6a39-78f7-47c9-b1a6-d46edbaaca63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1048d96-c93e-4ebf-9b25-5c1c64f2de8f",
        "cursor": {
          "ref": "b02b328a-aebd-4137-b02c-55b4c82c3edf",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "cbd4c266-a36d-42c4-bcb4-a4ed5dbc39c0"
        },
        "item": {
          "id": "c1048d96-c93e-4ebf-9b25-5c1c64f2de8f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "85325ac3-c6ea-44a4-b31d-75bdb48782a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f29b8e-7dc6-42af-9695-878ba29f0632",
        "cursor": {
          "ref": "4b701a8a-b4cb-4f04-aa7e-e60b8dc27987",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d09234e6-1119-4c1e-8068-01330e7d3552"
        },
        "item": {
          "id": "82f29b8e-7dc6-42af-9695-878ba29f0632",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5b2b10c4-df3f-47d3-8e06-26ed51c164a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3442e9da-254b-4993-a476-b1173949e40e",
        "cursor": {
          "ref": "95ead26e-413c-47a2-aefa-61b2684be19f",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c02d9d83-78d1-48ee-8eef-582e718fb85a"
        },
        "item": {
          "id": "3442e9da-254b-4993-a476-b1173949e40e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "24d2622c-ab09-4537-9ecc-186d8496ed1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212ddc31-055d-4b22-b343-25b756438d03",
        "cursor": {
          "ref": "b5812ba8-c6ae-4773-b0a4-ce45f315b6d2",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b0ce6ecc-1af1-4334-ae74-9a89f5618680"
        },
        "item": {
          "id": "212ddc31-055d-4b22-b343-25b756438d03",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "fe6a99dc-06e8-46a4-b2e9-e618bfd7627a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a14109d8-203f-479f-b9cb-8ff63cad2151",
        "cursor": {
          "ref": "84e8c6b8-ea6d-41d6-a9fc-834533fe89da",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "11db9d1b-29bf-4658-8598-4536470cf35e"
        },
        "item": {
          "id": "a14109d8-203f-479f-b9cb-8ff63cad2151",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7c3ec9f0-40e9-42ab-bfe0-5e1225d3be8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7557a94e-c8b1-4cd0-83ad-39c8a230e249",
        "cursor": {
          "ref": "2eb3bb0b-450a-42eb-a0c6-383a1a04c99e",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a1e1d1f4-9e17-4e1a-98b6-97796fa46379"
        },
        "item": {
          "id": "7557a94e-c8b1-4cd0-83ad-39c8a230e249",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7608bc22-f782-4e71-a013-e9b8afc9e5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53468239-0d19-44df-8c16-a6657294f7a6",
        "cursor": {
          "ref": "87bf7e7e-ecfb-45c3-972c-aa897748514a",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1cc521ae-2962-458e-a7ea-2732c2193745"
        },
        "item": {
          "id": "53468239-0d19-44df-8c16-a6657294f7a6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f1e4a71d-1413-46ad-800e-6ae46e9d1e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc530d7a-2ea8-4647-8fe4-c622229aefb5",
        "cursor": {
          "ref": "fb93ba6c-2fcd-4a1c-848a-5e6b2ce717ca",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "faa2d996-09ed-464b-9690-13ec043ca4d0"
        },
        "item": {
          "id": "cc530d7a-2ea8-4647-8fe4-c622229aefb5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "46f7167b-2aac-42ec-8d3d-fa4e5fef223e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c25a3e-eed4-4c0a-b7ea-d23048a73780",
        "cursor": {
          "ref": "758294ae-0cd0-4485-84f6-67e97ffaa8e9",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d4f00a02-12e3-4a5a-9c71-c26a59ae0d43"
        },
        "item": {
          "id": "70c25a3e-eed4-4c0a-b7ea-d23048a73780",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1cade977-237a-43ae-9dfd-e6de487f5576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44149468-a8fe-4e35-9e0d-63c03e5c9e6c",
        "cursor": {
          "ref": "7e1b8738-a887-402b-9c5e-d80545fe2642",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4c77e29b-8159-47b2-b6b0-9b877481f5a6"
        },
        "item": {
          "id": "44149468-a8fe-4e35-9e0d-63c03e5c9e6c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "abec2464-efac-42dd-9e54-66096e8229bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5792eb1-2806-4a6f-bac5-5543dd101d41",
        "cursor": {
          "ref": "2d54e7e6-47f4-4a45-a6b9-1be988682f03",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2c48bc56-a159-4ac1-ae26-f9e116c45632"
        },
        "item": {
          "id": "f5792eb1-2806-4a6f-bac5-5543dd101d41",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c882d8da-f726-4570-8734-b0b6c5d9da43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b3b7e6-ac09-4671-8393-ba0fac66d28f",
        "cursor": {
          "ref": "a385579f-59ea-4985-b737-26134fb8101d",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1513a24e-497d-4202-bc78-26ab1e1f70ef"
        },
        "item": {
          "id": "50b3b7e6-ac09-4671-8393-ba0fac66d28f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "408a8186-42c6-4b0d-a496-d896e45a2bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54f0811-ef66-42df-bd10-8045a2290bb2",
        "cursor": {
          "ref": "711b69b8-fbad-42d0-a181-b1e305177686",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5a86c887-013e-4432-8c37-4c1ed712b85a"
        },
        "item": {
          "id": "a54f0811-ef66-42df-bd10-8045a2290bb2",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f89d5847-f420-4c45-b5ef-e708ad3cecaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42c8f2f-03d5-4ba5-a307-030b677de5cf",
        "cursor": {
          "ref": "9fa3682d-7eca-4fbb-85a7-bc43c845e251",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f5bd8961-1b44-4baf-a326-c38146f74b3c"
        },
        "item": {
          "id": "c42c8f2f-03d5-4ba5-a307-030b677de5cf",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "19b5e690-391e-4635-b517-1b5ee01c9eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2226b3-8884-47cc-8f89-891e620c6a63",
        "cursor": {
          "ref": "35308885-ed25-469b-ac29-d3f1a02686ab",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6a75defc-b20d-4066-8ac8-b0270a7c041f"
        },
        "item": {
          "id": "ab2226b3-8884-47cc-8f89-891e620c6a63",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4eeec8b8-d52b-417e-8fb8-7346955a395a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b52ff3a-3b9b-4955-8564-defa8c79ee6a",
        "cursor": {
          "ref": "d31f04ae-bd67-4f34-be68-96a97b0a3729",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "bbbae015-ec22-40f1-9819-6fb85a067ac6"
        },
        "item": {
          "id": "0b52ff3a-3b9b-4955-8564-defa8c79ee6a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8c562def-03ac-4b44-9754-974a0a525d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "058a2359-1bde-45fe-8401-1541028d8a49",
        "cursor": {
          "ref": "8ffb15cd-6308-42a4-b8a7-dac23ae19cce",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "48a03d5b-b1bc-45f7-b66f-1c4ba0d3c14f"
        },
        "item": {
          "id": "058a2359-1bde-45fe-8401-1541028d8a49",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "fdba4bdd-8235-4197-ac5d-dc9c630a91aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a311f7-5e03-48a5-aa90-54d3ba9978d4",
        "cursor": {
          "ref": "42ca9884-80ea-405b-a7c3-a21ebee85176",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f47e59c3-a947-4642-ae73-25b2e924c29e"
        },
        "item": {
          "id": "d3a311f7-5e03-48a5-aa90-54d3ba9978d4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4e9d258c-b8f3-4919-81ac-be4940034630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79919377-328e-4b02-9807-7f5ba4d39aae",
        "cursor": {
          "ref": "4dfa97ab-b3d0-4d86-95e3-a7ef632df651",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "585b1ff0-d166-42cf-a24a-b403aebcb9c4"
        },
        "item": {
          "id": "79919377-328e-4b02-9807-7f5ba4d39aae",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5002ba48-e2c5-41eb-ad79-6a5b6c2980ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f417ba-0e67-4ab1-8c6d-054e88a082b2",
        "cursor": {
          "ref": "08dd3307-cd42-4797-ba1f-bc6cbd223a7d",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c528696b-27e4-41af-b7e9-9dd0fe7f2550"
        },
        "item": {
          "id": "f5f417ba-0e67-4ab1-8c6d-054e88a082b2",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a5bd1aef-d58e-4c3b-a27a-8204c36df9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a6cfdf-b1e0-4625-8a8e-8266bac2b10c",
        "cursor": {
          "ref": "944f87fd-d9ec-4fb9-958a-4c6214fa5b92",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "33116e76-b4be-4ab1-b072-26a653633c6e"
        },
        "item": {
          "id": "05a6cfdf-b1e0-4625-8a8e-8266bac2b10c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "119b5cce-b4bc-4218-a43e-c936654aa4af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ab190b-6cca-4281-8d47-f0ab7ceebfa0",
        "cursor": {
          "ref": "c3684f6c-3d84-406d-a18a-a98b65fb03a6",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9a654bad-de71-4757-be39-825e918812b9"
        },
        "item": {
          "id": "48ab190b-6cca-4281-8d47-f0ab7ceebfa0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "45465e48-b15f-4f1c-b33d-290cd38833c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5db55a-9830-405f-8c56-88bbb4b4f6c3",
        "cursor": {
          "ref": "95cfd4ae-d5f4-4e86-b6ce-69a820b8c4bb",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e12e3fd5-36ac-407c-a707-480e75f0494b"
        },
        "item": {
          "id": "fe5db55a-9830-405f-8c56-88bbb4b4f6c3",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1df05dfc-8e52-4a99-9247-71804bea27b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfbf07ed-ed18-4f65-ab98-8c17446b6beb",
        "cursor": {
          "ref": "bdb6d096-90fd-4dd8-a06c-6b3a0c5f7c0a",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0adc52e2-8272-40dc-b708-df6a779b3308"
        },
        "item": {
          "id": "dfbf07ed-ed18-4f65-ab98-8c17446b6beb",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "26d9f94d-18f2-4d31-8d62-8aa08ea980a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf3847e-f602-4fb8-971b-f0a7579fec70",
        "cursor": {
          "ref": "324cfb54-0e89-482c-97f7-c349d77debc4",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2a34cdc1-b852-4f3a-a36f-1947802dc9d1"
        },
        "item": {
          "id": "9bf3847e-f602-4fb8-971b-f0a7579fec70",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "89bbc296-06ea-4e2d-904a-a59b4f744895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa828a3b-ecbb-4914-991b-c34e3a877019",
        "cursor": {
          "ref": "14ab385f-eb9f-4d14-ad83-f498fbc742f1",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a9c10441-9523-4eae-8e3e-d6954cffb7fe"
        },
        "item": {
          "id": "fa828a3b-ecbb-4914-991b-c34e3a877019",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7b2056b8-de77-422f-b0b9-2912537f56c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90918a68-8403-4020-b450-2febbed77fb8",
        "cursor": {
          "ref": "7349bfc6-2ff2-40e7-93b9-9d209467751d",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0b044ba1-966b-441f-8958-3161a96629e5"
        },
        "item": {
          "id": "90918a68-8403-4020-b450-2febbed77fb8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "56594fcf-d089-4ad8-995f-b8a90cfcc63a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deabfcfd-b1eb-4700-b22b-aa6a8e7b16a9",
        "cursor": {
          "ref": "78fbcfe0-c951-467f-a42e-144015c34e36",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d2c41014-6da1-4774-9383-0100c0afff6c"
        },
        "item": {
          "id": "deabfcfd-b1eb-4700-b22b-aa6a8e7b16a9",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "dd416bf4-d6da-467a-863e-c25f665a7a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81e24db-c66e-4b9c-b111-78e7c03b8456",
        "cursor": {
          "ref": "8b6cd523-754b-4798-a5ce-514ebc969a94",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b8a1c2e3-79a1-4d17-a4d5-0dd17114173d"
        },
        "item": {
          "id": "c81e24db-c66e-4b9c-b111-78e7c03b8456",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6b6a4261-8684-46c5-b70f-0fec64d654f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83dbdf30-8017-40fa-bf14-7b9c0bc8c63f",
        "cursor": {
          "ref": "0f785806-f7a8-43b3-bfef-e1f65d01e2ca",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5476992b-2a04-4197-8ae1-c4d4ec8c09d6"
        },
        "item": {
          "id": "83dbdf30-8017-40fa-bf14-7b9c0bc8c63f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "baef7c50-421f-4489-a639-ebfb8a56b162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294f5a96-20e2-45eb-9661-4c831001e8be",
        "cursor": {
          "ref": "7703152b-f6b9-4c01-bac7-3d75cd1485e2",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "33f2291a-2025-4807-a54d-54ff81437308"
        },
        "item": {
          "id": "294f5a96-20e2-45eb-9661-4c831001e8be",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a2cce007-1503-4c8a-960f-e6061ed46e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbcb061a-9723-4cb7-bee7-f01099e489b7",
        "cursor": {
          "ref": "ab937c0c-5ef8-45ef-9b69-7095230ae1e0",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3d5a6c1d-0ade-4d00-9dfa-3f998a51118f"
        },
        "item": {
          "id": "cbcb061a-9723-4cb7-bee7-f01099e489b7",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2a0ec24c-7b6e-4479-8c53-d85734ecbcae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64cd3075-9607-4188-bfa6-8c448d498dc1",
        "cursor": {
          "ref": "08bb9775-fb9e-46aa-9f38-25bd236b458a",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "36e5729e-d2ab-4ee1-baf8-877155319a7f"
        },
        "item": {
          "id": "64cd3075-9607-4188-bfa6-8c448d498dc1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "dc01f893-6140-4be0-80df-3575e6fc0e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f74dd6-ac32-44d5-9cc7-477066e8db71",
        "cursor": {
          "ref": "66adf53a-abaf-4d62-84a0-1f4b345d67dd",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "cdb370c9-c5a0-4b52-aeab-f4460b040062"
        },
        "item": {
          "id": "e9f74dd6-ac32-44d5-9cc7-477066e8db71",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "58044dd9-2bfd-4266-aab8-2535e52751a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74df1d91-8ff5-4508-aba4-76c02b5b0158",
        "cursor": {
          "ref": "a9081359-b083-49ee-be88-52959b700625",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "745abad1-30d1-461f-bad1-e3555c453a10"
        },
        "item": {
          "id": "74df1d91-8ff5-4508-aba4-76c02b5b0158",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9255f490-e04a-4c68-8c2f-5eb68e0ba154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4384d969-a56f-4da1-97c2-28f76d8fb705",
        "cursor": {
          "ref": "9129f0b0-0888-4666-9bcf-be6c84bda002",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a6ee208f-5ed7-4109-9dca-fbbaa5253ddf"
        },
        "item": {
          "id": "4384d969-a56f-4da1-97c2-28f76d8fb705",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "bc3c6d18-d39e-4031-ba2f-adaf709485a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14604a57-eebd-4772-95c0-6109b1c094cd",
        "cursor": {
          "ref": "ec22efbf-a319-45da-bc8b-c783b948e516",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "66ddf4e9-e878-435f-b07b-5b55ff69866a"
        },
        "item": {
          "id": "14604a57-eebd-4772-95c0-6109b1c094cd",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "686d3153-71e5-4fb6-a2ca-8856df2f8681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc02cf8-cd49-4106-8989-75bc6d703a2d",
        "cursor": {
          "ref": "b8483e60-11bd-42b5-989a-68711ecfa02c",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "947f22e9-a0d6-4408-9bee-53676ba009e6"
        },
        "item": {
          "id": "7dc02cf8-cd49-4106-8989-75bc6d703a2d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "380bf7a9-f31d-4a5a-9156-8203f912a375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5324e0b-ea70-4cca-8166-73738f1b3fc3",
        "cursor": {
          "ref": "498f12ff-ce43-4fde-bf62-ab08926fd59a",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "daa0ddea-8f75-4cea-bb0c-9cc5ac36869a"
        },
        "item": {
          "id": "b5324e0b-ea70-4cca-8166-73738f1b3fc3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e35aed3b-87ba-4b66-8ff2-bc2310b8de66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e07cfee-546e-444f-ad6c-7fd2263eb603",
        "cursor": {
          "ref": "d4715035-075b-47e2-9e12-6823756a9f90",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "16e8bb10-941f-4746-b6f9-e5a0223e4c50"
        },
        "item": {
          "id": "7e07cfee-546e-444f-ad6c-7fd2263eb603",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "13039386-dcc3-4870-95cf-2e9f9d990ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4559d5-419f-47b8-a09b-21a162f6faa3",
        "cursor": {
          "ref": "0c4ec783-5435-4845-b7b5-b3b859510273",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "2fb982d6-f8e9-44c5-bac5-078ce7f957ec"
        },
        "item": {
          "id": "2c4559d5-419f-47b8-a09b-21a162f6faa3",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3b354f19-af61-4003-a53b-fde99076ba98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15e00ef-69e9-4fa9-9480-fd8375f04fa7",
        "cursor": {
          "ref": "01f1a49f-4547-4a1c-b56f-44abdd0be077",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d649c5ae-038e-4991-9b81-05fe9213f49f"
        },
        "item": {
          "id": "e15e00ef-69e9-4fa9-9480-fd8375f04fa7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "abbaced1-d893-44cc-9a43-b7f48dfe1e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c304a5f-0c8f-4ff9-a56d-9ad8494fee4c",
        "cursor": {
          "ref": "ccd280ca-11bb-4e17-98af-40c0214da6db",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "7209c982-d986-41e8-8f02-0f6015fe743f"
        },
        "item": {
          "id": "5c304a5f-0c8f-4ff9-a56d-9ad8494fee4c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "868441f7-613a-44cf-a840-081578dcfc68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49706927-5668-4fd2-845e-864c1fd71da9",
        "cursor": {
          "ref": "01bb14dc-347d-43cf-aac1-281a6245035b",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "2bd6b76b-7bfd-4685-82ba-1455df300129"
        },
        "item": {
          "id": "49706927-5668-4fd2-845e-864c1fd71da9",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3c8e0991-60d3-4f2a-a883-fa5ff0d6b8f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397baf2a-cb6a-49e1-8373-e023e4e1fd46",
        "cursor": {
          "ref": "0bd75d4a-c642-49d9-962f-61a72ec792b3",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d13702aa-c563-4f0d-b284-cb652ea89598"
        },
        "item": {
          "id": "397baf2a-cb6a-49e1-8373-e023e4e1fd46",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "caed2b97-d97e-4c92-be4c-5a1d1bb2e8b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3a7eae-4420-42d4-9762-4aacbd48d580",
        "cursor": {
          "ref": "96f76a92-47e7-45ef-a679-c161862c9a62",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "ca2b01b6-3eeb-467a-b6dd-567128fb3b5e"
        },
        "item": {
          "id": "4c3a7eae-4420-42d4-9762-4aacbd48d580",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1a7369ae-11ce-40bb-8587-60898d3d8224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2592300d-7081-446b-98c1-ec2b3d2dbdd7",
        "cursor": {
          "ref": "28303434-8812-4790-b6af-074c62dd4f1f",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "38ff9dd5-9947-4fe1-b8b4-2278ff5ec87a"
        },
        "item": {
          "id": "2592300d-7081-446b-98c1-ec2b3d2dbdd7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "90b69c3f-5085-469a-a7ab-05c87d028273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29f1bb0-1907-4ca3-aef7-2d894e43c611",
        "cursor": {
          "ref": "3717f2d3-5308-413a-8a83-5e2da696fe43",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "04484c04-2193-477e-958c-e396f3f36873"
        },
        "item": {
          "id": "e29f1bb0-1907-4ca3-aef7-2d894e43c611",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ea808476-2c32-4aea-bc60-da88206db147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1e6aef-4813-4e2a-be08-e90127c9ae60",
        "cursor": {
          "ref": "163770db-bcfa-453e-b0e4-6bafa4592efa",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "009882cd-fd3c-429d-8a91-5f246ab15dc4"
        },
        "item": {
          "id": "de1e6aef-4813-4e2a-be08-e90127c9ae60",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c23a4155-7e88-4d06-835b-f70d0c5fedb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e3657c-bd93-4c99-9fb4-708dfa54319a",
        "cursor": {
          "ref": "f2af6fb3-a3d2-4c0b-b0e0-1aee54a0e598",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "80f6e7b6-7265-4050-b0b6-35af020ec50d"
        },
        "item": {
          "id": "92e3657c-bd93-4c99-9fb4-708dfa54319a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0f328ae6-b22c-41da-9b11-2e6094b80940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff27226-de5d-4a96-94ac-af13b5e5c53f",
        "cursor": {
          "ref": "d17cb419-8e26-490a-bdae-676fcbe3f9c1",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "3bbde835-a501-460e-8b12-849de7f444b4"
        },
        "item": {
          "id": "4ff27226-de5d-4a96-94ac-af13b5e5c53f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ace1e0d0-415c-4c9e-a721-eef5bc660e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72957191-add3-47f5-b445-40835dc92766",
        "cursor": {
          "ref": "06a2e2c5-cede-42e1-9f7d-5760e9166032",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "fee3f0cd-a18c-4c05-a590-6b4d3c65f47f"
        },
        "item": {
          "id": "72957191-add3-47f5-b445-40835dc92766",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "513e8701-548e-4028-b2cc-6b8b63f6b94e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2e474e-3c68-4eb7-963c-0fdcf288328a",
        "cursor": {
          "ref": "4f8c6a1e-81c9-41a6-8d5b-72e27fda78b7",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "7a8a908c-b48f-4233-9579-fe5236c43b56"
        },
        "item": {
          "id": "ae2e474e-3c68-4eb7-963c-0fdcf288328a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "762e5c91-6773-4078-be3c-663126a47886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c487342f-85c1-4e23-8644-d5a534ce8921",
        "cursor": {
          "ref": "555040c1-78c3-469f-b6b3-1f88a6028891",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "3556c0bc-e30c-47fe-8f28-b6a3bd2ed9da"
        },
        "item": {
          "id": "c487342f-85c1-4e23-8644-d5a534ce8921",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b2fd5fe3-f78d-4efe-9492-678298162165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdfff201-95a4-4806-892e-41cf657bc5ac",
        "cursor": {
          "ref": "71bc49b3-320a-4191-86d6-d0e1aa7041ae",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "8e887568-ddf8-4941-a4dc-5058e893c825"
        },
        "item": {
          "id": "cdfff201-95a4-4806-892e-41cf657bc5ac",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b8110e89-cb51-4387-9880-675a43da8031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ea9bab-cc6f-4271-85e0-11783808e385",
        "cursor": {
          "ref": "6b9bd914-0dfe-45a0-bc12-4ffcc2e3fbdb",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "688f193c-ff47-4e8a-8fd4-d3acd668a78c"
        },
        "item": {
          "id": "63ea9bab-cc6f-4271-85e0-11783808e385",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a3f4376e-8db8-489b-82fd-3590d4ac84bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a658dbc-6865-4344-9ef5-e1de77ea2da8",
        "cursor": {
          "ref": "a390e590-45a4-4e68-a769-245ba7f6cb6a",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "e2ff98c5-33ea-4609-8c21-7a7a92d71a2b"
        },
        "item": {
          "id": "0a658dbc-6865-4344-9ef5-e1de77ea2da8",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7128b210-0884-4aac-849a-b313454bc18d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0efef975-0c69-4ec2-b8e7-d45d708cafa5",
        "cursor": {
          "ref": "ff04afdc-227f-4178-8a54-078dc4a9627e",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "71f61b8e-747e-40c0-8a7a-c460c7ad898c"
        },
        "item": {
          "id": "0efef975-0c69-4ec2-b8e7-d45d708cafa5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f99d4aab-f85d-4237-a2f7-40eb67e1ad83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792806b9-add3-4761-bb1b-b6fe2ad168e4",
        "cursor": {
          "ref": "9c5684f1-42a8-422b-aceb-56b7aa5ce93f",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a3e75611-9b9d-44ff-b493-c0d54b0012d3"
        },
        "item": {
          "id": "792806b9-add3-4761-bb1b-b6fe2ad168e4",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "4fb8cb32-585d-4218-97d0-105a67d32c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9e970b-4e11-48b0-979f-02a37894a9f2",
        "cursor": {
          "ref": "f5226560-4620-4a55-801a-b2ad3c1607ac",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ba2d2823-5edb-4d2c-a7c9-51f108a8f19f"
        },
        "item": {
          "id": "ac9e970b-4e11-48b0-979f-02a37894a9f2",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7ce42ba1-2a2d-4c28-b2f9-27e6f99a3f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80353c5a-d069-446e-8589-6a698b0c4730",
        "cursor": {
          "ref": "ae173bbd-a4ab-4423-a191-b1d297d4b632",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "08cd22a0-0862-48a1-bae2-72feb9bf8dca"
        },
        "item": {
          "id": "80353c5a-d069-446e-8589-6a698b0c4730",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9c1608e3-776b-41b7-afbc-dc3b2a1a0f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aaf6173-fb46-42e0-9a27-858c5cbfbd12",
        "cursor": {
          "ref": "e0191fc7-43f9-4a93-b84a-844a1230c398",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "9375c677-fa87-4c72-b594-a1c4c90d7383"
        },
        "item": {
          "id": "9aaf6173-fb46-42e0-9a27-858c5cbfbd12",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f2293c56-f896-4299-9011-e7d2a475c92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced1e690-4602-45ec-af2f-6e081f59aab0",
        "cursor": {
          "ref": "5d04d1a8-dac4-46d8-b440-f3e3920da4be",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "03a8e2c0-3898-4bff-a56d-fcc481cba217"
        },
        "item": {
          "id": "ced1e690-4602-45ec-af2f-6e081f59aab0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b2f019c0-658b-4690-ae53-bb39466dfcdd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba835ef-cfe4-424b-8cec-2b1eb5523e1e",
        "cursor": {
          "ref": "598549aa-718f-4f94-873f-eaa1e4b5b3eb",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "9515a717-0859-43b8-b9a2-c4dd9535a8c5"
        },
        "item": {
          "id": "4ba835ef-cfe4-424b-8cec-2b1eb5523e1e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f4c909fb-c9af-4ff4-bb13-da9b8f6aa8c9",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1880da-d5a7-4526-8f05-6682ce250d29",
        "cursor": {
          "ref": "7e631795-f59f-4667-9d96-9510633b96b6",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "e00ece6f-ace1-41e0-90af-142f3b4bf704"
        },
        "item": {
          "id": "3d1880da-d5a7-4526-8f05-6682ce250d29",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d93a106f-3162-4c1a-9648-af9238f2ed8c",
          "status": "OK",
          "code": 200,
          "responseTime": 2841,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ba0281-57d7-4fb5-9f55-a82938222586",
        "cursor": {
          "ref": "a2ee8484-9bfd-4bfd-aacd-f488781237ac",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "6c3efaef-c319-4220-9560-ecd972eca179"
        },
        "item": {
          "id": "d3ba0281-57d7-4fb5-9f55-a82938222586",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0a494d74-62cc-45e1-bccf-f7c2548d5e4e",
          "status": "OK",
          "code": 200,
          "responseTime": 2579,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e072c2fc-57c9-4a65-a1d7-33606d21e1cf",
        "cursor": {
          "ref": "cd50ad32-e123-4455-b5b9-7ed1a2e466a9",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "c7e99ae5-752e-42f9-85af-b97a1a90b4a5"
        },
        "item": {
          "id": "e072c2fc-57c9-4a65-a1d7-33606d21e1cf",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b671f8ee-da6e-4896-bcc2-4539e7f58fb0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e072c2fc-57c9-4a65-a1d7-33606d21e1cf",
        "cursor": {
          "ref": "cd50ad32-e123-4455-b5b9-7ed1a2e466a9",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "c7e99ae5-752e-42f9-85af-b97a1a90b4a5"
        },
        "item": {
          "id": "e072c2fc-57c9-4a65-a1d7-33606d21e1cf",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b671f8ee-da6e-4896-bcc2-4539e7f58fb0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9e13ba-a5af-48b8-b5b9-2d7c100252f5",
        "cursor": {
          "ref": "e4b3d40a-3bac-4915-930b-04d9944af36f",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "54b2a0fc-6d77-40e6-a801-0b4a6859b3dc"
        },
        "item": {
          "id": "8d9e13ba-a5af-48b8-b5b9-2d7c100252f5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c53469be-781a-49dc-a506-4cce1487b70a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72ac697-bd38-4aad-a50c-6969c2824d9b",
        "cursor": {
          "ref": "73a5eadc-9a7d-41c8-8e4d-abac73cf812c",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "996a9166-03a4-4ee3-8c78-90f0dcb628b9"
        },
        "item": {
          "id": "c72ac697-bd38-4aad-a50c-6969c2824d9b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "2a586bc2-b73c-41ae-8821-2fee1139f096",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}