{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2e8f67ce-b6be-468b-90d6-5917c9e93deb",
        "name": "Clear Cache",
        "item": [
          {
            "id": "21f2f315-7eaf-4a73-9a6d-8f6ac4a72b64",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f1126baa-ec5b-48fc-b440-704132a11183",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "704690a4-49e1-456b-b9db-896d5030490e"
                }
              }
            ]
          },
          {
            "id": "a426a7c4-68a7-4fac-b0d2-73675f90b61f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d180e57d-f345-42ff-8c15-1adec7f94790",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7842a94b-9a7e-4c25-9575-5ce77b0584fc"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ca3d9c46-8582-4460-b013-0fd96c540896",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4ffaed1b-9a08-4445-adfa-a242e021aca7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4b1bc243-5577-4f20-96bd-694e7b009765",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a11e28f-ce85-4b8c-843d-49b2d0e3f98c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5996a96d-44c9-4d49-88f2-fefb0dfb66d2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e7f649a1-7291-4fa3-b2f3-08cfbeac50ef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9a6f8df7-2a5a-4365-93ba-fc50894e4609"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4742a99e-1fff-4170-8941-0e401f092667",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "70896079-819e-4f51-8bd7-51f8bddeadea"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "46298c9b-b1dd-4399-89d6-24e17cfacd6e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "55a9a68e-ba34-409e-908c-a8a647b59be5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e943282b-cb5f-45f9-b488-70b5da6a4d23",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7ed0a15c-d0a3-4a1e-a6dc-921e9f76e4d6"
            }
          }
        ]
      },
      {
        "id": "87ebca9e-fa6b-4961-800c-d4d40c04df14",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1f30e564-4c85-4ccc-9b15-a31b5188d2e1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ce3db3e7-33e6-409b-9ad8-7c4bde8d08de",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "48526704-5c86-45b3-bd09-6cc101bffb97",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd867f8-0214-4cf1-be1c-ca95c60d6645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81eb03f4-9fbb-4257-8f80-c3043259ca99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f19953e-34b5-4adb-b22b-280fefa7dcd0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9a7ea5-fdae-45d8-a92d-b80c9143ac7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32077114-2d53-42b5-a0cb-1254558fd119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94fce574-ba10-4cfa-a78d-e5d21265b6e0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6adf9de-8022-4f3e-bee0-1ae0648ab7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "289a8119-dd29-4c90-8949-4c8c74ffa603"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a920d1df-d142-4b3b-938c-14ae6bfb277b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "625ce91d-1fc2-4e4f-932d-77fa91d96f9d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02e6990-ab94-4561-99eb-963024899017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05807b37-bb9b-455b-8081-0c9d87d95400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638f2411-df8a-4e2a-9e22-e51488b508f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35deeccb-ea0b-486a-be8d-4f0880869a60"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "243b8f93-1b3f-4f1f-b592-0c0e6b81d5bc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "780a05e9-31f7-468c-82ce-83376413c917",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b76b604e-7cfd-403f-abd1-3c3bd76874b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7cc5e8f4-9c84-4d59-965b-78becc6c5980"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0f21d2ec-a49b-4586-8e4b-eb168cc763e7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7c13b73d-b943-4c83-8646-249875a606fa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b9eb50e-048f-4ba3-ac2d-6f11e606b7ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "19bf6993-8f4a-43a5-9c4f-560535026e51"
            }
          }
        ]
      },
      {
        "id": "9cadc573-3db7-4d2e-9e21-cfa018c192fd",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8e07ae42-ab94-42d7-ae74-b47e03f10c0f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "53755f74-c745-448e-a3a7-d234d147ef83",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9b99c630-88ef-43c8-a5bf-d95ca98dec92",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e73f34-193a-477f-9f2c-1b4b1277dd6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4edde78-3030-4594-9c72-cc2a133b1856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ab632f-cb42-4c89-8201-0bd08e68cb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4546cb97-a5d5-4dad-b7de-e60e3eaa6a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce6d907-f3cd-47ce-8d95-1af7f0b0e669",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d8fa58-8b58-41cd-84c2-d7c80008d1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93982dbf-01c1-44c5-8f17-4d020ab1c382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0455e0-2c64-4a20-a54e-9c143a7cbc52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c10083b-3dcc-49d2-a960-a7937f74a7f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664f4d9c-8ffb-407b-afb6-37854cd89d2a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5e6689-0df7-4a23-a267-d02b8b4bcdd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af2446c2-9ea5-4a5d-ba0e-d6e401034e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4460b968-12a9-40ed-a675-2d2024a83b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9d40db0-5100-40a9-822f-36302d42dd96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0741e790-04ec-4cc4-a3af-a10aae1b8048",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cda37f6-3500-494f-970d-c1d606600ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef9bc147-4771-4287-a451-e4b9a152d63f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ababc0-8728-4bfe-afcd-29dd55352c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0332d99-e531-4a96-8b44-1e6cd1f5c180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a86a7ff1-7bf2-4439-8c45-d747bd60a52d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a57d1e1-4c60-4993-b381-4a0d78bbbaaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc43820-3946-457d-a399-397d3f018288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e41698-8238-44c2-a269-509afc9696e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2856e0f3-d029-4c5c-b580-e6a0644b42f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f8ffcf-d85d-411a-a87b-746058b51982",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caba268f-88c2-42d8-9336-736e67790de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5aed56-ed60-412f-b55d-dcb490b5348f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5063b59-ff58-4b25-9f24-0358ce555f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d45e1349-8b38-4db9-957a-9e937780bd56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43dfc727-a310-483d-9b43-d1e07eec99c0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0afc6fbc-feff-4760-8057-85fbf3d940dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "825db6b3-c31a-4d9a-9e03-a9266f930cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498b2ca6-4386-4885-b174-c85c3a113d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d89aa2f-7202-4af1-85f9-6c672982caec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35dcaf0f-1b96-46fa-b5a1-4abc2e3b6fb3",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "964ca76c-137d-4757-b94a-d1df3b6b1bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f0e2510-c114-46e6-821c-b4567f40c2ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8d5379-54d0-440a-af9e-7a0626df8d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e48d5e1d-0318-47e3-aeb6-e8d2f88e081c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159e05ae-4e26-4969-b232-a1c68b5839bf",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "835acc6d-7af4-452a-8dac-1b4e16384f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edc2bd2d-1735-4b71-8df5-a93765a49006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6feeab-607d-42b6-86d4-e7f3f2533dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8eec4701-fc8d-436e-aef3-b2b908197423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42d769b-425e-479c-9bc2-a7118fd61d46",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c16760-82a3-4fd4-8de1-5523227e196f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a1bd0a-9f02-45e6-9967-55a9581a0aac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d16f0c-0d85-4296-91fc-a6bcf9834ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b3c841e-4d46-4d56-9405-a1a3f56ae147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1709b735-3971-4f0b-b1c6-ed679b6fb161",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57476c68-c557-4878-aa3f-ad3da9cd3220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd0a5b3e-f63b-49cb-98a1-088ac970e425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94837d00-9947-428d-931d-47f72cc7867d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79bac034-7bfd-4bfb-90a4-46954fa2bdce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4bfac5a-7ca0-44c8-a22b-3d0b8233e75a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d200aece-b96c-4dcb-9866-81b08c87d063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "913c14c4-61c3-44e5-b104-06e3c90b4d76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024d6e18-91f4-4791-8c40-3054dbfac1b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d897aa5a-b8cb-4d72-bb89-099f6a7ed92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8d3dd8-484d-463e-a105-8b441756aba3",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a07426-c1bf-4878-a0e1-af615b40bdc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b3069ad-a7dc-4740-9d52-5110e8a849cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8b3218-b90f-4ff3-955c-fe8d0d856424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee7a7d67-ef7e-446c-8196-cd25126accec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86d8b91-e25d-46e2-b6da-9ea4b1d09d71",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1b7b72-924c-4460-a413-09770b5355d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "654120bc-30a4-4c0b-ad0f-1497912e1539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6248111-504b-49c0-8101-f3545166e9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf1a50c5-acba-416e-8267-a8a67b6514cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce20ad7-dfd0-46d9-8d06-cbf60254dbb4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be1c199-2271-46dd-be16-8ee12206d490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f79fbb2-6525-4387-8224-8f304ec8070e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2eb876-2553-486f-be89-909604b648d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1f80e4d-c963-4a51-a941-cbcb58f0e0d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e223ff83-57bf-45a3-8e0a-01e422b7e853",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "557ce48b-dcf6-4715-811c-23337fcd3f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c07a52f3-1cbf-457f-828f-470b22d06e29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c278af7-76ed-4d5f-8597-95f249c53090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fde26bca-c08f-42bf-baec-aa2eba3b5e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac06b30-11b1-4d68-8278-01eda638a982",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f361e4ca-2e75-422a-a8bd-93d825f62385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67338d38-bcd0-44a9-92dd-3016c005dfc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167caf5a-5524-4701-a534-0d23a7e8b117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9055d741-cb72-4dd1-a699-b02fb493cd43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed563e9-1560-4e60-8562-d4b307217d10",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b05eb7-1e57-4be0-a31b-9a41f159151c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd52177b-d68d-41fc-a8c9-f45993898fed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2801c988-3f5c-4912-a478-dd57677a5e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "71417612-b490-47fe-b748-f890b5219d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0c5152-5e2a-4a73-8480-19920afca037",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a616807-0d2d-4f8c-bd43-88078f66474e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b77dd2aa-0891-4088-ab49-f64d89724132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed9d42d-e3e7-4ef7-9d81-49810429e29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "efe917bb-5c5f-4c73-8010-7ee650eeab65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841990c3-413b-42da-8f16-329640d4b207",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e401d844-cefd-4871-838c-6ea881ab7a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5b23fee-a496-4075-b9ef-ff6430f6937a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a12c04c-ee97-4ee4-a797-d7960492eaae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95f03447-c281-4bd3-81d8-46b6c0868e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995a0940-0967-4d17-bd36-ec3af1150a40",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2513ffa5-1213-4c97-86b1-1a77423037f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b35acee8-e606-4205-9dc4-909b04c65ca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f850b8-4abe-42eb-b3a4-642a28604b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b24bcbd0-44eb-4301-b5d3-556fae139054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00cf7197-473a-4945-9cb6-4ed41b5bde4e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "105e5535-33e6-43b0-89f1-fb8ba74b91c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b141f1-7f16-4f7c-bf1a-14eaf64b7b97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f02a0b5-d1c5-45fc-b836-7d485bf2f056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a4ae116-8add-497d-ad0a-c107841c41c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec75fa4-f40f-4a70-8fba-77b97efe7e98",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac3cd98-8e10-476e-8776-6cc36458d7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8088b3e-44b5-4592-8cb3-062f1e5fa975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c11046-c48d-4140-9ae2-b8c9090361ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b4d249b-5811-41fa-8046-8168022dfacb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef24cf2-db82-4546-a138-86eda6d42d10",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51868f35-4752-4b75-909d-d7f5b73945c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d02ec6df-b4f2-415f-be69-ab3d8dea0060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98595d0a-e7c0-466f-b30e-b09b306fa903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "57f30ad5-2f3d-4d89-8ea4-64ffef7ad46b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f33eb7-1077-47c0-ab0d-c962ba6802d7",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b92c0e-2fd0-4e76-8b9e-a274822dd90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f2e823e-705a-4fe5-9323-fbe7d93e8bb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920c8416-2391-4d18-a4d7-866ae106c199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddf83650-05e0-4c36-98c3-4011de6338f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4076b8ae-cafd-4a61-b019-2a1b6bc76933",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dabd81c3-62e2-436c-9e83-3e50e0b50450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a71f44f3-fa09-40f0-810f-dfb8e0225626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbbbb5b6-8ad3-4356-92da-b5df4c5f6483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5bd7eec-fa2c-476f-b263-b498e43c44d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84f720f-ca30-4d11-b71f-10ca3862dde7",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b12bca1-de7b-4aa3-b86f-052f93783605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f825bfd-c4c0-4462-a310-cf673ddfde89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f188948-4c86-49b4-b0dd-7045da438788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "81b69ef8-91e0-4484-8094-d70c7fcf0030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c9a39b-86d3-4252-817b-0eeba20da7c2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ff0998-6b6e-400e-b929-4a75c7abd8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "824b0ad7-a95c-4b19-aca7-21825329905a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31d4097-a95d-4e9b-a4c6-f662f3fa7ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f91bfab0-2f84-464d-add1-8e62485060a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c169ae6-2924-490e-881e-1fb279539aeb",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3feee9b-53f0-4471-af04-952c4dceb86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5411cadb-4b8c-4ff5-8a6a-6bc848d655f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "308fba1e-23b4-435d-b13b-4fe0867c5cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b1c103e-5d26-4d4f-9b75-a1388bad4bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cac55a8-c920-4059-96f9-7fa5526ae050",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77dc803f-15f8-42e4-809a-2bcbe5d7344d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd336ba-c49e-4513-b7ba-6fa325a7af1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6668b9-81a4-4a4b-ab62-a163b183848d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fbbd64f-8500-42b3-979b-a1834e0c5cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c8b676-6bca-4c9a-a078-e76dc1ae5392",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e25fcf-8824-4e89-9a7b-1095ce7fc374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d303a6f-15f7-4ef3-bae5-f6f43ed02dda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75060ad2-352b-4219-8b3d-ce2b761601c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfe6d446-d63c-415a-8982-a946e5035a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7120df1b-2432-406a-9a88-43d6353c29fc",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3606116f-f960-4147-ae83-4994aeb38611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67a3f0c5-1595-4706-adb5-65a5b955e42e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1947225a-39dd-4bd2-b9c1-57344607711b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8aa72d2b-f327-452e-8140-89aa52cff46f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1861ccec-e0f4-4238-9c71-7d729037dd66",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c4b705-ae11-4c19-92c1-4ac54698f4df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "143d574f-0756-4fd1-a3b5-d9f712690d2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87283399-0329-460a-8727-fb97bec26dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30042d26-fbc9-489e-8d70-babc75bc722b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54501093-13d8-4d59-86c0-cb9bfc373b7a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae65b68b-c1d1-448e-b6eb-839671c423cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d38a5f31-8b52-49ec-a866-e58754147719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0328b2e3-b567-4c35-9edc-6c91bc9ea596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f57d8d-7b9d-41a7-8bc0-db344abaebb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62aec9d1-2a63-4fd3-b373-7e980c975c77",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2937f84-8f20-4026-9ce7-f2621c67f07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cdf1734-ab7d-4340-a820-ad6db0083ef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2464424f-8cca-446d-baee-315b152c2368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "cd289127-0225-4efe-932c-766a1eec51d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6dd4fa7-8cf7-4104-8037-fc9b7f7c9c58",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "230793f0-8b99-4142-996b-eff74381d4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb881f67-0e79-4716-97b7-85f2dbc10054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92298a9b-9669-4ba1-8b00-96977c06d945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e8d49a14-8968-4cb5-84ec-62cb37bec420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9d9e62-2211-4405-8666-a8f3c7f413b7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d67c67-8f1d-4df4-8217-e807815b2f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9828376c-9083-435e-8eeb-1c76a92efab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c18bb2b-a95a-4710-af76-31843f9dbc5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0087b2fa-0d50-4781-aa2b-586b60edaf44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7445b2cf-bec4-4a5a-87eb-9eed3bd89c01",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62638fd-34f0-43de-830f-0507c132e82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e48c9fe2-bb63-4b1b-b3e3-22e6a68b16c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ad3684-0110-4b0a-910d-50e507d54196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d18f0c0-6bb8-43a9-8ce0-d17488426169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c363b46-b61f-403c-8b99-ac14dee3073d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d35a311-fa90-4500-96f3-a9f133b2aab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11080c1b-f613-4d8f-9680-f83536b95eb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472b38d9-41e0-4cb3-9903-79f31187f041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6fdc8af2-3efe-474e-a601-4630a1158d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef648d7-6946-402d-b8c9-88bd35de06e2",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cfe7e9a-2168-4c46-b084-60a40a1cf90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d42aac2e-fa71-4432-8ad5-113ccaecbafa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b21e2ac-c2e5-46f3-95f6-e7997d146753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e148ad0-f169-41ee-a5e1-c642896a0c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd1804e-6e6b-4e1e-b117-1f77179b78bb",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4562551-181e-4386-8348-00929894c0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f50cc8-e4ea-4afc-adf2-4f7e342b86a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6d7e07-1666-458c-a83b-c0206a9943b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b77ba49c-168e-4b6c-a8a9-39dab508e96c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ed5e0b-6d02-452e-a107-8a541b13d95c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e18df9-a6c4-4826-bd15-304349d24cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48418e3a-e6e7-481a-820b-67dcc3f92aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a1c6de-fd6d-460c-8875-6035f13b699a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1e083a47-d411-488d-a03d-e08675570a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34ce9b8-e4dd-4920-93d5-14902d91ff5e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4aae4e-4bfd-4194-a9ae-d196b0218822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46a22ce4-0993-4212-8b9f-6b44950d251f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb29362-ff95-4aff-ba92-2f5f5cc25c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c373ba12-7b6a-49ce-bfff-cb64dde27a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d4625a-6fd6-4c44-b85d-1a770fe8a0ac",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9198f4-664c-41e3-a50c-69ab9e82d035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de2d21cf-b98f-4bf2-8bfb-8fc3752041ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5762b28f-d899-49a2-91dd-cbeb0e8e1f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e29abbbd-77aa-4e6f-874b-c78bae056654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4007c9-64b0-4b2b-9bca-c8456d0b21bf",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "575d78e7-e191-4da2-ac08-e7044170b357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53e64645-1189-49aa-ae0d-c5dbc0973933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d830feb5-caba-44bf-b9f3-15a46e733a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "37ba2fca-4edd-4e6e-a8db-7cbf8d104a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1dd8914-b88b-46ff-8ab8-ec37c2aafe72",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a24348-255f-4dee-8388-0565e65ad0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbc16117-93ea-47d4-9378-df2fa4756c7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b03275d-8497-42f7-bd51-3fb3ee150106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be69aba8-31bd-47e5-97ac-d9802a6c8fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b6d737-3e58-4b3f-9d4f-7bd3be6b276c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91421f78-6cf3-44d1-aa5e-d9934ca572c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d7b4c59-727f-4aaa-b931-747d94165419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a234e7e-fa01-4863-9409-7248dd7b380b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bb5abcf-3ebc-412c-ba26-548207ff7a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b1d6d9-700a-4646-aec4-f863fcd58549",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ffd932-a739-4646-8dd0-36a47e8c7970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "043006ff-c8cc-4842-8b50-e5fda2d0f639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60d8d59-4de7-4cb4-b72c-7771895f85d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b28a9ab-c9cb-40d4-b496-3e8115e7494b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5568fe-4da3-45bb-8993-6f2ad0438b5a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c5ebd8-0428-410f-9513-1c395fea2f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e8b719d-92d1-4b47-97e5-5cf8868bd0d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aecb85d2-0a6e-4660-b986-57ea537aee02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a04455-a723-403e-ba0e-c4e19169d166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d42187-35cc-4713-b4eb-7d4a54f83099",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e214958-6be8-4289-ac4d-1163bcc3ce9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fde2f9c-1328-4e54-b014-87abe677235c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13d7eec-7531-4447-a37e-45db3509c51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "676939b8-eb5a-44e5-9828-3a27d980f6d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e91726a0-dfe9-46b5-b879-c438cb20e478",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0d1f26-7ded-4306-bd25-c9c655ed5db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cd817d8-82a3-4d19-8c8d-06116e4d4fa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679e25ff-481c-4148-9e00-dbbe72792dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "db16f2fe-9a8b-44db-8dd7-f870b608ac18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d55086-ee76-41e1-81d4-7de4a8868da7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d65eff4-ea81-4f3e-85de-65acccd6ff81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7bdef66-ec12-471f-9e0c-b0c9405780e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35985320-16b2-4d7d-9807-cedb2e58c51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "24c96e9a-af05-4b61-9f09-838591dfbcb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747370a8-cbc8-455d-9e49-3509e21f1d29",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb94d2c8-48cd-4885-aead-c4859df37850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "543f1a23-8759-4c0c-80b7-76e49d202a9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a694c81-f3c7-45cf-9913-ec22a072e8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03549551-b852-4ae3-91da-f06513791064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4245eba-8276-434c-bcd0-55388ce05716",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a940d6c1-956f-459e-86df-3e74f5db2c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1da21b2f-a7c8-4743-8d4c-69768932f2b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f97365a-9d5e-4a95-8d2f-113f05571d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3599c24b-ae20-42bd-813e-7206ff47d69b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de17f25-e1ac-4063-af07-5551703997fd",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82524b86-e464-4db1-bd00-cc68e1b3e44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "754c7561-6e9e-488c-8829-c12a883b2e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d4c579-6006-490c-918c-6985a763861f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "442988bb-1e9e-409c-b20e-51922a934a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9540ce-5491-4e04-9769-e3680dcde22c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a938fd-07bc-48eb-9b4e-4d07dbdd3dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8dee380-d317-4285-aed2-8691a3daea2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74cf97d5-4fd4-4a80-8523-9bb04b1fe329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "04a86ac6-1a7b-474f-9392-942fc01c8e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf165408-744b-47ac-8407-86bb9dbdf00a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338a788a-bc41-4def-9b17-4daa9cef9261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "687ac356-b7d4-4549-9281-4e57c11909a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7c3fb5-3f2c-4939-b804-7ed8bf5a4721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4b2cb75-1d4e-4c12-af34-1145c7d4013c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57c2729-fe86-40ad-9fbf-f3cd4967d54f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "522c9a72-0fc2-4fc9-a964-08cd51ee7452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf71e2cb-c4ee-405a-9d72-b60307c7b841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f995eb47-9155-47ab-a100-ccb1dbc4a96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "96ba486e-5f1c-40c9-9fb6-5d89846bd2c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8394d1d6-5997-4776-bd3d-a9de620df53c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9089353-bce2-4ced-8db8-9d03c84d2bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c468409-a2be-4008-9305-42345ac0d779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3afe4a74-3b3b-4bf7-a190-3dd95ba36b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ceaf8f9e-46d0-4ec8-9b64-1d537e83b9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceea42dd-ed82-48fd-be15-515d61f0b286",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead3551f-13d3-4e65-88c6-13133022d0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5f01049-cddd-498f-8d48-c5b7df081c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6848c944-3f8e-4a58-897e-cd413ea06a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "09b34d5b-ec22-4d2b-b8e9-1b309757de93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91d16c8-3f76-496b-8a3f-55656ee6436a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1051841f-3096-4066-a47f-b6515c77529d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac733cf7-5d92-4553-9ebe-0e9e2e1e5cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727fee13-f002-4389-9669-1006f8d7fe82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d93e595c-2869-45f6-814b-bdcd0a991706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd2bd66-8bf3-49b6-9c1a-20960189e90c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a1b668-bd37-4c06-8dfd-faba52e44bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "170652c6-c902-4c39-9083-3863bda91df3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d437b7b6-cdf2-4b43-b51c-0c879a62ef38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "44212059-1ed3-4377-b6db-7aa7c8b8f707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "277e24f8-6748-4566-a8d3-365473eba2a3",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "132141b1-a8de-400b-9ea7-d86a05c0125c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44110ea9-8626-4307-87ca-f369ac6b48d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3859b4b5-0ea5-4a70-95d8-ead839346502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a5c48e6-845d-42cc-9fb2-b5076f241a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1110c52-47dd-4bc5-a2b5-9267deaed6d9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba2dc30-59f1-421b-b77a-b5cc38b32c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a51f7247-c7c9-4094-8558-09d01634f565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e7240f8-c73c-44ec-a935-90bb40b01bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78dbb50a-5efa-4912-a71c-000cd22b7fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e76eb1b2-ab88-43ef-be16-d64132b41ab0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8853f200-df75-4af1-8451-81c546b9f01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "048afbc8-7468-4b86-b65b-e25e4dd8bd97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fea83a5-5496-498c-b0da-e25f00e0beea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7ed7f90-aac4-49e6-a37a-1667e9fd3f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f43e11-4d94-48fb-97bd-6f3d074f6ce4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6b29da-d463-40aa-aac0-6ccafc75a865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ddbd7aa-32ba-47fb-9d63-90f645949535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5317826e-9fbf-4b88-83ac-3c61019c47d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a9d8baf-ed44-4504-8520-a6800c95893a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6f649c-7cd3-4095-b290-ea084b1c7874",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4c8c3e-d97d-4893-a1c7-d9482640e091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e92aeae7-114c-4c4d-bc5f-c751f8a5c27a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9208e834-85c6-4a90-9cd7-6fbd8785a5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7b7e44e9-ee66-46de-955a-61710a31bb2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09adf58-1c59-49d2-93da-a600665da526",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76aafe71-f5db-4ec5-bfb5-2e8f73fa60c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8fa505-5fc1-41ac-9f0d-95c03e9bfd35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570cbc77-2d0a-484c-913d-130167837e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c86a8429-8a12-4cb1-82a2-5899779a0325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afebc475-7db0-4135-8d7f-6aec7e99819b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd1c211-cc1e-40b5-b87d-ed82aaf4c699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cfc60a1-6508-4dab-9c20-f4073c9eedbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50d3fb4-5d02-4e6e-b3ee-6dadbfdafe6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "78b360d0-3a8b-4e26-a054-d3fb4b802a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420c6667-9f93-4880-badd-4e25c655a953",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd779a55-05de-4bb0-9234-05c1d66ec735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdf94e3d-197d-4a14-a7b9-f129f3f3fe64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fee50b9-e882-47b9-a18f-1264524834b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "761d394d-0974-4d0d-879f-3088eca53b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c37215b-b75e-4171-b13b-922ce82fbb25",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "043def5c-744d-4a4c-96e2-5039f7ca3486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07ed9a72-c095-4ddc-ae44-cbf9aa9a084b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ab01a6-c362-4b5a-91fb-93575b74036f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "437eb62e-0444-4674-98dc-962503757119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e16fa56a-381f-4c89-b8dc-af5686c7d1ce",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3207f489-22b8-4235-82b4-6b33fdbcd24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58247ef0-4f94-41f3-988d-c41770c2a8e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c0ca58-7954-444b-895f-9cd749bd619b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c98640fa-8e02-453c-8e0d-c69763da9f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1103c64b-5cc6-40e6-922f-31297f9af602",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "254cefff-ed58-4d3f-9ab4-653013ef3ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d839675b-e57b-4bde-b933-4ab14c6f0239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4351d862-8af1-4eb2-91fc-5cd4b79c965a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "04a7a2ea-ad53-4ef7-984b-b149d7ef8463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c686eb8-483a-4b25-8b06-b34cbf7440ae",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26fb1f0b-9941-412f-94d2-218e96a964e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "885c91ea-6445-4cf9-84a0-03c7e74ec298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4472850a-df99-4e7f-94a6-58db6af37c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e3849f1-66b0-4179-b199-965d9981ae9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a058f1-f0a7-4002-a075-8554be0cf1be",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff6acc2-589b-45af-8899-68f35b80d3bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6af544c-d848-420b-8e9f-7a2efc516f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afab3814-6512-47a3-9f2b-a34af8b22fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c1f94af-8052-4479-b0d4-70b71c09f75f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f58ef5-5ad6-4539-aed5-221d96844f34",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ad7f4b-7650-4311-ad4c-e7147c58c4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23935374-a6f1-411e-b753-07ee8d9bd9fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165b72e3-61a6-4b64-9fd1-e33ca820fa41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "90e983d0-560b-4f77-8dd5-cd8d55fdb839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d050a5-a219-43b9-936c-90e1d1dc0c88",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1befcb0-1bb3-42ca-8c39-f92f9ad8c0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e31f6956-cae4-4156-aa9b-4f3618d5b01c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44bc9c46-fd25-40e3-99ed-6f33ff06c58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dca1b8a8-f92f-49ae-b66e-cb5b48d0be2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e97c60-72c2-4577-ac85-7259230dae1f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bacfe9c-1adc-4a91-8044-51646a400a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "403405de-d428-46df-b170-ac4bf331db27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edcd8539-c1e8-4cc1-a000-92e9da46abfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db8c7994-63ba-403c-b8b2-3199ca1fd257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30756c6-8c34-4a90-8482-61ab2e406e88",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6827e9-0ec3-4089-914f-abdf05bee102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd2ce0c-51c8-47c2-a201-f3f3cd7ee8c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d125bb7-dc91-4b04-8f32-0d8babe16838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cba3ecf3-dad2-40f8-bc53-bdce7f87376a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627d53eb-3ce4-4413-85b5-a25952dca144",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87865d45-2031-4290-bc41-fd743ae8995f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61f375e4-f040-4af9-9f12-ea87e5ead530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf93824-df1c-43a3-b0b9-a7ec708e161b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aeb33b74-141f-4e4e-b6e3-9fd6a6594344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98bb58d8-177b-46de-904e-d4dba9c704d1",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff370e7a-0f57-4c24-bf1a-e5c5f93ba11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6185df7-b0a8-4700-9b7f-9899b466a7ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3f2504-579b-4e17-844d-b05355d20cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "36072858-a032-4c12-83e9-05fef427b343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf8e388-84ff-4a07-ac51-bdbe8ee1f9dd",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb962ba6-a4e8-486b-9765-2acbb09b6b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae42d2ff-5071-4b44-836a-9580b24a1abc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c88dfd2-d0f1-49ee-af23-77ff0fdf7968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc35a6da-5f48-48a9-b467-e439061fd744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0c553c-e2b2-42b5-bd0e-caa3f9e3af77",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b054facd-9464-453d-8634-a463c6a0bf4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf0858fd-af4a-472f-a5d9-bbe51cbf5c58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f583233-9f3f-4cb5-a531-71131c427ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "35a1b72c-ed2a-4073-82c5-466defe47b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a843e14e-ae75-4e62-b86d-e77b2147a699",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52b529d-e5fe-4b1e-bffb-001e14f27b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cca66015-967e-4926-9f9b-530584623bb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e542dc2-7fc7-4967-92a3-6c44e1008c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "39e39a46-583c-4f83-881b-abf91c051d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cdb0511-9097-414d-b06b-1be369d10eb3",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f222d362-8512-4e62-9253-8c79ac4868b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bde6870-18a8-4148-9d2f-a9a9ea36873e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143ef4bb-0465-4e97-a8ab-3a62c14f45d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "347666be-1e75-441c-8bba-d70cb72ca5af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0135b73-c7a2-4601-8767-2f17cceb4302",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7976dcf6-b0c5-49fc-b25d-32c70aa92dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a847ca-ac20-4567-a473-3387c8e82c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee2764ea-c3a1-4bfd-9f54-db3bd41c78e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "527f3bf0-78ef-4e35-903f-f31893a417a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175c3d97-bc46-4b45-9ba4-713254afedb8",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaebbb9d-296e-42d3-b888-75afc3758812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc84efda-ea38-45da-a68c-a2bef893bf07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3067f350-43ac-491c-9cb4-f74d768225be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "18e76500-85f9-4e56-aa26-dddcab67d389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7c7ce2-b484-4a5e-8991-aef983a3b5a3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2933276-bce0-42b0-ba34-f24049894c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83c3d109-9828-480f-8316-586d40f38cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5ae8a8-5c0f-434f-bc8a-42096d81cafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b3d7095-bbfc-40bb-afb6-4cbde28e19e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba899430-1e39-4cec-a1b6-124fae7b05f5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec42a7b-292a-4b62-9bd8-bebf24500376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dc63c93-7c79-4665-9932-b7a3f1ae61aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d8c4c1-cf12-4444-9857-f403d74ee120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0cceae7-f6bc-4b8c-96b6-542992774463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f858672a-b23e-4ae8-ada3-8ede1910f0f9",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca76b135-4736-4ed5-b909-d8e29e34c449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0d721ae-9ef5-466a-85f3-d8dabf65b6cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34dd181-2b62-4e5f-8d29-95696ee7c557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4623039c-8a1b-40c9-bea7-363b246fd579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bea5a91-b731-4ce9-bf8d-5eab3c343581",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62710e5d-7c3c-4816-8175-4f616889bd30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa1f8bdf-5fa6-4c90-b86f-772918d23262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9fab7c-2a30-481c-bb44-665a1f372609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca714881-afd4-49d2-b1a6-e616c1fc4ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c392d6f-13a2-4f26-a191-d337345eaf61",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "079b8928-6f2e-407d-a8d6-e1be10ac9280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "77a83e9f-a9f8-4720-a4e1-2cae5c86e252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a771b1e-8db6-4466-9005-2741dc37cf8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a2264d3-d78c-48b8-86b2-bf0197c6c9b1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c2f0be2b-2f38-41ca-9655-46c4cbef0e92",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "310d8bd6-7f44-4c9a-a9a9-77ec66938afc",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f8a5df-d36e-4000-b804-66c398e62c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3937d834-c13a-4acf-84ab-8d5cf32a988f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4416d1-17a0-4ba3-8fc4-c21af0e1d56f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f731500-4c46-4318-ac5c-47faa30e4472"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b550c1bc-233f-4326-a26a-64f32ab117b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea5dd276-bda0-42e4-a731-4aa109a3e4b7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "05adcecb-9a18-4c4f-8170-b53ac3efdbad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9470e19-1804-4f9c-abec-1b61d73ccce0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c38287ff-3250-4707-926c-3007cbfcff90",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4ddfa489-2edd-4bea-81d6-0a85c40322fb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e081063b-2318-4d52-b712-9c2e1a5a68ef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b3441d32-838e-4176-8c66-d5bc1448ee88"
                }
              }
            ]
          },
          {
            "id": "437e287a-ad3e-42c0-834c-bb0d1c157759",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8b139d26-bc65-4059-8400-ae16a95b2b54",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "c2bb6762-4dec-4928-953e-074a761873d5",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac7f37b-1cfb-43e5-82ed-2649a337de3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a28263a3-c0ea-4094-87d9-b171e514a34d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e68869-a310-46e1-95b3-682e06082aec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f3e0853-8236-4e55-86a0-f5ec7381ad52"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d4893e57-fbc1-41c7-960d-031191461899",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b390238-5172-48a3-b92b-3ed8d525b2c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eb5a314a-a1be-4287-9740-61a341901f9a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42094835-b106-4f6f-b836-066b54ffa9c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4fae4196-7852-4df7-91f3-14b57b250a37"
                    }
                  }
                ]
              },
              {
                "id": "451f649e-5f00-4aba-8e24-29aabfbe582f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c54f500-4359-4c92-9084-87a8a669f429",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3fcc72c4-2017-4e71-ad00-42e998eb06c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebeba5a3-073d-480c-8fcd-10728096af66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "235e9f4e-0a9a-4090-b51e-1314b9a0effc"
                    }
                  }
                ]
              },
              {
                "id": "a70413e4-504b-496a-9fb8-c44036b02ae0",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8190e84-02d6-492e-9e86-48ae8a218bbf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6e097fa3-7dad-4872-b962-9e98cad40375"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea5999d8-5813-4427-9a7e-93384fa35120",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "db154371-a9ce-421f-880d-0dc64cba7bd9"
                    }
                  }
                ]
              },
              {
                "id": "1b69f94a-55ea-4fc0-9ad5-273c60bb9b8c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab0e0dca-b0bb-4fa5-9fd9-6b2eb11a4bfb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a23c0086-0bfa-47de-a88e-1dcc034a9517"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3dcf0c6-3836-4e1e-8e69-9e9f97d9e348",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1832de43-bd01-4891-8b21-75e7f6c14ceb"
                    }
                  }
                ]
              },
              {
                "id": "fa4a9ebe-ec7b-49ad-a79e-186b6ecc9915",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29d299d6-6d5d-45fa-a508-58649173e220",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1cd8ac90-ae74-42fc-a290-3ce69eebaf16"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c6dfd62-dec0-4521-95bf-c403d1fd7096",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "973443e2-9483-4eba-b4dc-511ad0d5d1dc"
                    }
                  }
                ]
              },
              {
                "id": "b2526a9c-6d71-4a46-81d9-535a971ab071",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1f2313a-f3c8-4a23-a558-96c6c997c2e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e72698d3-8306-403f-9f37-9b7b90af8f3e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48494135-d6b7-4919-8207-c7f8cdeffddd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fdbda1ce-2f47-4952-9e7f-84e40b276acf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ae4174c1-56c9-429e-8002-a31eed4b5501",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5aa0388e-60ef-4f77-8d35-75266770b043"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "770a920c-6c97-48c1-8e7a-7bfdcec7043f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9a5f152b-de88-42c7-ab28-043bbe051b94"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "caa050b4-c9fa-4581-b1d0-428d926b37b3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "891cfa62-595c-42e7-afb6-686d241fdcc7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a78dcaee-4cb4-4409-91dc-144a674a690a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "69398287-aaed-4e4c-9e80-388aa02ed552"
            }
          }
        ]
      },
      {
        "id": "0f033234-d2cc-4196-bbbb-6fdc77edd65f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ba59c1da-8f94-4702-b902-a53b090702de",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b9e15aea-84b7-483f-8036-91cc0c6dbfb3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "64dd30b1-8a59-4066-abb4-e335df90ec16",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79b2136-e3eb-4f38-8da8-d54419a26c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b895f8d7-318c-4ff7-88ff-56842b7bd899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72d22a5-7326-4185-bd50-fc3a5afaec78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e03d33e1-2392-4768-8bf7-33dc8371bd58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ae4bf7-b22e-44fa-94f4-e672aa7943d6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "835e3ed3-28bb-4518-8064-5a213c355b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a6101f7-7efa-45f6-9e31-df9060ee872a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23fbe61-0060-4d27-8e8e-bc6e73f9d091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bfabdd8-ef8b-4eb2-8616-ebcecec8f8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636dd1ec-a5fa-4988-9204-d6c262f322df",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee3d3f82-0c52-4fce-a866-9c6d2ff85bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "184f3bee-d2a8-4133-90c5-ebf2067cb70e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe28802-d313-4979-ba67-fd5400966292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d5b97f0-1417-48d4-9188-0570ae85c763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a31fa8d0-7655-4c62-b8c8-8b6ee39f7cf6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "054e877a-5d96-401d-a051-c63e32206a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6f7135f-5f84-403b-8836-5a1e70ab7793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3fddd95-3511-490c-8a36-9dbebdcdf831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "78f5fa77-ebfa-43ae-aa07-56e683d6ae18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c04b23-be2f-445e-984f-25fed3f4fb9b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0877ce-37c9-4e35-8d41-b13cfbd8a56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f891dd-57c0-4fdf-9766-807a67f4fa15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58310060-fa2f-4fce-98ff-97e17bb10071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d1fe803-5fb1-44e6-8732-c01e012f12fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a35b995-e743-4480-aaae-9217eb087287",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94145db2-a013-4220-9ec7-fa845b2e557d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3daed2b6-78d3-47c4-8985-62dc21c51aeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c94543-3e6a-469f-bbde-36ea1f45252b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "35b202ce-01bc-446a-82cb-f8c3ea9016d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f642b4c-c9fe-46bf-a10a-77eaa80ec7cc",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36232b22-5e4f-43c0-9989-65651eeef193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d3fed56-aed6-4d79-b7a1-1443c0571885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b70cebed-f686-48aa-bf97-392da2d1b464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "337df09d-bb4d-4597-ad09-066f1284051a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69389f1-aaeb-4b06-98fa-eeef864368e7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52076461-885d-430c-a9bf-8e0bd131e09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9532458-306c-4c54-a621-c913ff102342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da30bbf-0a5b-487b-bd0c-2f27ac787fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0f1f62f-dd35-4550-9b34-e791ec3f6bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01eb5cd5-c50b-4a1b-b41c-dc9f495f8653",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a15e81-ef74-48b9-b4ea-459b0b7cd287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6622b1ca-dbc9-402c-aed7-ec457978664d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a98fd16-b4b5-425d-a4bf-9d968fd871cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a309a71-1d21-435c-9fbc-fe15b0c1e4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6de081-e938-4cc5-af76-83d836f90305",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4380d6-3970-48c0-94ca-96576e0a36cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bce863e-6b24-4e8d-932b-c6ecc47ad3fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163b6c47-beda-44a6-9ada-57b7e4c54fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebb5d15d-8706-49e8-92ff-676943685e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1017ccf5-e5a1-4f59-ad2f-50f47d1251fc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78332dda-fa0e-48e7-9f79-fb00e44a2300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2da85c3d-f0ef-4f19-bfbb-f93dcc03027b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd04ea0-b83e-468e-a93c-d73b04c794f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2ad302ae-f1d1-45e7-9627-449403734e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176e7344-b86d-4897-80e2-47986d867c78",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8b64e7-c6b1-4ec9-aafd-0b4a29e9a424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43509b33-8b1a-4f66-bb45-dc687b6167fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbb16ab-9174-448c-a55d-0ce665c2452b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28e3be82-c76c-4dbd-9124-12411c07c1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5697cbe-a1c5-4893-92b5-422084ce773b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45d993d-d12b-401a-aa4a-5a061ca935b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b689602-7b98-431a-935f-154e74cf8fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d32628-3d47-4531-8c34-b0c7f0a9cc70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2657f3a4-c02b-4ec5-89a9-81fec7c0329c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98f7eb9-9b42-4b66-b8a9-dde741666270",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f667ad42-db63-4610-b3d4-3366a3029e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd3b986e-b8f5-454d-92f7-a9b8cd9613de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9798a371-5205-4ed5-9120-a1f24fcccc27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0b3642b-6d00-4de3-9a0f-ac7059a02fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6444cac6-ca24-48a5-ae32-c9eb8e0837b2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6557a223-5618-4c90-98b7-13ebac72e4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffe41ee4-28c5-4a31-a8d0-6b01086df992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3caaf427-09df-421e-91be-03c600774a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "83ac778f-475c-4a75-bbf3-a66d13cc6a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7782753-0f17-416d-abda-8f48d1752c97",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "102995a3-6482-4137-aa12-58ced38be7c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b90ecd4-6ad8-42ef-bdf4-3713d46245d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d36a4c-d29a-4052-9b7e-53f13c33ae1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7eab61da-91cd-4e1e-b8e7-739e46d3af8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a035fc57-72e2-46d5-8fb5-bceb5a257d82",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1900348-4353-4781-882b-e5a39e8d7c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2808b4f5-baec-4d9b-94d4-9de2e5bce7fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6129ec8-1d5a-4080-afc7-354452bc051a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "257fef63-c83a-4921-8caa-2ca4bcafa52d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34b43a0-270e-43be-8231-e17d23c6bf6f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "965be39d-c98d-488e-b0dd-364ebeeb7a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53532160-20e9-4a42-bf44-5a2c71162279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d600c274-8473-45c6-8c4e-4e9ee0c0e3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c62020c-f2cf-424d-982a-e4f0ee509103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8814dff-1a5d-4114-99ae-1fbd948beb7b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8460eb9-d74d-443b-83b7-408a91089d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbd38850-79a2-4284-89b5-737cbff7cf90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66caba3-b2e3-47ff-b9a8-b51ef0a0a7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3c5a76e-289a-4943-8d67-434745d52ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b53065b-eda9-4d7a-9951-426de230bf0d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1dc4b6-84ae-41b1-acac-5d10303b0094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1657440c-c4fc-41fc-95d0-a83ad9817b91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23defbe1-20b7-4cd3-aa56-08416991079e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50bb245e-f3ff-483c-bda2-75c8a94b064c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174b711b-9b7e-404f-a141-69e4d346984e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "398ca88b-cb77-46c2-9f60-0404ed29a7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "702e97c1-7624-41a5-a9c4-fe6769fe9153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ccaff50-bc8b-46e6-ae17-6209eb3aff62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e31c6e-8e17-453e-b1e0-d03cd9b364c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d5c670-2dd8-43f0-ac6d-de44ec698e0b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73dd739d-e424-4043-af6e-a9ef36447b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da82aded-2c75-4e50-a250-d52e5eac0f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e080e0c4-a5e5-44d9-a2c8-8ba33feb81fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdca4fa2-b58c-4140-a67b-792bc6771972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e144179b-400f-4c55-93ea-51984cf33721",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06aec82-42b5-4ee7-826d-3001778b21ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae1b24b-4485-456e-affa-0f3bd9e8238d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe66353-a4fc-42dd-b303-cb3dbb99495f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b623978-390e-466d-b61b-aa7625ceb0e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571da800-043a-4b93-acd2-0b323a6691d4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a8ba1f-8d16-4861-9d52-5051993474bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c4a0baf-a049-4967-8bf9-af4c49e67167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09b9110-2862-4618-8baf-501fd732bf49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27e9a929-9788-4cf5-840d-412d4b115d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a91a73-d33f-427a-aea8-581ea2abdca6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb36b97-8420-4b51-afec-85dd73a7ce7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94726214-70f6-4a94-a559-f3e297bec632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c65972-44e1-447a-ad4e-f9f72ec73f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17db2d82-c01e-4c0a-a9be-3e035ace17e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d86f68-d568-4ccf-bed3-6a6de5b11ce7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2128ab-b0c0-4280-b54b-36b6d0c7810b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0fe2639-f062-4ce0-8e42-6579e276288b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea5a9ee-1f77-4458-b47a-fdf146199dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f413355-f8e3-4298-845e-718fe59da600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1efbab4e-b92f-4659-baf3-ce2d1336e265",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86dd3d9a-7e67-475a-95cf-c2b23889c8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2dc7eb8-473e-447a-bce0-7b7c15881577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35df2d7f-0669-42c7-af8c-720fe4b5035c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ddb615f-dbea-4a83-ade5-5fbb4fa70c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07bf8bc0-926d-4770-9cf9-7fe3bc90e361",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2efd668-2bd2-4541-a440-0e1405165190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e20d646-a0b6-414a-95f3-d562216eaa51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716b6eca-ed2f-4c1c-b382-9e929ed95157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31d0af42-729f-45a8-99f5-c50ade8bd116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59a21b4-54e7-4961-929f-b52906e40639",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a134bf-7ffe-44e8-adc5-5369c4a5eb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b277ead-a760-4963-9a83-feeb6c871ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8c604a-5658-4852-af16-78fd1eb0d061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ade7362-fd89-4f09-9eea-70526934197f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14870f41-2c57-4de8-89a7-88e7b8cdfe9a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5930f6c1-242f-459e-b808-d11587d02ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "744169d6-75ea-4783-9aee-f5c04ec02286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e6522f-f4e6-4b23-b6c7-0d0b977a5c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b1d6f91-57a1-4c6e-a3b7-e56b59192360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9b2dca-b025-483a-84ca-3bc00d2f1e34",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2155d17-13c0-4e0c-83c5-1e5ce14b1a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce24b1a7-4589-4ebe-9c3a-8ae027cfc03d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f41df32-bc1a-44d9-aaf1-9a1fb2d95c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3f6778a-8406-44ed-bbfd-820bbda29618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c363f65-efa7-4c1c-bee0-f1a2cb70cfeb",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4be5440-6ed8-42c5-b610-268794b48e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c73cfb-c4fb-47c4-a29e-15a517969b2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c373402-2ac9-4f6f-b7ad-277484f91941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d1e459c-ba4a-4459-b53c-b09b89b76087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27509862-ec12-4b0e-95d8-a2aaabc97f93",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "364f6da4-8320-43d4-86a8-a938e7d1fba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e3742f3-6737-4b43-aa7c-5c54ecc35f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c39510-7083-4c85-ac06-1a1c1d2f9f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c61c0185-31a3-49f9-b2b2-8e881df481c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54186bfe-a90b-4cdf-8056-8b529bedde29",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6547cd-13ce-42d1-8332-27219cf49729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcea3abd-03e2-42ed-8249-7a09768f9ae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30797457-46a5-4bda-a014-6bcd032ebd59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46b4f319-a01d-4041-8601-f475e0fac722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4bb9c9e-6823-4746-b3de-0714618e05fd",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e300e0b-af16-4123-998c-cf4fd7814726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e99306f-d392-4c57-8431-0a54b7cf0ae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f9efbb-8be9-4e2b-b523-53de60d87eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dd04cc3-89f0-4968-96bd-215267060dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec4dcd5-3abb-4b6e-bcd7-4ac0c1044571",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b151af65-ae61-4236-978e-0660d9476e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "062850c9-c2ae-4c60-9f3b-8f1deccf4142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef02a9e-7a4c-4329-b468-17b912dffc43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "975721fe-3979-4171-a749-4b604cfbd248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f1c583-324e-484b-9f2c-eebd7e4aa579",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da05ac75-08b4-4a06-bb60-8abf6a2937da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1482253-01e1-4a02-8175-fb44b174140e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16c6b74-033e-48be-8eb4-57523cab6f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e7ca01f-54c9-4501-8d28-5a3322971a00"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7a353222-a3ea-4109-8654-9f1445f7e072",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8dfcacb0-34a4-4e57-a81d-257f41442372",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e89447-81e8-4551-a58d-a65674011aae",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b038e351-393a-48ea-ae8e-05da25a5fe20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f9beb2-992a-448a-adec-a957c4defeaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23177298-3ed0-42d5-bbc4-1b0e0be431f8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d34d8de0-4448-4106-b328-344aa3843214",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6faefe8d-f97b-4e72-9a50-a342189da4d6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "781678ee-7cbe-41ee-9bea-36089131f061",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2334dbcc-0ffa-42c8-bf7b-1ec3d57fa5e3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cfb75d57-1526-42a9-8d7f-68875edb4819",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fe866e33-91fb-4ba8-86ef-5d5a47f7233d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d1936c4-b3a4-414d-a1f6-01aea2065a4d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "781ad717-5609-49d4-a5b0-7fb1af283c57"
            }
          }
        ]
      },
      {
        "id": "bf856364-d900-4e5f-9e40-a06d7f06b2ca",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8cfd8e90-7cc4-4185-a62c-c89081dd7b37",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ea36c27d-0ea2-4146-aecf-9d2ca52255a7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "884728e8-5724-4c00-9b24-61bd7fd9ac80",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59237767-6fd2-4341-b1c8-2cc7195a3ccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f62a91b-17aa-477d-bc3f-1af4f4e177ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b97d88-160e-4d0a-bdd3-87b2994fc3ea",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ce9211-593f-4d41-8a2e-7b379b0660d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d5713e5-2c63-4b10-8258-5a90fa966aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9c9e9e-f47e-471d-9841-cef4b37cdb9c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbde75c6-eb79-4445-b1e3-9aad3ce4c65a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdbdf098-060e-46a5-b08d-bd5716082ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ec0af8-ac5a-425d-8d3f-caed64644d39",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b3073e-d230-4ff2-bd59-dbe251634387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "994fe0e5-2915-4bf7-8094-72238f616c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe2a4ed-cc84-4aa2-8db0-1eec0de1749c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3acb9d32-0cb2-4510-b0b7-82d790b6ac62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66057eaf-446d-450d-8ed8-9725f0a7e904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fdb1682-613a-4955-a1f3-e7775e1529e5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0758f4ca-0b2d-4977-bb73-f7da6a220766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81f133cd-48e0-4cca-8986-85c576279148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3596dd5a-6fb8-474f-9e88-1c38371f749f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014a65ab-0287-4136-b8e2-b92d654f6c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12f14280-f023-495d-a642-dcfd14e3d183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22430194-9c8d-4a45-a94c-36f23cfc928d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a268f213-23c3-48b1-9464-41ce98247194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50209b7-852a-4d10-b6af-73d87dcaa8d8",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66db785e-328f-4617-ade4-721e0987bc33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89e3df5b-5850-4134-b5a8-0802798ec4e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0736db0-264c-46fd-b185-f9fe011f0a14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2440099-1d8c-484c-bbf4-bcab57b0d217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4655b57d-8d9c-45a8-bb69-6c5489799b33",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed29709-a6ee-4b3d-9236-ac7b56994641",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a773a9e9-f21f-435a-8a4b-29bc9d82b479"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67aba04e-c1ce-4760-a1d8-8bb5b86643d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9bdcc43-04ad-4cd4-81e6-7dbea0ef469b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81588b8d-99a7-42b0-82b9-563cc67c1bec",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc00167-392c-4942-bfa7-64c1f7d35d85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e28f1064-98b3-4d58-88c1-e8e624eb16f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "466823a0-fc6d-45e9-9fd4-32e557c2fbbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9895943-64b2-4e3c-b838-79366c9677c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ea88d1-4b7d-4957-9edb-ae56a2c020f2",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9f8067-8e3e-448f-8095-a48ed0a805f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20f1a0c2-6bc2-49ea-ad47-8a7f4b794c36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd98b05-beb2-45b8-9d8d-9f18816c9084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41015b6a-07e3-450e-94b4-cf2c3e04af5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e82db77-2643-4fc7-9173-bb7836b73548",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2559dcbf-a965-4341-97fc-b0615c9a65dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "300766c0-8532-423f-9bce-8d191a578086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d6dbdb-b1ba-4fce-b67e-8412e078ca43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df4a72d9-f551-4f0f-84a1-23acc8566ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48fb5c12-f301-4b91-aa21-6795491a05d1",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e1d3f7b-cf5d-43f5-a740-9989758a66fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f5d237a-db2e-4f1c-9b64-012242932dea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "846ab9d1-a605-479d-a6e9-fd4e0b785ce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d572f102-a6b0-4b90-9109-3771b88dbeda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7196942d-4132-446a-81b4-62f420b911c5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5897e1-7257-42e4-8994-2cb908b39de7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61621413-bd18-4fcb-995b-fe3443863e3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e266c1-f09e-47fd-b030-44ab11568e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee3a818a-f490-4498-b0f9-2559bbac13b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df287f4-c102-497f-a41f-7664306255e5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e64dd4-8e4a-4d26-a126-4707a326f471",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbff0963-2eab-4d49-91bb-9b132605aec7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f532a984-c712-4b4a-964d-93bd30d25eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "470460fd-a966-4efb-b5ba-fa3e5dafed17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08711bc9-4550-49df-adb1-4e9f8489198e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6599d7b3-3971-4af0-8696-2b11ee8ad2d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd54f1c7-b0c3-4b46-8ee7-726f4d1e191d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc946b18-22cf-4a7d-a1b3-6d0f1595ca78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e33c305-d95f-4584-99f9-f764a80a3f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f66684f-78c2-4348-ab61-471f3c1d2e02",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bec323b-fc0b-4e97-977a-f851f3878304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb4f85c6-7858-471a-8432-9114a107933d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c76548-4a25-49bb-ac29-ae5229fee582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a66b6b21-53f0-40c9-98a7-cd2a51361640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b9362f-d487-46ce-a711-5a885f860502",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed60320-23de-4c98-9396-68fd0d7e6a1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb8116d7-de81-4972-9609-5c83c5dc3dd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03539a3-b2f6-4a77-8148-171a9e945b35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b5a57ec-8b6b-4321-b143-9baa037cfe21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9567fb36-2209-4cf4-98ed-386a6129b62e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff5322a-7c6c-4261-8a2a-be36ace48aab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce6141cc-a7e2-440b-9fef-f38cc6df6290"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73a6cff-48e7-4970-b45a-d7d0c9b4d250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c028b4d3-850a-49cf-b570-b0f50edd5211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2aaabd8-77f7-49f7-b8ea-303898416f55",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a00fee-cf61-42ba-8a7c-bc781fb3b325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a36c7a5-187d-4515-b00d-64b455eee74a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37d04b9-bd1a-4f33-a741-1b2596baf1ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c26409c8-97c4-4bcc-97b4-8b1c72be682c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "507a3cee-8d32-4020-80e6-10b4c16a809d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9eaf97-1d8f-42f1-8107-32398c69b57b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bc79209-4a4e-481e-ac54-f374c5fa04cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec51887-0376-456a-9c6e-603ea8fe2834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e5dcbe5-cb0d-4853-ac4d-77c557c743ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c546da6-a518-42fb-be4f-973b6d28d814",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abe64a5-01b8-4bf3-aaed-2b6581fb2e51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "990c2de9-bbe3-446f-8bb0-fe30397b2ba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "588352c2-fbeb-4735-bcdd-004119c9c444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f3cb544-8cb1-439b-b9c1-e27bc98578e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f11ba3-e73a-4f7c-995d-cfb4302e8f46",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec0648b-c608-4574-b35a-0098da564e11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da79ca90-e252-42e1-b1b5-8e7bc3eb325e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf60263-ca67-454f-9ca3-1762bf336e0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27c3a515-0666-44cf-b335-bad893ed228f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78cee94a-ec71-48ad-aa61-1f79df8d7405",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "746173b9-0a44-4787-b766-83fb9731d031",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05c74e2a-c1e6-4d20-b6db-e4569501d959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7434fba-2cb3-43a1-a7f2-c4aebc840cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a1ed52a-a3c3-43c1-90f9-e55d6ae5d868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9eb96c2-739c-426c-8071-ed25425d7778",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc8121a-012f-4d33-991f-e19988ba99aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db9f0891-5cec-4557-8d9c-333cc6b70c7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d8911a-8b55-41aa-bba9-b32c78e8c21b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52523081-4924-4afe-9ddd-fff60ff114e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d5588af-cb1b-4f8d-b0a3-f3713173b1ea",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34af4e73-2643-40fd-80ba-9d6d30b29dc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb319e8e-e856-42bb-9cab-e844d0965f47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2cf24d2-04d2-42b7-af77-2e8cecfa9e64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1107010a-597c-4d58-80c3-85283101ae95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37263395-0472-4d48-ad88-1ca48c8ffcc9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987b05d9-4837-4957-8824-340436994294",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cfa9ee9-8e69-49c6-ba5e-14bf17d0fac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "107d801f-7e30-44d3-9e6e-60b88e000c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5d9fdc4-0232-4133-b7a9-8ad21d94c5c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac513c2-a62b-4d19-a72e-d682e648e987",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc2776a-e969-473a-88ce-b0c35f3ed0c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "580cfd54-adbc-44aa-82a5-a16e7784e540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9953a35-cbb0-44a6-b87a-47ae274f7128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c643d4df-5330-4273-9c8c-14d9dc170ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005cbcae-34b9-40bf-a153-143938f18d12",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8bdebe3-9e94-4890-93e7-d2c7827ba508",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cd22684-023a-424d-8108-b145b1b00ea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d6e2dc-30a3-4391-9a0a-ff7215dd02d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2791524d-5abf-4788-875f-ff2b47095246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9278aee5-4b92-459c-8468-072438dc3a72",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33f3f38-3c21-4e12-9d3c-3c077edd1d9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1815cff9-ba0f-4d7b-b031-32d091cb42b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f203262-d391-41bf-b63f-1000d93b9c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "379c6067-20ae-4b16-8180-96563656f61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f117f2-8831-4e08-88cc-61b3cadb9cef",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5725bc0-964b-46f4-9741-00ff3f586de3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd381997-f535-4340-bc54-818d18f09e34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "433c7935-0e59-444f-b26d-66f0fdd84dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf0ed6e4-9189-47f4-92f8-ff34fe37a926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484d84b8-ee8d-42cc-989d-c24640436468",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb55f70-dff8-4485-8d87-8f0dcdb884b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96c02239-8409-4f41-a663-b861e282f65d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "871711ac-0d62-43ab-9b31-c761d652bc6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "318821e4-5b66-466e-b8a2-7bb39e506b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb60a33-ad4b-4544-88e6-5ab2fe076f84",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1b6532-fed9-44d9-b541-c1d269a0a24e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95b08427-1e00-42b9-8984-497ee7f2c2bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7409733-fe39-4353-888d-5c843baa27d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66a97ecd-1699-45f7-8099-d20b67658c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8af335-2f54-43bf-8eda-b8b2f90da892",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2fb34be-1099-4fc4-9c34-dcaa9b5a812b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "642fcace-2754-4c8e-b41f-239f8ea08650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd4ff94-2a5d-4b7e-86e1-ddae87a860a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "648451ea-0192-469c-be93-1f3e5d57cee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb2e112-5aa1-4d50-bafd-77cd14fffcbd",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b63c982-b028-44b4-8769-cdfd5be9ffae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a0cd6e7-783f-461f-9b12-b20042f11b2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce30bf90-23ca-47f0-a99b-855044ac1bd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a0bf0aa-1e36-434b-af6e-d188c1855427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6dcdd3-6693-4833-be1b-afed8f887779",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70db6388-4ec2-496e-8898-523d6d04371a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23b9b02b-928e-4831-9f0c-f7482c5e7003"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d24769-6796-4236-8450-4c9d00005eb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b8645ff-f8b6-4c53-8e7a-942e33dd5428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f90dcc-4304-4780-80d0-496aa7f6fb51",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef1201f-878f-4ee8-b935-70021d7b8586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "300ee938-95a5-418e-99d5-de26fb70fe25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbdea55-a702-4091-b6ab-8dfbada110cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee44f0c0-342b-4ed4-9a2b-9f6fe30f98c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dead2a4-9e04-4ba7-8cc6-dfe6ef8e8e75",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e44eef-29c4-4300-bc46-6aca3394b54e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f42ef6b6-8975-46c3-8910-b0faad20429b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca59effd-70e1-48aa-ad6d-af2de0583f23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ade225a-8ccb-47a5-b2b7-e41175d273e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98cf1ae-069b-485b-be84-e64d4fef8611",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe4e115-959e-43b5-9246-a2d3b6b575d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb7a9a23-3afd-45ae-b952-37198c4774bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a4d784-2360-4c01-8187-ea6e5a8421de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e21f4e0f-a449-49e3-b33f-76c2a1991a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9805f80-b7cb-4ade-8fc4-569f008a5374",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48b69ec-9175-4bdd-88ce-ca88fb82b604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7b2bb07-ff1e-4d21-8f8d-246782d0ab65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd81b58b-538f-4371-90a6-53b383e2a5d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "240810cc-4724-4ed5-8174-f73fbb344b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf07d17-6553-4d29-ac4a-a57faecaaea9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8084010-66ef-40c0-893a-f9ae380715bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12e20584-7ccc-4061-9d4e-74972df16546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "884f87be-7996-40bf-9f58-60d9a5f5f71b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb5e7f56-2945-47bf-99f9-f84b38fcd144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfade335-f489-4522-a0a8-1f3b5f56f4d5",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6827277-d6df-41fb-bb35-cbe92c4cf6b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "397cdc41-2e81-490e-bfc8-70caef7c05c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b111ef20-d84c-4e39-bf6d-e4940e795dc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb21345f-e6b9-42a0-8fa8-38e12b9f2112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8242f6c8-63c9-4b53-8898-f8db49afeae5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9a825b-c3e5-41f3-8e2a-e7d6fa870a23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1a854f7-5bef-4e44-b4c5-c54ed80fb006"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bac6628-1f8d-4c4e-b8aa-27a1fa834266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a349f35-6370-42d8-92cf-9cbef930b03c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9771865c-069f-47cb-b21e-f9a37a04fb72",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c9ae83-24cc-420f-9357-ed6bcced3e38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12994b94-2a08-4872-8050-7c08cc40fa5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "147ce135-5610-4b69-bb97-6ef1da008299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6cf98dc-efc7-4133-9091-375594072030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9f2d36-113b-445c-b70b-6214c93c4408",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31466595-d211-40ee-a903-fbe02d1ccac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d6af753-86cf-4090-847c-210b1a649227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d446e408-174a-4d7c-8a55-cffd9bbde5dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c69bbc-03e4-491a-a5e5-418e7b4d6c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8ec1eb-707c-4a22-86ba-5ea8cd0ddcb6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5abdb8cd-fccf-447e-b47f-741e8d974df9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac7caa62-0ec2-4d35-8043-29c6688e572e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d20a59-a434-4123-a454-019d87df425c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "147e9c99-dbdf-447a-a314-8fa773f98056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cbd1574-1b81-4209-9179-5e02e5567a3c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c89fae4-2f96-4e57-a80c-d8a22b5a1286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94229583-45a1-4b40-b886-0bcbd4fc092a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a678f5a7-1405-45dd-860b-edf466643901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d4a58bb-a9d2-47ed-8ad8-140994a8f89a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b54a77-b6eb-4e05-acef-813a843ccef2",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d84f1ac-2132-48a9-a1d1-c21e6b445433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7054d265-26a1-4d64-bf96-433bc01cd896"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9c7990-8980-49a0-85bb-de2f827b0452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "976d1b65-98c0-42ea-b2f4-2663c063525d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f30ebd-cedf-4e36-88a0-dce8d5c03ce2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ed2f69-c053-4e92-9c5e-49d6476b7561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ff7fae3-8a0d-4581-8910-164b0e454918"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a57745a-25f3-41fd-88bd-32fc0d6880f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92d1b811-b60e-4dfe-8f96-3a6e555118d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9e29cd-1907-4f8b-a6bd-29f91154d95f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7893a8bc-85c0-4db0-be87-2c5c16d43850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "515cecc2-bd6e-40e7-be0d-5449ae1170be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f401cc5b-3091-4835-aef2-36e2c3f0eb0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab0e9545-4c69-427a-a498-98534b89a24e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7b1814-c421-449a-8711-fcc0748b14f4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de1bb15-fda6-44c1-894f-82c8675b7663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f48fd566-a1d9-4e3c-a4c7-5cb3816d0bd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53710a5f-0480-4425-98bb-470be54e8c11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9efe7bbf-992c-4f97-97ab-c3a59a7e0267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a2863f-8c3e-48df-bf21-461ba2b15e9a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a38b3e-7c95-456f-ac90-0e0794d9d948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19eea658-968f-4364-ad06-eaad011e016c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3421ca58-38b4-4562-90d8-24034d6db037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d433d47-34d5-4f84-9e29-d4bed37638ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e68fbc5-810f-4f9e-89a4-a87fb3560afb",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5a040f-87e0-4039-b87b-8e1e53d6bcb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49c9b41b-17b7-4255-b3f7-5c017b87a552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9935a7e-bdcf-469b-81bb-ae49004fda75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7937529-00fe-4a9b-8c7d-d0baad55b14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2391d332-cb37-41e7-8084-3e569a291373",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca44249-f562-4ca3-ab10-d7310409d504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb57de2c-5ab5-4d68-a041-f85137763714"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65745bed-0ee9-420d-9726-d42a7576ab69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "607d0a25-ab5e-4594-ba92-2bc798e00a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e476b6-589a-4453-9621-65fe7d3c05db",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ef5a8e-f346-41f8-b407-04de2e921e21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8468b00-23fc-4814-8c74-f147ad19c118"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "799bbcc6-6175-434c-920d-aad7e79a7159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc7daa08-a7cb-4cf7-b986-9be5c91b1e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5493d38d-ae9a-4a69-a46d-4ffa9b240d75",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1724ab67-cdbe-4793-95ef-6436f361d042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "561a4e3a-f45d-45cc-9df0-01adf47aadf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbf378d-ce2c-4162-9325-fd53f4b5e14d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "783309b9-a5d1-48ec-958e-c0e7d4000b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070e22d6-2f9d-419a-a6b3-6de21df87179",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372ed471-8c45-4009-8310-5978a38a2ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bef10b2f-b8ca-4456-adf0-d9896d37f76d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed120f1-6cf6-446b-95e9-5c3478c38e22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f488481-7a61-4ee8-a31f-dd45700ee002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29395985-08ad-4830-a9cc-841d46ae6ca4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee8f020-6aa8-4c87-ab4f-7ed86cd184b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd2baee2-241b-4ef7-8c98-7221c788091f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7255be03-d0b6-436a-81d2-a1797c9930c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49155424-47c3-4b80-b8b4-e74cc2ad3f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5822fff-77d3-489a-8173-91edd049bd88",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4518bb6a-2a93-4a54-b962-61109f7e5826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad1245aa-51b9-449d-bbfe-112aad67ae63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "391d7a38-8902-43d5-9ef5-6db9b2c9f9dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a72d0c5-f4c6-4c0a-ac8b-bef5e46f0f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72f7e4f-2493-4c3f-adb3-adc51da8b4c6",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c9757f-5968-4677-8f1f-b63131a2ca3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bda8066f-e1c2-41ce-9230-7622da07243e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9bd31e2-1e05-434c-aa92-f55bf3f06c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4efb5baa-cad7-4b4a-a037-f66a6514f908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e247636b-8c4e-4bc0-8a1e-8c98bc79bcb4",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb6e484-6352-471b-affd-b0b6458895af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daa5e59d-da9b-4534-8330-e6e8e2e8850d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86de132-b876-43e4-ab99-a8b4eff57684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85c2d5da-ab44-4d3a-97ac-7ef61dffd2a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320733e3-a53c-420b-bfed-0056e0d5e93d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335506ab-54e4-4850-a090-b5a919fc35aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "612f547f-10af-49f3-9e98-a9be386ec41f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a129856-fe9a-47b4-8a57-7003d1bef504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d03ebab4-55d0-47eb-b7fd-d2e26f73224c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5dd836-825d-4d4f-93ec-59ba75471a0a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e6dbf9-dc3e-4fd2-8ca2-aa77eb948acb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "099ead14-6c65-4f28-9615-0794837ed74d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cacc6c6-571d-4038-b648-9dca14252269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd129360-e51d-4974-b086-ee4ca783ed9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035eff73-a68d-426d-bcc0-c158b0622edf",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a2bdb3-494a-4f4d-acd8-65c7a38716d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "905ca4fe-1618-42bb-9a7a-ffcfb15d2fd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a52410b-2ec9-4788-b2fa-ef5b6a8eeccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "562fdacc-d4c6-4ba3-a40b-144e1e393682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8affce3b-3473-447b-8f8b-c8aef27c2ba5",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac9e102-94a3-4af4-87f9-baa8de0d5280",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa05aeeb-37d4-4575-a6cd-fb703653c87f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b279b36-e8c8-48a7-bcf6-deec234f9474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "293a95a0-d849-41fd-8798-115591156a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23145e0c-55d1-4f3d-93fe-78f689f7100e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833f0d44-5666-4e1b-ae05-c52a0f56c0f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e625ec6f-517e-42bf-a3fe-5176f597c283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fbc4c09-a944-4250-a2c3-2812d08eb7c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c522431-6795-46a9-992d-33f3a6dd4cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d385b7-ebd5-4e72-8b87-ef3083a2aa67",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2597012-47db-4099-8965-be535438e196",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05b02ffa-fc97-42b7-a4bc-7a4461700f35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06290c29-9955-4b7c-b55b-f51af7c5cf8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0958c431-7dd9-4390-847d-4aba4bcc412c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0227f692-4b4e-4cd3-904b-d44dcec871a0",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1357d7df-cc41-4ec7-9b50-e674dd9aa9a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4ba56f3-42ee-4f95-a8b2-4dd4a36ed71a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10cf42a-ce3b-4e81-b315-aaaeea8d8bf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef8e9837-0050-4ad6-98c5-ebf585bafe0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf76789f-2cd9-4b0d-8606-e24251ca647e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a75ba3-b872-49ed-a971-de1c031d9640",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d746ee4b-4c1f-4d39-8754-c8d9b0f31bd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9a3326-586c-4447-b7c7-999e5bef239a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9b3fdde-7047-4719-806d-3884e99f0bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927d9e06-3232-4de0-9d2b-2d491fbaed43",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60044b30-fcec-4053-a2da-7f0461879fc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4babe708-cb22-4400-bdfc-65793b0775ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d70090-9ec9-419b-af78-45f7be9e806f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bb86ab3-ea6d-43fb-9e03-2ca73ef0948f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76734671-ee6d-4884-b322-3cb96df556d0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b473943f-0d15-4bad-824a-57abb6ced6c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d38333b8-c398-4758-a72b-1e93ac9224f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1c82bb-e2a8-473d-a26a-c0f7212492a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d974c2c-0ae2-4168-b0ab-6e210a5b10ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "944761ce-96aa-468f-b9ad-ca031068bde2",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f57809-a496-4482-8a80-5f096dd34465",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68ca85d6-be11-4432-b0bb-423d4655d46d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f236f26-7f4d-4acf-8c0a-75ed17694b23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f4a782d-8efd-4299-b59f-00015e7036ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326e58be-86da-42f5-84d3-171e90334025",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be67abfc-6bcf-4a4c-98a6-aa9f82bff1ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "296d319d-1618-4803-993f-6d46b40a0cf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4bacbbf-47fd-4da3-8dd7-d67facf3e9d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05bb1a37-f726-4058-9aa0-9f5fa572c5cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3314e6c4-c843-42e3-b43a-f814adada0c1",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62959dda-23a7-45fe-bca9-e045ff12e86d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d23c06c2-5611-44cd-a890-fc64000be37a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af93931-8ed3-471b-8bae-6cf1a0082e33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e80326b3-5ada-4e59-bd94-98efc28d775f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee03198-cc56-46d4-be06-f718ddb6b36d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abaa385-4282-4cb0-8afc-98eeb98560bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47d816a3-3a9b-420e-8706-b54e13476944"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5572a766-6f6b-4423-93f6-d2efda5add24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b811da45-5f44-40cd-a424-06a1e3442e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00883dc-8869-40d5-b047-d1e9ca7c37fb",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840e77d8-27f0-4a02-8d40-0514c3306f40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "036d7de5-fe3e-48a9-a600-f7e3b12f6d83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e037ff0-53a3-4970-83c2-9eef17afea51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70467459-c929-48cf-950e-bab6503be8b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b65847-87cb-461d-8aa2-95602a6cacf3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29e9524-0d5a-4836-afa6-d5862f8594d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0c58188-c228-4f64-a562-f9bd3e40d3c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e502120-7bc3-4e9c-98c1-dab0eccc5600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0377cf44-cdab-4bd9-b333-493aa71f0e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78bd3590-1657-41d6-9735-43af70a612c5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785f3375-3898-4e21-b514-9cdd1a469354",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "203464e4-75b0-4529-a587-68a251568441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6b1104-354c-4524-b925-bb97f7607e59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b39c45f-cbdc-4767-99be-bf2ad3a1459e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3566bcb5-2d6f-4243-be45-475b9ff63f07",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9476029-44ed-4ff6-ac15-0356f6bd528b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "194dd926-6e52-4af5-9ca2-be74cc485257"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc8e3ff-ce0e-40f0-a3cd-8fdaa6e9b956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28fad45b-7c0d-4f2d-b2ca-2dc49bcec53f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f79b46-d3af-495d-9970-d0668167e99b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4f2a80-1148-4994-892d-95b8b02f500f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffe4f4a4-2746-44d3-9a04-1a6e897e3957"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3443f61-a2ce-4609-8ea7-90e71d8d3a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25a895c2-a367-44ef-8bd6-2b3bca3539a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "136beb9c-0d56-4086-a06b-d8f36ed47329",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4c58c3-855b-4ac2-8d3c-9fcfbc4c3efd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e966e9d3-8d2e-44f3-8aec-02044ee4c3bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8840c6e-f105-4614-9abe-971b10fd31ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbb7f8eb-f6e3-4d30-b9ec-a6996cf487dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec6b99ab-2ba5-435f-865b-7537daf74e64",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84672d61-f412-4233-90c4-481309e9407d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae826e34-7ede-4aaf-b9ca-bfdef530eb52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cca4ae6-5149-4f8c-8566-46530482d1dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a1e29f5-e44b-414d-9eda-ccda21e3c1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ad92d2-b1c6-457e-9227-57c5d1eb22cb",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e768162-0680-4a3e-947d-c9ef697a5110",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de2389ea-6985-4ef5-93f6-f648365e79e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece7931b-a4c6-45fb-a5c2-0ce16a04d93c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6892b508-603a-43ba-b968-c34c196a5f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5795f723-9962-431b-8889-80fa9643d50f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aacef73-ac18-4c8c-b88b-9c6a6b5cfd8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "871afccd-062d-422e-9a82-9a9418118768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3270afd1-6a0e-4f81-a8b8-d6f6dec817e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73221d70-7c00-4b8a-946f-b8d0d842cf5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf5a1d2-5de3-4af0-be18-70dccd866de3",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8aa1ff-fb80-4090-b6d3-d6b78570f9a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31bfcf45-a8ae-4c5b-bb54-97917ef62908"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd0e1cf-9cff-4e79-8891-f71229b3f68a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6373e60-7a30-4676-a483-649e6c5c46ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd6af6c-9717-47d8-8628-1b248fef9c74",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520189f1-9900-4c4d-a34f-b2ceefe535b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d78c2c3a-826b-44cc-a798-b73b6065dce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc521a5-8c55-40f7-a8dc-46d4dcf7de3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e34cb2a-8af4-4d49-ae09-870f7580bf1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "367679f2-b0c2-488a-8e1c-b7459837cf10",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ff2006-2e4f-4ac6-aeef-551691f57bcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c54c124f-45b0-40cc-b71b-d9a77fe4b204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "851f3183-b8c3-44b9-b0bd-9e2398c82798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9fea785-2029-4217-a7e8-bd9d7613c6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0821710b-3fd1-426e-ae74-de38aeaf3b8f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e62d30-981d-477f-a31f-4e46a97347b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7143fc2-aeb7-4453-939d-be91b1dfd86f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07baf3eb-1a02-40db-86d8-addafea35a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eabe6753-4b3a-4375-8d10-a8245c692494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca27fb66-4d1d-43e8-b23b-1778b0fa36be",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "820b6ce3-0c50-40ee-8550-2e01f2f6f4c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28fc9eef-1db5-4a0d-bf1c-3d5589b04e40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1325d85-a299-44da-96d8-328571589bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ff405b3-fb08-43c5-b967-f193fa1a7c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e4e517-a38d-42ca-b902-493c237f6352",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772b3d82-ca71-4534-bad8-4a28ad20b0a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae7a9c01-5634-49f5-a135-8fad5f8573d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27bdefe4-a5ee-4b42-baed-2f1c65e3b479",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d699c5ce-20bb-48e8-b5f0-ff880254b63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dac5fdd-fb66-440a-bf61-d0accf83bfab",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8151c8c9-c149-4681-af15-67bb8ff98611",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ab5bf1b-612d-4926-a433-69375622ad46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2648dfd2-68eb-4784-8c95-678bbd903a27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "def90b30-193b-4608-a1be-ac86254bcae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9bbf86-6039-485d-ae73-d3b013440f26",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd04c37-98f3-4a8f-bcdc-588b3c99316a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75626191-1057-405e-a768-9fb579a8319e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edfdcd68-7ef0-41cd-b54c-0f708420dc25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "787d0a85-b932-42fd-a96f-674353bbc112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d20c21b-1b03-45f2-9fb7-06cdc3ad4cf2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5627b3a-dddf-4ed1-aef3-c8bd077bdf31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "429a13a4-efb6-4043-91fb-b705796002be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93cc2677-d35a-4143-9a2a-165ce2d31b56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9162640d-da77-4335-8920-c1fe2022908b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b49ccc3-ac87-4c44-a15a-eab61c92fa37",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f67e25-c227-4b1c-ad07-f71ef521790e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33c32835-af40-4ae9-b781-3baca1127fad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "466e34fe-63a0-43c0-a370-a6f317e9cb8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fe49bd5-2d94-427c-af37-b0fa45cd925f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70adf5b0-b849-4e3f-b2ca-b8ede2e6dce5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef529166-1ec3-4462-866d-942bae16a372",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "befea1fb-2aef-43db-9803-d61cf4e90f9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ae7101-372a-43bd-a6f1-6b391cd6231b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8832fe77-dfae-4ddb-91e0-e8cfbf4264e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93597db-8473-4fce-87a4-4d4a418e1799",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7629417-daab-454c-9b67-f063465f1fea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f6850a9-d5f9-4f90-9462-3f83180fca9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7b6d22-0125-4135-94f9-07569e70e4a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77454334-3cb4-43c9-a52b-54ac43e65c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b78425-5d81-4569-807e-b1b0ced1e112",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b062e107-312f-474e-b708-bc075fc50ea4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8ac2b3c-5f43-43d6-914e-e998debb99e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c51fd1d-5d67-436c-ad97-770aab599176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30d041bf-a519-480b-8327-a2f574fe4d94"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ca564e0-5655-404e-bbf4-f011d302d2f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7094d9c-e632-403b-b2f9-93a5f20b3b24"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8b43b66-720d-48cd-831d-d8555f52c030",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "775333f7-c56c-4735-b2ea-6ab0f2fe1a31"
                    }
                  }
                ]
              },
              {
                "id": "90dfdf77-5583-4735-be72-ea6fad098564",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bffdad76-c0ba-4310-b792-47691348be73",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e23965-cfda-473a-9725-9bcb3ad33a59",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ba426a95-332c-46d8-a3bf-b9964688a812"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f48e72-2bdd-4c93-8355-1f767567a3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24725a59-33d6-421a-8430-f04e18c4148e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8cfae2e-4c27-4f71-85ba-86bdb9520899",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "497c7315-31c2-44c4-8844-eca0102b9085"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "21dd7686-61ca-4a95-920f-871d67518330",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6ec536d-3aca-4928-8e0a-e08cb04a450b"
                    }
                  }
                ]
              },
              {
                "id": "d87a4513-4af9-47eb-a1b5-60c791a9c29d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2bf8ba3a-bf7c-40f4-aa52-d369760d3f5b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0416cbd-aefe-4035-a763-3507de8dd91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9f9dec33-74e5-4a98-8802-9b1d45733003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dbc5986-6883-4ed3-9984-18ac71a33eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ac0b6e-0f08-4042-91b4-6a7fdc97310c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "521eaa63-69f6-4bc6-b9f1-c452ffaeee07",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f395b3e8-7f7a-4181-867a-be01599a0b7f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c9e876a-709e-4112-a14e-5c137e53f77e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7c8b5785-e1e5-4409-8568-1e5007eed6ee"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45838d2b-5544-4926-a3da-60f00a7acf74",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc52bc18-bfa6-45c4-acd4-539c1bb1180e"
                    }
                  }
                ]
              },
              {
                "id": "58122b4a-e04d-42f4-b8b9-2e4d2f7b519e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6fa1524c-20f0-432f-9642-c003b76782fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a1204ed6-f6ef-4257-80c3-9711e95d54c4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8cd27646-c9c5-44a0-a4d9-b7b459d4fd9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f819d79-2ed5-4a65-b9b4-292abcbdeea0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c07693ae-eb00-4cdd-93cb-102909340acb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7b9b3da5-bc1a-4967-8c2f-b4a80e466277"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6949a211-b9d4-4a6f-9889-2980ee8a87f6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "04c8ef3c-ef03-4e7c-a5b1-dccec9e41e46"
            }
          }
        ]
      },
      {
        "id": "1e5d32f5-bc06-4de8-a89a-f320eac553b3",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c9f85d52-aefe-45b8-b22c-629c9960bfc7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "de268453-8570-4c7a-80da-ae7b6f93437e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "467aae28-205d-4492-bc3d-c1c30079edee",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1bc73b-4cc0-4157-981b-4ddc071e342b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ebc0deda-d932-48de-82be-9d65c60ae538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce20ad7-93cf-41c8-b707-3745b6bc73ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "18bf30bc-6ece-49b0-9145-730be967d34c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf3c4bf1-866a-48e7-b86a-ec11f69bedb2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67283cb1-0964-420c-b673-93e4adf0ca7b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e47e42fa-c5a2-465e-955d-48bafd4262b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb6375dc-316d-4b4d-8efb-91284fc0a93b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aefaf91e-2f9d-4f3a-b015-3001c3f6e933",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a691c0d7-b9e7-45f5-afde-850e42623e26"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "02405eac-120b-48ae-9bac-51869f221f14",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "db7bbe00-c17a-45b3-9f71-c3061dffff9b"
            }
          }
        ]
      },
      {
        "id": "932e8a02-d678-4eb1-8475-dbd9f20cbde2",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "85c94bfd-9d7a-481b-9615-10dc89d8f2a0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "216c0d82-ddc7-4ccb-bbde-f0ffa6043af4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db5a4901-ad0b-46e2-9a92-bbf34d63e97c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b3dcfa-a089-4910-b463-7049343bf849",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6373ec6-6e4d-41f3-a97d-edacad837984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "904789e6-e437-4400-bd54-ae95a6c5b9df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e33bac3d-de0e-4cdd-82bf-a29c0eedf214"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bec2780e-f778-4be4-b2ae-6709f10d7623",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd9a8418-6280-4e53-818d-3b0a43894b0b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "755b380a-ed54-45c8-8610-860385bb998a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3501253-9ef3-4326-9e02-98e275f11dd2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "46600959-408d-4e35-86ab-d26854a4e7ca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "79d2e601-09ad-447b-9015-b170b7e74dc5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8463967b-eceb-4016-9bc0-655272915d2d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "01942121-f451-47b7-9a4d-3f274206616a"
            }
          }
        ]
      },
      {
        "id": "81b5b377-8a20-488b-9fdb-56568885d4a1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8292f1db-b9e1-4c54-8d97-245a8a91c3db",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c32ef878-4847-49ec-a6f7-67a481c78d10",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b3d3ac36-eeea-42aa-9784-b5a86cca39b3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce4960a-f651-4b56-ab8c-b83374ae0852",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c5826d0-fb0b-48c6-8e87-be31077b397e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3aef051-ac4d-4657-bf85-bb315c5bec46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0209c79-f6d7-4273-b4ef-b6d2b3f03036"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52956d76-9901-422e-adb7-e4bfb2a9452e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46611878-6e08-4dfc-ad64-2ac33417db72"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cae62ef5-318d-4094-a258-3050183760c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9825bb0f-95ac-4aa1-9859-e8cc2bb8042d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87b9e4a3-4fd7-438c-add4-3c5673a48ce6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "efc99efd-8521-412e-8d2b-377ef3fdfe5e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c5c311e-08c4-4bf4-987e-88bfd780cb47",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "936915e0-693f-43c8-93ca-806ccb3598e1"
            }
          }
        ]
      },
      {
        "id": "21630f24-9139-497c-b85f-2f5c5f4692ac",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a9d74847-d18c-4685-924b-3048a35867d3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a1b0f0a-1e9d-4f16-aff3-9a27bff166fd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "861c8e8c-428e-479e-bad2-b61608f04b7e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1da4821-0d24-458b-9661-db88530817dc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0b4c9472-c145-438e-bfcf-1a1b56b58766",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 109.69444444444444,
      "responseMin": 10,
      "responseMax": 9832,
      "responseSd": 670.5389311763369,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1720399228761,
      "completed": 1720399264683
    },
    "executions": [
      {
        "id": "21f2f315-7eaf-4a73-9a6d-8f6ac4a72b64",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7b501d65-88a8-48c2-9d9b-262eb0deaff9",
          "httpRequestId": "6e8e892b-b04b-436c-b993-bb94c02fcd28"
        },
        "item": {
          "id": "21f2f315-7eaf-4a73-9a6d-8f6ac4a72b64",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "06eb10e3-22c2-4718-847b-aaeb1bbd4abd",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 0
        }
      },
      {
        "id": "a426a7c4-68a7-4fac-b0d2-73675f90b61f",
        "cursor": {
          "ref": "5abda6c4-aa7d-4370-9f70-4cf4689186b2",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "73e81d47-88c1-48b2-a9be-0ba5197702b0"
        },
        "item": {
          "id": "a426a7c4-68a7-4fac-b0d2-73675f90b61f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3f5b7fcc-a992-4047-bdea-a6cc5a04cfaa",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "4b1bc243-5577-4f20-96bd-694e7b009765",
        "cursor": {
          "ref": "108a9b65-fae1-4543-bdef-27fd4e2e3c74",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8c16e840-36fe-41fd-b61e-b1ebb0c1c558"
        },
        "item": {
          "id": "4b1bc243-5577-4f20-96bd-694e7b009765",
          "name": "did_json"
        },
        "response": {
          "id": "e8f2fb5b-2f39-4a69-b6ad-065f1771e681",
          "status": "OK",
          "code": 200,
          "responseTime": 392,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48526704-5c86-45b3-bd09-6cc101bffb97",
        "cursor": {
          "ref": "28d4e552-4f0b-4c54-bccb-5ad31e7e5808",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "63ba4058-2205-4b71-9ab1-6f7766329e66"
        },
        "item": {
          "id": "48526704-5c86-45b3-bd09-6cc101bffb97",
          "name": "did:invalid"
        },
        "response": {
          "id": "07656a96-ccf4-41c3-9d4d-532ea23ad2c0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 461,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48526704-5c86-45b3-bd09-6cc101bffb97",
        "cursor": {
          "ref": "28d4e552-4f0b-4c54-bccb-5ad31e7e5808",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "63ba4058-2205-4b71-9ab1-6f7766329e66"
        },
        "item": {
          "id": "48526704-5c86-45b3-bd09-6cc101bffb97",
          "name": "did:invalid"
        },
        "response": {
          "id": "07656a96-ccf4-41c3-9d4d-532ea23ad2c0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 461,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f19953e-34b5-4adb-b22b-280fefa7dcd0",
        "cursor": {
          "ref": "1d651910-057a-4e33-a7d5-52a73ed304cb",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "29ffcc29-604f-4ee6-b673-7d05a208ac65"
        },
        "item": {
          "id": "8f19953e-34b5-4adb-b22b-280fefa7dcd0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e8ee58a2-24fd-4c3e-bd61-f30f1adea561",
          "status": "Not Found",
          "code": 404,
          "responseTime": 34,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94fce574-ba10-4cfa-a78d-e5d21265b6e0",
        "cursor": {
          "ref": "48496558-40d6-4aba-b907-a3b17762ba3a",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c5ace69d-b82d-411a-934b-ade76fdf3842"
        },
        "item": {
          "id": "94fce574-ba10-4cfa-a78d-e5d21265b6e0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5c32d112-88a4-40c3-b274-1605f6ce225f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 30,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625ce91d-1fc2-4e4f-932d-77fa91d96f9d",
        "cursor": {
          "ref": "40eafe6e-13c4-4ae3-b369-492d2b599ecf",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e658948c-ef72-4655-857b-52808d87ae67"
        },
        "item": {
          "id": "625ce91d-1fc2-4e4f-932d-77fa91d96f9d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0911ee4e-d86f-4ec7-9a63-3eb4965a8e52",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780a05e9-31f7-468c-82ce-83376413c917",
        "cursor": {
          "ref": "90107827-f011-4f27-9371-86d8daffa4e7",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1b9032aa-96cf-4a52-aac2-306593bad0e2"
        },
        "item": {
          "id": "780a05e9-31f7-468c-82ce-83376413c917",
          "name": "identifiers"
        },
        "response": {
          "id": "2e765f4b-e4b0-4b8c-b1ef-189349665c59",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b99c630-88ef-43c8-a5bf-d95ca98dec92",
        "cursor": {
          "ref": "1d875e5d-3351-4031-84e6-de36b3e6c1be",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "119e28bd-ec0b-42f8-96c1-5dff622b0e0c"
        },
        "item": {
          "id": "9b99c630-88ef-43c8-a5bf-d95ca98dec92",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0b63996f-9d8d-4df4-8d31-96aaab012eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce6d907-f3cd-47ce-8d95-1af7f0b0e669",
        "cursor": {
          "ref": "78bf11f0-03ec-498d-afc8-daa40fe164cc",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "09482f90-8a74-4116-ae16-1498e7c7bbab"
        },
        "item": {
          "id": "dce6d907-f3cd-47ce-8d95-1af7f0b0e669",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e1a46837-1c00-4527-a4b5-b9c7661efc7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664f4d9c-8ffb-407b-afb6-37854cd89d2a",
        "cursor": {
          "ref": "dd0c2363-76c8-4528-acc1-1520de5ac960",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "30822c57-0cff-49ba-86fa-22d9b9109f12"
        },
        "item": {
          "id": "664f4d9c-8ffb-407b-afb6-37854cd89d2a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b2e785bd-244c-4b57-9394-93cd9633391e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0741e790-04ec-4cc4-a3af-a10aae1b8048",
        "cursor": {
          "ref": "7f2f252c-7b6a-4f49-96c7-e932662592d8",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "27f50b33-ddf7-4e79-9c2c-f614fc55de63"
        },
        "item": {
          "id": "0741e790-04ec-4cc4-a3af-a10aae1b8048",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f0c357ff-8a48-451c-94ef-fcc5a0eec158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86a7ff1-7bf2-4439-8c45-d747bd60a52d",
        "cursor": {
          "ref": "db390946-2c85-4c5a-9f6b-6571857ccafa",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e2b3e73d-97fd-4bc2-8e74-029efe52940e"
        },
        "item": {
          "id": "a86a7ff1-7bf2-4439-8c45-d747bd60a52d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "292ebb96-1129-4707-a333-e7b2c37d1bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f8ffcf-d85d-411a-a87b-746058b51982",
        "cursor": {
          "ref": "6af42584-d0ff-4500-97d5-da5faa9009aa",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c198e0c2-c4ea-42d3-bd6d-5e091532188b"
        },
        "item": {
          "id": "d0f8ffcf-d85d-411a-a87b-746058b51982",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "54925211-b137-4832-b091-4e773247f96c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 190,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43dfc727-a310-483d-9b43-d1e07eec99c0",
        "cursor": {
          "ref": "2d5951bb-51af-4205-ac3b-07db178bf810",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e961ca6e-9309-48b1-ab1c-12657ec46c72"
        },
        "item": {
          "id": "43dfc727-a310-483d-9b43-d1e07eec99c0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8e3949e3-574e-4ff1-947d-d770986a5eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35dcaf0f-1b96-46fa-b5a1-4abc2e3b6fb3",
        "cursor": {
          "ref": "0c5a7c7f-c0de-45b0-808f-c2031d2060b1",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f8463890-219f-4780-b339-7eb237ceb6b4"
        },
        "item": {
          "id": "35dcaf0f-1b96-46fa-b5a1-4abc2e3b6fb3",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ef270955-7e5a-46e6-902d-ccaab3643ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159e05ae-4e26-4969-b232-a1c68b5839bf",
        "cursor": {
          "ref": "3291ec82-2a0c-4a8f-b9c3-e94d6fb64fed",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "698868f9-7ef3-4ff0-97eb-a3c56b91bffd"
        },
        "item": {
          "id": "159e05ae-4e26-4969-b232-a1c68b5839bf",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f9a8ad4e-56ba-41f3-a5b2-fbf8f6ef0add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42d769b-425e-479c-9bc2-a7118fd61d46",
        "cursor": {
          "ref": "d57c48ac-c378-4cdd-b8d1-af482e55946c",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "fc540988-ed29-49fe-9f35-f5afe3437fbd"
        },
        "item": {
          "id": "f42d769b-425e-479c-9bc2-a7118fd61d46",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c7b39850-549d-440b-b582-1bd5c65c53ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1709b735-3971-4f0b-b1c6-ed679b6fb161",
        "cursor": {
          "ref": "0a3a4f30-702a-4503-b143-b5145df6af76",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5c0cf54f-c496-4ab1-8df5-a533a02c10ee"
        },
        "item": {
          "id": "1709b735-3971-4f0b-b1c6-ed679b6fb161",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c0185082-6b51-4a04-a418-cb98047be299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4bfac5a-7ca0-44c8-a22b-3d0b8233e75a",
        "cursor": {
          "ref": "7934120e-4834-4956-8b3f-acd1d3fbf7be",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "45734c38-d3de-45fc-9f2d-0e85610e1288"
        },
        "item": {
          "id": "b4bfac5a-7ca0-44c8-a22b-3d0b8233e75a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8adcee70-5811-4516-83f5-c4503b4cefea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8d3dd8-484d-463e-a105-8b441756aba3",
        "cursor": {
          "ref": "54ad3ac8-b187-4fc7-8c20-fb77e4983d61",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "171fa1c4-d33c-4ae7-b958-61247b1caed0"
        },
        "item": {
          "id": "8e8d3dd8-484d-463e-a105-8b441756aba3",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c5a2a6e0-e382-4ce5-a6e9-9cebe985b657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86d8b91-e25d-46e2-b6da-9ea4b1d09d71",
        "cursor": {
          "ref": "fdf01c82-584d-4be6-8810-a0f88f00b108",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "94a4a400-7ad9-4a37-a3c9-3c411f698773"
        },
        "item": {
          "id": "b86d8b91-e25d-46e2-b6da-9ea4b1d09d71",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1f65c24b-6d8a-48ba-b4ee-ac5d962424e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce20ad7-dfd0-46d9-8d06-cbf60254dbb4",
        "cursor": {
          "ref": "aeb67112-8980-495f-9b96-b50f23ca0379",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "bd2bfc14-5a57-4052-b880-aca24e0991eb"
        },
        "item": {
          "id": "4ce20ad7-dfd0-46d9-8d06-cbf60254dbb4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fbdefb0a-890b-4489-9adc-d125ba7424b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e223ff83-57bf-45a3-8e0a-01e422b7e853",
        "cursor": {
          "ref": "1e6b1fa4-8a66-4016-9951-78b9f59de42c",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "09b148c3-38fe-4dc5-aa29-b500602922fa"
        },
        "item": {
          "id": "e223ff83-57bf-45a3-8e0a-01e422b7e853",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "36192746-e1a6-4865-b4a5-d84568179124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac06b30-11b1-4d68-8278-01eda638a982",
        "cursor": {
          "ref": "9d0d90af-b6c9-4afd-838c-f5dc31c17063",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "667bcf70-ced9-4515-bb82-d500c7abb41f"
        },
        "item": {
          "id": "2ac06b30-11b1-4d68-8278-01eda638a982",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4ba19a57-02a4-4655-ba3e-9ac96037c82d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed563e9-1560-4e60-8562-d4b307217d10",
        "cursor": {
          "ref": "e4457ad9-914e-4786-b4ec-adcf3912685c",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a9e428c3-1dcf-497d-bc30-9631b9ec3d50"
        },
        "item": {
          "id": "3ed563e9-1560-4e60-8562-d4b307217d10",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b02b6118-1111-4120-93a8-56ff36c82855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0c5152-5e2a-4a73-8480-19920afca037",
        "cursor": {
          "ref": "d61d316f-ce73-4f3c-a5c1-26eb8bf72b43",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c1aff80c-01e2-481b-b697-e7adc27eac58"
        },
        "item": {
          "id": "8e0c5152-5e2a-4a73-8480-19920afca037",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e5de72a8-7d6b-4472-9a99-eaa485c27e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841990c3-413b-42da-8f16-329640d4b207",
        "cursor": {
          "ref": "e01c7e61-ac01-41a5-b2b5-695a084e2ce5",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "bc92aa4d-edf0-4e98-9214-5d94d034e006"
        },
        "item": {
          "id": "841990c3-413b-42da-8f16-329640d4b207",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "88b163f4-1672-43ad-8433-bcbd2b74ad90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995a0940-0967-4d17-bd36-ec3af1150a40",
        "cursor": {
          "ref": "8dc7c4aa-d550-449d-af29-0561b7c76290",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5012ea95-cfb3-4bb8-818e-51e0ff92cbcf"
        },
        "item": {
          "id": "995a0940-0967-4d17-bd36-ec3af1150a40",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a81b9d59-7dc1-40e0-85f6-d0198b4ce028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00cf7197-473a-4945-9cb6-4ed41b5bde4e",
        "cursor": {
          "ref": "27e5cf75-bf83-490f-a05a-8f8071996ea5",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "68c102f3-178f-4127-8626-b413a37d3953"
        },
        "item": {
          "id": "00cf7197-473a-4945-9cb6-4ed41b5bde4e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "99661814-3afd-4080-9ccf-4a223f56539b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec75fa4-f40f-4a70-8fba-77b97efe7e98",
        "cursor": {
          "ref": "23728b8d-0cd4-455f-a4fd-bb870fda8387",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "659cf573-fc25-414d-b4ed-cbc42226eb8c"
        },
        "item": {
          "id": "bec75fa4-f40f-4a70-8fba-77b97efe7e98",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c03328c8-8c6d-4188-9aca-cf18c4a4d0c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef24cf2-db82-4546-a138-86eda6d42d10",
        "cursor": {
          "ref": "44f6e2ba-2e9a-479a-8b85-8dc499d9bdad",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5e545c82-3ca9-4bc4-8452-6e419ca4ff9f"
        },
        "item": {
          "id": "bef24cf2-db82-4546-a138-86eda6d42d10",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "80c76b47-5a2e-45c1-92b6-523cf3ff4f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f33eb7-1077-47c0-ab0d-c962ba6802d7",
        "cursor": {
          "ref": "3c438d1c-7161-4f8c-9722-05d6006b5c79",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d7a46133-9744-41ef-a4d3-318883ea0ec5"
        },
        "item": {
          "id": "07f33eb7-1077-47c0-ab0d-c962ba6802d7",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6af741cd-9dda-4839-9262-4c6c3e70ccf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4076b8ae-cafd-4a61-b019-2a1b6bc76933",
        "cursor": {
          "ref": "d68dc477-326d-458e-9651-51d680b9100d",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4a25dfae-0269-4f77-a316-f556a5348af0"
        },
        "item": {
          "id": "4076b8ae-cafd-4a61-b019-2a1b6bc76933",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b9d39c3b-f774-4c74-bf47-769ea9a62ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84f720f-ca30-4d11-b71f-10ca3862dde7",
        "cursor": {
          "ref": "9c67ff51-da45-4530-b1ca-515bb0cc5060",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "58b3fd27-679c-40cb-b1df-405963fbc825"
        },
        "item": {
          "id": "b84f720f-ca30-4d11-b71f-10ca3862dde7",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2d5dee3b-359a-4e18-94dd-ede99cd2480d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c9a39b-86d3-4252-817b-0eeba20da7c2",
        "cursor": {
          "ref": "fc66589a-5f1e-42f5-afcb-677eac9ea2c1",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b0345425-b315-4f54-9ccb-2744e8483713"
        },
        "item": {
          "id": "96c9a39b-86d3-4252-817b-0eeba20da7c2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b38ab030-ec62-432c-b34f-b57ad3bdad3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 191,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c169ae6-2924-490e-881e-1fb279539aeb",
        "cursor": {
          "ref": "fee340d4-f8ad-471b-ad43-422fb5e96ba5",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8358ee7d-cbce-4804-8214-a66f96a5e13c"
        },
        "item": {
          "id": "1c169ae6-2924-490e-881e-1fb279539aeb",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a134825b-8fb7-4b87-8620-bc9bc4b37123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cac55a8-c920-4059-96f9-7fa5526ae050",
        "cursor": {
          "ref": "11851061-d24a-44fe-a675-7017fcc0d7e5",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ebede6b0-106b-4af9-aa8c-7a834bdbc5d5"
        },
        "item": {
          "id": "8cac55a8-c920-4059-96f9-7fa5526ae050",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e7c108dc-fdd0-4c7c-88b4-2d9f3d7b3e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c8b676-6bca-4c9a-a078-e76dc1ae5392",
        "cursor": {
          "ref": "7f494bcf-1f01-41ae-84d1-5ab3127e3861",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3b9fa85f-8b13-4175-89a0-c9ef5bd6374f"
        },
        "item": {
          "id": "d2c8b676-6bca-4c9a-a078-e76dc1ae5392",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "683fcdf7-6855-4fe8-98b5-7c6d4cc5277e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7120df1b-2432-406a-9a88-43d6353c29fc",
        "cursor": {
          "ref": "6c3a0ad5-af84-405a-8b73-cc442a4c19d9",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a8c81db0-0489-4225-8eb1-a4558b20aac7"
        },
        "item": {
          "id": "7120df1b-2432-406a-9a88-43d6353c29fc",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "baf18fa8-4c1f-4000-a0e2-a22f5b2af9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1861ccec-e0f4-4238-9c71-7d729037dd66",
        "cursor": {
          "ref": "5a46f378-49a2-4e62-93d8-818dcc6bb900",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "822ee97a-8ca9-4e90-8233-dcc7527bef47"
        },
        "item": {
          "id": "1861ccec-e0f4-4238-9c71-7d729037dd66",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "115f8f00-972c-4ec9-80f0-47f9969d6ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54501093-13d8-4d59-86c0-cb9bfc373b7a",
        "cursor": {
          "ref": "43a5642c-bd8d-4485-bc41-95f93794ef18",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "cbcaaa5e-9a2c-43b5-a1b5-aa8e9b33e859"
        },
        "item": {
          "id": "54501093-13d8-4d59-86c0-cb9bfc373b7a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3a196bcf-e12f-426a-8318-71979c137e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62aec9d1-2a63-4fd3-b373-7e980c975c77",
        "cursor": {
          "ref": "c380691d-3b61-40fd-b4ab-7a8d04a506a7",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a8432c9e-9832-4f88-b27f-97aa7818d760"
        },
        "item": {
          "id": "62aec9d1-2a63-4fd3-b373-7e980c975c77",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8bddd108-8c9d-44af-a2e6-ab5e22c68c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6dd4fa7-8cf7-4104-8037-fc9b7f7c9c58",
        "cursor": {
          "ref": "23caf0ff-7c74-416e-aa15-e52528782b15",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "573be3fc-11d5-412f-ae09-d8c2e052aa78"
        },
        "item": {
          "id": "e6dd4fa7-8cf7-4104-8037-fc9b7f7c9c58",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4962a3fb-b2ac-4416-9ca0-9c4660b8c528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9d9e62-2211-4405-8666-a8f3c7f413b7",
        "cursor": {
          "ref": "8b82a4d3-97b5-4840-b454-602dd874bd6f",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "38855ab8-4fbc-4c90-a94b-4e716f90819a"
        },
        "item": {
          "id": "aa9d9e62-2211-4405-8666-a8f3c7f413b7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2062325e-4200-4b15-be48-015e8f93dbae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7445b2cf-bec4-4a5a-87eb-9eed3bd89c01",
        "cursor": {
          "ref": "49c0c5f9-f445-4bcc-8324-14d62bdc2b01",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "81f1523c-bd9e-4350-a0e7-7d0c003007c5"
        },
        "item": {
          "id": "7445b2cf-bec4-4a5a-87eb-9eed3bd89c01",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7363887d-ccaf-4df5-a1ad-ce30a4cc0734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c363b46-b61f-403c-8b99-ac14dee3073d",
        "cursor": {
          "ref": "527a687f-c670-4560-8d83-8ad8aca4a0b6",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ae1e3b66-8389-425d-b856-8efb0cccc5c4"
        },
        "item": {
          "id": "4c363b46-b61f-403c-8b99-ac14dee3073d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2794f6d0-716e-463c-ac2f-6bcbac9b4f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef648d7-6946-402d-b8c9-88bd35de06e2",
        "cursor": {
          "ref": "f25d4fb1-5262-4ecc-a9a3-90c12f3c49de",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4ec0465a-e3b2-4efc-8ba2-c59e785c9c69"
        },
        "item": {
          "id": "cef648d7-6946-402d-b8c9-88bd35de06e2",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "062434e5-5520-4d14-ae78-00fbfc646b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd1804e-6e6b-4e1e-b117-1f77179b78bb",
        "cursor": {
          "ref": "58e625dd-6fc8-40f2-a2de-b29b4d5c287c",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "bfa7111b-d16a-44bd-a5b2-cf15c252ccf4"
        },
        "item": {
          "id": "cbd1804e-6e6b-4e1e-b117-1f77179b78bb",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "47da9d80-7ea0-4d7e-85b3-e22ac2833775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ed5e0b-6d02-452e-a107-8a541b13d95c",
        "cursor": {
          "ref": "e188ac6e-84a2-4b03-a8ac-5e4c05f0064d",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c98796f0-231a-4902-b020-6e7530e1570b"
        },
        "item": {
          "id": "72ed5e0b-6d02-452e-a107-8a541b13d95c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "386ee4cb-c0bb-4538-b1c2-f48aaf5920b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34ce9b8-e4dd-4920-93d5-14902d91ff5e",
        "cursor": {
          "ref": "90bd860a-fd4f-4d9d-9ee2-af4cd6a868bc",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6207db43-e371-4868-be82-5c663e1308bd"
        },
        "item": {
          "id": "b34ce9b8-e4dd-4920-93d5-14902d91ff5e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e677a94a-4cb6-4e8f-81c2-0498465c93e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d4625a-6fd6-4c44-b85d-1a770fe8a0ac",
        "cursor": {
          "ref": "2f072e33-d2e5-4a7a-a9dd-4cc97bcdfcdd",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "21c1259b-1886-4fe5-b738-8dbfb4226705"
        },
        "item": {
          "id": "88d4625a-6fd6-4c44-b85d-1a770fe8a0ac",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "cdc27a11-ac24-4d0d-ab09-cca4cfc492d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4007c9-64b0-4b2b-9bca-c8456d0b21bf",
        "cursor": {
          "ref": "540885b7-18b5-494f-9ab0-8b29961f2755",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "89a758d3-ab75-4eca-a182-1b040a284c29"
        },
        "item": {
          "id": "5a4007c9-64b0-4b2b-9bca-c8456d0b21bf",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "66294e06-16b3-4ec8-98b7-5b5e2e7eaaa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1dd8914-b88b-46ff-8ab8-ec37c2aafe72",
        "cursor": {
          "ref": "31885aab-6809-4894-9b78-306e24034d4d",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d10b6557-3ca4-4010-a9d1-acb8f5139f20"
        },
        "item": {
          "id": "c1dd8914-b88b-46ff-8ab8-ec37c2aafe72",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d255349f-533a-4e55-bca1-289cf0442dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b6d737-3e58-4b3f-9d4f-7bd3be6b276c",
        "cursor": {
          "ref": "ec4cfc9d-1b19-4ff1-a4f4-c72025400cce",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7b0a6c10-48a6-48f3-8066-2b1829ffe02c"
        },
        "item": {
          "id": "06b6d737-3e58-4b3f-9d4f-7bd3be6b276c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "84116091-796c-42db-948c-c46e93cadc96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b1d6d9-700a-4646-aec4-f863fcd58549",
        "cursor": {
          "ref": "53a1eac1-4934-4f55-b145-2d7fc1efadef",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "58ce4940-ba53-4589-9f05-33618fd40377"
        },
        "item": {
          "id": "b7b1d6d9-700a-4646-aec4-f863fcd58549",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6ebeb7ec-016f-465d-a4f4-cbf5955496f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5568fe-4da3-45bb-8993-6f2ad0438b5a",
        "cursor": {
          "ref": "3c220bd5-e5f7-4d28-8023-157bf7ac7633",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9d39b11d-85d2-4478-b682-6208479e7d22"
        },
        "item": {
          "id": "2a5568fe-4da3-45bb-8993-6f2ad0438b5a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3e545953-0069-4bb5-a2ae-19604ee64f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d42187-35cc-4713-b4eb-7d4a54f83099",
        "cursor": {
          "ref": "f7954003-38ce-4838-82a7-328af268f072",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "cd90fb93-4051-481a-bec3-811f71e08d48"
        },
        "item": {
          "id": "68d42187-35cc-4713-b4eb-7d4a54f83099",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "fab66c7e-9832-481a-bc5c-7b56d2b1af0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91726a0-dfe9-46b5-b879-c438cb20e478",
        "cursor": {
          "ref": "75f3fbe2-e06d-4ba3-ac2c-7e46641f4a41",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "eb4a0c50-fbe8-4fc8-bca1-d8bda1017698"
        },
        "item": {
          "id": "e91726a0-dfe9-46b5-b879-c438cb20e478",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "327d9df8-a1a5-4165-a447-9d3dd4ed2b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d55086-ee76-41e1-81d4-7de4a8868da7",
        "cursor": {
          "ref": "ddc39aea-810f-45c2-8d85-d0b5d7d77083",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2dcefd95-5440-4f04-8d29-ec0e1836acec"
        },
        "item": {
          "id": "16d55086-ee76-41e1-81d4-7de4a8868da7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f9d4df43-7875-486a-85d0-4677377bfab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747370a8-cbc8-455d-9e49-3509e21f1d29",
        "cursor": {
          "ref": "48051bd2-5081-4e10-8845-f43ba435fefd",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4bdbc52b-2bd9-47ae-a811-3c3da2ec44fc"
        },
        "item": {
          "id": "747370a8-cbc8-455d-9e49-3509e21f1d29",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "faf6e6d8-6151-4432-bede-f87a8843749e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4245eba-8276-434c-bcd0-55388ce05716",
        "cursor": {
          "ref": "45a5841e-ccfa-457a-8f0e-3c1ffc9d3bee",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ac701d1a-b072-4560-b99f-dce17d34f707"
        },
        "item": {
          "id": "e4245eba-8276-434c-bcd0-55388ce05716",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0721f511-403a-44bf-9bf1-5b685448139f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de17f25-e1ac-4063-af07-5551703997fd",
        "cursor": {
          "ref": "516369d0-bef3-4417-8540-850e36f7336e",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6a2370c3-1942-4c77-aadd-09afaf912e77"
        },
        "item": {
          "id": "2de17f25-e1ac-4063-af07-5551703997fd",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "178aeb51-0f95-4e54-b144-7c2db1816cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9540ce-5491-4e04-9769-e3680dcde22c",
        "cursor": {
          "ref": "86f67a6a-b389-4bd9-b2e9-0cc2fabfff30",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "336041e1-1d7d-4f94-a838-32d59d004c53"
        },
        "item": {
          "id": "6f9540ce-5491-4e04-9769-e3680dcde22c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "69b8b8ae-a21d-457e-8b86-0fd94caed450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf165408-744b-47ac-8407-86bb9dbdf00a",
        "cursor": {
          "ref": "49bbbc90-1e6b-4860-afd9-fd65f11f0801",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "65d46d71-38d8-408b-9f16-05e4bec01b26"
        },
        "item": {
          "id": "cf165408-744b-47ac-8407-86bb9dbdf00a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "642c6701-854c-42c3-9a18-e0aa8e9e4248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57c2729-fe86-40ad-9fbf-f3cd4967d54f",
        "cursor": {
          "ref": "6c8c467e-5ea2-41b6-9969-f16f104fd254",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "66eb0fd1-b919-428f-9fc4-4e3c149c26b0"
        },
        "item": {
          "id": "c57c2729-fe86-40ad-9fbf-f3cd4967d54f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "15b933a8-f4c7-40cf-a733-f36b411fd54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8394d1d6-5997-4776-bd3d-a9de620df53c",
        "cursor": {
          "ref": "230276b2-9464-4a2e-bc29-fa1aa87497f3",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9ebd8f30-a1fd-40f9-9696-99609f2f35b6"
        },
        "item": {
          "id": "8394d1d6-5997-4776-bd3d-a9de620df53c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8ae5a934-b824-4b40-a574-f42ac967a786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceea42dd-ed82-48fd-be15-515d61f0b286",
        "cursor": {
          "ref": "9a2d230a-7586-4b36-97b6-260b6e749302",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "051eeb6a-8f31-4d5a-a1ea-84f2e42f0dc2"
        },
        "item": {
          "id": "ceea42dd-ed82-48fd-be15-515d61f0b286",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ad51bccd-1434-4cc6-8fca-1a0b7b3d1677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91d16c8-3f76-496b-8a3f-55656ee6436a",
        "cursor": {
          "ref": "d36732c1-4703-4e08-8483-6b3f7fa96ad3",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "158fdbb8-a9be-4585-9ee5-0892161c9a07"
        },
        "item": {
          "id": "c91d16c8-3f76-496b-8a3f-55656ee6436a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "27286466-8a49-4a2e-8e8e-0e10f5f294ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd2bd66-8bf3-49b6-9c1a-20960189e90c",
        "cursor": {
          "ref": "f58f6c16-54a2-40af-84cb-6205bcf15819",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c5ca820d-4d4a-4813-8c70-ef67d98bc7fb"
        },
        "item": {
          "id": "ddd2bd66-8bf3-49b6-9c1a-20960189e90c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4daab758-38ff-4c62-93b5-7ac92bf5d411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "277e24f8-6748-4566-a8d3-365473eba2a3",
        "cursor": {
          "ref": "31bd868a-b4f7-4d37-b3c7-3e1b3dd88f2f",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d2876305-47ae-4298-92ee-b7595d67ab87"
        },
        "item": {
          "id": "277e24f8-6748-4566-a8d3-365473eba2a3",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "87b36f69-236d-4606-89fa-9d0c70c28968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1110c52-47dd-4bc5-a2b5-9267deaed6d9",
        "cursor": {
          "ref": "e03d9621-a576-4edc-91ab-fe58de95f8fd",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1d30df92-906a-47bf-bd6a-e802bbb8ae3b"
        },
        "item": {
          "id": "d1110c52-47dd-4bc5-a2b5-9267deaed6d9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8fd94dc2-c0d8-4b9c-b115-aacfaeba807c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e76eb1b2-ab88-43ef-be16-d64132b41ab0",
        "cursor": {
          "ref": "c6a41888-10fd-4a8d-9e8b-d8c713dff16f",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d55255bc-71b6-4570-a7cd-a0436a5c408e"
        },
        "item": {
          "id": "e76eb1b2-ab88-43ef-be16-d64132b41ab0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8519ab36-2d4f-41a3-9c5e-0d14c257e5dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f43e11-4d94-48fb-97bd-6f3d074f6ce4",
        "cursor": {
          "ref": "b5b96631-e9e6-481a-b240-21e0d781e564",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0c3c6a00-0d61-47cf-ae13-ac892630bbbe"
        },
        "item": {
          "id": "84f43e11-4d94-48fb-97bd-6f3d074f6ce4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ceb0c8e0-4e14-4ad2-928a-a7b1c49b4b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6f649c-7cd3-4095-b290-ea084b1c7874",
        "cursor": {
          "ref": "45d57023-8acd-4629-aa21-06d6514eada7",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2058d248-ddd8-46dc-b4d6-096eb8ba65c8"
        },
        "item": {
          "id": "4d6f649c-7cd3-4095-b290-ea084b1c7874",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2e0d8a6a-34cd-47d4-a7b0-e826fb0dd7cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09adf58-1c59-49d2-93da-a600665da526",
        "cursor": {
          "ref": "c1fd911d-0bb9-4647-9070-6643cf737053",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e6c25b72-54b8-4d21-866e-1f49540abb83"
        },
        "item": {
          "id": "e09adf58-1c59-49d2-93da-a600665da526",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0c8b23bb-a3b2-48a3-a0be-9cd80c8a68a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afebc475-7db0-4135-8d7f-6aec7e99819b",
        "cursor": {
          "ref": "a18999cb-5bc2-4ec2-8e0c-50092ad4689a",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "56daf44d-05b7-4e51-ac86-00f0d149a3b4"
        },
        "item": {
          "id": "afebc475-7db0-4135-8d7f-6aec7e99819b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f1ca3172-17d7-4571-a589-de4e91ef40f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420c6667-9f93-4880-badd-4e25c655a953",
        "cursor": {
          "ref": "4fba16d1-863b-4ea8-840e-144d3e02b4bb",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "935b42f2-ca64-4f33-bb87-f69c8212c1c6"
        },
        "item": {
          "id": "420c6667-9f93-4880-badd-4e25c655a953",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2bdf70dd-a2a6-4599-8658-e4d6c2a51a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c37215b-b75e-4171-b13b-922ce82fbb25",
        "cursor": {
          "ref": "ace17bcb-6dac-4f8f-9e2c-8de71586fd4e",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "8b599382-02f6-4f74-b48d-ed90eedf88f2"
        },
        "item": {
          "id": "1c37215b-b75e-4171-b13b-922ce82fbb25",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4513526f-3a1b-4d29-8ef3-b1f6add3372f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e16fa56a-381f-4c89-b8dc-af5686c7d1ce",
        "cursor": {
          "ref": "2f8a84b5-a74e-4c85-ad0d-d30658cd0cf6",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c71c5718-8b3e-4232-9153-8e163243dbab"
        },
        "item": {
          "id": "e16fa56a-381f-4c89-b8dc-af5686c7d1ce",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "976c4148-e7ec-4d9a-9488-33204d406f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1103c64b-5cc6-40e6-922f-31297f9af602",
        "cursor": {
          "ref": "a1529943-c3b5-4393-bc31-a01b21efb270",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1d0ab647-f333-4ccb-b8b0-c3cbd2af3c30"
        },
        "item": {
          "id": "1103c64b-5cc6-40e6-922f-31297f9af602",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "74dbbfe5-d073-4c64-905f-dafb6c77870b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c686eb8-483a-4b25-8b06-b34cbf7440ae",
        "cursor": {
          "ref": "caf8d713-ae34-4f5c-9fbe-f8956b55cafb",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "039b92fc-e1c9-412e-ab2f-9d438491f158"
        },
        "item": {
          "id": "0c686eb8-483a-4b25-8b06-b34cbf7440ae",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "bd335063-2286-4bd5-8719-08deab8d3d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a058f1-f0a7-4002-a075-8554be0cf1be",
        "cursor": {
          "ref": "22dc95da-5aa1-425d-9e4a-82e4df79e180",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0838dca7-c122-4547-ba39-0adc5e10653a"
        },
        "item": {
          "id": "f5a058f1-f0a7-4002-a075-8554be0cf1be",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8ae97804-6181-45bb-8995-c924bc6e7ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f58ef5-5ad6-4539-aed5-221d96844f34",
        "cursor": {
          "ref": "be16c16a-fff0-4784-862a-7e40e9bfcc5f",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5e3c98e9-36b2-42e7-987b-67aa38c1779d"
        },
        "item": {
          "id": "93f58ef5-5ad6-4539-aed5-221d96844f34",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0b9d6452-eda6-4bb8-9736-256c33a34138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d050a5-a219-43b9-936c-90e1d1dc0c88",
        "cursor": {
          "ref": "107124c6-06a1-4e4d-be18-d7b1b2ac5b7c",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d3e185c1-22eb-4dde-a399-07ff74245745"
        },
        "item": {
          "id": "84d050a5-a219-43b9-936c-90e1d1dc0c88",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "fec45596-bfb2-4245-9892-a71f39ad18f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e97c60-72c2-4577-ac85-7259230dae1f",
        "cursor": {
          "ref": "0084c80f-73cb-43e6-b3d0-55ce5558e2fe",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f1acee5f-f97c-463a-b626-33516168058f"
        },
        "item": {
          "id": "a7e97c60-72c2-4577-ac85-7259230dae1f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "dbcede04-8a26-416e-a054-38c9c574c661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30756c6-8c34-4a90-8482-61ab2e406e88",
        "cursor": {
          "ref": "2a679858-7611-47de-bd35-5cf6caa57036",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f68c476d-a078-4c62-b182-c81c4cfaeea3"
        },
        "item": {
          "id": "f30756c6-8c34-4a90-8482-61ab2e406e88",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1e18b251-d8dc-4df4-ae28-ebbf4ca3e498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627d53eb-3ce4-4413-85b5-a25952dca144",
        "cursor": {
          "ref": "ec101eec-ec78-48b7-b12b-da14cb76c0f9",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f7dbceb3-ed96-4d48-b975-eeb3eaa0a609"
        },
        "item": {
          "id": "627d53eb-3ce4-4413-85b5-a25952dca144",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "255924f7-3956-4234-80e5-13fa6cb1045e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98bb58d8-177b-46de-904e-d4dba9c704d1",
        "cursor": {
          "ref": "6f492f9f-51e2-493a-9111-3c3c76069689",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "76c08dc4-89fa-480e-b5a1-acc03055e942"
        },
        "item": {
          "id": "98bb58d8-177b-46de-904e-d4dba9c704d1",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "bb749cf8-9f21-46b2-8d1d-0ae20680b47d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf8e388-84ff-4a07-ac51-bdbe8ee1f9dd",
        "cursor": {
          "ref": "8c13bca1-6f19-4f69-bd10-ae99c85fb174",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "80ad7a9e-91cd-4ac4-a208-3bf993763f81"
        },
        "item": {
          "id": "9bf8e388-84ff-4a07-ac51-bdbe8ee1f9dd",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "bdc7409c-f657-470c-9d41-3d7dc94294c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0c553c-e2b2-42b5-bd0e-caa3f9e3af77",
        "cursor": {
          "ref": "39eb5fb4-4ba3-4ef7-a85e-7660d8e01b93",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "92b29fbe-c705-4406-8187-2ca2e4a1bc1b"
        },
        "item": {
          "id": "ce0c553c-e2b2-42b5-bd0e-caa3f9e3af77",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a257a659-5510-43e0-bce2-3a1c86045681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a843e14e-ae75-4e62-b86d-e77b2147a699",
        "cursor": {
          "ref": "4fbb9c05-962b-42d2-ad93-ea66d50deda4",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "9cc0d82a-8313-4f43-bd34-97a920adb03f"
        },
        "item": {
          "id": "a843e14e-ae75-4e62-b86d-e77b2147a699",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8c1d60a7-a91e-40c4-ade6-787ac808fd54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cdb0511-9097-414d-b06b-1be369d10eb3",
        "cursor": {
          "ref": "c60ed3ac-c3f3-4109-8f17-d0a6af8ad26f",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "dcd16c34-edc5-4626-8ba8-b877b57e24a8"
        },
        "item": {
          "id": "0cdb0511-9097-414d-b06b-1be369d10eb3",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "dec36ca8-87e0-4adf-b4d8-0c3e09c6665f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0135b73-c7a2-4601-8767-2f17cceb4302",
        "cursor": {
          "ref": "347ac36c-b7d1-42ad-966d-fa8dd2e1b21b",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "047df296-5cca-4209-a4f1-b05efab28fef"
        },
        "item": {
          "id": "c0135b73-c7a2-4601-8767-2f17cceb4302",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "fb95056b-89cc-422a-a818-cbd1525287f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175c3d97-bc46-4b45-9ba4-713254afedb8",
        "cursor": {
          "ref": "8713c4a6-f2fa-4586-b0f8-bdb05355eb65",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "30354bd3-db6a-41ea-bdc8-98336a057c6b"
        },
        "item": {
          "id": "175c3d97-bc46-4b45-9ba4-713254afedb8",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1ffb001f-fcf4-443a-b7e7-d6c34cff7ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7c7ce2-b484-4a5e-8991-aef983a3b5a3",
        "cursor": {
          "ref": "15ee3a98-7f65-4bc9-a78f-408cc1e237c4",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "060ffce1-5a33-4103-bc4a-a4b662da1904"
        },
        "item": {
          "id": "8e7c7ce2-b484-4a5e-8991-aef983a3b5a3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "adef5575-515f-4458-96a5-7218ad10ef19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba899430-1e39-4cec-a1b6-124fae7b05f5",
        "cursor": {
          "ref": "f91d1f81-ca49-424c-ad1f-bc2d51419a73",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "95c3c1e9-2400-4ec2-b688-cc9d8f9d558a"
        },
        "item": {
          "id": "ba899430-1e39-4cec-a1b6-124fae7b05f5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1f3f49a3-8947-450c-b417-bad427a6e83d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f858672a-b23e-4ae8-ada3-8ede1910f0f9",
        "cursor": {
          "ref": "e40ba37c-249b-4f11-b77a-0845940af715",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "be1cf7d7-998d-49c5-b658-95eda3ed0db9"
        },
        "item": {
          "id": "f858672a-b23e-4ae8-ada3-8ede1910f0f9",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "795a22c5-aa57-426d-b0de-3e0aa35731af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bea5a91-b731-4ce9-bf8d-5eab3c343581",
        "cursor": {
          "ref": "4def8960-8d23-41db-8ccf-7f3822ddbc3a",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "01f71043-e60b-4961-86f7-8df36bd6190d"
        },
        "item": {
          "id": "0bea5a91-b731-4ce9-bf8d-5eab3c343581",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e3e32600-8b43-4585-928f-cbfa20b13093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c392d6f-13a2-4f26-a191-d337345eaf61",
        "cursor": {
          "ref": "3836a6f3-745a-4573-995f-49293e359e9d",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ddaa7f8d-f076-4f31-ac55-2ae37701e796"
        },
        "item": {
          "id": "4c392d6f-13a2-4f26-a191-d337345eaf61",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "eaa0c926-4519-486b-b561-3194fd40ef2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310d8bd6-7f44-4c9a-a9a9-77ec66938afc",
        "cursor": {
          "ref": "157832ee-6433-4455-8ef8-af9859aca3d4",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5ab44aef-b0ba-4d8d-b295-9aa0bf0eb1f6"
        },
        "item": {
          "id": "310d8bd6-7f44-4c9a-a9a9-77ec66938afc",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5852d681-7318-4db3-b77d-eddb0fdad8ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bb6762-4dec-4928-953e-074a761873d5",
        "cursor": {
          "ref": "be8ed006-888b-462a-b0b7-387f81c7cfbd",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3e218d35-8440-4244-b4b9-fb043cb32d4b"
        },
        "item": {
          "id": "c2bb6762-4dec-4928-953e-074a761873d5",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "d5093187-0909-489b-a956-57265870d528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "d4893e57-fbc1-41c7-960d-031191461899",
        "cursor": {
          "ref": "bb83493d-d133-475d-9973-ed7807619698",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b57fd9e3-6629-44bc-9184-c72d3d978d8a"
        },
        "item": {
          "id": "d4893e57-fbc1-41c7-960d-031191461899",
          "name": "credentials_issue"
        },
        "response": {
          "id": "dda30bbd-c451-4281-b41a-2262ebaf7a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "451f649e-5f00-4aba-8e24-29aabfbe582f",
        "cursor": {
          "ref": "dac5e5f9-fcb5-41c9-88f6-e654bca2d851",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6926576e-6a7d-4e6e-ac1e-c672a8e7fab0"
        },
        "item": {
          "id": "451f649e-5f00-4aba-8e24-29aabfbe582f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e8cf9b38-cb29-4226-a257-cb19679e8ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "a70413e4-504b-496a-9fb8-c44036b02ae0",
        "cursor": {
          "ref": "4bcc1681-5fca-4db6-abc8-18193bd06abc",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "26eaca52-31d8-4fe3-8297-5ca986715291"
        },
        "item": {
          "id": "a70413e4-504b-496a-9fb8-c44036b02ae0",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ce7722f1-633b-407c-b287-11d82a249cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "1b69f94a-55ea-4fc0-9ad5-273c60bb9b8c",
        "cursor": {
          "ref": "df626a6c-8862-4b8d-8b2f-65b3822d3480",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8854ff80-b9b2-4a33-a777-5bece25f1189"
        },
        "item": {
          "id": "1b69f94a-55ea-4fc0-9ad5-273c60bb9b8c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7daec009-6dda-4650-a0f5-108469de1c10",
          "status": "Created",
          "code": 201,
          "responseTime": 9832,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4a9ebe-ec7b-49ad-a79e-186b6ecc9915",
        "cursor": {
          "ref": "76c6eae3-c64d-4618-8505-175914e58255",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d4a76674-2d5a-4a22-a1b9-e31e22369917"
        },
        "item": {
          "id": "fa4a9ebe-ec7b-49ad-a79e-186b6ecc9915",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "da240bdc-0765-4331-8fb7-222893f6dc74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b2526a9c-6d71-4a46-81d9-535a971ab071",
        "cursor": {
          "ref": "a652f4a7-d658-4d89-a019-fffa4cc10c49",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4d67f438-365c-43c8-8c59-d368d4913af2"
        },
        "item": {
          "id": "b2526a9c-6d71-4a46-81d9-535a971ab071",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a7758ffb-cda8-44bd-baf7-a4428ef10df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "64dd30b1-8a59-4066-abb4-e335df90ec16",
        "cursor": {
          "ref": "ed30b50b-e22d-4649-a767-b5f30a32b586",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9091b91b-4135-43b5-bc77-91053638b2a6"
        },
        "item": {
          "id": "64dd30b1-8a59-4066-abb4-e335df90ec16",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7db3a36a-d787-473a-86d3-14e1a4cf897f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1089,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ae4bf7-b22e-44fa-94f4-e672aa7943d6",
        "cursor": {
          "ref": "d9f601e7-c169-4a4a-95e8-7c741ebc7343",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3e656f60-5d9b-46b3-b442-025b96bb82b2"
        },
        "item": {
          "id": "78ae4bf7-b22e-44fa-94f4-e672aa7943d6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bc348fab-42b6-487b-a362-449bf07f5bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636dd1ec-a5fa-4988-9204-d6c262f322df",
        "cursor": {
          "ref": "9ec9885e-1860-4454-88c2-bdffb94f7cbb",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "98a7633b-9736-4d28-90a6-2e714c2913bf"
        },
        "item": {
          "id": "636dd1ec-a5fa-4988-9204-d6c262f322df",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ace4d200-4ab1-48ae-8f28-00548c43fd77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a31fa8d0-7655-4c62-b8c8-8b6ee39f7cf6",
        "cursor": {
          "ref": "ef181d9c-822d-4bda-9b0c-e5c617ab48e7",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7c022808-7727-41bc-861b-1898944b5024"
        },
        "item": {
          "id": "a31fa8d0-7655-4c62-b8c8-8b6ee39f7cf6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "06379d30-bede-4b1c-976a-070aca279c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c04b23-be2f-445e-984f-25fed3f4fb9b",
        "cursor": {
          "ref": "504d1b5d-cbe9-473d-8624-5e044ff50d13",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0c16c5dc-634a-47a4-8cf6-6f723c27c1fd"
        },
        "item": {
          "id": "38c04b23-be2f-445e-984f-25fed3f4fb9b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c9d4bdd1-59e2-4a31-81dc-fc80460b26b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a35b995-e743-4480-aaae-9217eb087287",
        "cursor": {
          "ref": "acda12a9-48b2-4849-98b9-646ac6fb6def",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "163cfac3-ebb4-4a6c-95f0-67635bce2fd6"
        },
        "item": {
          "id": "4a35b995-e743-4480-aaae-9217eb087287",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e147baea-0775-4730-b90a-df5b883c79d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f642b4c-c9fe-46bf-a10a-77eaa80ec7cc",
        "cursor": {
          "ref": "739f5f7a-75ab-477c-a1ff-ddda34e47d04",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "28110e41-21db-49de-91a5-501fa0429244"
        },
        "item": {
          "id": "6f642b4c-c9fe-46bf-a10a-77eaa80ec7cc",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6e2156b4-33f2-4c5b-ad43-ba724d656350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69389f1-aaeb-4b06-98fa-eeef864368e7",
        "cursor": {
          "ref": "85c7a266-1ee5-419a-90a7-9fdf6d9a3b8f",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ca61c7c5-afcb-4e11-acb7-d87f764765f6"
        },
        "item": {
          "id": "c69389f1-aaeb-4b06-98fa-eeef864368e7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "bc0e2a5f-d2ad-4857-99bc-2590ad75f411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01eb5cd5-c50b-4a1b-b41c-dc9f495f8653",
        "cursor": {
          "ref": "58e0a4f9-fecd-4a75-b1b7-1d502b5aa28a",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b47fba9e-f904-4757-84da-05a3d7beb7f2"
        },
        "item": {
          "id": "01eb5cd5-c50b-4a1b-b41c-dc9f495f8653",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e96f1bcf-2b54-4533-af0a-48446dc75a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6de081-e938-4cc5-af76-83d836f90305",
        "cursor": {
          "ref": "8b70d90d-137d-425b-8248-4c3bcbe7e5a4",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b8f3a388-af0b-4160-b9e1-a9ed269e658a"
        },
        "item": {
          "id": "ef6de081-e938-4cc5-af76-83d836f90305",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e57772dc-3c58-444a-bf95-bcb045d68940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1017ccf5-e5a1-4f59-ad2f-50f47d1251fc",
        "cursor": {
          "ref": "b3eac00c-3427-4540-8049-dc9c3e41023a",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5d36a598-1b6b-482a-8699-49d4faa1d9bb"
        },
        "item": {
          "id": "1017ccf5-e5a1-4f59-ad2f-50f47d1251fc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ef11025b-626a-429c-8d18-bb28c969e44d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176e7344-b86d-4897-80e2-47986d867c78",
        "cursor": {
          "ref": "0cd1dfbc-85e8-4c00-8b06-9891460e26bf",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6c3816ad-4d4a-465a-ac7e-a7d88cde206f"
        },
        "item": {
          "id": "176e7344-b86d-4897-80e2-47986d867c78",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "24829d7d-1a08-490d-9b26-88fa4717241a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5697cbe-a1c5-4893-92b5-422084ce773b",
        "cursor": {
          "ref": "16b27550-40ea-4786-afda-49ee9ae13c91",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5c502d88-5c90-41f2-ab19-87809d85e5d8"
        },
        "item": {
          "id": "a5697cbe-a1c5-4893-92b5-422084ce773b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0a0249d3-8d03-419a-bfa8-8668f31601f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98f7eb9-9b42-4b66-b8a9-dde741666270",
        "cursor": {
          "ref": "f6af927e-8548-4527-9644-7133454c237f",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b9e7b9f9-e042-4405-80ce-0023e5b3fe60"
        },
        "item": {
          "id": "f98f7eb9-9b42-4b66-b8a9-dde741666270",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "19c4d9df-b6b0-450b-a3cc-ad79516b623e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6444cac6-ca24-48a5-ae32-c9eb8e0837b2",
        "cursor": {
          "ref": "ba1a7259-e795-4031-9c03-1c775ffeb374",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a554acf3-64c6-4700-996d-f34c518fcdc0"
        },
        "item": {
          "id": "6444cac6-ca24-48a5-ae32-c9eb8e0837b2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "25d6256e-5b4e-4e66-8c5e-0bc3cd3e1fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7782753-0f17-416d-abda-8f48d1752c97",
        "cursor": {
          "ref": "d2f53f19-62ec-40c0-9304-9fb595d73ae4",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c814fabb-c954-4e54-9e94-448bd3afe87c"
        },
        "item": {
          "id": "c7782753-0f17-416d-abda-8f48d1752c97",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0778c452-6a18-41b8-bcb6-ff0066747dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a035fc57-72e2-46d5-8fb5-bceb5a257d82",
        "cursor": {
          "ref": "2f9a7f64-54a9-440f-a8f6-9eb4cf240fa6",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "091ddaea-796a-4a14-b4d6-5880a026da89"
        },
        "item": {
          "id": "a035fc57-72e2-46d5-8fb5-bceb5a257d82",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b9f8e6f1-5f97-48ab-9cff-59a53f07b6b1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "f34b43a0-270e-43be-8231-e17d23c6bf6f",
        "cursor": {
          "ref": "34383749-78e5-4aa4-b8b5-746f5a91ff95",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "cff81585-b340-4703-90cf-f861e5d12333"
        },
        "item": {
          "id": "f34b43a0-270e-43be-8231-e17d23c6bf6f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7eced3e3-2d47-4c15-a161-106b85e1bda7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8814dff-1a5d-4114-99ae-1fbd948beb7b",
        "cursor": {
          "ref": "3c7ab7fa-27fb-42a8-a784-454c17e7d2b3",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c9f59b2a-9397-42f3-a02c-1c3b358d0707"
        },
        "item": {
          "id": "b8814dff-1a5d-4114-99ae-1fbd948beb7b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b8f4b53d-6b20-4132-8221-092c90122b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b53065b-eda9-4d7a-9951-426de230bf0d",
        "cursor": {
          "ref": "07a67ccc-9c2b-40bc-9904-c3398a7b4f6c",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b41b6bb5-de53-4668-a77f-0d5f6b0c6ae3"
        },
        "item": {
          "id": "1b53065b-eda9-4d7a-9951-426de230bf0d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "02d50a93-b38c-41bc-bef5-69d78954defe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174b711b-9b7e-404f-a141-69e4d346984e",
        "cursor": {
          "ref": "52285200-6383-4532-ad40-74823221f68f",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c126a211-932f-4577-9d07-e606d8a9be06"
        },
        "item": {
          "id": "174b711b-9b7e-404f-a141-69e4d346984e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e50bd0b1-5354-451f-a167-41b8e21c65f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d5c670-2dd8-43f0-ac6d-de44ec698e0b",
        "cursor": {
          "ref": "fc8bc1fc-05a2-452b-bf9d-55a443f452f8",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ca9ebd08-5850-4402-a735-3bbcb293780f"
        },
        "item": {
          "id": "15d5c670-2dd8-43f0-ac6d-de44ec698e0b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "05188eaa-8a0d-4c6d-b91f-d3e25371b6b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e144179b-400f-4c55-93ea-51984cf33721",
        "cursor": {
          "ref": "994ae341-6c32-40f3-b4ee-f31ed21a45f2",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4b5a8b22-5e4b-4d0d-aa7f-27819ade5f94"
        },
        "item": {
          "id": "e144179b-400f-4c55-93ea-51984cf33721",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b98f24ef-4fae-4178-8338-e547b34522b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571da800-043a-4b93-acd2-0b323a6691d4",
        "cursor": {
          "ref": "a2745337-ea58-4d77-bf41-57bd80d22a5f",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d9b701a0-4299-4055-8e54-7342cd08c640"
        },
        "item": {
          "id": "571da800-043a-4b93-acd2-0b323a6691d4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ad0dd56c-e004-4ae6-8576-a167a9524882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a91a73-d33f-427a-aea8-581ea2abdca6",
        "cursor": {
          "ref": "84c92182-fe45-492e-adfd-9ce75c74e5d8",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "78302de2-0840-4981-b639-ef017e598724"
        },
        "item": {
          "id": "b8a91a73-d33f-427a-aea8-581ea2abdca6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "dd45368e-a223-444f-9fd8-c8f76f57effb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "f5d86f68-d568-4ccf-bed3-6a6de5b11ce7",
        "cursor": {
          "ref": "5816ddf2-7bca-4e77-ae0c-5a62fa7cc7aa",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8c252d08-b45f-4e00-b600-b8f3c1f68e6f"
        },
        "item": {
          "id": "f5d86f68-d568-4ccf-bed3-6a6de5b11ce7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a6f46e77-124f-406e-b63e-c0c10e316173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1efbab4e-b92f-4659-baf3-ce2d1336e265",
        "cursor": {
          "ref": "0c7ef2fc-879b-49e9-99f4-5097afc22a1c",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c5ad5f59-0875-415a-ba8f-e020bd3bc11c"
        },
        "item": {
          "id": "1efbab4e-b92f-4659-baf3-ce2d1336e265",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "af1c543c-4bdc-48db-8dcb-26c1c2ad47e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07bf8bc0-926d-4770-9cf9-7fe3bc90e361",
        "cursor": {
          "ref": "7401969c-4c04-4878-9f8a-fac58839f134",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0c3fef7d-f69b-4f00-809f-7f48f00976f7"
        },
        "item": {
          "id": "07bf8bc0-926d-4770-9cf9-7fe3bc90e361",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "74cef550-4f28-4869-ab2b-2c1de7824ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59a21b4-54e7-4961-929f-b52906e40639",
        "cursor": {
          "ref": "b1f57c3e-a3c7-4f8e-bdf6-920a19072748",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "210b577a-aef9-4424-8804-1d67108d40bd"
        },
        "item": {
          "id": "f59a21b4-54e7-4961-929f-b52906e40639",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2c7faf36-59ec-41fa-80ea-d6caba6a345d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14870f41-2c57-4de8-89a7-88e7b8cdfe9a",
        "cursor": {
          "ref": "337c4267-9798-4fb2-8347-3d0589b10591",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5b601748-f9b7-4a0a-9cf4-49f0e56e63ea"
        },
        "item": {
          "id": "14870f41-2c57-4de8-89a7-88e7b8cdfe9a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d101a178-ed67-4283-a97f-69101f4f46bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9b2dca-b025-483a-84ca-3bc00d2f1e34",
        "cursor": {
          "ref": "125ee575-600c-43a0-a9bd-c202085cc223",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "91d23e5a-04ba-481f-940a-935ad93b3251"
        },
        "item": {
          "id": "9d9b2dca-b025-483a-84ca-3bc00d2f1e34",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "53d58ddf-979d-42cc-9eab-3ad44ea63b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c363f65-efa7-4c1c-bee0-f1a2cb70cfeb",
        "cursor": {
          "ref": "04e1101e-e9ec-43ae-abff-409291dadf0a",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c18216f0-57f7-432a-85c0-d424f73b00f7"
        },
        "item": {
          "id": "4c363f65-efa7-4c1c-bee0-f1a2cb70cfeb",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "93a1df16-bf70-4c85-bbbd-a9650f6c5e76",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "27509862-ec12-4b0e-95d8-a2aaabc97f93",
        "cursor": {
          "ref": "c899166c-dd3e-41da-bd0d-c5f4b46be01b",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ba37fb5e-7649-45bc-ad23-7b8d75ad65e8"
        },
        "item": {
          "id": "27509862-ec12-4b0e-95d8-a2aaabc97f93",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "3d696dca-b8ad-4803-a751-7e5aad628867",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "54186bfe-a90b-4cdf-8056-8b529bedde29",
        "cursor": {
          "ref": "ff99cb42-dd3b-473d-bc28-9f89b69e6447",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b911ba6a-484e-4e32-8803-c4e521ce098d"
        },
        "item": {
          "id": "54186bfe-a90b-4cdf-8056-8b529bedde29",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "0dcf174e-6479-4f17-a6d4-02fa6c9a4b7b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 30,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "a4bb9c9e-6823-4746-b3de-0714618e05fd",
        "cursor": {
          "ref": "ee622242-ddff-4404-9924-dcdcac9bff56",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1012a1c5-e4f1-465f-bf6c-edbe2ef22e9f"
        },
        "item": {
          "id": "a4bb9c9e-6823-4746-b3de-0714618e05fd",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ebdde73f-e780-4b9c-8159-726cdfe30876",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "bec4dcd5-3abb-4b6e-bcd7-4ac0c1044571",
        "cursor": {
          "ref": "f7717978-ee96-4b55-8275-2c322aaf164a",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a4d72717-f607-4b70-8d1c-49b2dfa13522"
        },
        "item": {
          "id": "bec4dcd5-3abb-4b6e-bcd7-4ac0c1044571",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0d913241-2a62-4838-a85d-fc06503d9e15",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 32,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "84f1c583-324e-484b-9f2c-eebd7e4aa579",
        "cursor": {
          "ref": "38918e80-fe18-417f-86a9-38d7ef072df1",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a178159b-185f-4a9d-b384-b994cfa8f267"
        },
        "item": {
          "id": "84f1c583-324e-484b-9f2c-eebd7e4aa579",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "7ae7ebd4-545a-45d4-9125-2ba971002816",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "8dfcacb0-34a4-4e57-a81d-257f41442372",
        "cursor": {
          "ref": "d7996dc8-b5f4-4712-9284-cbe41b463943",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "02319e67-4a03-4029-b5de-60609c48dc32"
        },
        "item": {
          "id": "8dfcacb0-34a4-4e57-a81d-257f41442372",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f2b60477-4958-4a50-b377-7d8c25df795c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 18,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "884728e8-5724-4c00-9b24-61bd7fd9ac80",
        "cursor": {
          "ref": "214809e7-5f12-4940-b5fb-22a5bc40064e",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "9daadfd1-35af-41e9-91a8-743eacd0c524"
        },
        "item": {
          "id": "884728e8-5724-4c00-9b24-61bd7fd9ac80",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "895cfa35-27f7-4a9f-85bf-8a0dafc3d4ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b97d88-160e-4d0a-bdd3-87b2994fc3ea",
        "cursor": {
          "ref": "cd94968b-06ba-43b7-9c7e-bbfde0adbad7",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2d6a782c-01cb-40a5-9709-0c430d1bccf9"
        },
        "item": {
          "id": "97b97d88-160e-4d0a-bdd3-87b2994fc3ea",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "34cd9f73-e40d-40c2-a2b4-25c81663800d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9c9e9e-f47e-471d-9841-cef4b37cdb9c",
        "cursor": {
          "ref": "02c916bd-7524-405a-b0d2-47548fa0bfa1",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "bcfb0680-f9b2-48bb-be59-cb22cb1e39bc"
        },
        "item": {
          "id": "be9c9e9e-f47e-471d-9841-cef4b37cdb9c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "98f8cee9-263c-437d-b79a-cacd5d1e964c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ec0af8-ac5a-425d-8d3f-caed64644d39",
        "cursor": {
          "ref": "fd1beb16-c255-4096-aceb-e0c16a81a7d4",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "2d601f19-23af-4e98-80b6-db67670aec0e"
        },
        "item": {
          "id": "e6ec0af8-ac5a-425d-8d3f-caed64644d39",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c073707b-1f60-4bc5-9b8b-0e1459d53920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe2a4ed-cc84-4aa2-8db0-1eec0de1749c",
        "cursor": {
          "ref": "3c09c41b-ab13-4518-af2b-ff1927c8f07d",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2845f067-63bd-49e6-b92a-328412b7c42a"
        },
        "item": {
          "id": "8fe2a4ed-cc84-4aa2-8db0-1eec0de1749c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8d1b6182-e413-46fc-b18b-cf01940b756b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fdb1682-613a-4955-a1f3-e7775e1529e5",
        "cursor": {
          "ref": "b25ab297-1ea8-46b7-a23f-be5a0c5645f7",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2182f607-7ba2-44e4-be64-bb7f13a09653"
        },
        "item": {
          "id": "9fdb1682-613a-4955-a1f3-e7775e1529e5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b5e33706-46dd-4883-8609-8fc140919711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3596dd5a-6fb8-474f-9e88-1c38371f749f",
        "cursor": {
          "ref": "9184f322-f28b-469c-8305-24d52a762938",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3a9e573e-206e-41f2-b822-ef96858467cd"
        },
        "item": {
          "id": "3596dd5a-6fb8-474f-9e88-1c38371f749f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e5fcae56-e2c1-442e-afb8-258f584c2200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50209b7-852a-4d10-b6af-73d87dcaa8d8",
        "cursor": {
          "ref": "1bb2a7d7-8c2b-4179-9077-d0106cf90733",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5cf5875e-f6e3-4936-9fcc-c4ba49d9a7c4"
        },
        "item": {
          "id": "f50209b7-852a-4d10-b6af-73d87dcaa8d8",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8e1227dc-c65b-4e52-bc76-bbb8887c7d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4655b57d-8d9c-45a8-bb69-6c5489799b33",
        "cursor": {
          "ref": "2cfd3b1c-574d-4ffd-b138-cccee57488c4",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "447e6ed0-79cd-445d-af22-860edb2dc90d"
        },
        "item": {
          "id": "4655b57d-8d9c-45a8-bb69-6c5489799b33",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5a7e4b2f-b502-49fa-87fc-5c10dcf15c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81588b8d-99a7-42b0-82b9-563cc67c1bec",
        "cursor": {
          "ref": "f7ff1921-7a40-445d-b518-0425c55fed83",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f3144299-d7ec-4c5a-bcfd-9fdec4ce4bf0"
        },
        "item": {
          "id": "81588b8d-99a7-42b0-82b9-563cc67c1bec",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f2034078-7ecf-4292-8202-ba0312726652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ea88d1-4b7d-4957-9edb-ae56a2c020f2",
        "cursor": {
          "ref": "156a9a0f-faf1-40ce-8d55-9c799be99206",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2dd84dff-c4a6-4b7e-9fa9-91e1984e3cd2"
        },
        "item": {
          "id": "c2ea88d1-4b7d-4957-9edb-ae56a2c020f2",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "90449192-9438-429c-ac35-181ace4705f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e82db77-2643-4fc7-9173-bb7836b73548",
        "cursor": {
          "ref": "7b706bd7-de0c-4083-afc7-27d4b75c6351",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b44de322-9987-466b-aa25-02566ff41cbb"
        },
        "item": {
          "id": "8e82db77-2643-4fc7-9173-bb7836b73548",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "dc2ba9b2-76fc-42d8-a553-5ef16d9b5a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48fb5c12-f301-4b91-aa21-6795491a05d1",
        "cursor": {
          "ref": "5a57e175-fcd2-4339-9a17-3a54ac215c32",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5ca1cc33-da30-4ffc-9e84-f4fa94c3e10f"
        },
        "item": {
          "id": "48fb5c12-f301-4b91-aa21-6795491a05d1",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "34762eb7-529d-4bf6-a993-b4786964cbfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7196942d-4132-446a-81b4-62f420b911c5",
        "cursor": {
          "ref": "ec8762e1-8b1d-4077-a2c8-3ef0e2ff40ba",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8334acfd-cc03-483b-8f6a-6f4d2af8103c"
        },
        "item": {
          "id": "7196942d-4132-446a-81b4-62f420b911c5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5b0f8380-131c-47da-afc5-24641314f603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df287f4-c102-497f-a41f-7664306255e5",
        "cursor": {
          "ref": "102fd734-1944-472a-a7c7-a04697071604",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7aa4af1d-8075-4757-80e8-c4ec450fd3a4"
        },
        "item": {
          "id": "6df287f4-c102-497f-a41f-7664306255e5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6bb36d71-1ccf-499f-b9ff-9005997220b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08711bc9-4550-49df-adb1-4e9f8489198e",
        "cursor": {
          "ref": "da069a84-a1e5-47b0-9b78-c7a7c9f9409f",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "29902b87-f682-4c68-a17a-ab5711d2f5e3"
        },
        "item": {
          "id": "08711bc9-4550-49df-adb1-4e9f8489198e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3622171f-8f62-4914-b713-c50485aec99b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f66684f-78c2-4348-ab61-471f3c1d2e02",
        "cursor": {
          "ref": "152008b8-3c2a-4723-a6cd-fa5193550005",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "99401439-7cfe-4d47-8bf1-ea22a9bbd8e9"
        },
        "item": {
          "id": "4f66684f-78c2-4348-ab61-471f3c1d2e02",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3014159c-9415-43e4-bfdf-0cc720419eb4",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "52b9362f-d487-46ce-a711-5a885f860502",
        "cursor": {
          "ref": "d69af93d-3491-4443-ab14-c0b0530dc808",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "295c5a63-54c1-4947-9880-707202d1b494"
        },
        "item": {
          "id": "52b9362f-d487-46ce-a711-5a885f860502",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b38125ec-a091-480a-b0e4-9da3c411c98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9567fb36-2209-4cf4-98ed-386a6129b62e",
        "cursor": {
          "ref": "f93a4680-ac26-4b8b-abe8-e0141db41658",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c0a64bfe-f93d-4429-a765-0abdd619f18b"
        },
        "item": {
          "id": "9567fb36-2209-4cf4-98ed-386a6129b62e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "198e238a-3c48-42b0-af8a-dad0065bb9d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2aaabd8-77f7-49f7-b8ea-303898416f55",
        "cursor": {
          "ref": "7f980dc5-7e2a-411b-9726-9dc03fb3f310",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "33617f3d-f8c2-416d-a63f-0cc6715ee515"
        },
        "item": {
          "id": "a2aaabd8-77f7-49f7-b8ea-303898416f55",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "df83c8a1-039f-4a02-9be0-b39b0254482e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507a3cee-8d32-4020-80e6-10b4c16a809d",
        "cursor": {
          "ref": "43154110-0fe9-4399-b1d8-4ad7eaa9317c",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5554a205-7358-48de-ac71-96b73d961094"
        },
        "item": {
          "id": "507a3cee-8d32-4020-80e6-10b4c16a809d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "cc3c576a-133d-46aa-a999-d0c35984c994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c546da6-a518-42fb-be4f-973b6d28d814",
        "cursor": {
          "ref": "56d1fdb0-913f-4dfa-8c0c-7c6a8b567655",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "22c7d8a2-8dc4-4294-ac67-f5ada31ee9a1"
        },
        "item": {
          "id": "7c546da6-a518-42fb-be4f-973b6d28d814",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b9e93421-17b3-4e07-a977-a3457a798978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f11ba3-e73a-4f7c-995d-cfb4302e8f46",
        "cursor": {
          "ref": "8ffedf0e-3d46-4c05-ba41-f875ea65e0f7",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "baabea3e-e140-48fa-8f38-a90b1e84ad9e"
        },
        "item": {
          "id": "f1f11ba3-e73a-4f7c-995d-cfb4302e8f46",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "46c65a37-e804-4924-a806-95b44eb2bfa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cee94a-ec71-48ad-aa61-1f79df8d7405",
        "cursor": {
          "ref": "e8eb00bc-c67f-436d-bc29-fb87fc8037ad",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "70998c9c-e490-419a-8b98-b2aeca2d23f3"
        },
        "item": {
          "id": "78cee94a-ec71-48ad-aa61-1f79df8d7405",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "165589df-a79e-44f3-b74f-dfef0d7a554a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9eb96c2-739c-426c-8071-ed25425d7778",
        "cursor": {
          "ref": "ecb69ca8-f052-4f6c-811e-ca1ba8e3a1d8",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3048e49e-be26-4188-96d3-0872897549b1"
        },
        "item": {
          "id": "f9eb96c2-739c-426c-8071-ed25425d7778",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "94369b29-8100-4b91-97b2-b976d0d65c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5588af-cb1b-4f8d-b0a3-f3713173b1ea",
        "cursor": {
          "ref": "db02abeb-cb87-4c70-a57d-bb58e8503790",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "61d568b0-4584-4b0e-9b4b-ed5cf8599368"
        },
        "item": {
          "id": "6d5588af-cb1b-4f8d-b0a3-f3713173b1ea",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ff85efb5-b605-4296-9d40-624267f7f74a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37263395-0472-4d48-ad88-1ca48c8ffcc9",
        "cursor": {
          "ref": "6799fd0e-24e1-4ab3-a368-10c15e9da068",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "68e1ebc4-cf37-432d-ab53-90bd0e12c1e1"
        },
        "item": {
          "id": "37263395-0472-4d48-ad88-1ca48c8ffcc9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f9e5d68e-7da8-4d2f-8d38-0fabdfe5b7d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac513c2-a62b-4d19-a72e-d682e648e987",
        "cursor": {
          "ref": "5c86526f-1e7b-46e3-883b-0a26c6363e3e",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c1ccc401-71ab-4a48-8050-0273b935eeb4"
        },
        "item": {
          "id": "7ac513c2-a62b-4d19-a72e-d682e648e987",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "86b6b8ab-9bb6-47d8-a418-f092fd1aa0e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005cbcae-34b9-40bf-a153-143938f18d12",
        "cursor": {
          "ref": "25f6776f-7bcc-4f13-b08b-e44c9746844b",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "39838276-28b4-4c8d-a1e0-a7163669e3be"
        },
        "item": {
          "id": "005cbcae-34b9-40bf-a153-143938f18d12",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f365505c-f221-4351-a5d3-c8bb0152c095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9278aee5-4b92-459c-8468-072438dc3a72",
        "cursor": {
          "ref": "e677fe56-9975-43bd-b12d-15475f5f37a3",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7f06d81d-41b4-4f88-b352-be71a7b1c355"
        },
        "item": {
          "id": "9278aee5-4b92-459c-8468-072438dc3a72",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0417db2d-fe13-4a55-b739-50a7b6aab5de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f117f2-8831-4e08-88cc-61b3cadb9cef",
        "cursor": {
          "ref": "a76b729a-cabd-4880-aba0-f6d5245dabcf",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c02ac04a-77fb-40ed-99ac-df198b9b1408"
        },
        "item": {
          "id": "52f117f2-8831-4e08-88cc-61b3cadb9cef",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "dbee0a27-f42f-4db4-bb4d-004e134afe56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484d84b8-ee8d-42cc-989d-c24640436468",
        "cursor": {
          "ref": "6d43589c-7c40-410e-aa19-4816ee32ba56",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "506a103a-89da-4d0e-b56a-26279773b9e7"
        },
        "item": {
          "id": "484d84b8-ee8d-42cc-989d-c24640436468",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ddcb7bff-206a-47c5-b893-ec4e3a415cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb60a33-ad4b-4544-88e6-5ab2fe076f84",
        "cursor": {
          "ref": "9403271c-265b-44c3-8bc6-21daf6ed6f9e",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b554e461-2a53-44a1-827e-4e28f940afbe"
        },
        "item": {
          "id": "6cb60a33-ad4b-4544-88e6-5ab2fe076f84",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3517b24e-1a35-45be-9c69-710d59c915fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8af335-2f54-43bf-8eda-b8b2f90da892",
        "cursor": {
          "ref": "81ce996a-0800-40ff-a493-138271c53567",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "02eb56c7-c223-4039-a8cd-6d1eddd2819f"
        },
        "item": {
          "id": "fb8af335-2f54-43bf-8eda-b8b2f90da892",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "91f8e4f6-19a5-4c1c-b358-64caa5326540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb2e112-5aa1-4d50-bafd-77cd14fffcbd",
        "cursor": {
          "ref": "c6a23905-b15d-461b-95e1-0d147b280c4f",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c946a54d-d715-49cc-8b0c-18a606e9f19d"
        },
        "item": {
          "id": "1cb2e112-5aa1-4d50-bafd-77cd14fffcbd",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0bf036fe-1c07-4cb8-aabd-a734d2951ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6dcdd3-6693-4833-be1b-afed8f887779",
        "cursor": {
          "ref": "4fbeffd7-67c3-47ab-a8df-a51d510add32",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0ae6b60e-6e33-4d80-bb9b-97793fa40e81"
        },
        "item": {
          "id": "af6dcdd3-6693-4833-be1b-afed8f887779",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "75989b6f-eff1-48f4-8805-7ab7d8cd682f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f90dcc-4304-4780-80d0-496aa7f6fb51",
        "cursor": {
          "ref": "0094c242-627b-4015-83f7-a6392c9be5a0",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b47d0e77-2c19-42af-9669-7bcb0d80d57f"
        },
        "item": {
          "id": "23f90dcc-4304-4780-80d0-496aa7f6fb51",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "36f73c61-2506-4487-870f-2704464f27c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dead2a4-9e04-4ba7-8cc6-dfe6ef8e8e75",
        "cursor": {
          "ref": "c73e4a03-5281-4203-a0f5-2fa701639d52",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d5680b9c-d55d-4855-ab40-4c03e19d9da8"
        },
        "item": {
          "id": "5dead2a4-9e04-4ba7-8cc6-dfe6ef8e8e75",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "201c9ad7-e416-45fe-915e-77a9d01b75e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98cf1ae-069b-485b-be84-e64d4fef8611",
        "cursor": {
          "ref": "5e7a6a12-b5ad-45c3-99f1-a27be1ed4a03",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8030e80c-9195-493e-a9cd-e1ac2e2a8f17"
        },
        "item": {
          "id": "b98cf1ae-069b-485b-be84-e64d4fef8611",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1fb87945-9fa6-402c-a2b8-7c99490242e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9805f80-b7cb-4ade-8fc4-569f008a5374",
        "cursor": {
          "ref": "dbc3e1da-0376-4700-8ce4-8718b96cc77b",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c5035a27-6cf8-402d-91b4-254b01b4b909"
        },
        "item": {
          "id": "e9805f80-b7cb-4ade-8fc4-569f008a5374",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4f02f12b-a1e7-4f8e-9017-b666b2464f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf07d17-6553-4d29-ac4a-a57faecaaea9",
        "cursor": {
          "ref": "14ad3517-cded-46dd-bfaf-58b1820caf4e",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "97f378ec-e633-43c6-8e82-6810fca812ed"
        },
        "item": {
          "id": "5bf07d17-6553-4d29-ac4a-a57faecaaea9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "73337e73-3ab8-4f76-ad39-63fd1756b42c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfade335-f489-4522-a0a8-1f3b5f56f4d5",
        "cursor": {
          "ref": "204ea3f5-0758-4abb-b8d5-41387836e339",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c731bd8b-113f-43fc-9a19-324c7e863615"
        },
        "item": {
          "id": "dfade335-f489-4522-a0a8-1f3b5f56f4d5",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "00b67293-fa66-425e-a7b3-fc53b65ef7b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8242f6c8-63c9-4b53-8898-f8db49afeae5",
        "cursor": {
          "ref": "94361430-6549-4865-823a-c310c37a3541",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a12a0098-c455-4dcd-a0f1-fbb329997075"
        },
        "item": {
          "id": "8242f6c8-63c9-4b53-8898-f8db49afeae5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b4ed99c4-3455-418c-9227-fc7e4979091a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9771865c-069f-47cb-b21e-f9a37a04fb72",
        "cursor": {
          "ref": "7e9fd058-9539-4276-b2a8-821a251aa1c1",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "959dceb7-8c69-4825-998b-66687236c7bb"
        },
        "item": {
          "id": "9771865c-069f-47cb-b21e-f9a37a04fb72",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "82296db7-b99b-4429-a309-4e72dc96feb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9f2d36-113b-445c-b70b-6214c93c4408",
        "cursor": {
          "ref": "c52dc688-ed96-459d-b543-d49ce1712bbf",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "86ffd400-b283-433c-b018-3be77d7271b4"
        },
        "item": {
          "id": "5d9f2d36-113b-445c-b70b-6214c93c4408",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "704e2f62-b286-40a6-8a6b-2f8dab1f4d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8ec1eb-707c-4a22-86ba-5ea8cd0ddcb6",
        "cursor": {
          "ref": "0df10e35-dacc-4b9d-834b-3f2e5938a1d8",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ac4f67c3-c670-4bea-a7f7-2ae92ac85fe6"
        },
        "item": {
          "id": "1b8ec1eb-707c-4a22-86ba-5ea8cd0ddcb6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "fb7203df-9a18-45a5-a20a-ffa2e178b0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cbd1574-1b81-4209-9179-5e02e5567a3c",
        "cursor": {
          "ref": "c8fca4c4-c2e0-4496-a47b-0f0a1c6a43e8",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1f65a53d-3e17-490d-b82d-90efbfe4097d"
        },
        "item": {
          "id": "2cbd1574-1b81-4209-9179-5e02e5567a3c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "672d94b0-2078-4fdf-98c4-77b4aea6635f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b54a77-b6eb-4e05-acef-813a843ccef2",
        "cursor": {
          "ref": "cdf0ef65-77b5-48ff-aaee-7ef67de09ab0",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ed7a6671-75af-41c3-afd5-944bbafd6cd6"
        },
        "item": {
          "id": "f7b54a77-b6eb-4e05-acef-813a843ccef2",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ae8d317a-9b93-4967-9957-5a5f8d962085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f30ebd-cedf-4e36-88a0-dce8d5c03ce2",
        "cursor": {
          "ref": "053fe750-2591-4499-9e34-0c43eecf97d6",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fed2b71e-e245-4410-b549-b1146704c90c"
        },
        "item": {
          "id": "67f30ebd-cedf-4e36-88a0-dce8d5c03ce2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "9ceea3f1-6c92-4c2a-912a-f400380cbd3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9e29cd-1907-4f8b-a6bd-29f91154d95f",
        "cursor": {
          "ref": "cfa7176a-d72d-47da-9b44-fc2b79ad6e59",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8b51b94f-c285-402a-8016-ea4c48691ce9"
        },
        "item": {
          "id": "1d9e29cd-1907-4f8b-a6bd-29f91154d95f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2bf59b69-a597-4729-925d-4fbce0894a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7b1814-c421-449a-8711-fcc0748b14f4",
        "cursor": {
          "ref": "a1579c7b-2c37-43ec-9889-e8998d892e5f",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ba99f92e-729c-4bc4-8be1-5742124aeeb5"
        },
        "item": {
          "id": "cf7b1814-c421-449a-8711-fcc0748b14f4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6ab194d9-5c66-41d0-9cbb-4e11174d5a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a2863f-8c3e-48df-bf21-461ba2b15e9a",
        "cursor": {
          "ref": "a213087f-6bde-420f-8fb5-aa26a59e4f3e",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e3b97784-9cce-4eb0-8e95-a1589d788148"
        },
        "item": {
          "id": "f7a2863f-8c3e-48df-bf21-461ba2b15e9a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e4306cac-263b-43c3-9c1d-f87a4093e2f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e68fbc5-810f-4f9e-89a4-a87fb3560afb",
        "cursor": {
          "ref": "9cbf18d1-1d81-4992-b011-4258d5f62851",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e7f9826e-e6f8-4045-9f84-1a6196188b48"
        },
        "item": {
          "id": "6e68fbc5-810f-4f9e-89a4-a87fb3560afb",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "dfe90fc0-bad2-4036-b5ba-e0638cba62ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2391d332-cb37-41e7-8084-3e569a291373",
        "cursor": {
          "ref": "324ce71b-6adc-43a4-a50a-85cf4469c857",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "fe9c1473-fb74-4dc9-880a-c7b546873940"
        },
        "item": {
          "id": "2391d332-cb37-41e7-8084-3e569a291373",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "979aad72-1446-4e16-8907-91b39e48bdff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e476b6-589a-4453-9621-65fe7d3c05db",
        "cursor": {
          "ref": "f9bf3465-f016-4f61-a25e-120092fc632a",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8c0814a5-9c1a-4b82-a62a-fd97ac9d68a7"
        },
        "item": {
          "id": "12e476b6-589a-4453-9621-65fe7d3c05db",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c0646f6f-5329-48fc-9c54-5ecd1efa9552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5493d38d-ae9a-4a69-a46d-4ffa9b240d75",
        "cursor": {
          "ref": "3c8a34ab-2b7d-4b02-880f-0d052461fb15",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "fee8f8cc-4a5e-413c-ab93-d111409e80f5"
        },
        "item": {
          "id": "5493d38d-ae9a-4a69-a46d-4ffa9b240d75",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "96387df1-a13a-4e4d-ab3e-09c49ddddcd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070e22d6-2f9d-419a-a6b3-6de21df87179",
        "cursor": {
          "ref": "3b7a3394-4afe-4d3e-8aed-84a19ca666e0",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "784d6808-58e8-47bb-9c16-6fb0e8212885"
        },
        "item": {
          "id": "070e22d6-2f9d-419a-a6b3-6de21df87179",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c86b6b2a-aa95-4ab3-a90b-4764d2233a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29395985-08ad-4830-a9cc-841d46ae6ca4",
        "cursor": {
          "ref": "251d4d1d-fcdb-4b21-bce0-207040e46077",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "357b7c43-6999-47cb-b7d8-0ad57c86de1a"
        },
        "item": {
          "id": "29395985-08ad-4830-a9cc-841d46ae6ca4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a2706192-53eb-4f6b-b975-a09c0ee7def2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5822fff-77d3-489a-8173-91edd049bd88",
        "cursor": {
          "ref": "3a420b99-4511-4ace-8fd3-1a2b152726dc",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "cb7048d5-ea37-41ea-beac-924ec9c1523a"
        },
        "item": {
          "id": "c5822fff-77d3-489a-8173-91edd049bd88",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9c829f68-4ddb-4136-9ebd-ac1b0a70306d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72f7e4f-2493-4c3f-adb3-adc51da8b4c6",
        "cursor": {
          "ref": "56d0fd65-e704-4fa1-a2e8-c68b9a68660e",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "79fab898-f192-4a05-b9d3-48b1d0a015f6"
        },
        "item": {
          "id": "d72f7e4f-2493-4c3f-adb3-adc51da8b4c6",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c5ec9866-d0a4-4967-be79-9672142fd9e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e247636b-8c4e-4bc0-8a1e-8c98bc79bcb4",
        "cursor": {
          "ref": "57cead94-b30c-4ea3-b46c-a72a54182d81",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3f923b0d-7fb8-4194-98b9-5146b7dbf486"
        },
        "item": {
          "id": "e247636b-8c4e-4bc0-8a1e-8c98bc79bcb4",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "980f9f1c-2f72-4c36-b0fe-e0aff01f5eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320733e3-a53c-420b-bfed-0056e0d5e93d",
        "cursor": {
          "ref": "d6fb0659-d7ed-4696-b407-adc004145696",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6823c282-697a-4b54-967c-09caf8cce6a6"
        },
        "item": {
          "id": "320733e3-a53c-420b-bfed-0056e0d5e93d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b8e03747-3bde-4042-b6a2-362340621f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5dd836-825d-4d4f-93ec-59ba75471a0a",
        "cursor": {
          "ref": "7beb9d36-79fb-4c4c-a70c-b68a0e597a3b",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "421c18e6-2928-4196-9d14-2e6dd1faa5e4"
        },
        "item": {
          "id": "ec5dd836-825d-4d4f-93ec-59ba75471a0a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9a978d8b-2d8b-4135-9bc4-4ea9ade9259d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035eff73-a68d-426d-bcc0-c158b0622edf",
        "cursor": {
          "ref": "ec43e170-d72e-4f1b-9358-9e7dc1888b98",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3a380abd-ae0b-486a-897b-03e6f209b5ef"
        },
        "item": {
          "id": "035eff73-a68d-426d-bcc0-c158b0622edf",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "06c0c1f7-4728-414a-836c-23eae40ef87a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8affce3b-3473-447b-8f8b-c8aef27c2ba5",
        "cursor": {
          "ref": "9b3f9801-1cd1-445e-b9a4-2ac5d8a6a4ad",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "843a6288-97a1-4eed-abb4-eb168edaf764"
        },
        "item": {
          "id": "8affce3b-3473-447b-8f8b-c8aef27c2ba5",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6f6b1943-06e7-4c41-81bc-6ac4f3117b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23145e0c-55d1-4f3d-93fe-78f689f7100e",
        "cursor": {
          "ref": "291bcdc5-73f6-4b9c-bcb3-08c65da1ed4a",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "84d6ceb0-eaf2-47f5-b771-625b5e8d7796"
        },
        "item": {
          "id": "23145e0c-55d1-4f3d-93fe-78f689f7100e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7d2b0f8a-2ecc-4edb-829f-5c45f8004673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d385b7-ebd5-4e72-8b87-ef3083a2aa67",
        "cursor": {
          "ref": "98558420-efd8-40e9-9eb2-432f55e00abd",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "26d71ff7-ab2b-4fe4-a485-8bb335004683"
        },
        "item": {
          "id": "79d385b7-ebd5-4e72-8b87-ef3083a2aa67",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c134b5a3-d449-4635-9c37-b8dc8ad0ac0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0227f692-4b4e-4cd3-904b-d44dcec871a0",
        "cursor": {
          "ref": "a8a3afe3-24bd-4296-8235-4df7be306078",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "28a2f4d8-c4bd-4824-a1c2-827ce3f4b703"
        },
        "item": {
          "id": "0227f692-4b4e-4cd3-904b-d44dcec871a0",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "11933205-ca4a-4047-bf5b-86cc39437f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf76789f-2cd9-4b0d-8606-e24251ca647e",
        "cursor": {
          "ref": "38d9d2d8-d116-4d14-822f-21971172cd4d",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "68d7e661-49f5-494a-8652-2066988636a1"
        },
        "item": {
          "id": "cf76789f-2cd9-4b0d-8606-e24251ca647e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e95de6d9-861b-418d-9993-04d776df52b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927d9e06-3232-4de0-9d2b-2d491fbaed43",
        "cursor": {
          "ref": "195b2288-fbf0-4aed-862c-b27787b39250",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "59db4b61-05f7-4631-b7b0-2fcd87f2c8c3"
        },
        "item": {
          "id": "927d9e06-3232-4de0-9d2b-2d491fbaed43",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "272c57dc-d439-4faf-8cb3-732334be117b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76734671-ee6d-4884-b322-3cb96df556d0",
        "cursor": {
          "ref": "9586e2ac-ca99-4ad8-95db-c627f890cfad",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "57df2002-5725-4f9f-87ff-a4f3bf80644d"
        },
        "item": {
          "id": "76734671-ee6d-4884-b322-3cb96df556d0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3b66e699-d8de-432d-9d67-6435d755a9c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944761ce-96aa-468f-b9ad-ca031068bde2",
        "cursor": {
          "ref": "36c04e93-5658-44d5-bc40-ec04794c63c4",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7ed9c3cf-83ad-46fc-9466-806b71267ff4"
        },
        "item": {
          "id": "944761ce-96aa-468f-b9ad-ca031068bde2",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3d31b7d9-b2e7-456d-b295-ad66d5272165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326e58be-86da-42f5-84d3-171e90334025",
        "cursor": {
          "ref": "2c28b690-3a7a-4424-a9b4-5cf6044f9866",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ed5fc70e-fd00-4f9e-9878-3e9cc96b334a"
        },
        "item": {
          "id": "326e58be-86da-42f5-84d3-171e90334025",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d9dd2b6f-c8f7-481e-9bbb-1547016b20f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3314e6c4-c843-42e3-b43a-f814adada0c1",
        "cursor": {
          "ref": "c4e81a64-f37f-47a1-8b45-d84107796fab",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "fb4759a6-ee88-48e7-8704-230a364acef5"
        },
        "item": {
          "id": "3314e6c4-c843-42e3-b43a-f814adada0c1",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "27dfdbb3-96dd-46f4-ab4e-a11cfe0afcf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee03198-cc56-46d4-be06-f718ddb6b36d",
        "cursor": {
          "ref": "02f3e1e5-fdcc-436b-8dec-9a5587376496",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8d9ade5c-3d72-4377-858c-756374c6f558"
        },
        "item": {
          "id": "6ee03198-cc56-46d4-be06-f718ddb6b36d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4b96c6d3-10d1-4bf5-93b9-8199aaa0675f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00883dc-8869-40d5-b047-d1e9ca7c37fb",
        "cursor": {
          "ref": "25ea15f0-fc2c-425e-b42e-54cb90bf2d66",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ec3f824c-071c-440e-afb5-bbfdfb50d94b"
        },
        "item": {
          "id": "a00883dc-8869-40d5-b047-d1e9ca7c37fb",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a372bf89-7703-4209-9d2b-248eeb66377a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b65847-87cb-461d-8aa2-95602a6cacf3",
        "cursor": {
          "ref": "4b326bfe-917b-497e-99b3-a1f98c4e987e",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "649bc2d9-4aaf-4f18-bb70-4b02cd743ab3"
        },
        "item": {
          "id": "88b65847-87cb-461d-8aa2-95602a6cacf3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "46ae06ed-1bb9-4ead-b2e2-71642b84d007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78bd3590-1657-41d6-9735-43af70a612c5",
        "cursor": {
          "ref": "f5daab7e-68fc-4a0b-bad6-e5ea3312089a",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "26ffe722-b3f4-403d-9d41-edeeaf6fef85"
        },
        "item": {
          "id": "78bd3590-1657-41d6-9735-43af70a612c5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "281de381-b5c6-4e66-8801-27ad5b71cb17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3566bcb5-2d6f-4243-be45-475b9ff63f07",
        "cursor": {
          "ref": "dbb601dd-7dce-43a0-9776-6553360a8f68",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f085084a-e2ac-4486-a747-9806c58ca4ff"
        },
        "item": {
          "id": "3566bcb5-2d6f-4243-be45-475b9ff63f07",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6e199d6c-c91c-4fba-892f-2581b540356a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f79b46-d3af-495d-9970-d0668167e99b",
        "cursor": {
          "ref": "b9d846b8-d961-4176-b3cb-01812bb3cf9d",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0ee249de-a9cd-4293-9b3c-8569cc02831f"
        },
        "item": {
          "id": "43f79b46-d3af-495d-9970-d0668167e99b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "648de362-47fe-4e50-9d82-4f97965ed182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "136beb9c-0d56-4086-a06b-d8f36ed47329",
        "cursor": {
          "ref": "cf94dff8-d94d-4c06-8894-f3e7ccdfe279",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1b138d4c-7117-406c-8c1f-9b4cbd177d90"
        },
        "item": {
          "id": "136beb9c-0d56-4086-a06b-d8f36ed47329",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3a6c7a51-5416-4a47-abb0-fc5e3f5b254d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec6b99ab-2ba5-435f-865b-7537daf74e64",
        "cursor": {
          "ref": "b4740ec7-2002-4467-8f99-3f823a89756f",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c58a438d-b20e-4cde-93a8-8d2f5e2698f4"
        },
        "item": {
          "id": "ec6b99ab-2ba5-435f-865b-7537daf74e64",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1acbc589-d45e-4ee4-a2b0-8e072583bdf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ad92d2-b1c6-457e-9227-57c5d1eb22cb",
        "cursor": {
          "ref": "24100660-8bf7-4b2f-95c8-7fa61f89afa1",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8210508f-b52d-4d4f-8d7c-9644bb304a88"
        },
        "item": {
          "id": "56ad92d2-b1c6-457e-9227-57c5d1eb22cb",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a8e94d44-a632-45b0-b743-5c50e0ce5396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5795f723-9962-431b-8889-80fa9643d50f",
        "cursor": {
          "ref": "cf8281a2-e059-4739-9427-8a96ded48b90",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "dd0279c4-d1d4-4bfc-9b62-048fbdc870bc"
        },
        "item": {
          "id": "5795f723-9962-431b-8889-80fa9643d50f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e92cd359-f77b-4509-a160-279232d7d8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf5a1d2-5de3-4af0-be18-70dccd866de3",
        "cursor": {
          "ref": "1cc976ab-d7d8-4743-a972-4344fbf6669c",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "680fa47c-5d93-498c-8628-cfb3254172da"
        },
        "item": {
          "id": "bdf5a1d2-5de3-4af0-be18-70dccd866de3",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "17ad7189-56f7-4d7b-bfc2-84ed3375c45a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd6af6c-9717-47d8-8628-1b248fef9c74",
        "cursor": {
          "ref": "9ec5f7b3-c327-4e61-a1a0-87f1fb0ee309",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "11190935-0173-405c-b35e-c38055a85271"
        },
        "item": {
          "id": "cbd6af6c-9717-47d8-8628-1b248fef9c74",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5c3eca51-a6e0-44b5-a1fb-b56adea6e34f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367679f2-b0c2-488a-8e1c-b7459837cf10",
        "cursor": {
          "ref": "24c86e44-78fc-41c4-ad07-0b070f377e5f",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "27785d18-0db3-4e8e-b578-8a1b8a7e9f35"
        },
        "item": {
          "id": "367679f2-b0c2-488a-8e1c-b7459837cf10",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2668ce54-ff58-48d7-b943-ab6322f199e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0821710b-3fd1-426e-ae74-de38aeaf3b8f",
        "cursor": {
          "ref": "394bd0e1-104f-4745-afda-c65f8d4bcbca",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a7a2e8c6-9df4-4248-ba93-ba7ccea3b9a4"
        },
        "item": {
          "id": "0821710b-3fd1-426e-ae74-de38aeaf3b8f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f266df75-95e3-49d8-80a2-25e59b80c3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca27fb66-4d1d-43e8-b23b-1778b0fa36be",
        "cursor": {
          "ref": "57ff8f7e-d805-4a88-ac52-7240085017ff",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6632b9b6-82fe-4991-8209-c01e8fb75441"
        },
        "item": {
          "id": "ca27fb66-4d1d-43e8-b23b-1778b0fa36be",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8568d858-1749-49b1-b0a0-6a03a8c092fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e4e517-a38d-42ca-b902-493c237f6352",
        "cursor": {
          "ref": "85d13e4d-aa7c-4c1c-8f9e-84586a318410",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b80560f8-b011-4d24-953d-040cc39fc228"
        },
        "item": {
          "id": "51e4e517-a38d-42ca-b902-493c237f6352",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e0ba4e84-42e1-410f-8605-a6756d999b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dac5fdd-fb66-440a-bf61-d0accf83bfab",
        "cursor": {
          "ref": "f9d9d474-20b8-4b3b-9c29-59990f8ebdd2",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f27e2abd-c6fa-49c1-bb58-0975afaa7769"
        },
        "item": {
          "id": "1dac5fdd-fb66-440a-bf61-d0accf83bfab",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "bb9e333e-fe4b-40fc-b4c9-53810c1e0e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9bbf86-6039-485d-ae73-d3b013440f26",
        "cursor": {
          "ref": "b0e7f0c3-dc37-4ecc-808e-9c760d35fd1c",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "920ac47b-54f2-4de1-835f-f1a1755c5728"
        },
        "item": {
          "id": "4d9bbf86-6039-485d-ae73-d3b013440f26",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "10f8e334-49ce-4d3c-8289-bd74a78537bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d20c21b-1b03-45f2-9fb7-06cdc3ad4cf2",
        "cursor": {
          "ref": "8f8525d3-9729-42d0-b521-bdde46e9ffcc",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "bcc3733a-75eb-455c-bddb-40195c8ff80d"
        },
        "item": {
          "id": "9d20c21b-1b03-45f2-9fb7-06cdc3ad4cf2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "503df66d-4f6c-4ad5-a958-45bcbe5c324f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b49ccc3-ac87-4c44-a15a-eab61c92fa37",
        "cursor": {
          "ref": "c14e23e6-4c41-43d2-aa16-2e2042496407",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a100dc4e-183e-4b6f-841f-5a2f26d5872a"
        },
        "item": {
          "id": "5b49ccc3-ac87-4c44-a15a-eab61c92fa37",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "adeafbf8-104d-4b32-932f-3b7cf1f98d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70adf5b0-b849-4e3f-b2ca-b8ede2e6dce5",
        "cursor": {
          "ref": "7560dabe-d36c-43ce-8eb7-f390c15522f8",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a7547b3a-c988-4538-b42b-441680c6c086"
        },
        "item": {
          "id": "70adf5b0-b849-4e3f-b2ca-b8ede2e6dce5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "673a8a16-5d81-402a-bea1-292bfca990ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93597db-8473-4fce-87a4-4d4a418e1799",
        "cursor": {
          "ref": "c05a8991-52c1-4b7a-840b-5ca35ebed874",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2d7ce059-1c28-4544-a0c1-f2e70aab14bf"
        },
        "item": {
          "id": "b93597db-8473-4fce-87a4-4d4a418e1799",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "04ebc613-1379-4207-8924-f64ce69fb7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b78425-5d81-4569-807e-b1b0ced1e112",
        "cursor": {
          "ref": "591c4291-f540-4e97-a381-12cb4e8765c6",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ce5950c0-3b6d-475d-aaba-59867e8e3808"
        },
        "item": {
          "id": "35b78425-5d81-4569-807e-b1b0ced1e112",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e0b12385-469d-4ca7-98eb-d391ecb2dadd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bffdad76-c0ba-4310-b792-47691348be73",
        "cursor": {
          "ref": "2755fe43-e900-450f-83e9-09d973f99d47",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "129462df-9d15-43c0-8c7a-fe2cbcc51f54"
        },
        "item": {
          "id": "bffdad76-c0ba-4310-b792-47691348be73",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ec5ee0e2-d3b2-48a3-9b8d-d1ad8cceb241",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf8ba3a-bf7c-40f4-aa52-d369760d3f5b",
        "cursor": {
          "ref": "635868ef-7d06-4b27-92a9-7f39f38cdd7b",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c15340ba-9d8f-48a2-9c2f-50d49fdeaa72"
        },
        "item": {
          "id": "2bf8ba3a-bf7c-40f4-aa52-d369760d3f5b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "94e9feca-a525-4817-b0a7-5d1c39e7b460",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f395b3e8-7f7a-4181-867a-be01599a0b7f",
        "cursor": {
          "ref": "2472ac54-ce48-40c1-ad74-230695c5ef80",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "918b2988-a444-465e-bd28-22b52b568fe9"
        },
        "item": {
          "id": "f395b3e8-7f7a-4181-867a-be01599a0b7f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "868ed93d-fcb3-4368-887d-7d0158ac1c5b",
          "status": "OK",
          "code": 200,
          "responseTime": 3003,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "58122b4a-e04d-42f4-b8b9-2e4d2f7b519e",
        "cursor": {
          "ref": "cee5ecd9-0bdf-47c7-b925-5f3361748338",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2e46ed86-4063-4e12-a098-671c1f1f9e31"
        },
        "item": {
          "id": "58122b4a-e04d-42f4-b8b9-2e4d2f7b519e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "033d3e8c-70a2-43bc-8632-07b842980a8b",
          "status": "OK",
          "code": 200,
          "responseTime": 2694,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "467aae28-205d-4492-bc3d-c1c30079edee",
        "cursor": {
          "ref": "7acac6fa-c94e-4b83-8b9f-4e004150a62e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d12f5d06-98d6-43d6-9d3f-37267d5af2df"
        },
        "item": {
          "id": "467aae28-205d-4492-bc3d-c1c30079edee",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b12ff821-49c9-47a5-bdd6-5df31914d44e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467aae28-205d-4492-bc3d-c1c30079edee",
        "cursor": {
          "ref": "7acac6fa-c94e-4b83-8b9f-4e004150a62e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d12f5d06-98d6-43d6-9d3f-37267d5af2df"
        },
        "item": {
          "id": "467aae28-205d-4492-bc3d-c1c30079edee",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b12ff821-49c9-47a5-bdd6-5df31914d44e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5a4901-ad0b-46e2-9a92-bbf34d63e97c",
        "cursor": {
          "ref": "87b164c0-3a74-46e6-a87a-b887ac5b8993",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7837c7f8-e639-447d-bbf4-89429fc63907"
        },
        "item": {
          "id": "db5a4901-ad0b-46e2-9a92-bbf34d63e97c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4a116ba3-7de7-4852-87cf-b0eaed0bfa1c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d3ac36-eeea-42aa-9784-b5a86cca39b3",
        "cursor": {
          "ref": "e16702f9-5ad5-402d-8f59-7a3dc9fdcd29",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "753e04f0-7c3a-42f9-a068-03708a8875bd"
        },
        "item": {
          "id": "b3d3ac36-eeea-42aa-9784-b5a86cca39b3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f0df8b51-f6e1-4aad-837d-eb7a572bdb0b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}