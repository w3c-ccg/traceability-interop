{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e7151fd5-81b0-4820-abf0-65d86dc039ec",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2735cd03-eb05-48a7-a05f-2976aaa6ed8d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "578dd1c3-f3b9-4484-9cfb-6153cb93f7cf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "dfbea2d0-4b76-454c-9bd0-c88002419343"
                }
              }
            ]
          },
          {
            "id": "99e53534-31ab-4a6a-a77a-e37d55d9f5a7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "119cc955-d712-48ea-bb29-5bc38a4458a1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "742780b4-779d-404a-bf3d-46aa774e7220"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7cf3a77e-9b9f-4f7a-af5d-2b51815bef48",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4742f7db-4259-472b-acc2-03bfacd2b01d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "06c9fcfe-98ca-463e-8c3e-26f8096b7367",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4724a8f-587f-430a-b046-d8c5f63593c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f4663cd1-f03c-409f-830d-51698edf2ba3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5a0128bb-989b-48e1-a78b-1397f2cdf58a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fb8db98e-d636-4502-9c35-a563e11bec28"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cd5fa26c-c5f7-4310-8eae-dbab90172ae0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cea66602-db8d-40fe-b13d-8991f06e056e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ec7aeeb-e7ff-4e70-9cb4-6846d8be56c5",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d45fe107-7b70-43ea-9568-bdd2c0c5557a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "348bc59f-3363-4def-8d37-7ddf9a83e8b0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8d3f73c4-e934-4fac-a845-e0d9d45d5e0a"
            }
          }
        ]
      },
      {
        "id": "84fc8b63-b95f-4608-be5d-684a1d17e86a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7f578c29-b37a-47c5-82ef-e3184daac2f7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e745783c-3596-4c26-82c0-92e70aa88236",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "971bd99b-fbc7-449b-bfb7-32fdd0ca591f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e77221e-cb8e-4a30-a743-10520ca1d58e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5456f560-91d3-47b7-9130-3698b278521f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4125c8ef-267f-4590-ab93-2a280bc4e4a5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e6318f-4060-4a30-88c8-72cf8c9e2950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4bdcbc6d-6964-45b6-b0d0-daaa3fc1c2c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce82b82-5583-4304-a41d-806e1dffccf9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3eed383-3c1b-4068-b0e8-f7c18cbd2fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b369f9e-b556-4403-b2ba-c3fc4182b565"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "79ce5597-91bd-48a9-9952-7beb23a70393",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "af854cc1-5349-4a4d-8ae6-8d5b0cf35694",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64eb7afe-6e15-4f72-9bbb-f436382b0bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2cba9872-36ff-46b2-aa15-5c2855b450e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947d15bf-503c-4134-9481-9fc14d7858d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34f8e7ba-5eeb-4c3e-900b-bf8dca901be4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e5dc775f-cfc5-4e15-9c0c-a88fd48bc7c4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "99f3b664-7b66-4f74-8d54-f7d1db70b1d3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6de0773-6c0b-4ef4-b130-8af2025712b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "cc3ca6b4-d887-4d02-9dee-49dab849f91c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a92c3335-b2c8-4efe-a5a5-6b7502e2f4be",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e7d1402a-4dd3-4b2f-a807-bd37bb92475c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "80b4ca26-72d7-4398-a09f-4b0f103be380",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d9a50713-163b-4765-941d-fd82e3b613bb"
            }
          }
        ]
      },
      {
        "id": "d663ccaa-a2df-4051-b605-50c80baa4f38",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4231b930-0014-4112-ab2e-9fe19a076364",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4352b545-306f-4144-92a9-ffa615c76d83",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5d8460fe-ebd4-4bbc-a1ca-daac5a9f3fc0",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5591ea8a-f3fb-4018-9492-a6fc0a428dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03c79a19-ae59-4cef-ab33-907a5c1c2f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c243c88-abb8-401f-bc66-67c186bb51d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1791b591-7990-4790-ad00-192afb1e5bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db156766-734e-4708-8fde-773d35676735",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c722ed50-4e65-49db-b656-95dffc0e320c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afdf3af8-b4d5-4e33-b88d-49f5197eaa5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3202f95-bb76-4683-8836-d7b58eb99cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5149fce7-d615-447b-83ec-90626b2c19b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bdc4b7b-220c-4bec-8b15-5801fc129d47",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8688f184-0863-4de1-87b9-071894159c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "943a321a-ffbc-43ac-8682-37af29f836a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d8b5d2f-faeb-45fa-b253-4a9e7f239f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2108f99-2791-4957-8134-d991e4c87212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e684b05-9cfc-4fdf-be59-d724e9f7b5f3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "933d60fb-762b-4527-8520-2f411da753fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e51d38ef-e77a-4165-9ba9-a5c3fcfd90cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e6e873b-7208-4533-93ff-1f92d1bfa8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5bb17f8a-bcd7-47c9-88d8-6987f513807f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aed57b8-5946-4ef1-99b9-4f30f9a40b3e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48b9cc5-5e25-45eb-8b4d-9b703b7106c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8506bc6b-ca5b-45fa-9592-c2f20a9a11aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd268d19-2d7e-4a6b-9b9f-06378c535d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f84c3d7-9dbc-447d-ad34-20ed3c7183f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d50346-5ce7-4110-b769-596cafdb8dfe",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "539df0aa-a32f-45df-84d9-26f2d8535a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dbb1646-97ea-46ec-ac23-8141b78d9f98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b7572d-f338-42f7-8863-a0e50db9adf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a53cf1a-e910-4389-91cf-ecdf2143dc31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2adf16ac-79a3-4738-9992-3d6ce67e3b07",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "104865cf-1e4c-454d-a0ca-5e27df8c8425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2876dc7-a3e4-493d-93f1-bec9f24512ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b935465-d0b7-4c6a-8992-535a238fab0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2dc79895-c91a-438d-9409-f3984e8182b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa53a6de-f259-4c2d-8226-b6ff259cdae2",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e9a703-92ce-47a4-9c4d-deef7333183c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d1c4f3-2560-46ee-b928-d885b6086ada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa325a4-4609-4500-9848-2d6a4a1f7615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "909d3017-817b-42be-94f9-05743c58b0ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08ed149-94a4-48af-b296-476b05531523",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "251c87d3-5e2a-4c3c-af67-4fe036b4ee03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5a3efe0-5cf9-4035-a25b-91932693944e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5018790-ab8f-469c-9e3e-491575ab0bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f814858f-46b8-4c73-bfc6-7220cbf1c4b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113dc630-e3e7-445e-9bcd-a01752eb4f1d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6275b95-33f0-4a1b-a5f4-67947e1bce1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb17369f-0d79-4573-beed-77c25c7a218e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332a8899-e891-415f-afaa-b94d755546fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d182196d-d0ff-4a56-ae9a-32babf16be91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d325acd4-dc6c-4c0b-aa3a-039b3d5f1a67",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21968e6d-b622-4b02-a6b5-48769d999707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc232665-80de-4569-a1b3-4e04e195882d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce3f972-e34a-436c-8415-50ead3d8465d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "229fdf91-3df3-4ac7-9349-bc761f570f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73a3fc1-39ae-4379-8b4e-18b70004f53b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4438b0d6-e766-49ba-a1ac-ae573c8df80d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fd28890-0a5f-4c38-805d-a82ef8d70130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe354134-113d-49ab-81e9-6f18662e5fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f51dc5c-59c8-416b-aa29-658a1f96d013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53ac893-32cf-480d-83c8-986687a88071",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0ab8cf-d20c-4947-b36c-96b11c2988e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a219773b-3967-4409-bced-2aac4b8292c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f29e1c98-1e2a-41f6-8598-8b35a941cfa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0612a8e-a6e4-4eba-a7a3-9c6152bfaaa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317539f1-e83e-4998-b65f-3a7b2871c068",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1cdc311-2c05-4954-84f0-b49834c3f738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "423e7e6d-f984-4f17-b914-1d6e54dd1117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3349f9-8625-4c9a-9f68-960a43dae2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73cb4444-70da-46dc-aad7-522f8fa906c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7130267-8147-440d-9486-966e461f7e2f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94bdff46-3e06-451c-aa71-0a072d132faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b083ab-94e7-4a9c-a30d-8d1688e73fde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26fae7cc-8a85-44fb-a5aa-003f616cdafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a564ed2-5110-4d48-a31d-d674c9e816c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03950a20-bd31-4b3f-b03a-76aec3229fb0",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e44a1d-54ad-4b83-b101-96a981924508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "396f3e5d-e05f-43ce-9336-896afc9bf863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd61f11-4bf9-485f-8250-224ef4d65aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c543ee2d-4930-45e4-b391-cd320d73ee63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8458ce8-d676-414a-9cb7-75b8ac4e933d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d05e530-73ba-48e8-a8eb-0064b15239b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43418014-7601-4971-a4d6-614cab6f46b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030b54f0-cfa7-45c2-b24a-63ced2393c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a755a1e1-9733-44e4-8961-0ae16f23a762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1bde371-c7fd-43b9-ba2a-9bf9eeb9f4c0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f6b090-2861-4720-80c2-a40e4e362b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34794ae5-12d9-4b53-b6d6-62f5c406f122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceba95df-cb0e-405b-b806-cfd4547a81f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca63fb53-ba26-4f3d-aca4-6fa9baf2ca58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2f621f-1f0d-4b23-be0b-b8e681540fef",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd50383-49f9-4fcf-903c-fc4d7c47da95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "956b56bc-5431-4e88-a21d-3ce103f8afcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa9978e-cbac-451e-88ad-cb4aeea9528c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "04f2e449-7055-48e7-ba1e-f2809a8171af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d4401e-d9f2-41d5-83a5-277e8dca0aa6",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8119b359-7a66-42a2-9741-67f44af61c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f65377-928d-44e8-81ea-c6d17a41d11a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379ea031-f844-4ace-a377-437c5f531b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "83002e71-07fc-48ea-9bb7-ccc0b66e1192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807b92e3-41e5-446c-ab51-d698c1042fe6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50255534-8124-4c31-bbb7-a24ccd83d1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a30644be-27ee-4187-a957-00992ec014d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c3cb27-5162-4120-85b1-234d14b4df09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "95a7e330-9797-4b82-b941-9f4ff37907fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6aecb6-aaa3-4910-8ba8-adc5bf4deb4e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c05ce4-780a-44fa-89d8-6a34fbae6930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03a7e69d-ee75-43c4-97b0-b35b03f6adf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be5c911-6318-4a32-a39a-e4dee20ed124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f55632d3-2bee-4b15-83b7-a252abe3a68a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e539a84-83e0-4fbe-a593-2e44c59189ea",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf68798-d6a3-4f84-b374-8acb5f925f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f453f35-63a3-45ed-812b-da4114416bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e1005e-6914-4ffe-8e7c-966271d82bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c683465c-0c20-42ea-ac57-1fd023d25e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9ab2ee-d166-4320-bc1d-63c9305c74b2",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d01c8b-e92c-4a00-9bcc-b88a24ec374c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8837b9ab-3b29-467d-a097-3d8a0421377a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1851c94d-2cb7-4192-bcd1-75c39aa03c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "46a5a2e5-fb78-44c2-a2a3-8e3cdf6bfde5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2a91c4-32df-4fd3-bfff-dcb3ebddcd0e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "550e80d1-1dc7-414b-afed-73b8a64d52d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91b54ad3-849a-4227-83a5-58f13f38c135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27377c78-cffb-4098-892e-89f8e6068a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "14918d48-2afc-4c27-85ee-d3f458d25b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7094f5b-8b0b-41b6-9b62-1243a4ae4e18",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9903f4e5-99d2-4cfc-8c9f-bfe8718d7759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab0aa51-cb5a-472c-b615-5f1981fc06e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83fe631-0cd9-4650-8d69-18609744fe66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "91ce8056-9dbb-4a10-8242-973f94907eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e66063-abfa-4615-90ce-6d3a17c7452c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5635c3-59a3-4e4b-93ff-ce8f657fad89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cb76e3c-0a94-46d1-aac6-23253ddf42b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd0e0bd-9503-4adb-9279-8355bae92d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a80976f-8925-4291-a4e8-50482f60bbe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6cc0ac1-aea8-4d68-b632-a6967ec29112",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4408599f-9f75-42a5-b157-f6e7b38f373a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "959ce855-8937-449d-84e6-ef416c8b3ef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f37e503-d59c-450f-8ca7-bd6ed8b9c08d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "51e4e91c-f122-4cfc-85d8-245903c2a071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfae5e6c-141b-4444-8435-1d8fbbfeced4",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5de1c2-ff15-402a-a4fe-e51978aced07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "253172fa-dc1c-4e1b-8627-d050e4c77a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fde0bca-e5df-4e95-98be-2d42d1bf9e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b62ddc2-7ab7-49f3-8a97-1728ed0498ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e963291-01fc-4119-a2a6-620626e8f58e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dadb5d5-7ca6-42f1-a0ee-0201280eecfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30db807c-7dc0-4873-8e1c-dadce9a06882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d807c2-9434-45c5-89a9-29ff1d59c1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a61994c4-918a-4869-8376-6b37e4c942d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a439136-c83b-46c9-b8a5-2d697ee72369",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec720cc-d85e-4ce3-9ecc-78dc5684b20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5793091a-5d05-4664-9627-87af75f1caa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046398f5-a48b-4475-bede-9ac815a58dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7cf644b-e093-4ee0-8269-160e2105f48d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac33d7f-0cca-4b81-88cc-cb7626ac303c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9f2789-fd4f-4ab6-b231-0278766e2a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fcba286-169f-4369-8d01-2f65a4170ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1e0da1-a075-4478-b7bf-c7e65720327d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "316dbfeb-207b-4df6-abbb-083be8674ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "057c18e4-d12f-478b-81bf-19f9e4dd969a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95bacced-891f-45f0-a63a-1a4a1a2a77a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d95609d0-8034-46d0-b6e8-f9b8fbad1e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3b3652-ad07-448d-aa9c-0b337349bb7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fea77a8-4fe5-42fa-af3b-d15089cecfd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a22b279-b647-4577-988f-5697e823a3f8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f58cbd0-43ff-433c-9d1c-0adc0de9085c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ac95d9-7fd8-439f-8eaa-863d814fba51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fade77b5-4acd-48d7-ad54-182f726b4f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c588d970-ba59-42bf-b14f-ad02f13da1e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82235e59-8202-43fc-9929-4671b3a2d467",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd304f5-65d5-4ee1-b386-b299a93f7df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a79580f2-656d-4a29-845a-e6c23e82468f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09613557-1a84-44a6-8177-76a650624c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "46e15e49-385c-4a03-a78f-560ff3cae771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb48c11-f195-423b-8c12-6df6501f2dec",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b968e3-a49c-4a3a-ac51-0e4ba5d26c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e31024c7-c886-42b3-b65a-cb6f21fac3cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02edc08e-d025-4e35-a9d2-39e95270dd09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "17be201b-9f07-4898-b5c7-d2b4c26cd1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84aa0212-6c0f-43e1-b560-f9011b621dea",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c8ee11-e724-456f-a276-336cc93a8eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c3bebff-6ded-46fe-a7a4-12cead3498dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b331d8-df42-4d93-a2a6-7a72465e1e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7c84b36-d2d1-467d-974a-8d4500d1431a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967e4bf9-627c-41e4-b5ec-ce045726573d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64108bc0-bdc2-4736-bca6-c3380ff738e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d1c46b7-29c8-4c1c-a1a3-bea96d367a0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005c5ce1-c102-4b96-9daf-09ccddd1079c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "00683761-e757-40a2-9ca8-4bf985ebb9d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78087b9a-5a29-4f96-8e75-67fea2248325",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6931e2a-6e07-4983-a0ce-bdd0f4d05386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d7dc33-3153-4738-b73d-6fc200c4c134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a9e66c-bde0-49e9-a57e-754be6414cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b592fd0-3c10-46cd-96f8-91c8c352be35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba81e21-2b61-4d67-86b3-0087bb2b98b3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "593a65fb-f3bd-4a09-9855-161ee5a32fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e385ef30-8787-4ed1-a9d8-c7d978fe69cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44afb11e-d807-49bd-9148-2327626e6420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5a1c11c-103d-44ba-a027-9f3368f1aa25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6c22c6-f6fc-476a-9932-85392bba11c9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd4fba5-f73c-479e-9251-fd6497a26c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4227dc55-c028-4e21-b1a9-86a1f3eb1aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d027448f-46eb-4971-ba89-1641c5bd6616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b064b3e9-0b30-40e3-a363-f09213c4c56c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc21e6a-2cbf-4837-8a1b-5219406e95e0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71a122b-3b06-47e1-a9b1-648f20903d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df38dc4c-96c0-439f-bc05-8fd5f94683b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4000bc2-847b-4ad4-bbff-5f8f1a19d7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "cf78b40f-0a8e-4630-85af-094da38ed8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58195865-6b88-4a20-8f0a-be01a32044d8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3afeddb-cfb6-4084-abfa-4304a4adebda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da49c78e-2ed1-4d90-809a-b26647f711a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819ea8d1-1aeb-4a92-85f8-27c366fa0c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f849d49d-b623-4152-9745-fe7716eaf0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94da1856-866c-4cee-9fda-90cfc8a9c97b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2435d0e-dc05-4abe-b9aa-2d39cc52e019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de880aab-4016-4644-abae-dcb2504946fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49935af-b579-4469-9201-ebb7f3de99de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "81ee9cce-9200-4339-aa99-c1f7c6d7d6b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be36a7fd-b09e-4e09-a0b4-23c4231130be",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa29bed-f2b7-4494-9e35-9cf2148aaafa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a60020ad-13f8-4dca-bb16-48cac1c13444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d378345a-dc49-48d0-a2ee-58b80bf78c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7eeed499-5699-476f-85ae-94a36e5f0c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0601e01b-b63d-4af5-937f-1d6fc2d329f1",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed4f852-272d-4f1e-b1d8-2482bfe5758e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2ec30e1-b78c-4c84-9a10-a3a349abf342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba4402c-fb2b-473e-84e3-14f156196ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ecf61b5-1079-45b7-ae69-5fb3ac22223f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5240a3-5b6d-48ff-95e6-96c26aed510f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f9bcde-c381-42b7-bf33-107a96f97966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "610ef3f2-b3c4-4dae-9fc0-f162132873db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d07d50b-cc47-435d-a0ad-2e65aeeb05dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6887837-eb8b-4565-93e9-6ec24a9016d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce130c5e-8d20-411a-8592-922a6d6d0afa",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a098bf6e-298d-473b-b34e-d0b3d36bce27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9097be07-c0e6-4315-8919-a78043719e73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e246c2a3-3d34-40f3-9253-6c0098432dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "204a6a5c-eec7-4a12-abae-a8e2394ddca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79381feb-66b4-4dbc-be7a-a3069f962bb6",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5759363a-5f1e-4965-9574-895c7b719614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72bb6424-ab8f-4699-9bda-16ec7aba9d07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4060e800-945d-48bd-93c5-8af7ec8da83d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6361c9c-45b1-422e-b8e9-8a08756fdcd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78968cf-66a2-497d-99e0-53d540876cf4",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "345efb65-cf9e-43e3-9159-2786f8bedd7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59bb8986-ad0d-4a5c-a939-56a928038ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69237eed-ba7d-442d-8977-75994b693073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "38c422dc-92f1-48c2-bf85-9e60685ceca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e6328f9-4065-47ec-9658-7a8d0fbe63bb",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d8c3ab-e91f-42c6-a0e5-5cdd16d90c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e2f46b0-9389-4111-8b77-0f8e788064cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e620e5-fb28-4fd5-9e58-8cd70b0e2e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9b0ed9a-23a1-4d00-8cff-24d5748bcd90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6257702b-a18f-4e21-9e6d-0bdf19726aa3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "579fb39d-230e-494e-9bf6-9959952ce1fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f839995a-bb11-40a8-8398-896fd53a4d76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314f4c2f-fd65-4b7a-b0af-eb59ea87e89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3710e111-aa09-4f04-b435-f9906ac31334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ef506f-b48d-4937-83d4-311063b5bcbc",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3900daa8-e460-4e91-b48f-d98cd956c767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40a7ad21-38a7-4b2d-989f-d11a358425d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24fa4982-5f58-4173-a321-786b674b083e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4761b61c-2b5e-4446-b3a5-68c924941811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7103283-deb6-4da5-9040-2808d17f6deb",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aba176a-f6d8-486a-8380-498766b12461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "147416bc-2804-49b7-81d7-9510c9eb568c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e41263-e426-4b02-8520-95d21eeb82bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad5c245b-abbb-48ba-bae3-33d314922e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a59d73-7090-4dd4-bbd1-da64da84e490",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "699711bd-2cf6-4660-ab2d-5ff4bdfaabbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94b75077-7408-44fd-8b20-4a6fab516c0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b6b7297-46fc-45ce-ba03-fa7bc0509acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "768b7820-44a4-4fa9-9473-101336bfaaaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d2bea2-8f66-41ae-b62c-e5bc37dbd471",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdda154f-2cc9-403d-b710-3f99b57a91c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d3853f-d593-40b4-aaef-2330710d6afd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368ad524-b4ef-4918-85c8-c5e1d1ab7b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a1bc0c93-e59f-457e-b045-b8cf2ae6de36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0deaf743-70f5-4ced-bce0-1c1612d8d193",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b8a6ce-0b7d-48a3-bf22-c25f2ed44d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44a9b7e2-d43f-4fda-84dd-9214d41437f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa82a67-8bca-441d-914d-8dce6f02dc86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c179cc9-0339-4571-985f-d5e69033b99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f97547f-1283-4712-9529-5490ff18b5fe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7560c5ee-e0c1-4cd5-8efb-40c74a18cdf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6c01ab-bb4d-453a-85f0-ffc586ece17c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c453e6-7aea-4153-8f0a-7c7fc92943af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "15859386-ac5d-4598-872c-a0d00c4bfd11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97552068-d286-44de-ac5c-f9aa1053c33a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea862370-26b9-4194-9cf0-e490c7ecdbaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae5c5148-7b9c-4dbc-8ca0-abf75f5b4ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1444af52-0b1e-41e4-b47f-5b22ee80ab7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc0e6229-7e35-4e48-8818-a58b3e8b47fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af6788e-eabe-428b-a724-2d96d50bc37c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1c3e79-b4ac-4561-81b7-8f7ab6502b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "823250a3-e27e-4b80-ac77-a9314a930deb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a78b3ae-235d-4929-b3b5-ebcb54f3d9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c2ad0ad-9e96-4903-8181-6eba69bfa391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852726da-a1ce-4a8b-a47e-d930c727563a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bca3125-07d7-4478-a783-89d468a09226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6bf5e6b-de14-4f09-9224-9daf21ae13ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c93769-6851-4737-b3a8-40cc02d40974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "321216a2-3a16-4718-a88f-e88137a69268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b7901a-87bb-4dc5-a26b-d7ca35267755",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "175374fe-c299-4025-b98c-07ab8af4a91f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeff8c01-b438-4dc4-a8cc-f4c7732d014a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9964c56f-2778-445a-9a39-962499bc18b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "21c6dd59-f30f-49d4-b80f-c0f03bfeab49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b20527-557e-4c51-a6ca-fde6efb4fcf2",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d692333-99fc-419e-bea2-b742383d9def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8df87c9-9324-4882-9e25-1e3cd32886db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9915bbe1-23b5-4468-b443-31fa76ba1c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "13815598-d399-42d5-9c73-b8c240a1587e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1859abeb-6dea-432f-828e-50f9aba7d085",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac48ff52-ca68-4611-a500-2cfe20f2d7d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f747ffd0-bf64-41b9-b431-9e908374ae4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c97621d-31bb-4cf9-a32e-63425e259c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eec15ee7-f3a5-4df5-9b01-7bb0030aa314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b66e88b-07a9-4341-99de-e9ecfc68b2cc",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2078235-3df7-4c3d-a8c8-cb317992e06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f248af93-8dbf-43e9-a884-345033d34508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ea4986-eca3-43d9-acd2-aebfc43af46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3e345b9-270c-44d0-8334-792e2199e8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28056204-5818-4b3a-afed-f689311623f2",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5a50a1-8564-41f4-b32a-faf3b75454fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b9dfc3-3a54-4f72-9687-06c34ef84119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2424c6f4-76fd-4376-86a4-6326c178b506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e0516ae-a1b0-496f-8e58-23d398c11f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca10aa0-84bd-4845-9207-cfcd5a732e84",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8314fe-f461-455b-906d-cb7a5a486ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1682638d-b745-4687-8eaa-68a60de5e340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4756939-0928-4051-9041-f96c7576c714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "15e690df-85ca-48d3-8e2a-400611643527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5eacec-5adf-4301-9b0e-c510fe422905",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "529b38ac-917b-432f-8db6-5a79ea8fe7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "300a0a2c-242a-40bb-9c16-ccd9b74f010a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2aea9b-a6e8-418d-8cb0-f9d165c32d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "00808d64-2541-4050-8c3c-f022ab1e21da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a4112a-8b2f-4881-9143-9a88790aab68",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d70f66f-c3ed-48f1-bc9c-149b629d8f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37c1a9e7-4911-4b20-b191-d4d4a50b7f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6a2947-fb3e-4cce-89a4-b7cd94f82173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5677bf2-e2e3-4655-86c0-78c704d713e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b395b2-4172-453d-a939-f95eb99f6e85",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "309dd057-7398-44c5-bfca-46a767e4e0a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7817398-b796-4abc-bb68-76e1f793a056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f06defd-b32f-4f65-8943-de6a1f1aea0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46803522-4351-40df-9ed9-2533fe23044d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592ef60f-e9ea-48d1-be75-c8990c074385",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0ee1fc-5dc9-4a39-a9dc-4167e25855e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ae9dd2-aa39-443b-9a85-1d2ae63c4313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56cb9d9-eb74-4f77-bf26-ef66098502e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0631af8f-4a8c-4569-b676-2463172ddcdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88a3ab5-0d42-4cce-94e5-64a0838fa937",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ac9eee-64da-407f-ab00-8424f5752e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32468949-ab17-49cc-8679-234dd019beab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80abe4d-4645-4c76-b5bb-ce82b55f372d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec49b410-5dad-41cd-96d3-dd913ccd6a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28bb833e-8f17-4176-9b5d-2a7dd6f4f3f0",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8150a9da-2d46-4177-9403-c700c173b8d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11d5a862-e0c0-4697-9ee1-8ad8dba6ecf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3a6807-0ea3-4912-a237-988a796e56f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "296b6567-93aa-49c9-8af8-482d94d99a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c06280-c252-4673-bc22-b83f400bea91",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dcbd802-a48c-4cdb-ab70-874ad72d7c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6cc7f6-fa24-4dd8-9e33-b14d14c12e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aeb6774-fcf7-4731-9843-b35277c5452a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5cd0f4df-13d1-4f58-8350-c1cd3e554a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594ec6f8-c1a8-448e-a26f-cbd18b69ae76",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0729eaf3-5339-482e-b277-1f268fbc643f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "496886e9-80c5-4fac-9ece-3e11317d5712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589d8732-e64b-48df-ba3a-b2635b7cfd38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3117112b-bba8-40d5-83e2-f1f06a94b57f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6421d1ef-0173-41d5-941d-f48c313c30e2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80d9a29-da8f-4d5f-a42e-57dc6eadcab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38b6b943-c8a0-44a9-a882-d87dc0544cc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3bf0ef0-563f-4255-85ac-b1a4b31b8524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52d861bd-0cae-4d29-8db2-977041956ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e691d742-8bc9-4ed2-be68-c557de40af1a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e8e4e4-ec52-4bdd-8d19-3d7b833d83aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "921fcbe3-7210-4f06-974d-70a99ef315aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9daf0159-1e06-4dc5-b672-425ecf1fd193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "24c96c8e-f170-427f-9ddc-df355bc26015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dcc49b6-a175-4c6b-ac63-33548cdd967c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "183b5153-db28-474d-a238-6928df0544b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af67bcbb-1ad1-4ce5-bfa7-f08748865ccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d5d2d1-a56d-4faf-9cf8-8a3f70461a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f4afd36-fb85-4ffa-8a11-99b1ae6f1356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5114bf62-44a2-4fb1-8135-37bcb65c1129",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bfe111f-36ad-47b2-b277-a033db691964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6539c57-b58c-4775-a90b-8ecb934f749e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2325cffd-5f80-4d6e-a27f-5333c6a1033f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb37f35-6ea2-4435-96e4-2296a77af8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed25cec-b3ee-4777-901d-109f91c977cf",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f210e0cc-463a-49f7-98c6-ffcf907a5551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faca4117-4454-4d40-997b-d7147e6f73e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691e9209-5501-46b7-b12d-2cc34a2f132f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3280b8da-0bcc-44d2-b207-097459544912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e017b49-6238-493c-b235-82b7dce092ad",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce808624-caf1-452d-b486-45a6f0113d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "280a6992-b3c8-4153-804b-d8933ce8064f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6e825a-5a72-4d73-8a0c-4a3ab1b7dbe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d6d724f-134f-4c96-8533-f228c8f862dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1409a77f-c00d-422d-b796-2ead03a449e6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "396103c9-95bb-4a67-a5b5-2a3d4701eada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d77f2071-dc5b-42fb-8dc7-8546e35ea26a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc15c63-6a33-4b75-a4ab-c8c4f28330a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "151365f9-2561-4b7c-8693-35ac08830255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ef0a4c-be08-4275-a893-9338da218f78",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e05a97c-3274-4e4c-ac55-a3f5366da96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a28c44e-1bc8-4f1b-b933-784b608dcc14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5986ec-41a9-4d66-a4a3-45730c0bf606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "877f18a0-04d3-4baf-9e21-29a9e41c79c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3764556d-78a7-43af-be10-7442d1dbdca0",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb14515-42a0-4ccc-9fa0-1f788414a947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb96f761-a1dd-4b46-8a34-9d7bfa5d0175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b8e8bb-fd34-442f-8399-de2fb0fd0892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcd95aef-a34d-43b7-b7d0-0cc5ab5794a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1b367c-f35b-4562-805a-fba16b595d4f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3952a9-9f8c-40e7-96cb-34581c297859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71765766-40de-415c-9f2c-b4210ba296d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf98266-cb0d-4774-b677-759de4a87665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a19c20f2-ffc8-4847-80a7-f038be3fcc73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ccdc829-35b8-4eef-975d-0c2856c25531",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2832f7-4ac1-4cf2-b101-0bd1f8831daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be250c0d-9163-47c4-8ec2-154a785cdc10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f46bb7d-0c68-4cac-a59c-83eb83c04bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6185bca0-b2ef-448c-aaf0-aa552dedf05b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2960cf9b-b657-485d-9e41-c320f36a01d9",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d321f31-75ab-49c9-af28-97637e12e6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32641f80-8018-4437-a5e6-df8cdf5f2f58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43729107-c67c-4f2b-af2f-0cea30d3dd23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e38d7469-c6de-47b0-8a1f-ccbab7030565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807a24ca-30d2-4b23-b8b9-d0733c8dcba3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c701db1-367c-490b-8336-2a12fb841796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db140ccb-e9c7-42b9-b014-6a2797c09f8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684d20d6-261f-4336-9230-484bac298cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa001b75-f7e7-4857-ba19-1021cbb83203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91bafe80-8f15-4ad9-9304-4933dec90daf",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd21209-0c72-423c-8aef-433a9db7ac16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e49744b9-77ac-46e4-a3b5-32f72a1f9783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533acc9d-fbb2-4712-b31c-35e7f0734db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "29187375-fb9b-4556-a927-0cd62e80bd31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27db6465-5ac2-43c0-aad0-e8819cf3d5e0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ef3f8d-2cac-424b-9c89-4211c388b9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44973027-8453-4c56-ad61-6577e121bcd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc3ad96-663c-4cd6-a96a-a53312f35736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0469b2c-5e6b-473e-b3f2-31b2793aa896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b65c3d-b52c-406c-a3c1-818486893681",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e0fb52-c830-4de4-8ca1-88dd101c8987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d354716f-2f1b-4424-bd5e-f12d4242a19c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06eea8ad-3ddc-4ce8-868e-0be1f7d19b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "efef117d-f863-446e-8abf-0b255f9027e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc13759-aaeb-44a5-b37e-8dc002acada4",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3fd3349-6485-4d5f-a5cc-bc4e16d95ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "54651bd1-9998-49dc-8a66-047b55c34a50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8e8cd7-da93-4c60-bd01-efbf8b755af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cd22429-2017-453f-b3cc-0da7e48d5655"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "79218175-2967-42fe-a6c5-e07cd4777faf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "65078d38-3e1b-4706-8a2b-8dda33fd746e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b5c975-b853-46d8-b1bb-f692e87aa8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71998ca2-c80d-47b9-a037-6821dc9bd9c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79db7cf7-6aff-45c3-b6f5-eee4cadef95d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bb77d48-df1b-4a63-be78-e46e4a478e4f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5f7cd0f-acae-44a1-b111-091bfb74f16a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f06f1576-c4ec-4355-8f17-86c334f5dde4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2821650-2b70-4ad3-b234-1b55364d6466",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67294b6b-3f5a-48c3-9034-38b0fd3ae664"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7e17423d-54a0-490c-ab14-58e7740da5e0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "595b69c1-f836-4f4f-8dce-581d0512c67c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c05cde67-7010-4fe6-bf1a-a5e871e15f6d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cb354ede-1cfa-4fc8-bbf1-c61338b7e08f"
                }
              }
            ]
          },
          {
            "id": "e0a3b7c3-c5e6-40ee-8b2a-784d1a4623b0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6648ec5a-64b1-42f1-9bbb-a2b68f853353",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "36ed8891-ba4b-4d5c-970b-9099fff23a9d",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21bbab5-0e56-4eff-99d2-08e2a8b33752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c9365986-923b-4183-aa85-376fa09ae401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d7a433-b5d3-426d-83d3-5c24864436c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07558f59-3eec-49c7-85e2-eebe4ef86cad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "98939038-347f-4a14-85f9-250ae6e331fa",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f775a13d-0e31-4502-a123-c4441b0307e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dad2477b-da0b-4c3f-9d63-e2e3fbb935e0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "289e917f-6a59-481c-9228-708e07493fff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "899664ad-0670-44dc-8261-f093571685ce"
                    }
                  }
                ]
              },
              {
                "id": "8a7d2563-b82e-49e6-9c58-792a79acb5cd",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "35e3e5c0-84c3-4e1e-9030-52e20f514b62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c1ce47f0-1515-4ff1-ae51-9e49f83e5686"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98b186cd-23fe-4cb9-9f7c-8d955bf46f98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "29177794-b5fb-4609-9900-ef57fbbfc82c"
                    }
                  }
                ]
              },
              {
                "id": "0a5c5341-c916-496f-b149-7b448c602313",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ffb6760a-41f8-434e-b334-82486ed562e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c4aea6d1-fd00-4736-a120-16b37a2e6279"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc719ea0-424b-48e7-a02b-bb29b0bbe0cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8558386c-a712-4d38-b5dd-a10551225227"
                    }
                  }
                ]
              },
              {
                "id": "5ea60f8e-ee5d-439c-9cab-f5ad16cf3951",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb57bbd8-bdfb-4fa7-b7c6-4c03adeb63a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "991ed567-9b87-4bc2-a61f-2ce694f90df0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10c79ecd-2510-4cc6-80f6-9035f9ceb801",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4a6f13c8-5a39-44db-b8d1-3428a954fdef"
                    }
                  }
                ]
              },
              {
                "id": "eb17bf50-ca7d-4c82-bb0f-b49a4ce3fb8c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d81f24d-9a22-4159-aafd-d476022d51ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ceec9c89-fc16-4a72-829c-b154d9cfcd1c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac1f7613-c27c-461e-9fdc-5fbd6308be93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a5d55e48-8b9c-4bd5-88ae-eaed0020af71"
                    }
                  }
                ]
              },
              {
                "id": "efbcc396-4e61-4ca7-9b3b-bd2fa55bb554",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0303066-319b-4198-aee1-f82cc4cb0fc8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "68142766-dcc2-4766-9539-d6c105eca5b5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65b37767-b396-41e5-a157-1795864764ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "35434021-4c99-4eb2-b5d0-b612d3018b96"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3ffe31bc-86cf-49b7-a1b3-863cb8c4fd64",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f3bd30e1-0838-4cf4-aafd-ce04a94266be"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d4f66e3b-22b2-4df0-a918-4dafb4db5273",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3aa47c80-1a81-4a78-99b3-7e51dd33fa02"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1539d809-691a-4fbb-a8ca-074b2faec533",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c5506d56-1a78-42da-8150-1806a94266f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5edf986-b6db-4dde-b013-8698924a9075",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f21f7ae3-a312-4de3-ba57-f62c30987afb"
            }
          }
        ]
      },
      {
        "id": "d9b1c304-c392-4ce1-a535-ba6d8b2aa3c4",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c746b17c-a71d-4ffb-b15d-666b00c230cc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b505418d-a6eb-4098-ac65-475a1c18fa86",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "458e8565-d9cb-4a35-b993-d5421485f8fb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82094d03-338c-4de3-a3eb-4495e1dcc19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "802060f6-a883-4c6d-b766-27a61a85dc40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d6e589-94dc-4e67-a3f0-49628f281125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c43c261-5573-4d7b-9c72-dc3174b74ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f00aca29-513a-4d77-8d0f-3754e514388f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "482742fd-8f6b-4809-942d-af52c6940dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "806ad7a8-7230-48fe-955c-38d45a3ba49a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8743f5f-aa2e-42d9-b666-8085fcc9bfe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b46a14d-434b-45dc-9e88-3ccda422c3b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8a1f81-15be-49a5-b15a-e6e069052f7d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d21eca-ac41-4322-9d7b-57a924c15ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa94bbe4-473e-4951-8ee4-e50c26c3f3f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da46840-d153-4b4e-b7f2-2d34c88b30c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cebddf6-27c9-494e-b98f-cd07b2e45687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710eab17-9e7f-4d19-a8b6-7c7a534f2608",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64b0307-22eb-407f-8e89-ad5369e35486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2978d064-1b15-4de4-8638-eb7207ade313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b237a0-5bdb-4d5a-93c1-3278d91b6dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "77158cce-855e-424e-8e30-02f2e7faa807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f73d9d-c50c-490a-bf46-cf7fc420239b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71ae4eb-503c-4ddb-a3ef-549faac9820c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75f8cc03-a316-4313-bdaa-bb227357379e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4096890-b9ca-43f0-8e43-5282a9b53bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "010c2597-fb6f-4aaf-8c66-4a3fb236b308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b36ace-6ab2-4230-876a-6584d3594f75",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39edafc-8d82-4af4-b068-f99eb52f8181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5280d21b-517c-4395-a32a-7d5992993e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ac5642-595e-4778-9639-90bdf568f8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad38eaa-4f42-4f20-97e7-15db9c0a2610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58253569-6b5a-402d-9c0a-50c52312954f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8db7ff8-c906-40e9-aa31-9c518e24186e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a8bb9a2-3e7c-490c-bdb6-7481ded14d98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76c253a-2462-40c9-8320-7b5c934c9e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f28febe-a2c8-4e88-98af-7b21f7f537d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8f2c4e-1643-498c-b2e3-fae2b401303d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27e6fdb-d55e-4bdc-9f66-80e2091b57cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "867e0878-f72e-4924-afd0-1af13bd04f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31952c07-0567-4226-89bd-bce17621e8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eda8090b-5693-497d-b144-5077d36eb00f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19142514-8d35-4324-9f12-e00fc7f97901",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6e8adb-8a70-4297-a22c-5f78afb616a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e49c0f3-7c4b-4658-a8f9-6f52de90dcd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961c1281-f3d9-4e10-a6fd-9a49bd561dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "924325d0-0ce5-4281-b4dd-ff7e74fc1755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d552ef-a865-487b-8476-5d781d98b609",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "569c7c3b-13f1-45ca-9c98-478261175b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed80f136-0e71-48df-9bc7-33d259f0741b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5080311c-6a98-4331-9e82-4608a9ecd968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cb4be3b-c64c-4dbe-b713-fe40d182b04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87407b42-cc90-4c75-bbac-dd7e809b5cbe",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c294679-ffb0-44c6-8b54-8e4e5634179e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01caaa78-ed0d-4aa1-ba00-50572903b836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc495dd-20ed-4e70-8f4b-1fce8cc85bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ec5c24b3-1d29-47b5-b3a0-175469d458a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fafd88b-b8a2-4b45-839a-319a270d7a07",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3630d386-8f2a-4440-add6-39de19bef10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a92bf634-21df-4bae-b9f8-cfa146de007f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e39521-94cd-46e4-a30a-3cbeb428aeae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "23d0f8c8-00f7-4d30-a1c7-1e3ad95c871b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b53bc1e-866e-4acf-8509-486fd962969a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e508593d-157b-4f7a-a5ef-fff5fbfa5c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9a037f7-ac0d-48ad-a599-910cad71a4ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0abb885-59fe-4319-9309-25350b5ae355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6eaadb31-6f76-461c-8a99-28338ea565d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c91c0a-2a53-427d-8833-9fa978db003a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83568079-0cf1-4c0b-97ee-5e9f4f3cd000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03d3685b-ef75-4e7c-9df1-11e52a6876ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ad2d4c-317d-4a69-ad3f-a4bdbc833e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "19518776-afe4-4f18-a249-3e43acb1c4d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba03e29e-891f-43ae-89d4-131b49bc0b80",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbaa8f2c-b637-49bd-b387-0b55a74e82d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e05a92fc-a5e5-4b3a-933d-eff6171446db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2feb6888-8b1f-4817-83b9-1094854bd057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cf4d53d-d117-49ce-bbda-230c5029a4a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94dc7cac-747a-4fdc-b3af-7dc4bb02d00b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ab4a6c-b5c8-4a01-a784-dac0bfdc25cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "694f32ae-5cc7-43f8-9d0b-b65131686eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97575117-9c37-48c4-b7d0-9c8ce8dc8101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e014e2cc-d9b6-403a-8771-8cac96e08dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6fccad-a5d5-4d77-b967-8ed65cec03ee",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c7a69f-69f0-498e-9e8b-f867da2b10e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51efe41b-bb70-40ff-8465-19269a314ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679c70ed-d284-40b4-93e0-6529506e2edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5965534e-e5fa-440a-9741-d4254cfc72ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd66cedd-5191-49b4-a965-0aec2e70ad27",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b8233e-195d-444c-ba94-a73d85ca2be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49a295f5-abcf-4808-92d7-925ffa4890e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91831778-deff-492d-9ea5-046483134995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "494c7e7d-8517-4e94-bd5e-e6d77386721e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ca12fe-11c3-40bd-b4a1-02d52ab938d5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04e4a1a-9775-4f07-8330-b416f7658477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f80b6ec-3689-4636-9ad2-3d67033ad782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a632f0d-2cb9-4853-b66c-0c52f7cb9d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c625ae29-7e78-4c8b-9ba0-4a4e960ad218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "228b62d3-9b73-4ce9-8f19-bf4d54b18535",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c776884-f999-438d-b82e-0f1e78463919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52b5270c-38c1-4037-a9c9-b4c6dd406fd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3077ad31-46f3-4206-a4e7-e71ec0234c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c415a918-b522-44df-acee-fa8b42647e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17b0dab-c889-4366-b54f-2c2e25cf8c57",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35643075-9056-4a75-8d67-8d7bf625996a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "054aa326-8c9e-4d36-bd86-a1d9302c614a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a8ee24-cc5a-424a-b533-042f6275abbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc69714a-95a2-4d94-89b6-9b47526eac6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89e47dc-49fc-4048-b924-231f8fc0caac",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4986b60-7c77-4629-951f-b2bb4eae7143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a86fba0-7856-4d1a-90e4-80348bd87e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899d1d7e-9aec-40d3-adc9-ded4ab0419ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e906b66b-32eb-4174-89dc-857d21580fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b6d969-9a31-4c4d-b322-e79e40253bd9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b5105f-2993-48d4-8598-0199ed83d057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2f061b7-7706-4e55-8457-e06c396b3b39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e78630-415e-4deb-990a-8b104c1a1e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8654e7b2-dcb3-4059-94f5-b9563e8184ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064a4b77-79b0-4e3f-b89b-5350602752e5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc52a34f-5710-4912-afaa-d05a5116c600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3f39b58-7610-485f-ac65-33474f4ec8be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e140ee7-19c7-4bdb-825d-8dfd1046c828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6412db1-5316-42d3-8113-25f63e5e0a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef564ef-d740-4d66-91e4-09a79238554f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c81d72a-7474-4d6e-8833-fe92e1177d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "632b9a52-24e8-49ed-a851-ce4fc299ed4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75565841-b90e-42c4-bbbe-dd777cbdcdbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0bbb229-fe0f-4db6-b766-7defccfc3f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9433ea-df54-46a7-af4d-f8bbb03fd235",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59a7ead-c053-4808-bf60-221460b1d721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09c29bf5-fe29-44e7-8931-95ea5f6793d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf9aed6-ab94-40bd-ab98-0f87dec13ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e823f247-59c2-4d8e-bc91-5623b31622ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ff9385-a531-4c4d-9eb3-6672bdc00cb2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94aec84-13ea-4aa8-966c-8ea91fc38a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91e025fa-de06-4d71-aafb-0fb405f46608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1a3206-2a62-4938-9d5d-3083a99cf6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8bea9b0-893b-4912-83c8-d8bcbe3654bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b32d92bd-6f06-42aa-a459-60c799ce4742",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ac625d-85d9-4c19-84d6-3c9f21418fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f2c6114-2812-469a-8e5e-3f53f86b62e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d11b687-aa62-4514-8653-1aea3c865ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e80a317-9b7c-4d8f-a256-669a326c457a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6144676b-551e-441a-a8b5-faa555bb05ef",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7365286-fd71-41a5-b236-293191c602a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e57018f-9544-4af5-80f9-5bd20a744ce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d81658aa-2eb8-4e1d-922d-b4427d1b629f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "970f00e7-f5c1-49c3-b024-f78011b1aa6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486f9290-b273-48c4-a777-26a1ec53ada0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc38477e-b01b-46ff-aa3a-e4a4d0db1137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "454c291c-aaa8-4c0b-a7db-c4eed35c0a23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edebc94d-3652-40c2-a6b1-e3ed68669e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c12a5120-091e-4565-a6dc-6b0a4939fcb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8806b745-26ba-4deb-9b67-9416b8cce141",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7ad64e-a997-4901-b6ff-351a272bbf8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a12c57-ebd9-478a-911d-021c5f77c848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c7ff10-8cfd-4d8c-8cad-d9e58ebf774e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f55fea3-4e56-4b39-9f92-98b105f2bad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9c0ba8-1463-4745-8d05-305c935c70c8",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1665872-add5-409c-ad1c-572d25887946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a62e3231-64a9-4d86-94ea-913383d7ee68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3c93fa-fc29-41ba-ad80-293cbc55d875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4481d3e-39d6-46b2-8d82-a29e6c44a564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab56661e-5916-4ee8-a6f5-23588b1d944c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0833a40-86d4-4590-9291-3886c8d52ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b81c4f75-a072-4520-8558-8fc824dc3fc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc3bfc6-568b-4719-9890-9b0d2272b9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "885d502e-f62a-41d0-84a8-8033027f8c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59468d5b-f06e-4c50-990b-3b75f7a66da8",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "486ba1ee-9b22-4647-a79e-4ba39fd946ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ce4e5f8-3bd2-43c6-8c96-c93c94044be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da901f4-c19a-4299-889d-11b1befc7513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0f754b8-45ea-4c6c-ba4d-e22d4389c7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b208b0c-7634-4245-80c8-edd825f5c012",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec517ce-14f9-4983-9985-7ce459237723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0daeeb9e-b617-4cda-afe8-c65b707741a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412fc915-6b0f-4972-b34e-1bcdfa0deadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f63a594-cae1-4666-a0a9-6dc21185d696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a783f3-8b9b-449c-8490-fe67a88a64e9",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5257c752-72fd-4c24-8876-f745a810c04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62a95b51-8ad3-4906-902f-b18dcf4ab5be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d3b6f4-8b09-47cf-82a5-062ca6c168a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11a481f8-c195-4571-94b6-ad43fd40d227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b82f50-74ae-460c-bb52-5e69db5df355",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f651dbf-756f-4993-b7e6-9f542bc4ccb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c8b7414-09ae-4849-a223-398d49ad8219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb8b7fa-6e2a-4c2f-bd00-20ca7bd9ad3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ea479d-3cea-4f1b-ae6f-f97b93e26dda"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "50d77782-d407-4a6a-9d48-b947d186a72a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f700d2e5-9356-4761-b9db-b586a0339e4c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c947f39f-0c2b-48c1-8309-36dd33078c3f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0c692ba1-5a1c-4983-931e-0802c0a0cdbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcedd982-567f-42c7-bad6-d5ee651cf74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97de1132-13f8-42f5-adcd-686bed947823"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4295f114-ba96-4e06-978b-64e70c16e30f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9851278-62fc-40a2-a3c2-8d8a9ae713b5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "73c52a15-87e6-4b7f-8088-f283c3e60172",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f6ef37a-7ac6-4cb9-a284-41cf5d031569"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "411bdaa5-b579-4a9d-8a3f-2a4a04ffcf18",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "83b3fb81-2630-41f1-a1ea-1b343fe1d0a0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1610a596-633e-4377-a92c-3c45379f79ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "096f5751-d7f4-454c-8a62-0ac1ea294d42"
            }
          }
        ]
      },
      {
        "id": "ebc7fd6c-3628-4167-a021-d2d024520113",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3508dbd2-820d-4774-bd78-a283700f3ac8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fdfa71e8-20a7-4069-9dcc-3c07e71f273a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "404e1f71-e897-41b6-aad2-6393f5e6899f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62fa58f-cda9-453e-b81d-47730d0c9f33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "365d7731-d6c9-471f-bec5-bebc48ff72ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864d7344-46cf-421a-8f86-1b476ebeb95d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b5d01a-c5eb-43a2-b603-dde33e65becb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba9aec4b-dcfb-4b38-867b-4b0c27eaef05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd17429-1dc5-4d75-8e2b-e23b72f2e8fb",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7cedcc-d342-4630-b2f5-025f8c26b8c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de2a7203-c46a-433b-8444-26b1d8ed5597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb05a7aa-d453-4ab9-ab92-3f17b226c710",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2937e6-88ad-4936-96c6-6042f56543af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98025ff9-bdad-4c0e-840d-8b5fc8942f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c445a8-d430-437d-9b18-e50da831af24",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e4c0f7-1169-4f64-a404-517f1f95a498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "105c30e5-71b6-47c1-918d-3a3bcea351e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9247e480-74db-48cf-8eb2-cd5a4681e897",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d719f949-d6f4-408e-8725-42d591ae33cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5da5b1ca-af69-4d85-9033-0db32d44cec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa86e52-a28b-49da-bc66-5e5510b34f7b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dbd6ca2-9217-4fd5-8918-0ee45efcc86c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba88f733-8187-4f10-9214-34cb64d748f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc5fece-d3e6-406a-8ba6-ae2cf7408b2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7f534ac-f1e5-4500-9fb7-e42c25c96a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c62b38-32d5-4f60-9b09-469875c90966",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353c8147-a63e-4cac-a9f6-821d41221177",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a96d1b74-b95a-44ab-a249-da1657b55bc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a973baf4-5843-47a0-8bbf-bb6547767c7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fae333e0-d5cf-45af-98b7-5b33ece70948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b900f84c-f7ad-4d4a-a992-ac2d4f6880c9",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9fa051-f3ca-405d-9e47-0d1ca97f7b08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8702eea5-ddeb-4fe4-ac09-b2877d70d99a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bfe937-b8f9-4655-805e-ba19dfeaa09e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e08c2f-1e45-4e93-9359-e8ec49c6425d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4758c8-37a9-4cac-b7fb-3e9104eed462",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53748683-dbb1-4057-8782-ecb1ee25b0c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5015fb99-2d31-4a79-82ca-9be9cdef3fbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb79432-00c1-462a-ad7d-04e2f5b8183c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "402d86cb-4269-492d-8bb9-ebba526b8112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38aeb1dd-4e70-465c-857d-bbc7142eb14f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bed9918-1566-4466-95be-9869aa9d8a79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07bcb98d-a430-4b8f-ae7c-285cf289d3bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bdff5c4-ca92-4225-be33-f017176e2c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5093fca9-5001-4d9e-8339-f6b899bd468e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96a85e5-0aff-4670-8166-a51ce48d6662",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771a875a-61d5-4e95-8596-2aa944adef8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bebee98-4ce6-4a49-b0e9-e3c0e6b765f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5233169e-dc28-422f-b31c-03313c18fbda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a689d9bc-5a46-4dd2-a2be-c73f6d2cff43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417aa634-4646-417b-99dc-3f9960967b72",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474a59cc-48e3-42b3-a46c-e841160f67e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee9275fe-64bc-4ff3-9728-9a97bb4605a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d24ec4-e2f8-47bf-9d1b-13e922009d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f112f55-28cc-40ba-8c68-d5aba50c6dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416909f1-ce04-4cf5-8a65-b974aa933b63",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af249b37-e532-4591-a4d4-23ee873c4667",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fad3d59e-1ad5-49c5-8133-f2219ecfb349"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1c49df-eb5e-4e84-a086-690f894911dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06c3d19e-2a8b-450e-8dcb-f31f78bb9ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe4c696-2584-4d3b-b4e8-9445982d29da",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d271c8b-fc6d-4379-a841-29314f171c7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb722b8f-cbf3-48bb-a8cb-614353ceb151"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c11944-1be9-482b-a7a8-5ff1b0a6fd03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d0abc5-ee7c-4957-a4fd-04affb79e442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f980ffc-cc45-4dd8-8d6e-6817275e053d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be435de-4e2d-4acc-9641-7d3fc0e6dd5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5335084-947c-4dc5-b690-ce9e732f57de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbcb781c-5b39-44df-bc3b-1ae31e794f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef97f375-7041-451d-99d8-6f4b9267a7fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b124b57-aa4c-4f60-8953-b1425c669938",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2924e5-df3e-4b92-b5e1-7fb2357c1fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b673d6cb-450f-465e-9104-1ec059fc5026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9289a605-d997-422f-8fd2-e69573fe892b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eaff3d2-41ae-43a0-8401-7264625ab324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a08b3d4-2591-4291-803b-6cc0fc290694",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83adf5f1-ce95-44ab-a09f-4952a0b6038d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5307092-1b2f-43d5-b313-37dbbc79e9eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a00750a-170a-4a54-8150-9a6a451a9fa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc4fb005-0c36-4e0e-a2b7-58e78808d7be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747d77c2-4a8a-455d-bf5c-76f1f0c07e6f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a8a6ae-f832-4f15-9bc2-b1bb30c6bc21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9ea2c9a-5c48-4b0b-bc25-5135db6dec42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "427e9afd-95d1-4c55-b725-6805ceb40451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc26694c-3b5d-4163-b23c-8542f18a8e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b4085f-987b-4ebe-a90b-e4ec0c300482",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff21f06e-c5f7-4530-991d-caab88290549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbc78688-adf4-48d4-8e21-b3150673b05e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01d8ebb-7e93-463a-a402-935932c00616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bde6511-bbe3-44cb-b427-6d61913ed2b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e1feafb-2133-4c83-813a-1c662c665945",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4406ba3a-ed46-414d-b4d8-83d8502f52fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b04e1a44-2636-44c3-a112-20f750ba9e23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9cb89b6-8435-4e52-a337-7a374c820828",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "410593a5-322f-4b1e-b3df-8affd3a5ff78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022f7a3b-d050-47d3-bbb6-50c3bd886aa2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926f913f-4433-4f70-b78e-cc6ae09b374e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fa889ab-c733-427d-b665-23a8bb64e751"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb5923b-7e68-41df-bf52-adfa3e527b49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f99f1ebf-f1f9-4187-9d81-c1e5e44d1d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf710ec-4f06-4bbd-bdf7-d2bf3bcf8eff",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161914f5-dfee-40fd-be30-fd2f9a146e66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90b2cd15-61fa-4b54-8b54-e2d9060044e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85451f3e-151f-486a-86bb-b43040355df2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9390f894-cc08-4636-954e-d449307bb2fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e123c3-69bf-4139-a55c-735c36465002",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55fbfff1-7836-48ac-b69f-3bf25f64b5b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8adc9e7f-b9a2-473e-953b-08e40cb0e88a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd550c0e-ed63-4ddb-b8d8-d1ad20c50279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8184fc04-5188-4d5a-80dc-48f7d764fdf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b33b2d5-16fd-4727-bf04-94af9d3900ab",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83a765d-7d4c-487c-b055-e740ca61f144",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a10894a-080a-4122-96d9-49966d1e428e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c3a024-1a0c-4efc-b3f6-b47e26ad6ce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f764575-be48-4843-8255-089d3c79b1af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a0932a-2989-410f-bf02-219a6c323146",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7048615-3f68-42e9-a257-722b12d640dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f01308bf-a7d7-4254-b694-1549869c8610"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35e94a0-c293-4f3e-a0c2-7d184bd87bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9ac3e18-e39a-4126-99cd-c9920ad68561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9bd650-0ca6-4e8c-995c-3a3e492b9d9c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54fdbba8-6a17-43c7-b327-15850afe9062",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0228805-7346-4c68-83ae-47216073ae11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c09c74e-b27c-4479-98fa-30432be1c42d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ececede-f24f-4834-a90b-b65840e7b253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a505cb00-c60d-4f25-9017-dbff37937a4e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fdd248b-09b9-4b2a-b097-b082672de431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65d02d4a-6205-429d-a8b0-41f94651b8c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4606fbd-b38f-4cf4-bdf8-34c2321ca8fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "765c2278-d04d-4eb4-becf-ac00811c3773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a357e9dc-6a71-44ca-a94e-78c454e67d9f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "829dc373-8a22-4181-a589-514b4013105e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5c0efc2-bde2-43d9-8c53-b89e19df1f70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35c3e47-8cf2-4f14-a40b-99e638a00cce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc532d6b-8464-4f58-9ade-9567abbd9bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "686fc80d-8b76-4465-9e10-df6c0a2549f2",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85bd2302-2eb0-4103-8a70-16b8ddd2fe80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3305c388-a01e-4824-a5ec-18f3ae6f41ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c655f483-c90a-45f3-9432-f34b2e0a4ef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4dcbb4c-2962-46c3-9e7f-b0429ac10dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a396efa6-8db3-4d74-a47d-77dd05ead010",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc716c1-4526-48c3-9f79-dae50d47b5da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7632b8f6-caf2-4080-98b4-c5559447c718"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad84d500-227e-4139-85e0-137b74e438ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0363c7d1-8bf2-45b5-80e7-a23925625c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c9d1013-2ffd-483b-a5c8-2158477398f2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5232ba5-6bf6-4593-b2f3-f8e25adfcc56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74729c7f-fdda-47eb-96cf-a3e7ed247aaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0841151-ffcf-4eeb-945a-997710dd3fda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b0cd3f4-3d5c-4b6a-9e8c-3e42ae0167e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd89376-460f-489a-9601-0a0a3abd9f4b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a141e83-9716-4221-914d-a338d2591c2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00533c84-adaf-41b6-94df-6d980e5e48c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5524ffcf-09c5-4731-999a-9d7256bda5e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d20994f-0369-43f7-aefb-291a12fd6a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9935223-e61a-4f88-b8cf-9bf35789ca6a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3474fe5-bbed-427a-9b30-5065078a190a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c6a385f-8aaf-4869-acee-7f549a7739c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5461d6-9f41-4769-bd96-1f2cce042104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "331c546b-96ee-4100-acb5-0a1b8b17b7b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d189f37b-c6e4-4915-836e-9f175bdeb932",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69e515a-d360-4401-b680-a7874b7b5bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f70d9bd-fcd7-4133-96d8-3de0cb61006f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a43812-7b0e-4ca6-9f14-608b12ecd292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67580a9e-8f4e-4afc-bb2d-ae8d603318c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d3f839-07db-4538-80ea-c4d470b12941",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df680e2-fa66-4fef-b8ed-93d7dfde9a65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e573c243-6d75-4e57-8da6-76eaf3b3fe0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef03e483-cf67-4bea-bf7e-06cf0793afaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54cd0b96-7b37-4cf7-ab43-ee2fe0905292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13f5be4-d688-4698-8416-ba294414d57b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17742d3-8ea9-4529-b578-56ce9bbf8ecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c222e0dd-cf51-4e56-971e-e986f624d991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f46c324a-6d01-4694-bbe7-74a128990f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "711578bb-b9ba-48ad-935d-e29ed3493514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840bd064-71a4-4ad5-8ea9-94a61d3fc5a3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16301920-93a0-468c-9e7e-c22b92eb4e9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec7c89f8-648c-48ed-b42c-706724ef9c74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "583769d2-7208-4ea3-a060-106d0462ed03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3615e396-8142-491a-9d13-bcbe1db42380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3fad1c2-0004-446e-ad99-77a035fd3139",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ddd1d2e-b681-4156-a873-67c1c0d7237f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0abad79c-e13a-4c39-b919-2cbe1564c7a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e832838-a3c2-463c-859f-6aa2313ce439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5231c997-fa8f-4c41-940d-274c4f7ae0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "809aeadd-6548-42d8-81f2-53561346f5fe",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8794c8c7-f9c1-42e4-ae11-43b210eb3f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "599d5299-1d4f-4914-8dfc-2b6f348ddf8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c220fff-3165-49ee-a827-298304da2be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de9ea969-e73a-413b-82b9-3ba7e96fea98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0bbb08-8db3-4c7f-8936-76c6da141954",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377f3939-7a3b-4939-9e50-a92c71e5c394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ea07fc5-60ef-4f9c-a423-b4fe3b432af4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d7c149-9263-4542-b3fc-3e1853b15b9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65ddf2c3-17e0-4d52-94c6-462fa4a70140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b02d908-7eaa-4724-8163-2fa2c676e051",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d7359a-024f-481a-8174-324a5636550e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2720713e-b180-4e3e-96b4-c60757b09f03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71b5bf0-96d9-42ee-8452-c8b0c403608f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00b2a070-1a98-488f-b030-2ecf1ef1e321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1b8744-acb9-418a-9672-86d46b5a7e3e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a922cc25-b141-47b1-bcaa-bc6c5e76986e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a73f60e0-a828-4576-9b59-d973ba8f7102"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1e6d69-6782-4e27-ac9a-98b1bfd495d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "806df27b-f059-4556-bd66-808ec2f09a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa07413f-5012-4864-bc98-66249840fa32",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e32ed4-e386-4cb7-a77f-5e37587c022c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1b08279-b973-47d5-b635-8e0ec27ce5b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ed2a06-6c4e-4b79-9b95-51c1fa6ae902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e03b0b48-5218-4a0f-817e-c6c97f754f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ad4c0d-a056-46e6-bcaf-40db8281e62f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f11442-514a-471d-ac02-94132ff59764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b51abd92-b59f-43f2-bd55-e8e25d9ea6f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30724ada-74bd-4437-b692-413a2ee59222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c66cff01-9a4c-4df6-9bcc-3241149d9c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48e945a-29b5-4510-8ef7-abf4d8864dd5",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e41713-edf4-44e9-8606-c82110cbe4c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd6099df-4e31-4dfb-9b3f-a7ed9f37d372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13c566a-a866-47f9-bdd9-fb90814d716a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f77038-1d5e-427e-be2f-42e17188bec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9daeb956-7929-43cf-8d5e-a65908cd1380",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8199b06e-5e4d-4ce0-be5e-bbc91f25c420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68961bfc-0514-4502-9f1d-8dd457da80d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1577e8fc-11af-4b7a-bb46-73bcc9bd6376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14af029f-18c2-4c47-ae4a-a58e7b036bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292c8172-36ae-4e48-b4c8-3e8c5fb4901a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b484a7c2-039b-4675-acdf-89bd051a1ee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1b79a70-0711-44dd-b2af-3fe3c3e96922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e43c223-232e-4d1c-bb82-a7db484f7aee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88f3180f-544f-410e-80fe-841de8041d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44b219d-74bd-49ff-9702-62690aa48c59",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7ff7be-8be5-4d6a-9472-62c20942ed95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf573fba-376b-4c02-bf89-aa3f3284e62a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "844e14d0-041e-48f0-b4a6-fb58e8fc89e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5923dca-e3b9-472b-8435-af56f16591ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5c7119-c48f-49dd-a228-7ed6371e1342",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "203ac19b-38c3-491f-91dd-55746a4c17dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc49f6b7-fb61-4bcf-97c8-872e25e9499a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "489b5731-6b44-436b-9bba-3c6879f617ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f5240a-0358-434b-8904-d603d3aad74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927eaaf6-9d73-4f4f-9e41-38ce7a7c7d4c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a7e0b3-1fd7-4b65-9ab1-f4284f1f47a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0afb57ff-ee9b-49a2-a0e8-a99ffcd4abf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "978bb27b-9226-4cbb-90c0-633a98a4a65e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3baa4492-b300-418d-be70-00077ccf01c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89c24f3-052f-4a57-b5e7-f34a48ab0584",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6338e087-d8b8-4e01-b60d-e0b92a80fe0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "681cf52e-869c-4448-875a-1576a537ddd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4463b58-daf6-44ac-ba69-9d8d564e8fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf3c555-597a-4f45-bd55-f423f5c4bdc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a68d5f-421e-41c2-bd67-978ee0d6c25b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425039bd-431f-467d-8dd0-673a90fa1686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c3d04f1-f187-44ac-a53a-5fc4e7d8a314"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8795ab6f-14c1-4657-b33f-315c27c90133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53c060f4-4aff-46eb-83df-2976b9b09998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "946751c2-96a2-4b0d-b8c7-6275d94720ce",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92182feb-9907-4386-a48b-4b5616a0613c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b23ede45-4544-4901-a3ba-d3293f8675a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e1106c-6cf5-4803-abd9-f6a8b046d861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76e72902-944b-4221-9c39-b8ed62867b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aacae9bb-dc26-45ed-852d-b317ee212ea2",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca78d0a-580e-4989-be2f-7fd80d364352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90d0debe-3b07-4c14-add8-cad7233c62e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76c04d8-ed97-49ef-8931-bf5a712a7286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1704c1e7-a3a9-41b0-9046-85dbf05d183d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "071e0291-a387-48c8-9d43-ddf747519a58",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d267c89-ccbf-4818-846a-f625d451ed0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e855a814-8810-4f14-86b8-a0557dd2ebf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d4bc2e-5593-47a4-9a7a-900957bbad69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8659834f-cb38-4c3b-8b72-93988d2454d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47a46a1-6959-46ad-a510-2267e4789631",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4156848-bf14-444c-936f-285c97a7067f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b08098b-eab2-456b-a23d-4b2e3aeb524a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b35c12-656c-49dd-8784-0390daf89540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dda79f79-1300-476d-a9a9-17fb3594346d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ea06f9-30fd-4563-80c0-64ed2fd3567f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886bb15a-4c75-4590-bffc-90130e63ad9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f145a0a1-cadc-4c33-91ee-768d7fc55f6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1893c62-4424-4bd4-95fb-6ba26cf48601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "680b7fb4-a332-4683-a789-d29679b098cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c668138-fd1c-4232-941e-7f46803d16e3",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19576e87-af73-4aad-a8a8-881bdfa71e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "442880d3-b5af-4ccf-93ff-7744e3583672"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df687035-6ba4-495b-8e41-c4a8b0ffbbbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae2da5f0-0166-42d3-9fe4-bb6106d35a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dacfa16-2854-43af-a64c-10afc4a27c06",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11354945-de7c-41c5-be87-c5919c6872b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "610f96a5-ecfd-4635-b996-61af775ba767"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "703ce7a6-9382-4133-a40f-3b6575b95fda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53745681-7238-4214-adb6-9b4132986bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7a6dc4-1285-412c-9c41-069a7df2365b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579baac5-0b95-4359-8ebf-aa64d62fcd13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00bc6fac-8840-4ca6-be4e-c0094061084e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "635dee37-0428-41a5-8311-f900fe679823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb826e00-47fe-44f1-bfbc-8b34f68fdf28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5b7434-f666-4d66-ba5f-ae9c6e1fdea0",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d336d6-c07a-473a-870a-33f2effa4cce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "690c1a9a-38e1-4e54-8672-386d7971f9f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4efcbdbb-215b-4412-8522-9c1998062bea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "252700ae-be01-4f6a-b1ef-38519470a548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a8bb3b-d9cc-48ac-8f10-7fbbd4a40bc5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86efd872-a6db-4e36-8440-c79c4325f614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11ef27ac-6a69-44e5-8317-6a0ff109ca2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb27d1f-cfc0-4063-948a-6931911455ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d9b9acb-edb6-4d47-b6c3-4209bde386f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e88594-b4ce-4de3-8120-bba66ab662dc",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae127305-390b-4e64-a4de-b61f2e9f86e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abc79112-0318-40d8-a335-b9ab24e06c98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96457be4-2ae4-460a-a5d6-af94af5d935d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6cdba5a-6f48-4d1a-b8f6-ae1925fb1152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486b884b-5f54-4887-a899-dbc160453372",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347623de-9337-40dc-a153-f87919597a2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "900d8b98-1060-4b5e-870a-de76b7177aba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6953f3-372c-459e-ba22-2bb3e0a6efd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ecf20f5-daf0-4b21-a581-254554cff25e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a08437-ee6e-4331-9ce8-70563e6f0aec",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d990aa-e91d-4ff9-b9d6-187033607bfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "008e4745-dd8e-4b14-a50a-6ad65c263c9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c943f9b-79c8-4415-a5ef-dd030c4537d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50498a87-6600-4e04-9ba8-a37d43624072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2644cc-bf08-4aa2-9f72-da8dc3f28541",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c18da1-372e-4cb8-a157-3d7f89bf53e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77b5e0ad-7aa7-44b6-9d74-98b0b8a05ce1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e76358cd-9d2b-434b-a1c3-bbecf6eae1ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a974ba3b-ff61-4e12-afaa-6573313fbf32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d175afd-df52-487d-824b-58517620edc4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5c1288-d13b-4353-86d6-25c4a8321cd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54338c3f-344b-4733-9987-a05ab8d5d3e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ca0147-d596-4779-9a0a-5f69db451242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b4d7ea6-6211-4e54-a79f-8a5c518d76f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0facd6aa-8d2f-469d-821c-677c22847946",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d75005b-7a65-45ea-b30e-d20bee62d8dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1d95366-3d68-4739-90fb-dbede7686cdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "192d7dff-cdc6-45d5-861e-04e0f7a3f067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e212c1-756b-4d4e-834c-e03e79417f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9294698d-b199-477a-b6a4-c8833a46aae6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f18589-d5b3-4bad-a6d2-5c2224b04f5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ede48a67-ed18-4144-bbc5-16d7b745eee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b21085-5021-48be-854d-602a61d93a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7b30e36-70cd-4903-b6a1-cb72c854843f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2b1127-378c-400d-a0b3-67f09fef1542",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2e9361-0485-470f-b9e6-4bec6971c219",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36aa2dd7-2b41-4f17-bd85-d0653095a70d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf68f308-3697-4587-a8df-4ba740767dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ecd8a34-1c2c-4fb7-965f-1762d1cd1225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5bcf097-7bd3-419f-8f5a-299348af406a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c5bcb1-9c88-4c5c-80ec-09e1f0b17fe8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa204b00-b9a4-48db-a2ea-a6ea2c56bdd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2b031b-f358-49e2-9a1b-2e78d16e7ebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "479d08e3-b4b8-4ade-89ea-28f954b81d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413e55c1-6526-435a-8905-23310028072f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c6200a7-39c0-498a-a06b-c93bc90e39e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aff0d129-2e1e-420e-bc06-0f7a1f931edf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "794f37eb-c0af-4ea0-8aba-70a993a2a319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "255aa716-8fd6-43f6-b7c3-21f76fc82d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b679d3-d35b-4aa6-9d7d-360b8a67680c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac7b6401-cd9f-45a7-9f1c-0083be51a626",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45169ccd-e2db-43fe-9b37-1263b18bbd71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae102291-0127-46cc-8412-9c6a4fdd8ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a80d38a-a9fc-4480-9d5e-7f3d05d58ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e07fe9e-718b-4497-ae8d-c96b3635e753",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fbd3b3-2d99-4c3a-b3a8-59fbaef4f06d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b4dd872-2a56-43dd-b0d9-e448089c9e6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ad662b-0c54-46bf-8d55-84059392ed94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4427cfb-d48b-47f6-b2dc-bb9f36b5cb6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888459e4-96c3-4240-abda-24f4b4c24475",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517b7559-be97-4b6b-ac53-9d8080085ac3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7422921-657b-4f09-9475-0395a22831f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20427085-5216-4801-b247-19df206b34f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f989a113-749d-46af-bbd7-313ef0e22976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f390012-10ab-48cb-a1d7-623f0648dfef",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c8e9f2-d826-4800-97cc-d481cfb26844",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bb1709d-facd-4db6-aebf-4a650fdfc0c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19c2615-254d-4b0e-ae3d-aace50e68282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c81564d6-2605-43fe-9387-f71f516a0f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490cd27b-7ace-44a8-b9dd-a483319dbd79",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a472253d-7a70-44dd-86d8-181c02e9b316",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34db3d43-c7f9-4a85-bda8-15eaef4a2642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cad1098-722d-4894-ad27-9912b2ddab20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23d1c64e-bcad-44dd-ae24-dd1b5c0fbac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "189fc74a-ddb4-4423-a9bc-7aa31f97a4fd",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3f388b-fff5-426d-9f9b-967aecfd9401",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "009ebe08-f046-4c8f-aff8-62cbedbc5fe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff45d2d2-7f18-4b81-89c6-8a6d6e69967c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61168011-1f95-402f-b79e-ba9c128df938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432a0c0f-1c61-4e36-8aa4-c74ba8fbac62",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b16a173-5d94-48c1-9efb-0b33408258c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f595e0bb-55b5-4501-9cfc-4cb6cb983b57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d817dd-c867-44da-8dcd-dd9ad648a2da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d3a24eb-431c-4d50-a64c-250d2928ac86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d114f759-56be-465e-a9df-cd9481967d72",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f57a432-abe2-4c4d-a6cb-127fd5c13a53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53428369-9b90-45ff-9a2c-4c2cdb589871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dccf88b5-b0fa-4620-acca-daee2bc3a91a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bbadaa2-8834-49a0-a561-fd15deb1133a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36dee0e3-3d83-4a85-a69e-522df714d890",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8ee2af-cfa3-4e39-9fe3-413893d48a19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4d4b8d1-b1c7-4aee-93a4-77f4a44fb14c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3592d142-27c9-4ba3-8b3a-fc3b986e1579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d73939da-6757-4a9c-88ac-1a1047d910c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b48c15a8-56ad-4459-a881-accceb0c5db0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f554e7fc-d551-4405-a92a-f138da9207c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ae936ec-7a74-4ba0-bc91-06a932437ead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a6cae3-5381-40d3-9faa-31fcae8f9703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b18545ae-c4aa-40ed-b701-04ecb2e9eae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37aeee3e-de9b-49f3-a6e0-d097b60061de",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6977c774-f8b2-433e-b2c8-777b7e6fad8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01bc1b2c-4bdc-4bbe-938d-dbe048305048"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96bf32b-ce79-49f5-8ef2-684d4a04410c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e9db51f-3b78-402d-ac98-41e2c56db9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a68f774-1aea-4d70-88c1-500a4a57b9ee",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e8fed1-9279-43f0-9163-28777d354d12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cda2097e-2c2f-4103-bb04-93ab6d97873c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "813c7b54-374c-4909-855e-882c79f0f02b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cd00a79-7158-47ed-85fb-2dec594e1ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "094107a9-e5bf-4a8b-9353-858d69502b47",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6705e2ab-8445-4bc5-94c3-93e8f08dcd73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "940a42e3-cdbd-4b32-a5f6-1fb096cff94c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcfcb6fc-334d-45a3-a596-1974f7b14ba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "920045b5-776e-402c-940d-ddbfcd305bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf5ba3d-d4dc-4e35-a16e-7e07a71d0af8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f514a4e9-b4d0-495c-87eb-40aa75250d28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2dc45d1-2265-4d5a-842a-9c56d6e89955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d58cbf-b15e-4937-9880-7e9ea81c5464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2153e542-888a-4114-8287-d74f7ea67b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339392b0-2fa8-43a8-8a16-78f2f14fd85c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab89daeb-21cf-46b4-a11f-0ba1f5cb3f14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f1d2a88-bd98-44fe-93d5-915a61da7cc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62fa2857-fffb-4e0f-a854-58fea02fc955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dfdbf78-3ddb-492f-af30-bbb416f6c17e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54df0d30-7c2a-4128-a85a-cf70d8bba619",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b71da37-9a38-4bb5-b01c-cf3cc9caf05d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5a1e930-f3df-4ee9-8464-2eaf7bd27357"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6830ff54-66d9-49a2-ac48-9a0d9905d015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "739ee1b0-8055-4adf-8ed6-28d2958c0dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dbd3a4d-c747-4273-a9a2-dfb904d2f3d7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db711cb-3a06-4add-a12f-9bb9e3170069",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c33365f-6fbe-4e0c-9aad-53ee2d22371f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c697983e-35fc-4def-8b0d-36ef2265b48d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dadac078-3a4c-468f-bb6e-f442a9f46610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775cc38f-32c3-425c-b339-b1eee518aed8",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0613e62d-31d9-4844-b07b-61073a4d20fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a45159d-fefe-4aeb-bb22-7526d4e511c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "261dc3ff-a14f-4d09-9f8e-bd6ba8c6b231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a68c9b00-ae74-4436-a134-f8bb7fbefdff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13c414e-beff-4d74-9710-04ee95996f59",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff76dec-81b7-44fd-9b3d-14d565b2a504",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99b5064c-a840-4c74-814c-f4bb8d6898c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9912e57-06b8-4348-876d-146e5c737119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e8c7a7f-f55d-424c-940b-6450487dcfd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac0c354-ef6b-442b-a912-dce0730c3c08",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe37e4d-c012-48a4-8384-e8a2c4bf118a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a88928ee-c6ff-4ed9-b8a6-6650865cff72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78cd1e1e-902b-4328-b16a-295c59bb8b55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d5c2ef0-4736-45cf-8d5c-d096608f8eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f95e5b2c-5893-476c-a5d1-c7d846015099",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9f719e-279c-4662-852f-2ccd2936eba7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee4e240c-286e-41fb-8fbf-87417dc68756"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf7f1ad-9c91-47f7-9d41-99e7ed4e6cd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "151e3e14-55d2-42b4-a194-be52a2cfbb57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458e7d40-b66c-4690-bd3d-a221bd24d3ed",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ebd267-cf94-43d2-9c2c-8a7ed59b2794",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87a59f10-6b5c-4679-a2d1-a7202fe2fd61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5f95f8-5808-4f65-a38e-d2cbb4d5ff86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f145aa7-a8db-438a-8e43-9d8c556448b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8503515f-2c0d-4281-8ab3-f852efd78260",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f73755-f8b0-443e-a7e5-32664630baf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ad0c041-3694-4fbc-a2b9-c41c21f15b3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d325bc2-26c1-4da5-874d-8cad4c7e4bfd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a5c5d86-a996-468a-a31f-b32711f35359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c042b81-3713-4e33-98a7-41205c4cb596",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49a4874-ae14-43d1-9001-b81fde712971",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6de82d1a-6d7e-4969-865d-70a499999545"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8908577b-910a-4ca6-94c0-4f442e030b32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb3e4f0-3db1-4296-9101-cf5d20d7c48e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d7d0f0e-fc34-45a6-b5f0-858a2daef1e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dbefaccf-24fd-4f66-9cef-9dc6a9dfc66f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bc03bb4-c68e-4b8e-ac48-df51a8cd859b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "14663926-06dc-44f5-9db9-68a84bd25a99"
                    }
                  }
                ]
              },
              {
                "id": "c0e6f8f5-9f91-4971-89e4-8c7b1688498c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "89489421-1268-4181-8609-b44a2c7feca1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae6691d-2a2d-48a3-a5ea-3dd7974783b7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "357e8ce9-32e2-4167-9f61-1d4517ca28c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "517f5831-4d59-4de1-838d-32aacc4b050a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a872946-4793-4976-9af0-89d368484173"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "776d8b4c-8fbd-4f57-a0d3-080c174140b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b987ad9a-0ed5-4038-8f78-873e1b2e0900"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "57c69c5e-24a7-49f4-a4ac-18eb869ec500",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "207a07df-33e9-44b6-8176-b85b4b848e5c"
                    }
                  }
                ]
              },
              {
                "id": "04953db7-baba-4c87-8ba2-9e5f7d521b04",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "127bea93-972a-4d45-b6aa-3ea403566619",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c17291-3b8c-4c34-b231-cbaabadfe5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b45c88fb-0dc9-4c70-9fa3-8cd54154ac07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86d9b49-94aa-470c-86f6-90109ee2fd59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3c1278a-47c6-4c27-86c8-d3e29b3fd2f1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a28bfc8a-6b84-4e3a-b075-b6b6cf41cef8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "613c5015-16bd-4c7c-b71e-9e5105d61c0e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c55682c-78ef-4a67-8d53-9d2a87a60e89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "39c53fdf-0d8d-43b4-b1c0-2e65be6f0ecd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ab8b9ff-66b6-4857-bff6-9fabebcad5f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5a7da7f-fc3d-45eb-953b-0cc174353de9"
                    }
                  }
                ]
              },
              {
                "id": "2dfcf5ff-5278-44b1-9db5-6c18a8065e57",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "60df1d6b-572d-47aa-86bd-c959a59c2533",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "12c3d211-c046-4877-ba17-1ddac34ebf29"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1bea4b30-c427-460c-a47f-a3a1af2613cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "413fe181-1174-4ead-877b-4dc222315ed6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e354bf0d-b149-4830-a9b2-e471a99f1a52",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "76eb774b-a24d-469f-93d0-079abfa29e03"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b804d32-6cf5-4f07-8439-a58e75c3bf8e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a3d8e967-9b9b-4db1-8b31-dd198dd74fb5"
            }
          }
        ]
      },
      {
        "id": "b96492d5-ae85-4897-99f2-485c8a195f57",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f21e0d02-cc4e-4020-b109-974b5c117932",
            "name": "Negative Testing",
            "item": [
              {
                "id": "767819b4-ff5b-4f21-bd95-d0ab378b76a8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1068378a-628c-4f07-abfd-7fef153d353e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec66868-4c71-4abe-b726-1182e0f9d296",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f0126db1-1fc6-44dc-a9c7-9d226d244414"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb6b7d8-80da-42fa-8cac-36cbbd73d5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a2de75c-ecc8-4e46-b350-72596a2983b1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f71062e2-87a8-49c8-8869-e7bb90bd535d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7258c2dc-ee69-413e-8a06-d1ec0b00c300"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9eff6651-f476-4e26-b1fd-03e207fdd84c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d51044d-2ad9-4830-8956-4502ba3899d8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d58e9f9-1883-4baf-a61c-668b5e99655d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c925ba44-810a-4a6e-a3de-c51d9986c0d6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd1eac99-97c5-4d0f-bc39-d77943432535",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c346acea-7c84-4559-865e-8ff81fed2bfd"
            }
          }
        ]
      },
      {
        "id": "ebd86199-5000-4c43-b72d-383e5c3b5d9e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2e8d43fa-e073-415f-8578-732906aa88ca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "43cb0d58-9dbf-46d1-b141-614d6e68d8ea",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "14bf3bde-b2ee-49f5-a026-1e3580c6e456",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09e649d-9fc2-4478-8898-f578fceba2d7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3ad0425-23b7-4548-ae2c-cc43747e9eee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "341aa3cd-43b4-494d-b386-632351d09a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "808203c9-4f8b-4a8f-832b-74399e7641a8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33340136-fac6-45fe-8a04-0711d401e1d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22aa9bc4-7af7-4bfc-b1b3-c2046f830aae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc3a3580-15e4-435d-b7e2-039f36b0cea6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3842dbfc-312b-4966-9c65-a1e7ac61b49d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5afb3f5c-196d-404c-8d8e-7ba4811142f3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f9d59cc3-f506-41f3-8dd2-28fea7506f97"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d4cef8a-a8c8-45e3-b653-009e27f08f5c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ecef060c-8e55-495a-ad8a-c35778a0e3b6"
            }
          }
        ]
      },
      {
        "id": "5d732a19-f615-4bb3-851c-bb7a2a28855b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "cd8dfb7f-c4a4-4118-b843-7d0e38dec74e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "189a2973-3bcf-42d4-8357-76ac067d3cde",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9065afb1-b08a-4cbf-a10d-a79c5f96dd03",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96eb5a95-1346-4025-bce5-183e840b3533",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "827eec98-9592-41df-b767-6f9a238d293d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d13106c-c372-4a9a-a01d-7d1c3d231d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4eac1128-5141-4a8b-89fb-4e0c64ca3d81"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5eb1cb5f-487b-4698-ae0a-c5e47e29db52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b937c58-a27f-4576-bd73-413b0ec9719f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "80982c24-6b0a-4458-933e-18046cabdfee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2371d833-acaa-40f5-bdc1-f7ace15a2d83"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "668feeb1-92de-4d4b-879f-8a8b438e3962",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1b174699-5246-4c50-ac66-cbe25acb40eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df6e037a-d31d-428d-ae9a-3a85ce40b4d6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "57c1507a-f011-4093-afd4-b028fec77c53"
            }
          }
        ]
      },
      {
        "id": "3c6f340f-a289-4c27-8f59-5ed093df3f98",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "398ebf9d-6e9d-4e18-9902-441859be22ac",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "29ec4f05-3602-40ea-8b5a-d3a07e8c475a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "0d96c9fa-b35a-4192-a420-eca873970848",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2777e913-8f3c-457c-9252-db6b86c7fb7c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0eb67380-b6b7-4afa-a6f7-9975247a4ea9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 12.21031746031746,
      "responseMin": 6,
      "responseMax": 246,
      "responseSd": 23.575768867144006,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1722559198749,
      "completed": 1722559209921
    },
    "executions": [
      {
        "id": "2735cd03-eb05-48a7-a05f-2976aaa6ed8d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "fe6d9e9b-37e0-4d91-89af-924b60855f80",
          "httpRequestId": "fca123af-463a-4976-9b8e-1968643c96d8"
        },
        "item": {
          "id": "2735cd03-eb05-48a7-a05f-2976aaa6ed8d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e94586fb-9d23-475b-a3ec-e575bd893047",
          "status": "OK",
          "code": 200,
          "responseTime": 38,
          "responseSize": 0
        }
      },
      {
        "id": "99e53534-31ab-4a6a-a77a-e37d55d9f5a7",
        "cursor": {
          "ref": "c3372a57-7061-408c-8f1c-440d4e3bc405",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1c27b823-b9fa-42bd-84e3-f66fb52fe13b"
        },
        "item": {
          "id": "99e53534-31ab-4a6a-a77a-e37d55d9f5a7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "761a8939-522e-43e7-9113-deede9911e30",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "06c9fcfe-98ca-463e-8c3e-26f8096b7367",
        "cursor": {
          "ref": "998c07d5-adf7-4742-aebc-11fe4b4d46d1",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ebdc1367-f5f1-4590-83b0-c1750290173e"
        },
        "item": {
          "id": "06c9fcfe-98ca-463e-8c3e-26f8096b7367",
          "name": "did_json"
        },
        "response": {
          "id": "08b35f17-0183-4e85-a7ce-6b19f71876c7",
          "status": "OK",
          "code": 200,
          "responseTime": 226,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971bd99b-fbc7-449b-bfb7-32fdd0ca591f",
        "cursor": {
          "ref": "e4a2899d-80be-4944-be72-a7e8b2ef8ca7",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "101f72ab-1471-47aa-9fba-8bf92520f554"
        },
        "item": {
          "id": "971bd99b-fbc7-449b-bfb7-32fdd0ca591f",
          "name": "did:invalid"
        },
        "response": {
          "id": "48d2608d-0748-40ec-b808-29d594631524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971bd99b-fbc7-449b-bfb7-32fdd0ca591f",
        "cursor": {
          "ref": "e4a2899d-80be-4944-be72-a7e8b2ef8ca7",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "101f72ab-1471-47aa-9fba-8bf92520f554"
        },
        "item": {
          "id": "971bd99b-fbc7-449b-bfb7-32fdd0ca591f",
          "name": "did:invalid"
        },
        "response": {
          "id": "48d2608d-0748-40ec-b808-29d594631524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4125c8ef-267f-4590-ab93-2a280bc4e4a5",
        "cursor": {
          "ref": "d2c8bd4f-78c4-4820-ba4d-f4fbbff8119b",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d4103d3e-068b-4ebb-9fa4-9a4d84aa399f"
        },
        "item": {
          "id": "4125c8ef-267f-4590-ab93-2a280bc4e4a5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2698dc91-e170-48e6-9444-1ea2e3d93a93",
          "status": "Not Found",
          "code": 404,
          "responseTime": 162,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce82b82-5583-4304-a41d-806e1dffccf9",
        "cursor": {
          "ref": "45134e6b-50cf-4cc2-ac0d-3b868a507d76",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c417386b-2a0d-4484-ad1d-ff4df840fa83"
        },
        "item": {
          "id": "6ce82b82-5583-4304-a41d-806e1dffccf9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "56bff87e-3b4a-44b7-b65f-d729d8feddd1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af854cc1-5349-4a4d-8ae6-8d5b0cf35694",
        "cursor": {
          "ref": "9c115366-6cfb-4c68-abf0-6f4ee79ad1d1",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8d2ae442-0f3e-4bcf-851b-8ca82f446ecd"
        },
        "item": {
          "id": "af854cc1-5349-4a4d-8ae6-8d5b0cf35694",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8b9e008e-35b0-4b3a-aa3f-4a62c90d8e57",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f3b664-7b66-4f74-8d54-f7d1db70b1d3",
        "cursor": {
          "ref": "0c34aaab-b455-4634-9562-4d90f4773dc2",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "82c0c259-ce1e-4d73-887e-ef74575484b6"
        },
        "item": {
          "id": "99f3b664-7b66-4f74-8d54-f7d1db70b1d3",
          "name": "identifiers"
        },
        "response": {
          "id": "de1dd2a8-5993-40af-8033-7b9a5fa34dcb",
          "status": "OK",
          "code": 200,
          "responseTime": 123,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8460fe-ebd4-4bbc-a1ca-daac5a9f3fc0",
        "cursor": {
          "ref": "8b09b87a-aaa8-4960-80a2-0bc6cecab1a1",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "26d58337-ddcc-44a2-b719-f7c78937081e"
        },
        "item": {
          "id": "5d8460fe-ebd4-4bbc-a1ca-daac5a9f3fc0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d6408df6-19a2-43ae-b159-883ea6acec96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db156766-734e-4708-8fde-773d35676735",
        "cursor": {
          "ref": "ae1feda1-2000-4688-a890-97ee2fbe517a",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "48b7bad7-6444-45e4-b7c1-af6fb9eff462"
        },
        "item": {
          "id": "db156766-734e-4708-8fde-773d35676735",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3bfba8c7-8970-4c57-b7f1-2a54635aed68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bdc4b7b-220c-4bec-8b15-5801fc129d47",
        "cursor": {
          "ref": "f5e47231-b282-4c56-997c-be976a266ee1",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7c022f2c-6a04-4f2b-a3d6-375493e783aa"
        },
        "item": {
          "id": "5bdc4b7b-220c-4bec-8b15-5801fc129d47",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2d9b6a95-28f5-4dd8-a4af-a3512116745f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e684b05-9cfc-4fdf-be59-d724e9f7b5f3",
        "cursor": {
          "ref": "bf771681-602d-4587-9d17-25687d990452",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1ec79ef9-9a33-47fe-9f80-e0b565d9c4ce"
        },
        "item": {
          "id": "4e684b05-9cfc-4fdf-be59-d724e9f7b5f3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "6ac3024e-9081-4dc7-bfc4-a8a073b04b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aed57b8-5946-4ef1-99b9-4f30f9a40b3e",
        "cursor": {
          "ref": "4c3321cb-250f-4721-b4d2-807bd10d924c",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9874b28c-cc36-446c-8b0e-73fd8ae2c9f8"
        },
        "item": {
          "id": "5aed57b8-5946-4ef1-99b9-4f30f9a40b3e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "edb79593-39f9-4c5f-a61d-3b8da16dffc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d50346-5ce7-4110-b769-596cafdb8dfe",
        "cursor": {
          "ref": "4be326c2-4ad5-483f-b16c-44dbe7028e91",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "48d0ca6a-1d81-4c2a-a750-c7a52b4eb9b6"
        },
        "item": {
          "id": "22d50346-5ce7-4110-b769-596cafdb8dfe",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b098493c-aa3d-4e9b-863c-1a79ee0f68ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2adf16ac-79a3-4738-9992-3d6ce67e3b07",
        "cursor": {
          "ref": "8af9a1de-0ec9-4927-87ed-cdd97e838f6f",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "cf8e1554-e4b1-4396-a335-db7dedb7540c"
        },
        "item": {
          "id": "2adf16ac-79a3-4738-9992-3d6ce67e3b07",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "440b661d-71de-4ed2-899c-c47ccf2eeb2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa53a6de-f259-4c2d-8226-b6ff259cdae2",
        "cursor": {
          "ref": "33592b7a-eba7-42b6-8a92-ea5b68009b35",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "887a55ed-b9df-4fb5-97d3-1548bd86a9b3"
        },
        "item": {
          "id": "fa53a6de-f259-4c2d-8226-b6ff259cdae2",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "364beef6-ff91-4b7f-a2b0-fe712d2a4164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08ed149-94a4-48af-b296-476b05531523",
        "cursor": {
          "ref": "3d52913f-9f56-4fd7-abff-9698223a939c",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d2553928-7e0f-4267-9f18-8c7fe12b4c95"
        },
        "item": {
          "id": "d08ed149-94a4-48af-b296-476b05531523",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "deeca1fd-0374-4dd3-89d6-b6e8ad9ea3cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113dc630-e3e7-445e-9bcd-a01752eb4f1d",
        "cursor": {
          "ref": "59de5da2-ba5e-45d7-ac52-f51af3a86a97",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "38bb0095-6071-46e0-89ea-a4600c6c9cd6"
        },
        "item": {
          "id": "113dc630-e3e7-445e-9bcd-a01752eb4f1d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "203a16ca-8f13-4ad5-b471-c24afc536a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d325acd4-dc6c-4c0b-aa3a-039b3d5f1a67",
        "cursor": {
          "ref": "8151682a-2323-4076-b7d3-fa869a631a7e",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "578b0a36-997b-467b-9e65-597686df6be8"
        },
        "item": {
          "id": "d325acd4-dc6c-4c0b-aa3a-039b3d5f1a67",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3f59ac86-5dad-46cf-8c43-2ce4062d32eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73a3fc1-39ae-4379-8b4e-18b70004f53b",
        "cursor": {
          "ref": "c24671dc-1ef6-4137-b0b6-1459a395f454",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "254b3c2c-05ef-4df1-830b-ea415ee212cc"
        },
        "item": {
          "id": "b73a3fc1-39ae-4379-8b4e-18b70004f53b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d4a6a07a-4053-42af-ae3c-c73771330b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53ac893-32cf-480d-83c8-986687a88071",
        "cursor": {
          "ref": "e4d95a36-2b0a-4883-93cb-72d3b171787b",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "28b0d9ae-6542-4fc1-b58a-efca56478304"
        },
        "item": {
          "id": "b53ac893-32cf-480d-83c8-986687a88071",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2043d4f4-d84d-4c87-b829-c6f196db8cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317539f1-e83e-4998-b65f-3a7b2871c068",
        "cursor": {
          "ref": "d0f6883e-213d-4ed3-b10d-e5e2574989b9",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ae446e67-c810-4154-a538-64b34ae48438"
        },
        "item": {
          "id": "317539f1-e83e-4998-b65f-3a7b2871c068",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "86dddf35-1d76-4333-acd7-3e58e71a8995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7130267-8147-440d-9486-966e461f7e2f",
        "cursor": {
          "ref": "3aa6b49b-9479-475b-b0ac-9136c762408b",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "abdaf72c-a82b-41aa-a915-cd761c1c9fed"
        },
        "item": {
          "id": "a7130267-8147-440d-9486-966e461f7e2f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "dd12d1be-8327-4d00-a8fc-41a1d6706f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03950a20-bd31-4b3f-b03a-76aec3229fb0",
        "cursor": {
          "ref": "e967434e-4938-4a22-a9dc-499817f092f1",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f9aab166-c254-4513-be3d-9b1db8b74f2f"
        },
        "item": {
          "id": "03950a20-bd31-4b3f-b03a-76aec3229fb0",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5f8f9a44-84fb-4261-a691-a41d5165a552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8458ce8-d676-414a-9cb7-75b8ac4e933d",
        "cursor": {
          "ref": "b04d9644-bf7b-4c95-bb4a-4d21e071f4d8",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7730ab1f-a34d-44f1-8618-616d37b84df9"
        },
        "item": {
          "id": "d8458ce8-d676-414a-9cb7-75b8ac4e933d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6369a2cd-1064-4854-9454-6d6780f8cc8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1bde371-c7fd-43b9-ba2a-9bf9eeb9f4c0",
        "cursor": {
          "ref": "14fe613c-a6bb-4e31-800b-c3b66788c402",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d33ead07-3b87-45fb-ba17-fbccbf020dcf"
        },
        "item": {
          "id": "a1bde371-c7fd-43b9-ba2a-9bf9eeb9f4c0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d77a9427-73e7-45a6-95e2-10a138ca5f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2f621f-1f0d-4b23-be0b-b8e681540fef",
        "cursor": {
          "ref": "045f5761-ec56-48fb-a860-3d794b924311",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4369b9de-4e37-4ab8-8053-a706ce08ec06"
        },
        "item": {
          "id": "3e2f621f-1f0d-4b23-be0b-b8e681540fef",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e4b70658-9c7f-4a14-b669-548b70a313ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d4401e-d9f2-41d5-83a5-277e8dca0aa6",
        "cursor": {
          "ref": "534d893d-248c-4f8f-97ad-262f5742965b",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "538546af-b76c-444c-9021-3599873e04a4"
        },
        "item": {
          "id": "06d4401e-d9f2-41d5-83a5-277e8dca0aa6",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f610a8a9-c264-40b4-9c07-28983e58b5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807b92e3-41e5-446c-ab51-d698c1042fe6",
        "cursor": {
          "ref": "3ee221d3-e001-4b02-aa27-a2a3e05d7299",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "22cded91-7dc0-47b3-811b-d21d017e1ddb"
        },
        "item": {
          "id": "807b92e3-41e5-446c-ab51-d698c1042fe6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a0f54267-5bd7-4c9d-8b64-4974a4aa019f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6aecb6-aaa3-4910-8ba8-adc5bf4deb4e",
        "cursor": {
          "ref": "1e9bdf18-deb9-4ca6-9a73-f7967367eea6",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "18d6dbcc-9263-4df7-ada4-49de42a8bf7b"
        },
        "item": {
          "id": "5b6aecb6-aaa3-4910-8ba8-adc5bf4deb4e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "21ea5c0d-c1e5-4621-b93b-cc39a81d5fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e539a84-83e0-4fbe-a593-2e44c59189ea",
        "cursor": {
          "ref": "6782265b-26e8-4b79-a88b-502690d84bb0",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "3c87ade6-d7ac-4fbe-b472-9c53923d5835"
        },
        "item": {
          "id": "6e539a84-83e0-4fbe-a593-2e44c59189ea",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "df49c461-0ff9-4d63-b4df-a719a5660d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9ab2ee-d166-4320-bc1d-63c9305c74b2",
        "cursor": {
          "ref": "067c9a92-31ff-4eea-b465-3fa346457282",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ead906b5-9401-42e0-b6ac-3993a6a3a6c9"
        },
        "item": {
          "id": "2b9ab2ee-d166-4320-bc1d-63c9305c74b2",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "76a7fab4-459a-4bb3-90f7-788bedfeedf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2a91c4-32df-4fd3-bfff-dcb3ebddcd0e",
        "cursor": {
          "ref": "12c56a03-25a2-445a-a642-2bdb3b943047",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "603c1243-4910-4f30-9364-cc56e074d0aa"
        },
        "item": {
          "id": "4a2a91c4-32df-4fd3-bfff-dcb3ebddcd0e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1e222458-842b-429e-86d6-11387793b010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7094f5b-8b0b-41b6-9b62-1243a4ae4e18",
        "cursor": {
          "ref": "a1b95ae5-c7b9-4bd4-a3cf-c0274a7e3440",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e969272f-5c36-4c37-a541-09061f9345f0"
        },
        "item": {
          "id": "d7094f5b-8b0b-41b6-9b62-1243a4ae4e18",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "17598063-6798-48d2-9d1a-89363ac51327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e66063-abfa-4615-90ce-6d3a17c7452c",
        "cursor": {
          "ref": "06859ad4-a22a-4d94-ac71-ea9b384aa8d5",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "146a37af-353c-4b4b-a557-bf725c132773"
        },
        "item": {
          "id": "e3e66063-abfa-4615-90ce-6d3a17c7452c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "700daba9-908f-4e8f-b282-b2792405e60b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6cc0ac1-aea8-4d68-b632-a6967ec29112",
        "cursor": {
          "ref": "7bc99345-6396-4695-8e3e-9ebafc026cf7",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6b855542-9790-41e9-acfd-7c1a7dad32e1"
        },
        "item": {
          "id": "e6cc0ac1-aea8-4d68-b632-a6967ec29112",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ccd4d4a2-6be4-4f13-9d08-0c3ef33430aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfae5e6c-141b-4444-8435-1d8fbbfeced4",
        "cursor": {
          "ref": "21749b34-6239-4833-bfc3-f8edac19be5b",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "18120b84-e13b-49ec-b39e-9761c40c27bf"
        },
        "item": {
          "id": "bfae5e6c-141b-4444-8435-1d8fbbfeced4",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ec9809f0-7635-4e2c-abf6-476ae4bfb6e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e963291-01fc-4119-a2a6-620626e8f58e",
        "cursor": {
          "ref": "cb6c4c99-0531-4a6e-a92e-1dbf30281d4e",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "da38ce74-5b80-4907-84ae-eaa4e1afc1b4"
        },
        "item": {
          "id": "1e963291-01fc-4119-a2a6-620626e8f58e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "dea487ca-d9ba-487b-9a3e-20e7b5c2cd01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a439136-c83b-46c9-b8a5-2d697ee72369",
        "cursor": {
          "ref": "a1796e7b-ec82-4e3a-827c-92eb52a05a54",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "bf02eef5-1263-4abc-b6f5-bfef1a0cd800"
        },
        "item": {
          "id": "1a439136-c83b-46c9-b8a5-2d697ee72369",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "13f0a74d-132a-4f15-b9b3-f8006e09af45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac33d7f-0cca-4b81-88cc-cb7626ac303c",
        "cursor": {
          "ref": "e3b73fb6-1cb7-4538-9498-c0f4b5b2dab0",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ebad4d58-1999-4003-86fe-68146008070a"
        },
        "item": {
          "id": "aac33d7f-0cca-4b81-88cc-cb7626ac303c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e48d51d4-8aa5-4589-9548-231ce68928e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057c18e4-d12f-478b-81bf-19f9e4dd969a",
        "cursor": {
          "ref": "5a519f0c-10bd-441d-ac9f-c5123b0362df",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "24de0a62-4acd-4266-ad45-e05ccdaa8b2a"
        },
        "item": {
          "id": "057c18e4-d12f-478b-81bf-19f9e4dd969a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ae8ce506-045f-443d-a079-da4158388594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a22b279-b647-4577-988f-5697e823a3f8",
        "cursor": {
          "ref": "3bdf567b-6da4-4296-b1a0-0ad1fe674be7",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f041c302-be2b-43da-b697-f2a632a00781"
        },
        "item": {
          "id": "3a22b279-b647-4577-988f-5697e823a3f8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "90fce6a9-770d-4f69-966f-f39304acca7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82235e59-8202-43fc-9929-4671b3a2d467",
        "cursor": {
          "ref": "893f94be-aa2d-4939-97da-a775a188f057",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f9fba907-8d9b-4562-b8d6-83f5b32a9e0e"
        },
        "item": {
          "id": "82235e59-8202-43fc-9929-4671b3a2d467",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e4fbb593-3e96-43e1-85e1-457fd58fbf57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb48c11-f195-423b-8c12-6df6501f2dec",
        "cursor": {
          "ref": "d9c8d80b-1ed2-4781-97f4-4ec983f7e5b8",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "bb1b15a6-1647-4216-8390-96b8a7342db3"
        },
        "item": {
          "id": "5cb48c11-f195-423b-8c12-6df6501f2dec",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "693f5767-2907-4a75-a0da-84c9e395c3df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84aa0212-6c0f-43e1-b560-f9011b621dea",
        "cursor": {
          "ref": "c63c315d-33a6-44b2-8068-f5789d54656c",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "03c104d0-a2e6-49f7-a01c-cd4d01677b0f"
        },
        "item": {
          "id": "84aa0212-6c0f-43e1-b560-f9011b621dea",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b47ecee7-5a80-48c3-9fe9-5ad5fa7f774b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967e4bf9-627c-41e4-b5ec-ce045726573d",
        "cursor": {
          "ref": "588928a4-05e0-4c95-b451-d7d0c15029de",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cae4c397-03fd-4dd7-bc1d-a13579a64418"
        },
        "item": {
          "id": "967e4bf9-627c-41e4-b5ec-ce045726573d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0abadad0-009c-4c19-b9f2-161237252f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78087b9a-5a29-4f96-8e75-67fea2248325",
        "cursor": {
          "ref": "64cf0613-d1bc-4ce3-8f32-4f8f848a561b",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "170b5b84-1e57-407a-bc0f-dd56604fdc39"
        },
        "item": {
          "id": "78087b9a-5a29-4f96-8e75-67fea2248325",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "0cd23ba5-e2f6-4e52-a850-559fab4f193a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba81e21-2b61-4d67-86b3-0087bb2b98b3",
        "cursor": {
          "ref": "0f9d7ad6-35bb-44cf-bcb0-14e97a0d2ca1",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "77bc7a41-1d4a-4b11-ac18-db5612989ce0"
        },
        "item": {
          "id": "8ba81e21-2b61-4d67-86b3-0087bb2b98b3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f6d468ba-2c5d-4f86-80c6-c9a07e977455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6c22c6-f6fc-476a-9932-85392bba11c9",
        "cursor": {
          "ref": "260f97d4-3257-442d-a593-c2d5d0fa4a51",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "12689400-dddd-4250-a07d-70e4207525d2"
        },
        "item": {
          "id": "1d6c22c6-f6fc-476a-9932-85392bba11c9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "bde8b43a-2fad-484d-bbf3-81208eed70c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc21e6a-2cbf-4837-8a1b-5219406e95e0",
        "cursor": {
          "ref": "f4af8d88-cb46-400e-a37f-ae5d4cfc9718",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6ba1c91b-dcb2-499d-8b77-2d708a97cac5"
        },
        "item": {
          "id": "fdc21e6a-2cbf-4837-8a1b-5219406e95e0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "386f504c-088d-48e8-a961-6deb21a9549b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58195865-6b88-4a20-8f0a-be01a32044d8",
        "cursor": {
          "ref": "767c02b3-90e0-4ff1-aa4c-bcf0c8f1217f",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9c20c00d-291e-43cf-b29f-289d8c7f9334"
        },
        "item": {
          "id": "58195865-6b88-4a20-8f0a-be01a32044d8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f6ad6187-0b71-4e12-b78c-8ceb9a56324b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94da1856-866c-4cee-9fda-90cfc8a9c97b",
        "cursor": {
          "ref": "b326e5a5-e580-45db-96fc-4c068a6b62ce",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "61a7df6c-8908-4b6d-93d8-ccbff5a2fdab"
        },
        "item": {
          "id": "94da1856-866c-4cee-9fda-90cfc8a9c97b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ba2a5184-2a08-4f6d-bdf8-fe2dc967b548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be36a7fd-b09e-4e09-a0b4-23c4231130be",
        "cursor": {
          "ref": "faa8fc82-1f8a-4802-9afe-82bd4aa37d30",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8c78e63c-4139-4f98-b511-7bcb82efbe3e"
        },
        "item": {
          "id": "be36a7fd-b09e-4e09-a0b4-23c4231130be",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "de8d687c-e6ef-49b2-a3ad-e9540819c645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0601e01b-b63d-4af5-937f-1d6fc2d329f1",
        "cursor": {
          "ref": "790435ce-2316-484c-bcf8-da1a79ce4e27",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "474f8f61-5640-4cfa-b900-8b3f03ccf800"
        },
        "item": {
          "id": "0601e01b-b63d-4af5-937f-1d6fc2d329f1",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a23d57b4-eca3-401d-9e0a-41fc8598f660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5240a3-5b6d-48ff-95e6-96c26aed510f",
        "cursor": {
          "ref": "b1d06963-da01-48a2-8390-2a26aee50a9d",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2425e871-d235-49e2-b203-e0c568c537f6"
        },
        "item": {
          "id": "7e5240a3-5b6d-48ff-95e6-96c26aed510f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "17f4995b-89ea-4dec-beb6-4bde66f9ac19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce130c5e-8d20-411a-8592-922a6d6d0afa",
        "cursor": {
          "ref": "a52f5668-982a-4eee-83eb-1a8b2d38b969",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4ad30e3a-cfdf-45a8-8623-4e443b5ae97e"
        },
        "item": {
          "id": "ce130c5e-8d20-411a-8592-922a6d6d0afa",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0c4af52a-3727-441e-9206-de189e514594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79381feb-66b4-4dbc-be7a-a3069f962bb6",
        "cursor": {
          "ref": "f1c33dfc-3312-4871-a4ff-dcf8852438b3",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6a350eac-3ff5-44d1-96cf-a58867ee7939"
        },
        "item": {
          "id": "79381feb-66b4-4dbc-be7a-a3069f962bb6",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9a972ed4-3af7-4de1-93bd-48823470391e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78968cf-66a2-497d-99e0-53d540876cf4",
        "cursor": {
          "ref": "0c60d222-41cb-4a35-95ce-580a780b7695",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7c8839f6-fed4-498b-ad39-e8755f4896bf"
        },
        "item": {
          "id": "d78968cf-66a2-497d-99e0-53d540876cf4",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e63e3e3d-c5b3-4262-aef4-b7a9b410ce84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e6328f9-4065-47ec-9658-7a8d0fbe63bb",
        "cursor": {
          "ref": "95292092-0d45-412d-8f98-aa6c74799091",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "298aff4a-bfee-4ec7-872f-b99b0ed66359"
        },
        "item": {
          "id": "0e6328f9-4065-47ec-9658-7a8d0fbe63bb",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "33724a83-b422-41b5-bd30-fbe9a51ba0ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6257702b-a18f-4e21-9e6d-0bdf19726aa3",
        "cursor": {
          "ref": "5cea721a-07d1-40e0-bcf7-da6b7f587e02",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e25823c8-40db-4415-9e71-5747d3776550"
        },
        "item": {
          "id": "6257702b-a18f-4e21-9e6d-0bdf19726aa3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "da2bc85e-2c85-4f15-87ae-9e19d7cb5166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ef506f-b48d-4937-83d4-311063b5bcbc",
        "cursor": {
          "ref": "00e699cc-14a8-42f5-8b3a-0cf4658b51f4",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "beb09769-e8ea-4785-9d58-9d1597bca6c3"
        },
        "item": {
          "id": "07ef506f-b48d-4937-83d4-311063b5bcbc",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "fba20409-89d9-4350-8835-14936d292bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7103283-deb6-4da5-9040-2808d17f6deb",
        "cursor": {
          "ref": "ef172ca4-69a3-4392-9d59-905011e62079",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b7757e66-58c1-448f-9957-c0dc8425820e"
        },
        "item": {
          "id": "b7103283-deb6-4da5-9040-2808d17f6deb",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f3b55221-80c2-4c78-9f94-cbd6e96a6585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a59d73-7090-4dd4-bbd1-da64da84e490",
        "cursor": {
          "ref": "4300b094-5feb-449d-9dbe-6aa09035c0fd",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "11ee36e0-17c1-4a52-bda9-834c7f3cc84a"
        },
        "item": {
          "id": "99a59d73-7090-4dd4-bbd1-da64da84e490",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "8ef0a4a6-0a52-4514-bff3-cb0086549214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d2bea2-8f66-41ae-b62c-e5bc37dbd471",
        "cursor": {
          "ref": "0278675c-3577-41f2-8a2b-12d93bd56f0b",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "cc6d4024-3f62-49e2-87c3-1a82d76cced7"
        },
        "item": {
          "id": "59d2bea2-8f66-41ae-b62c-e5bc37dbd471",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c2bfb252-941d-4f7b-8427-198754facee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0deaf743-70f5-4ced-bce0-1c1612d8d193",
        "cursor": {
          "ref": "a05825a0-24c5-4107-9fcb-4c96fb9504ec",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7b165fa1-7be0-4103-b341-f4451aa4c63d"
        },
        "item": {
          "id": "0deaf743-70f5-4ced-bce0-1c1612d8d193",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4d55ec50-2d5e-47e8-893d-610b31c2e19b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f97547f-1283-4712-9529-5490ff18b5fe",
        "cursor": {
          "ref": "3eb9b752-3cc1-47c4-b281-dbd8446f9fd8",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2ec5ddef-5dfb-4e71-835a-ed48a4f86598"
        },
        "item": {
          "id": "7f97547f-1283-4712-9529-5490ff18b5fe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e5397b05-b554-4eb5-8899-06f1a137457a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97552068-d286-44de-ac5c-f9aa1053c33a",
        "cursor": {
          "ref": "485ada5c-4feb-4301-a6d5-d44a2a90c75c",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6ef6c3f9-ddf5-4fbd-bcc4-cc05e9cc774a"
        },
        "item": {
          "id": "97552068-d286-44de-ac5c-f9aa1053c33a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "bb6c5829-47b0-464d-8a92-d1f4a8481eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af6788e-eabe-428b-a724-2d96d50bc37c",
        "cursor": {
          "ref": "1bda50dd-052c-49a5-9f10-b587a9931498",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9ef6f09e-26b4-4268-9d0a-9f81388f6eb6"
        },
        "item": {
          "id": "7af6788e-eabe-428b-a724-2d96d50bc37c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9f19bf4c-ef21-4d44-bc28-823d421f0660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852726da-a1ce-4a8b-a47e-d930c727563a",
        "cursor": {
          "ref": "17a98f95-b4b9-4b0b-9886-7e5c9056b8f8",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "38971f28-d4f2-43c8-8d51-3247f351479a"
        },
        "item": {
          "id": "852726da-a1ce-4a8b-a47e-d930c727563a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f4ae9547-370c-4e27-8f9e-8897e30e6c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b7901a-87bb-4dc5-a26b-d7ca35267755",
        "cursor": {
          "ref": "82c7c2ba-c02a-41d6-8ff8-83b07d2ae42b",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a26abdcf-691f-4b5d-9bba-f682b960f614"
        },
        "item": {
          "id": "87b7901a-87bb-4dc5-a26b-d7ca35267755",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2c13e328-f1f6-4551-bc27-abaa248c60b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b20527-557e-4c51-a6ca-fde6efb4fcf2",
        "cursor": {
          "ref": "b16feda0-0cea-4dfa-b242-d132eb916f33",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0124373e-50e8-4473-bbcc-882d62ae8bf9"
        },
        "item": {
          "id": "96b20527-557e-4c51-a6ca-fde6efb4fcf2",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "fe16a118-a4bc-4252-9542-3e68bd761685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1859abeb-6dea-432f-828e-50f9aba7d085",
        "cursor": {
          "ref": "52db6552-3ac1-4a40-9f8d-9985c11071b0",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "be0daaa0-a795-4fbd-974a-ed47f6bdca4d"
        },
        "item": {
          "id": "1859abeb-6dea-432f-828e-50f9aba7d085",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5becde6a-2ebe-4076-8438-d0b28635389d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b66e88b-07a9-4341-99de-e9ecfc68b2cc",
        "cursor": {
          "ref": "4e13d7f9-35fa-4917-9dd9-a5e02d65e287",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6953322f-9f93-458c-8c08-a97e2a153047"
        },
        "item": {
          "id": "4b66e88b-07a9-4341-99de-e9ecfc68b2cc",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "982ab782-26c6-40ee-adfb-3c8dc72cd613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28056204-5818-4b3a-afed-f689311623f2",
        "cursor": {
          "ref": "9ac0664a-832a-44f7-88e5-41b38da64c57",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8e074859-899c-4a6d-a48a-e627163727b9"
        },
        "item": {
          "id": "28056204-5818-4b3a-afed-f689311623f2",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "88a4fed8-487d-4584-8332-c3385dec4b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca10aa0-84bd-4845-9207-cfcd5a732e84",
        "cursor": {
          "ref": "a1cf814b-68d5-45bc-b344-73dd9284f857",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f208451c-96ac-460f-96f9-85bab985317e"
        },
        "item": {
          "id": "5ca10aa0-84bd-4845-9207-cfcd5a732e84",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "bced552f-8d60-4983-aa37-880cf88b7782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5eacec-5adf-4301-9b0e-c510fe422905",
        "cursor": {
          "ref": "7f687489-b932-4941-9174-31379eba2707",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "955dfaf3-257d-4670-b7b9-c5c9a91d6b0e"
        },
        "item": {
          "id": "2d5eacec-5adf-4301-9b0e-c510fe422905",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0e3c6228-4fa4-43ea-9272-7dd5af8fa798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a4112a-8b2f-4881-9143-9a88790aab68",
        "cursor": {
          "ref": "8a299b65-728a-4726-9983-5a1e60fb821c",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "572a014e-e963-4632-b4e2-a896d7965afc"
        },
        "item": {
          "id": "63a4112a-8b2f-4881-9143-9a88790aab68",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9cdc8fe9-b68d-480a-88a1-da59ed69f19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b395b2-4172-453d-a939-f95eb99f6e85",
        "cursor": {
          "ref": "5a62b9de-d0cf-4fa4-8fdc-a639ffd88015",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "436e6ea7-1cf5-42a4-a8c2-5391ebecef95"
        },
        "item": {
          "id": "82b395b2-4172-453d-a939-f95eb99f6e85",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "69a821f5-ba8d-47cb-9406-85fedf910d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592ef60f-e9ea-48d1-be75-c8990c074385",
        "cursor": {
          "ref": "27098fd8-76af-4d48-a4f1-34e4c00f7973",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "34485a5f-99d6-408c-aeeb-cd93e32c9456"
        },
        "item": {
          "id": "592ef60f-e9ea-48d1-be75-c8990c074385",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0400d68d-1620-4f00-86bf-9be412261c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88a3ab5-0d42-4cce-94e5-64a0838fa937",
        "cursor": {
          "ref": "c278fa6b-00ee-4b0b-bfea-db930dc34237",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "065bcc15-dc0c-4d8f-a181-9e7026c27642"
        },
        "item": {
          "id": "d88a3ab5-0d42-4cce-94e5-64a0838fa937",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f150ee1a-2ee3-4a51-9934-19c8f2dd6939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28bb833e-8f17-4176-9b5d-2a7dd6f4f3f0",
        "cursor": {
          "ref": "523bb8c4-ce52-4955-931d-ee14addb7e5c",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9eb5dea7-600b-4e7e-bf20-b318f0ac622b"
        },
        "item": {
          "id": "28bb833e-8f17-4176-9b5d-2a7dd6f4f3f0",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d06e8dc6-b84d-46ff-89b1-384a8dc68083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c06280-c252-4673-bc22-b83f400bea91",
        "cursor": {
          "ref": "1a07c6f7-2e13-4307-b4ec-b9535d50e057",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "cf395248-0b8f-4acb-b8ba-2c8f719bb9ad"
        },
        "item": {
          "id": "e6c06280-c252-4673-bc22-b83f400bea91",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "84be5857-eed3-4621-ad53-92b7266fb605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594ec6f8-c1a8-448e-a26f-cbd18b69ae76",
        "cursor": {
          "ref": "861be7ac-1c3c-42e3-8c10-26629bb17343",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "dfc92ab9-95fc-48df-9dc7-948cea952331"
        },
        "item": {
          "id": "594ec6f8-c1a8-448e-a26f-cbd18b69ae76",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6dea9a15-ec95-4696-be24-720a31886e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6421d1ef-0173-41d5-941d-f48c313c30e2",
        "cursor": {
          "ref": "0dfbec80-33d9-4b28-88be-2d7a999bb1c5",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0e7f9ada-22cf-4be9-af6b-995b1ffdd83b"
        },
        "item": {
          "id": "6421d1ef-0173-41d5-941d-f48c313c30e2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4f01cdaf-d6bb-48c3-9e3f-24a1b629b00a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e691d742-8bc9-4ed2-be68-c557de40af1a",
        "cursor": {
          "ref": "eb3fe7dc-e9d5-4546-a06d-bccf6e8fdbaf",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d872b154-dc6a-4ada-99ef-fe4fbb379439"
        },
        "item": {
          "id": "e691d742-8bc9-4ed2-be68-c557de40af1a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e048e172-3290-4fb8-bdb7-88b1b2c29a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dcc49b6-a175-4c6b-ac63-33548cdd967c",
        "cursor": {
          "ref": "b6b66e59-83a3-470a-ba0b-89925acc4766",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "72080235-ffbf-4b95-9e47-06ae912d0ab8"
        },
        "item": {
          "id": "4dcc49b6-a175-4c6b-ac63-33548cdd967c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f91713c7-f260-40f9-960d-b878795b7c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5114bf62-44a2-4fb1-8135-37bcb65c1129",
        "cursor": {
          "ref": "a82ffeb6-b492-4feb-a902-cdb4f0283627",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "436cd4f1-dfca-44ff-bcff-f3018bb2907b"
        },
        "item": {
          "id": "5114bf62-44a2-4fb1-8135-37bcb65c1129",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f4582a5a-91e0-4347-a611-f9ef0ca7bbfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed25cec-b3ee-4777-901d-109f91c977cf",
        "cursor": {
          "ref": "bfdc232f-a02a-4d9f-8603-59acc17ae99d",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e61ab65e-4401-4a7d-8598-9308390dc8d7"
        },
        "item": {
          "id": "4ed25cec-b3ee-4777-901d-109f91c977cf",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "bd204edc-495e-4a47-91a9-c272842daa84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e017b49-6238-493c-b235-82b7dce092ad",
        "cursor": {
          "ref": "1da05273-0bb3-4a34-af1d-5631073174d1",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "12b329ff-ba4b-4914-8cb1-b6290e0c1c4d"
        },
        "item": {
          "id": "8e017b49-6238-493c-b235-82b7dce092ad",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d53d7402-97f8-448d-ac34-c17b99947232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1409a77f-c00d-422d-b796-2ead03a449e6",
        "cursor": {
          "ref": "160e8eca-c9ff-4815-936a-c920f6e4b5dd",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "64f92e6c-3e09-4944-a383-b6e54bf6a255"
        },
        "item": {
          "id": "1409a77f-c00d-422d-b796-2ead03a449e6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8451c434-9a4b-4b0a-acf9-3f49808bfc90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ef0a4c-be08-4275-a893-9338da218f78",
        "cursor": {
          "ref": "ee126d5c-231d-4c86-840a-986f8085dd8d",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "610f9afe-f8e5-4cd3-9ad6-17d7a6888308"
        },
        "item": {
          "id": "38ef0a4c-be08-4275-a893-9338da218f78",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7282efaa-9894-4b20-a9bd-4221fbb8e041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3764556d-78a7-43af-be10-7442d1dbdca0",
        "cursor": {
          "ref": "cc9a2b5a-64ff-4e35-9f8f-b38563bf439a",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6e7b4cfb-de6e-45de-a736-ebef52830395"
        },
        "item": {
          "id": "3764556d-78a7-43af-be10-7442d1dbdca0",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0701be09-fdcb-44df-b237-c4d82f88303e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1b367c-f35b-4562-805a-fba16b595d4f",
        "cursor": {
          "ref": "b24f8b70-f702-4170-b9ba-cf64a6659e7c",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "36fa8017-259b-4fe4-9e02-5155d01192d3"
        },
        "item": {
          "id": "0b1b367c-f35b-4562-805a-fba16b595d4f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ab9fef46-5678-4694-a100-4ad38379728f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ccdc829-35b8-4eef-975d-0c2856c25531",
        "cursor": {
          "ref": "b712baca-8f4c-4c40-a3d2-01728f9711fd",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7881fbad-64b3-4637-a071-479b05fb747e"
        },
        "item": {
          "id": "1ccdc829-35b8-4eef-975d-0c2856c25531",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "393afacb-b725-49ed-b609-8232c6934d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2960cf9b-b657-485d-9e41-c320f36a01d9",
        "cursor": {
          "ref": "e023bd27-d6fa-4dce-b8f8-c653563dc44a",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "cfbdb70e-1fcd-4b8c-9f82-659c2b62ab75"
        },
        "item": {
          "id": "2960cf9b-b657-485d-9e41-c320f36a01d9",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "86bbebf1-1c83-456f-bb00-c399831151c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807a24ca-30d2-4b23-b8b9-d0733c8dcba3",
        "cursor": {
          "ref": "b2a3ecca-ead7-45ba-92d3-babd5336babc",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "32ccbcc3-af2d-4917-8f10-d35b868eea8f"
        },
        "item": {
          "id": "807a24ca-30d2-4b23-b8b9-d0733c8dcba3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "01394b5c-c548-4cab-b317-a9df880a82f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91bafe80-8f15-4ad9-9304-4933dec90daf",
        "cursor": {
          "ref": "84f2ea14-ac4c-4ea7-a89b-183675209770",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c9323cb6-1a62-43ed-86f8-60a9ef98ddaa"
        },
        "item": {
          "id": "91bafe80-8f15-4ad9-9304-4933dec90daf",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "adbe781e-1e2f-4d9f-aa94-05ea9adbbe70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27db6465-5ac2-43c0-aad0-e8819cf3d5e0",
        "cursor": {
          "ref": "3ff69792-42ea-46ef-8542-621cc052e6e0",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "bdbe47ed-6d53-4585-a3fd-25d8c69faf4f"
        },
        "item": {
          "id": "27db6465-5ac2-43c0-aad0-e8819cf3d5e0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "30da6957-5245-4420-bb9f-e477844b9821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b65c3d-b52c-406c-a3c1-818486893681",
        "cursor": {
          "ref": "bd8c6c79-4ef1-4c59-b457-774897301366",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "754f22d9-b3db-4f80-9cee-4d8871f57f04"
        },
        "item": {
          "id": "21b65c3d-b52c-406c-a3c1-818486893681",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "fbe689f7-f14e-4b2d-a574-4456c532aeb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc13759-aaeb-44a5-b37e-8dc002acada4",
        "cursor": {
          "ref": "b9e83802-7909-42c7-9966-d9e9e0a99643",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4ed5658f-8c33-4329-bf25-805886de59c3"
        },
        "item": {
          "id": "adc13759-aaeb-44a5-b37e-8dc002acada4",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a1b6fdc9-1448-46ff-a722-814f757c07d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65078d38-3e1b-4706-8a2b-8dda33fd746e",
        "cursor": {
          "ref": "fd1b1bf2-aee3-46a0-9aab-be4e27fc4bad",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e5bfaebd-8790-46ff-9116-b2ed7ca9d28a"
        },
        "item": {
          "id": "65078d38-3e1b-4706-8a2b-8dda33fd746e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "81bca3ff-169f-4a01-ae0d-c0eb10f1385f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ed8891-ba4b-4d5c-970b-9099fff23a9d",
        "cursor": {
          "ref": "b59cfe21-6ee1-49b5-b703-f59b897ae5e6",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6ccb7694-8d0c-49e6-891d-b033b5b1fb56"
        },
        "item": {
          "id": "36ed8891-ba4b-4d5c-970b-9099fff23a9d",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "4e1be295-243e-48db-ac03-3ccc6b4e8065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "98939038-347f-4a14-85f9-250ae6e331fa",
        "cursor": {
          "ref": "a55cf49a-4af7-4557-bb12-b06eb1cca2b1",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "93cab675-6cce-4aa6-9d38-b07543bd7f2f"
        },
        "item": {
          "id": "98939038-347f-4a14-85f9-250ae6e331fa",
          "name": "credentials_issue"
        },
        "response": {
          "id": "589c13de-aa4d-45bd-a26a-d451e7568b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "8a7d2563-b82e-49e6-9c58-792a79acb5cd",
        "cursor": {
          "ref": "517c3e63-dc73-41b2-bd09-81b4a0855816",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e2dfadfc-ae17-42bf-a685-74b4646cbfcc"
        },
        "item": {
          "id": "8a7d2563-b82e-49e6-9c58-792a79acb5cd",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "07a86205-2e66-41a8-b4fd-d080b5c6e407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "0a5c5341-c916-496f-b149-7b448c602313",
        "cursor": {
          "ref": "b4bfbd0d-413f-46f3-b3bc-d3165c8e673f",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "079bc795-e29a-4c9e-b386-142236f87abe"
        },
        "item": {
          "id": "0a5c5341-c916-496f-b149-7b448c602313",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e2638d4d-93e0-4b72-8afb-13c01951bed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "5ea60f8e-ee5d-439c-9cab-f5ad16cf3951",
        "cursor": {
          "ref": "586abecc-50ee-4c5d-a4d7-9ab50d942339",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8c74971e-b34d-44f0-b0e0-22750cefc0ef"
        },
        "item": {
          "id": "5ea60f8e-ee5d-439c-9cab-f5ad16cf3951",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7e554b3a-42d0-4b44-91fb-736421d44918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "eb17bf50-ca7d-4c82-bb0f-b49a4ce3fb8c",
        "cursor": {
          "ref": "4e8e693d-abb1-4e75-9868-9be04f3eaa17",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7c49b67a-a401-40b4-a713-4e514a396895"
        },
        "item": {
          "id": "eb17bf50-ca7d-4c82-bb0f-b49a4ce3fb8c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "68daa9ae-d817-4be6-a766-fb50299623de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "efbcc396-4e61-4ca7-9b3b-bd2fa55bb554",
        "cursor": {
          "ref": "c1ab7bc7-878c-472f-a0f5-7636e1fcb294",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4ccc3324-a281-47df-ac4f-801441a6efac"
        },
        "item": {
          "id": "efbcc396-4e61-4ca7-9b3b-bd2fa55bb554",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0883a879-1835-421a-9941-b1c47101a62d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "458e8565-d9cb-4a35-b993-d5421485f8fb",
        "cursor": {
          "ref": "d6ed7b33-70e5-4f10-8c5f-a20c61a30e26",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "57989e20-b338-4742-8804-22c9768e376d"
        },
        "item": {
          "id": "458e8565-d9cb-4a35-b993-d5421485f8fb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e330baa8-f8d7-4e3f-b86f-d2844c9cd5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f00aca29-513a-4d77-8d0f-3754e514388f",
        "cursor": {
          "ref": "c8caa58e-83a7-4a57-a41c-9d371c84c932",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ce20e929-8132-4d0e-834e-77f055043c55"
        },
        "item": {
          "id": "f00aca29-513a-4d77-8d0f-3754e514388f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "75096f54-b921-4191-97fb-b5255f0e7c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8a1f81-15be-49a5-b15a-e6e069052f7d",
        "cursor": {
          "ref": "4c24602f-6242-4db1-8aeb-4a3118611abb",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d9df418f-7b8f-47da-8c61-1b433362b491"
        },
        "item": {
          "id": "4f8a1f81-15be-49a5-b15a-e6e069052f7d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0046529e-8310-43e0-bca1-28dac3ec7aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710eab17-9e7f-4d19-a8b6-7c7a534f2608",
        "cursor": {
          "ref": "8c35f32b-0606-429e-9078-63763b5150a1",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "255ece71-7ea1-449c-98bf-a30188eb50fc"
        },
        "item": {
          "id": "710eab17-9e7f-4d19-a8b6-7c7a534f2608",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d750ad74-6d76-4933-9d69-a2db9f05e6d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f73d9d-c50c-490a-bf46-cf7fc420239b",
        "cursor": {
          "ref": "3c9d5b16-ad0c-460c-b948-6ef4e25bac66",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e4c216b9-a273-4de4-b78c-2303d5dec74e"
        },
        "item": {
          "id": "e1f73d9d-c50c-490a-bf46-cf7fc420239b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "bce21d60-f9c8-444c-aeb0-b0727398d41a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b36ace-6ab2-4230-876a-6584d3594f75",
        "cursor": {
          "ref": "6a0052eb-2868-4bdb-876d-455aabf0586e",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c4702d54-ef25-4316-9a92-516cc9de8eae"
        },
        "item": {
          "id": "57b36ace-6ab2-4230-876a-6584d3594f75",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c1c583ec-f433-4137-96c3-ff795a1497fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58253569-6b5a-402d-9c0a-50c52312954f",
        "cursor": {
          "ref": "95c5b0ac-fb79-4f5b-ad4f-f04d7b5718ef",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "201210ad-0604-43db-82b8-4b504fb96609"
        },
        "item": {
          "id": "58253569-6b5a-402d-9c0a-50c52312954f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "43acba45-ee82-4fed-a0f1-5b53cfa40dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8f2c4e-1643-498c-b2e3-fae2b401303d",
        "cursor": {
          "ref": "b26af00c-0b90-4062-a891-c74d65f3edf3",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0c7f5475-2109-4785-8659-95e7f2da6272"
        },
        "item": {
          "id": "4b8f2c4e-1643-498c-b2e3-fae2b401303d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ada1b5d4-02cb-455b-85c9-be450e3d1801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19142514-8d35-4324-9f12-e00fc7f97901",
        "cursor": {
          "ref": "a377b4f3-264f-4e26-9aaf-334ee2cd6bdb",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "aa897980-5b54-465d-945f-e742e56486fa"
        },
        "item": {
          "id": "19142514-8d35-4324-9f12-e00fc7f97901",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2a94931b-cc2c-4f7a-bbdc-96dfdcf960bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d552ef-a865-487b-8476-5d781d98b609",
        "cursor": {
          "ref": "ca49a9be-823c-415c-82ed-2d2d745a01c2",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "bb511463-0655-4afb-92d0-dabe76262787"
        },
        "item": {
          "id": "72d552ef-a865-487b-8476-5d781d98b609",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6db881fe-14c1-4921-9b47-a03cb9c552bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87407b42-cc90-4c75-bbac-dd7e809b5cbe",
        "cursor": {
          "ref": "eb509469-2c72-4ab9-9027-0933825dc776",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "06b744e4-ad52-43c8-b49d-85090873d122"
        },
        "item": {
          "id": "87407b42-cc90-4c75-bbac-dd7e809b5cbe",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8b555267-8e73-4d05-b484-80cd32f6e1e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fafd88b-b8a2-4b45-839a-319a270d7a07",
        "cursor": {
          "ref": "f697cf1a-74b3-44ec-b939-4c423dc82b03",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2f25dae2-e1d9-493d-9670-d9751799e522"
        },
        "item": {
          "id": "0fafd88b-b8a2-4b45-839a-319a270d7a07",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3e270934-79cf-43c3-8b09-c39ba57958ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b53bc1e-866e-4acf-8509-486fd962969a",
        "cursor": {
          "ref": "b259d12e-1858-47b5-97ab-ea0fddc3dafc",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2d2eede2-a593-4987-91cb-35278a66ddae"
        },
        "item": {
          "id": "1b53bc1e-866e-4acf-8509-486fd962969a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bb67879d-5966-4f7a-9802-8c818be40f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c91c0a-2a53-427d-8833-9fa978db003a",
        "cursor": {
          "ref": "9a87980c-6152-4d09-a0b7-274a3ed14bb6",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a84a9b51-d117-4573-8cc3-75c724785d3d"
        },
        "item": {
          "id": "09c91c0a-2a53-427d-8833-9fa978db003a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8e2e51e0-bd30-4de2-b90f-2d3ef83ee432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba03e29e-891f-43ae-89d4-131b49bc0b80",
        "cursor": {
          "ref": "dbb557f1-04db-4871-b05d-07af1627ba1d",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "bad4bc30-7a28-4193-94f4-812e135930a7"
        },
        "item": {
          "id": "ba03e29e-891f-43ae-89d4-131b49bc0b80",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fbc50d9e-3bf5-423a-8b86-42c54a81c37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94dc7cac-747a-4fdc-b3af-7dc4bb02d00b",
        "cursor": {
          "ref": "16b76637-7565-4810-9dab-96e904ec298a",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c29aaefc-67c6-42a8-9280-e8bad184696e"
        },
        "item": {
          "id": "94dc7cac-747a-4fdc-b3af-7dc4bb02d00b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "dfbc35ae-5a5e-4292-812c-885c6ff80ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6fccad-a5d5-4d77-b967-8ed65cec03ee",
        "cursor": {
          "ref": "7afb9c49-1d13-41f9-af6a-059f20d6119c",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "060838ef-a18e-4fb9-b118-56657abf1c26"
        },
        "item": {
          "id": "8a6fccad-a5d5-4d77-b967-8ed65cec03ee",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9ac2bf17-ad46-4cee-b6b3-9a483c4c1bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd66cedd-5191-49b4-a965-0aec2e70ad27",
        "cursor": {
          "ref": "5b57c159-9b43-4474-9eb6-6b48221ce129",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e431c9d6-0695-45b9-9515-9b1abaa81b9e"
        },
        "item": {
          "id": "dd66cedd-5191-49b4-a965-0aec2e70ad27",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f8a85692-4318-4111-a034-142552e50afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ca12fe-11c3-40bd-b4a1-02d52ab938d5",
        "cursor": {
          "ref": "8f25f9d2-1216-428f-8a09-21cfc1ca4423",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "eb223941-83e2-4c59-8adc-415a2b19f109"
        },
        "item": {
          "id": "72ca12fe-11c3-40bd-b4a1-02d52ab938d5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1b6ab9f5-766b-4260-adc9-35e37ffa23f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "228b62d3-9b73-4ce9-8f19-bf4d54b18535",
        "cursor": {
          "ref": "8f2dbe94-851f-4784-87b4-a2538f7c3540",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "fa5c7e79-0536-46f5-b200-1b20f5ee8747"
        },
        "item": {
          "id": "228b62d3-9b73-4ce9-8f19-bf4d54b18535",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b3f777a4-bd6a-426a-97e9-c59bf34c710b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17b0dab-c889-4366-b54f-2c2e25cf8c57",
        "cursor": {
          "ref": "a5857fd2-d6b9-4f21-a384-c82b99b73c1c",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a5a3acb0-77ad-441c-9fcc-f187adb32784"
        },
        "item": {
          "id": "e17b0dab-c889-4366-b54f-2c2e25cf8c57",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e2c88cb7-c862-487e-8e50-c490928e7dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89e47dc-49fc-4048-b924-231f8fc0caac",
        "cursor": {
          "ref": "5f618a40-1bca-497d-888c-0b141c3283e3",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3a8efddb-08db-4096-9707-81842c22f824"
        },
        "item": {
          "id": "f89e47dc-49fc-4048-b924-231f8fc0caac",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "662cd18c-43b8-4aec-ad29-4ade47425cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b6d969-9a31-4c4d-b322-e79e40253bd9",
        "cursor": {
          "ref": "68376bcb-6b38-4008-ac15-21323b97dfd4",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "36c50016-ba2c-4b8a-ba3f-e7f59d9cbfee"
        },
        "item": {
          "id": "b2b6d969-9a31-4c4d-b322-e79e40253bd9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "78075b0e-510d-4e68-9048-dc45730cb146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064a4b77-79b0-4e3f-b89b-5350602752e5",
        "cursor": {
          "ref": "91b94c43-b91b-40f6-ba38-65aa538557ee",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ff63d7fb-9c16-49d1-9336-b2dec54840f0"
        },
        "item": {
          "id": "064a4b77-79b0-4e3f-b89b-5350602752e5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d88d7418-d609-4498-aeff-7f1c484f4c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef564ef-d740-4d66-91e4-09a79238554f",
        "cursor": {
          "ref": "9308de77-a895-424e-91dc-6a958886a3ba",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "10cc4de3-00c2-4364-bafd-093135a02840"
        },
        "item": {
          "id": "bef564ef-d740-4d66-91e4-09a79238554f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bd370679-1f73-402c-b68d-d39850f71a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9433ea-df54-46a7-af4d-f8bbb03fd235",
        "cursor": {
          "ref": "ceb8af8a-7eef-4a21-b58c-41916542b01b",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "56b73a17-b747-47b6-bad4-76521ed4ac05"
        },
        "item": {
          "id": "2b9433ea-df54-46a7-af4d-f8bbb03fd235",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b2ed45b6-dcc8-4e5b-b4d6-f1d981d35eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ff9385-a531-4c4d-9eb3-6672bdc00cb2",
        "cursor": {
          "ref": "08456a21-3c41-45df-ba28-1cff51defe0d",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3b84b473-b1d0-400e-b52c-be14a3e2ca6e"
        },
        "item": {
          "id": "33ff9385-a531-4c4d-9eb3-6672bdc00cb2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "88db70be-b838-481e-8e37-fec313985a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b32d92bd-6f06-42aa-a459-60c799ce4742",
        "cursor": {
          "ref": "7665492e-9edc-48f5-8420-29e810c6e655",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "acf7a977-7292-4a6a-a3a0-cbc18d1afb55"
        },
        "item": {
          "id": "b32d92bd-6f06-42aa-a459-60c799ce4742",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d2cd6ffb-9d8b-457c-b26a-cf7838d197e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6144676b-551e-441a-a8b5-faa555bb05ef",
        "cursor": {
          "ref": "eb9253c6-efa1-4a7e-9365-45585823179f",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2c252fe5-4f01-4347-8b3f-b0549adb8f56"
        },
        "item": {
          "id": "6144676b-551e-441a-a8b5-faa555bb05ef",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0b6192d5-d055-4c8f-ab51-21f4e2dc01f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486f9290-b273-48c4-a777-26a1ec53ada0",
        "cursor": {
          "ref": "f07d3b31-4216-438d-80e8-b7d74d3853a8",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7d962485-65cc-4deb-a430-485bf3aeb7c9"
        },
        "item": {
          "id": "486f9290-b273-48c4-a777-26a1ec53ada0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "31a1f856-73d4-43e4-affe-dddf2b9eee13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8806b745-26ba-4deb-9b67-9416b8cce141",
        "cursor": {
          "ref": "03a9bc3f-d6bf-4eb0-9832-40617c0e24b2",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b185eea2-b1c9-49df-8439-655737a6430b"
        },
        "item": {
          "id": "8806b745-26ba-4deb-9b67-9416b8cce141",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1aee0576-cf2f-4749-91f1-f32d33768038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9c0ba8-1463-4745-8d05-305c935c70c8",
        "cursor": {
          "ref": "24da6345-c7da-4463-8e44-d6fc254a911c",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0dbf6990-abad-41f0-86cb-e80421e2efae"
        },
        "item": {
          "id": "ca9c0ba8-1463-4745-8d05-305c935c70c8",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e8d916c2-8c57-402d-bc6c-e185c037b34d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab56661e-5916-4ee8-a6f5-23588b1d944c",
        "cursor": {
          "ref": "c7c85b2f-c71f-45f0-bc80-2e6af05da1ec",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "16da2dc4-5404-4935-8973-5e1d6d911aa4"
        },
        "item": {
          "id": "ab56661e-5916-4ee8-a6f5-23588b1d944c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7ce12446-5958-4943-9b2e-22e125517ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59468d5b-f06e-4c50-990b-3b75f7a66da8",
        "cursor": {
          "ref": "943715d0-6402-4d08-b9b1-906c838bab30",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6a390fa1-dfe4-4c71-b1a7-7e108ce6e1e6"
        },
        "item": {
          "id": "59468d5b-f06e-4c50-990b-3b75f7a66da8",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2d2055a7-bf63-4683-9c41-d7bf824e792d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b208b0c-7634-4245-80c8-edd825f5c012",
        "cursor": {
          "ref": "e354af8a-92b2-4fdc-9065-018a89bb3baf",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c58579ee-864d-4c9a-a35e-b15358577d87"
        },
        "item": {
          "id": "8b208b0c-7634-4245-80c8-edd825f5c012",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6a78f66d-c8e4-4c63-9915-bdba89ad7caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a783f3-8b9b-449c-8490-fe67a88a64e9",
        "cursor": {
          "ref": "5923fcc6-2a72-4f8e-a37c-2a3f5c88f8d7",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9427f856-02b3-497a-94a0-0a7f6cec13f8"
        },
        "item": {
          "id": "f3a783f3-8b9b-449c-8490-fe67a88a64e9",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "2fe82cb1-a254-4f2c-93e6-d14841e81861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b82f50-74ae-460c-bb52-5e69db5df355",
        "cursor": {
          "ref": "94eeba1c-9b22-4ae9-90a1-b3b8ba6238cb",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "83ac6b05-aab5-4ce3-901d-327f7fb3e442"
        },
        "item": {
          "id": "86b82f50-74ae-460c-bb52-5e69db5df355",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "7774a1e4-567f-408a-9777-067b63c9f41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f700d2e5-9356-4761-b9db-b586a0339e4c",
        "cursor": {
          "ref": "f540a394-3e43-4941-95a2-c5ed1246dd29",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c1e037c1-87c7-470c-844c-09037e439a2f"
        },
        "item": {
          "id": "f700d2e5-9356-4761-b9db-b586a0339e4c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e080eb9b-57db-4416-8095-710307d55cd0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404e1f71-e897-41b6-aad2-6393f5e6899f",
        "cursor": {
          "ref": "5caf1933-b576-48f3-959e-e948bfcda1ec",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "cc4a0b31-eb1b-4156-9f87-e08b6924ea73"
        },
        "item": {
          "id": "404e1f71-e897-41b6-aad2-6393f5e6899f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "416abbc0-9b1d-4e32-b642-d8180fbf01b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864d7344-46cf-421a-8f86-1b476ebeb95d",
        "cursor": {
          "ref": "ade60142-a280-45ae-ab76-d2b07f3d138d",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4a4768a3-fef7-46fd-81e6-6077b1a25281"
        },
        "item": {
          "id": "864d7344-46cf-421a-8f86-1b476ebeb95d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0e8c2395-9593-4193-b9ac-2ee7ab71f6bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd17429-1dc5-4d75-8e2b-e23b72f2e8fb",
        "cursor": {
          "ref": "781c1c25-02e4-42ee-872d-2437e469d3eb",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f6d214d5-1fee-485f-bb3c-b84922d7cb30"
        },
        "item": {
          "id": "0fd17429-1dc5-4d75-8e2b-e23b72f2e8fb",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1711ed87-4eb3-4cf8-a69f-f65bd002fd02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb05a7aa-d453-4ab9-ab92-3f17b226c710",
        "cursor": {
          "ref": "12fc83fd-380f-4355-b85a-e5650b89850d",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "81913233-6402-42cc-a898-ffae30b02835"
        },
        "item": {
          "id": "fb05a7aa-d453-4ab9-ab92-3f17b226c710",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "dd418256-b1a5-4529-af28-5c670a8212e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c445a8-d430-437d-9b18-e50da831af24",
        "cursor": {
          "ref": "d6fc92b4-ae47-46c2-96f6-5d29d81b9b9c",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d8abf5cb-6755-4913-b1ab-739a937b89df"
        },
        "item": {
          "id": "51c445a8-d430-437d-9b18-e50da831af24",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6f58d370-ca8d-432c-99fb-f8becdc9dcc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9247e480-74db-48cf-8eb2-cd5a4681e897",
        "cursor": {
          "ref": "a33e1ae9-2989-4b36-a538-3379dfb3dd03",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8aa37f9c-3a7d-4fe2-ac78-1cc6f0f1e148"
        },
        "item": {
          "id": "9247e480-74db-48cf-8eb2-cd5a4681e897",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c90b66b3-6919-4d4f-a63b-b4701adbc493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa86e52-a28b-49da-bc66-5e5510b34f7b",
        "cursor": {
          "ref": "f9ec0d5f-93d3-46a1-ac16-951c50d44410",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ec7fc911-efb3-4218-858a-cf6c7f135eca"
        },
        "item": {
          "id": "4aa86e52-a28b-49da-bc66-5e5510b34f7b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "08281e21-119e-46a1-88ed-b8b82b5cad59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c62b38-32d5-4f60-9b09-469875c90966",
        "cursor": {
          "ref": "adce22f8-cacb-4a7c-8c7f-98300d6f2b0d",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4e82952f-f29f-45d5-bfb7-276ad8cd378c"
        },
        "item": {
          "id": "d4c62b38-32d5-4f60-9b09-469875c90966",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "37539831-7db5-4c6f-9214-7128b289216d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b900f84c-f7ad-4d4a-a992-ac2d4f6880c9",
        "cursor": {
          "ref": "1d977b52-eadf-445a-9e9d-6860895e3e2d",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f437ef6e-3b42-4614-abb7-a01c8ac226f6"
        },
        "item": {
          "id": "b900f84c-f7ad-4d4a-a992-ac2d4f6880c9",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "529d726d-05ff-4d98-9446-73a00e625b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4758c8-37a9-4cac-b7fb-3e9104eed462",
        "cursor": {
          "ref": "6ae4ed93-6cf8-4104-b8e7-3b3ed9adf23c",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8de815d9-d0c6-481e-b084-d7c31000b679"
        },
        "item": {
          "id": "8b4758c8-37a9-4cac-b7fb-3e9104eed462",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "23c7c7d0-0714-4d68-a1e7-e0d4c055fd12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38aeb1dd-4e70-465c-857d-bbc7142eb14f",
        "cursor": {
          "ref": "084d8e74-6252-42c8-a284-59ddd50f1ff6",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7647a38a-3a1e-4465-b7b0-6bf2c5a666d5"
        },
        "item": {
          "id": "38aeb1dd-4e70-465c-857d-bbc7142eb14f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "79a8a9df-b297-4b27-ac0a-f2eafa388176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96a85e5-0aff-4670-8166-a51ce48d6662",
        "cursor": {
          "ref": "776c3b33-6710-4e73-bba1-61abeab387bc",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f8b7e673-9f1f-4976-b7d9-c4e87173e494"
        },
        "item": {
          "id": "b96a85e5-0aff-4670-8166-a51ce48d6662",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d9a92375-adba-407c-b0ed-1526c4e21e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417aa634-4646-417b-99dc-3f9960967b72",
        "cursor": {
          "ref": "0c488c34-d338-401f-920f-79366376db88",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "805b7d58-40ab-4701-a4a8-49686e402e5a"
        },
        "item": {
          "id": "417aa634-4646-417b-99dc-3f9960967b72",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f3e40435-148a-492d-8212-dbdafc8a509c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416909f1-ce04-4cf5-8a65-b974aa933b63",
        "cursor": {
          "ref": "50968755-e91e-42e9-821a-e790141d41dc",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "38fb51f5-531c-413e-81bc-72acb8db7574"
        },
        "item": {
          "id": "416909f1-ce04-4cf5-8a65-b974aa933b63",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "cd7aef1e-e744-4823-a309-cb0c02b3ca37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe4c696-2584-4d3b-b4e8-9445982d29da",
        "cursor": {
          "ref": "5c469878-590e-415d-95a6-7859b30b31e6",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "cf016de7-f557-4cc2-8738-0de6d0dff187"
        },
        "item": {
          "id": "fbe4c696-2584-4d3b-b4e8-9445982d29da",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ddf4796f-d598-4894-9baa-0e150ebe4172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f980ffc-cc45-4dd8-8d6e-6817275e053d",
        "cursor": {
          "ref": "2208edcf-1d63-4e44-ae1d-70938cc08195",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "44343a9f-01ee-44ec-8195-32dc0df913f1"
        },
        "item": {
          "id": "0f980ffc-cc45-4dd8-8d6e-6817275e053d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3f7a878f-80eb-4aec-9a38-7b4c7b24a96f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b124b57-aa4c-4f60-8953-b1425c669938",
        "cursor": {
          "ref": "8e560ca6-7019-460d-9c1d-3181e651fb56",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "cad47f82-5bee-4311-bf9e-a29e5f5d18d7"
        },
        "item": {
          "id": "8b124b57-aa4c-4f60-8953-b1425c669938",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1e12fa56-e3a8-4fcc-9c5d-e5c5eec7ae53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a08b3d4-2591-4291-803b-6cc0fc290694",
        "cursor": {
          "ref": "6f88b7d3-cc68-4a57-92dd-3fcee65779b3",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "72025de3-b5f0-4115-a4c6-8305d4c8c9a2"
        },
        "item": {
          "id": "4a08b3d4-2591-4291-803b-6cc0fc290694",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c93bd99f-38a8-4291-a74b-7f9b26d0ae19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747d77c2-4a8a-455d-bf5c-76f1f0c07e6f",
        "cursor": {
          "ref": "c80999fa-68e7-457a-9d72-f0881d6eddea",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2a6a83c6-396f-40da-9f52-18d707ae5720"
        },
        "item": {
          "id": "747d77c2-4a8a-455d-bf5c-76f1f0c07e6f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e87767f0-e1a8-4dad-b65f-39d15775acad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b4085f-987b-4ebe-a90b-e4ec0c300482",
        "cursor": {
          "ref": "cb6fa84d-284b-4d84-a7e2-84fcf2ee01dc",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c9ff3df6-aa70-4ac9-8ae8-0592a4e87279"
        },
        "item": {
          "id": "95b4085f-987b-4ebe-a90b-e4ec0c300482",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8ddaf5da-63db-4658-8708-9047b633ed17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1feafb-2133-4c83-813a-1c662c665945",
        "cursor": {
          "ref": "c15c3027-af56-47d8-8e0c-bafcf25d6878",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "57b4622f-5210-422a-a70c-8d43c891987e"
        },
        "item": {
          "id": "1e1feafb-2133-4c83-813a-1c662c665945",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "37b6ab6d-413e-434e-837f-d3bd9b6b3d87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022f7a3b-d050-47d3-bbb6-50c3bd886aa2",
        "cursor": {
          "ref": "dc50a13f-ca3f-4cbe-9540-a17ae98b7a48",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0df52273-d938-47f3-8f3b-89ca47216678"
        },
        "item": {
          "id": "022f7a3b-d050-47d3-bbb6-50c3bd886aa2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "18725e87-8788-4cae-9947-729db84eb04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf710ec-4f06-4bbd-bdf7-d2bf3bcf8eff",
        "cursor": {
          "ref": "2bd55ef6-d5a8-459d-8de0-ac17ed76baf9",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3118b2ac-1550-40b7-9bd0-793db9128c88"
        },
        "item": {
          "id": "0cf710ec-4f06-4bbd-bdf7-d2bf3bcf8eff",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "74134155-4216-460f-9daa-47fa2653d14e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e123c3-69bf-4139-a55c-735c36465002",
        "cursor": {
          "ref": "adc68a96-8e18-4675-821b-17035383e6a7",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9a676de1-6d8d-4381-a50d-1d3398e62ca6"
        },
        "item": {
          "id": "65e123c3-69bf-4139-a55c-735c36465002",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0018803f-6d9c-4d9a-9862-eef634621611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b33b2d5-16fd-4727-bf04-94af9d3900ab",
        "cursor": {
          "ref": "3ecce9e2-1097-4c57-8b55-972683e26e25",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3518c827-8963-4285-aec0-dc041ddd5065"
        },
        "item": {
          "id": "5b33b2d5-16fd-4727-bf04-94af9d3900ab",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "03270258-9ce2-4e35-80aa-085f7c11c84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a0932a-2989-410f-bf02-219a6c323146",
        "cursor": {
          "ref": "80e09464-69f9-43eb-b72c-b9bce35be725",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "878750af-2890-4d90-a7e5-cb4392d79df4"
        },
        "item": {
          "id": "d9a0932a-2989-410f-bf02-219a6c323146",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "72af62f5-1424-4329-baec-6202f197f26a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9bd650-0ca6-4e8c-995c-3a3e492b9d9c",
        "cursor": {
          "ref": "6b6344f7-988a-4ea8-a164-b85bcdfd87e7",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d7d9b933-d7c8-4b10-ad71-a25af25aa08d"
        },
        "item": {
          "id": "4a9bd650-0ca6-4e8c-995c-3a3e492b9d9c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3118324a-cbae-4d56-8607-1585bc5d8297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a505cb00-c60d-4f25-9017-dbff37937a4e",
        "cursor": {
          "ref": "d92e1d48-ae7c-4126-bc3c-90aa4dcc03cc",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b593d0e5-cdc0-48b4-bfd5-5505a93d459e"
        },
        "item": {
          "id": "a505cb00-c60d-4f25-9017-dbff37937a4e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f70541c3-49b1-4098-a517-13b939edc6c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a357e9dc-6a71-44ca-a94e-78c454e67d9f",
        "cursor": {
          "ref": "5e4e9219-802e-4ec7-b1df-7783cd39ad3f",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "74577ae5-d7ad-4507-bd07-ee3f554d489c"
        },
        "item": {
          "id": "a357e9dc-6a71-44ca-a94e-78c454e67d9f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6f2c492f-b29d-4b92-99f6-4687bca104d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "686fc80d-8b76-4465-9e10-df6c0a2549f2",
        "cursor": {
          "ref": "f86abe57-6d2f-42e6-9ac9-3011ef48102c",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "22b975e1-491c-44d6-b7f3-4eeddc22652b"
        },
        "item": {
          "id": "686fc80d-8b76-4465-9e10-df6c0a2549f2",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "82cf35db-a237-43ec-8a9c-b389135fd64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a396efa6-8db3-4d74-a47d-77dd05ead010",
        "cursor": {
          "ref": "7c75a805-f72b-47bb-99b0-c91739d6a0db",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3c5e8d84-2aad-476c-ad50-016270f0324c"
        },
        "item": {
          "id": "a396efa6-8db3-4d74-a47d-77dd05ead010",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "20bf159c-ca68-4198-83f7-b76244237717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9d1013-2ffd-483b-a5c8-2158477398f2",
        "cursor": {
          "ref": "ac8e5716-034b-40f7-9788-b51094cb4bcc",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "fe545647-164f-4ed8-a91e-64e4a6c50b24"
        },
        "item": {
          "id": "8c9d1013-2ffd-483b-a5c8-2158477398f2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "50686463-f62a-4f28-a92b-0d44fa11f23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd89376-460f-489a-9601-0a0a3abd9f4b",
        "cursor": {
          "ref": "0342356d-ac23-483c-9320-d116994401eb",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "13c4e6f3-fa92-45ad-b8bf-1e24efd433d0"
        },
        "item": {
          "id": "5fd89376-460f-489a-9601-0a0a3abd9f4b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "23c7bb48-633b-4302-b7b0-2d4c9480fd4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9935223-e61a-4f88-b8cf-9bf35789ca6a",
        "cursor": {
          "ref": "334b4a0d-7c36-4628-8b2e-74db03fec0a0",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c14a1051-12e2-40d1-ab69-9b8f9b2fa76f"
        },
        "item": {
          "id": "f9935223-e61a-4f88-b8cf-9bf35789ca6a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "83548338-eac2-445b-ad75-d12c0a28ced3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d189f37b-c6e4-4915-836e-9f175bdeb932",
        "cursor": {
          "ref": "a7ff5a45-c154-4b1e-b562-df4a20876588",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "de7fa86d-adc2-43ef-bab4-d17eb3cf70f2"
        },
        "item": {
          "id": "d189f37b-c6e4-4915-836e-9f175bdeb932",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ee5f65b2-4bf4-456d-b7c5-b1015fdc864b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d3f839-07db-4538-80ea-c4d470b12941",
        "cursor": {
          "ref": "9c39266e-aef8-435f-8cae-28949e24b82c",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0f176925-b3cc-4d0d-bbab-693ed6363f72"
        },
        "item": {
          "id": "33d3f839-07db-4538-80ea-c4d470b12941",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d45d0b90-1afc-4bb5-ab7f-23340c9cc561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13f5be4-d688-4698-8416-ba294414d57b",
        "cursor": {
          "ref": "6fa9d54a-8687-48a5-88b1-3d35ac81fbf1",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8c2d3169-73c9-4dec-b3ea-2af3a1933edf"
        },
        "item": {
          "id": "f13f5be4-d688-4698-8416-ba294414d57b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b854b5b6-9f38-4036-b623-b3e0e4c31d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840bd064-71a4-4ad5-8ea9-94a61d3fc5a3",
        "cursor": {
          "ref": "dc9355db-5f12-4a33-8e07-5cd4356256ed",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2217fd73-c540-4256-9e12-8cb521b274b2"
        },
        "item": {
          "id": "840bd064-71a4-4ad5-8ea9-94a61d3fc5a3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0d96f893-320e-4012-8c90-1b1af2f4b465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3fad1c2-0004-446e-ad99-77a035fd3139",
        "cursor": {
          "ref": "59ea70e6-e54e-4989-a19a-fcb4911092ac",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2e7503b5-d455-4689-a99c-0ff8211a0525"
        },
        "item": {
          "id": "a3fad1c2-0004-446e-ad99-77a035fd3139",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d80f2bd9-7e9f-4ac8-8b31-10b0a850b5e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809aeadd-6548-42d8-81f2-53561346f5fe",
        "cursor": {
          "ref": "d90b63f6-510a-4aac-9be1-5ca74c937391",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0549330d-5ba6-4db1-8b11-f2ae7b3ea19a"
        },
        "item": {
          "id": "809aeadd-6548-42d8-81f2-53561346f5fe",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "216ac12a-c1c1-4a87-b6ee-4207e601b88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0bbb08-8db3-4c7f-8936-76c6da141954",
        "cursor": {
          "ref": "335ca345-7283-4983-8c4c-c869a7ae6477",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1e81bc34-a702-419e-9862-a51c159a2ea0"
        },
        "item": {
          "id": "1a0bbb08-8db3-4c7f-8936-76c6da141954",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "10e89d52-1e38-4f4a-a9af-5516863fa229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b02d908-7eaa-4724-8163-2fa2c676e051",
        "cursor": {
          "ref": "ef5d5aa4-efba-41a7-927a-6acfc48aef1d",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7fb36c03-959f-4731-9d96-60b8eef2a108"
        },
        "item": {
          "id": "7b02d908-7eaa-4724-8163-2fa2c676e051",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3a267999-fbde-4a06-ad65-1d42825a1503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1b8744-acb9-418a-9672-86d46b5a7e3e",
        "cursor": {
          "ref": "8622fbca-2e10-4006-b761-0ec062036b89",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6c253949-17b7-4526-864b-43355d64fd9e"
        },
        "item": {
          "id": "fb1b8744-acb9-418a-9672-86d46b5a7e3e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c25b3e2f-5b46-4857-a0e3-4bf89df81413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa07413f-5012-4864-bc98-66249840fa32",
        "cursor": {
          "ref": "a2dd4fbe-84c4-423c-b919-b553e04f276c",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "41b3d265-cb55-4782-8777-915e7d51efff"
        },
        "item": {
          "id": "aa07413f-5012-4864-bc98-66249840fa32",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f4a49c40-d8ad-40c0-a780-8e415cf65f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ad4c0d-a056-46e6-bcaf-40db8281e62f",
        "cursor": {
          "ref": "e2f88b66-f278-4550-9dcd-a3ec11d71fd0",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ffb78a0b-7ba5-47d6-af19-56cb25db3fe5"
        },
        "item": {
          "id": "a0ad4c0d-a056-46e6-bcaf-40db8281e62f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "739147d7-7503-4dd4-b989-f0f47f313e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48e945a-29b5-4510-8ef7-abf4d8864dd5",
        "cursor": {
          "ref": "5b43bda9-2273-4a9b-b39e-3978786498fb",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "3cf6d82b-18f6-4be5-9551-217976d0be5b"
        },
        "item": {
          "id": "f48e945a-29b5-4510-8ef7-abf4d8864dd5",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "99bac885-8fcb-49bd-b8d5-34884f3346a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9daeb956-7929-43cf-8d5e-a65908cd1380",
        "cursor": {
          "ref": "6b02ff7e-4bf9-492f-83e7-9c66fce81df3",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e0077a13-1b95-4622-bdc5-31dde6821eff"
        },
        "item": {
          "id": "9daeb956-7929-43cf-8d5e-a65908cd1380",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "bf852c5b-2f75-476f-ad1e-46bc9f83f0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292c8172-36ae-4e48-b4c8-3e8c5fb4901a",
        "cursor": {
          "ref": "30f0d5bf-6e73-4997-ac98-b19134ec0861",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5c297882-5845-4506-83d0-f4d21b5566ee"
        },
        "item": {
          "id": "292c8172-36ae-4e48-b4c8-3e8c5fb4901a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "eaffaafc-75a9-40ec-9b49-be41807fa4b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44b219d-74bd-49ff-9702-62690aa48c59",
        "cursor": {
          "ref": "93241f17-f4f3-400c-b7b8-8972c74e8ea1",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9a290964-8ca7-4d4d-8282-ce30f0280abc"
        },
        "item": {
          "id": "a44b219d-74bd-49ff-9702-62690aa48c59",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "620e961d-831b-4132-9cbc-f28bebf3bee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5c7119-c48f-49dd-a228-7ed6371e1342",
        "cursor": {
          "ref": "cd9c30f7-9fc3-403d-ac43-c7e19d12ce97",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "66531b43-f9a9-4ed8-83d4-35ce202c8a3d"
        },
        "item": {
          "id": "da5c7119-c48f-49dd-a228-7ed6371e1342",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0bf31931-d267-4c4d-bd28-b53e14ed1169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927eaaf6-9d73-4f4f-9e41-38ce7a7c7d4c",
        "cursor": {
          "ref": "3b65efe9-110b-435c-abfa-fa6229ffa26b",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a7966038-c8c5-422b-9fc3-decf6e6ead55"
        },
        "item": {
          "id": "927eaaf6-9d73-4f4f-9e41-38ce7a7c7d4c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8d61b1be-97ab-4c73-a037-85589d6406e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89c24f3-052f-4a57-b5e7-f34a48ab0584",
        "cursor": {
          "ref": "dd1627ae-e166-47de-bd52-e8f2a21f0be5",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "18aac782-be52-4f0e-bbf1-963a214207df"
        },
        "item": {
          "id": "f89c24f3-052f-4a57-b5e7-f34a48ab0584",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5bcf35c6-a30a-4252-8ba3-882352433fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a68d5f-421e-41c2-bd67-978ee0d6c25b",
        "cursor": {
          "ref": "d92a2b5d-fd55-425b-935f-adfa8f8ccbd6",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "194cdaa8-2b37-49a7-a16d-63a3bdb4273c"
        },
        "item": {
          "id": "c4a68d5f-421e-41c2-bd67-978ee0d6c25b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "6681a6df-f7cb-4ff2-8709-b726e46da300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "946751c2-96a2-4b0d-b8c7-6275d94720ce",
        "cursor": {
          "ref": "29ef5a77-ce84-44e0-a137-89ddc0101d62",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "91a11441-fe5a-43bf-992f-612fe4933fc4"
        },
        "item": {
          "id": "946751c2-96a2-4b0d-b8c7-6275d94720ce",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "08bdc8f7-4ef0-4541-b7be-71e4bba486ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aacae9bb-dc26-45ed-852d-b317ee212ea2",
        "cursor": {
          "ref": "9ec2268f-2cca-40d3-9739-a967fed9cbc7",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "348f48fb-cdc5-4c98-8909-d025e476bde7"
        },
        "item": {
          "id": "aacae9bb-dc26-45ed-852d-b317ee212ea2",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e9949743-4f3e-4603-944a-976926f9ba6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071e0291-a387-48c8-9d43-ddf747519a58",
        "cursor": {
          "ref": "9f17da42-39ab-4f3e-8518-ec2a0e87237e",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "eaa7f88a-d4f9-448a-aaee-55d6d5e674b6"
        },
        "item": {
          "id": "071e0291-a387-48c8-9d43-ddf747519a58",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7e89e3bd-f0d4-479f-81ca-df79f0b082d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47a46a1-6959-46ad-a510-2267e4789631",
        "cursor": {
          "ref": "fc9eabae-0f21-4e8d-8232-21beeaceda11",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9a7ad3d8-b776-47f2-88c1-c471b9cca7cf"
        },
        "item": {
          "id": "d47a46a1-6959-46ad-a510-2267e4789631",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a1ed1e09-6c0a-4b52-98e3-094c0ee0bbda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ea06f9-30fd-4563-80c0-64ed2fd3567f",
        "cursor": {
          "ref": "383f6ac7-2635-4d86-98a2-0a217d7e74c5",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "439c8690-38cc-48d1-b51e-1ccde02e1ef4"
        },
        "item": {
          "id": "63ea06f9-30fd-4563-80c0-64ed2fd3567f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "14cda37f-babb-490e-8bde-bf73057b2dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c668138-fd1c-4232-941e-7f46803d16e3",
        "cursor": {
          "ref": "d625f074-6351-4f20-a5f7-cab57d7d6b83",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "657966a4-1d09-4da5-b6fb-afe30ab03325"
        },
        "item": {
          "id": "7c668138-fd1c-4232-941e-7f46803d16e3",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a56af2de-b53c-4390-8351-002f160fb32d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dacfa16-2854-43af-a64c-10afc4a27c06",
        "cursor": {
          "ref": "c5f6e929-e237-4e08-a641-2953f62d0823",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f4a5faed-6e4f-4abd-8ca2-8150b83101ea"
        },
        "item": {
          "id": "0dacfa16-2854-43af-a64c-10afc4a27c06",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ac25f61a-7e14-4caa-9257-ace03e4cbf68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7a6dc4-1285-412c-9c41-069a7df2365b",
        "cursor": {
          "ref": "077b336e-13b6-413c-84c2-5d7ce5492364",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c5abc86c-7dff-4cc6-a7f2-9cd95a7fc8b6"
        },
        "item": {
          "id": "1c7a6dc4-1285-412c-9c41-069a7df2365b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3fde4a1a-0f56-469d-8f7c-5daae4c5faff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5b7434-f666-4d66-ba5f-ae9c6e1fdea0",
        "cursor": {
          "ref": "25a313a2-e61e-4d3c-9098-8caf42faff59",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c0aecbcc-8006-4c17-8aa6-c09f6c22fa7b"
        },
        "item": {
          "id": "5e5b7434-f666-4d66-ba5f-ae9c6e1fdea0",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9aa8f560-b319-4df3-b775-9a004b806390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a8bb3b-d9cc-48ac-8f10-7fbbd4a40bc5",
        "cursor": {
          "ref": "1b7d9ff3-a0d5-4706-8540-5ad23bb0648e",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7a5a6fc3-bbae-4222-a7d5-c8175ba74d08"
        },
        "item": {
          "id": "04a8bb3b-d9cc-48ac-8f10-7fbbd4a40bc5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d46ad8c3-d44f-42dd-bd06-3a2a0ed8f1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e88594-b4ce-4de3-8120-bba66ab662dc",
        "cursor": {
          "ref": "85ef37a1-c03a-425e-a376-e0034f08cc53",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "57ffab46-343c-4c98-92ae-8cd55003aa44"
        },
        "item": {
          "id": "06e88594-b4ce-4de3-8120-bba66ab662dc",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d2a09eb6-fe6f-436b-8470-09b23b89599b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486b884b-5f54-4887-a899-dbc160453372",
        "cursor": {
          "ref": "b718adb5-dcf1-43c3-bfd6-081d90e06a5a",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "fcaa720c-8fe4-4f44-b23b-1084dc56a8b6"
        },
        "item": {
          "id": "486b884b-5f54-4887-a899-dbc160453372",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d31a41f3-df6e-403b-b0a6-20fd598b774e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a08437-ee6e-4331-9ce8-70563e6f0aec",
        "cursor": {
          "ref": "ecfe37ae-5f9f-420b-a3df-69426a8184e0",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7b6d2ad0-6541-4711-a667-39f07b396a67"
        },
        "item": {
          "id": "97a08437-ee6e-4331-9ce8-70563e6f0aec",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e111de6d-efe6-4e5c-910f-ece91d16ad0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2644cc-bf08-4aa2-9f72-da8dc3f28541",
        "cursor": {
          "ref": "a925f6b8-7fef-4899-a20c-69c4b66746a4",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fb71971b-3254-4ea3-b586-06ce8a8669ba"
        },
        "item": {
          "id": "3f2644cc-bf08-4aa2-9f72-da8dc3f28541",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1578047b-f346-414c-b093-b896a39a2e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d175afd-df52-487d-824b-58517620edc4",
        "cursor": {
          "ref": "321cea67-9c52-48f7-b3c3-d6e628d5c2da",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f80be7d8-8f2b-4e85-a868-40013f488a64"
        },
        "item": {
          "id": "9d175afd-df52-487d-824b-58517620edc4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0d499bd1-beb7-468f-994b-be0d691225c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0facd6aa-8d2f-469d-821c-677c22847946",
        "cursor": {
          "ref": "c0c087cc-e357-40a8-8d18-f19d683b4dd4",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f407c8c4-9f00-41a4-abe1-551ce2bc4312"
        },
        "item": {
          "id": "0facd6aa-8d2f-469d-821c-677c22847946",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2f124e89-275a-47e2-91cf-d18bea635d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9294698d-b199-477a-b6a4-c8833a46aae6",
        "cursor": {
          "ref": "bc65755e-245d-47ab-8ef1-a246551071f0",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "13b29ef2-d744-4dbe-8275-6e7b089fbbce"
        },
        "item": {
          "id": "9294698d-b199-477a-b6a4-c8833a46aae6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "00e6c1a0-bc40-45b0-8162-db8f599cc428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2b1127-378c-400d-a0b3-67f09fef1542",
        "cursor": {
          "ref": "fc3133a2-f014-4ac3-b3b5-5d20bc5066c9",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "db9ffef0-ee44-431a-8de3-9453f949b88d"
        },
        "item": {
          "id": "ee2b1127-378c-400d-a0b3-67f09fef1542",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "dafcd246-1fd3-4701-8fed-7b314d25946d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5bcf097-7bd3-419f-8f5a-299348af406a",
        "cursor": {
          "ref": "7555e474-a0f5-43e2-8913-199ad75c0d3b",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c7381c90-4041-4da6-8912-95b9106a354c"
        },
        "item": {
          "id": "e5bcf097-7bd3-419f-8f5a-299348af406a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f5b20758-3492-4ff8-a626-4faf82a28ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413e55c1-6526-435a-8905-23310028072f",
        "cursor": {
          "ref": "b072813f-ad84-4414-8b50-2bbad8077896",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7b0f7a97-801e-42a0-bd8a-c259cb01131b"
        },
        "item": {
          "id": "413e55c1-6526-435a-8905-23310028072f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "72435976-b6c3-4455-9b30-877a98b2fd13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b679d3-d35b-4aa6-9d7d-360b8a67680c",
        "cursor": {
          "ref": "7e5a121e-b7f4-48b1-9066-a14141c3a818",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c59c2a1b-3cd0-43c0-b114-25caf4d9093e"
        },
        "item": {
          "id": "d9b679d3-d35b-4aa6-9d7d-360b8a67680c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2350b889-49b9-4a34-9662-a49ecd5149f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e07fe9e-718b-4497-ae8d-c96b3635e753",
        "cursor": {
          "ref": "d002270b-d53a-47c5-956d-a55c0484991e",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5132d53c-3f19-4a9f-873f-dce8efab4b33"
        },
        "item": {
          "id": "1e07fe9e-718b-4497-ae8d-c96b3635e753",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "92f84e3a-beb7-447a-8e39-5448c5310921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888459e4-96c3-4240-abda-24f4b4c24475",
        "cursor": {
          "ref": "1cc97062-bbee-405e-9588-35926522d8c9",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9f2d0b23-8ef1-401c-91dc-06098388385a"
        },
        "item": {
          "id": "888459e4-96c3-4240-abda-24f4b4c24475",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "12649421-9ab0-46cc-b928-eef6400175f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f390012-10ab-48cb-a1d7-623f0648dfef",
        "cursor": {
          "ref": "03eb2a92-42dd-49f3-bd6a-1fffaa22bd74",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2d2cd8b5-fcdb-4b1d-b90a-674fb915a2d7"
        },
        "item": {
          "id": "3f390012-10ab-48cb-a1d7-623f0648dfef",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2a25f967-ca41-4605-9556-6733f0cdb2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490cd27b-7ace-44a8-b9dd-a483319dbd79",
        "cursor": {
          "ref": "c0b725b3-b9db-432d-b08a-64bc86f8b916",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8bb992d4-e39a-4e8c-853a-88a978d12373"
        },
        "item": {
          "id": "490cd27b-7ace-44a8-b9dd-a483319dbd79",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d9870d6f-71ed-40b4-8655-390e249a6481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "189fc74a-ddb4-4423-a9bc-7aa31f97a4fd",
        "cursor": {
          "ref": "02db576a-a92b-48c6-9a10-72af21bedf21",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "55fe324a-39d8-484e-9708-cc642ec6a03e"
        },
        "item": {
          "id": "189fc74a-ddb4-4423-a9bc-7aa31f97a4fd",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3545bf8c-1df9-4829-9481-7a298005f2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432a0c0f-1c61-4e36-8aa4-c74ba8fbac62",
        "cursor": {
          "ref": "93cd6689-4cff-4e82-8b8a-0805e461487f",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d95a96c6-5e8d-48be-8ad9-86efa6c65a49"
        },
        "item": {
          "id": "432a0c0f-1c61-4e36-8aa4-c74ba8fbac62",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "124089a9-685e-472e-8243-c176a053b3b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d114f759-56be-465e-a9df-cd9481967d72",
        "cursor": {
          "ref": "9b8a9ec8-c5a7-4370-960e-5f3e210122ef",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "82ff4225-f414-4f82-b14f-66d71bdd254a"
        },
        "item": {
          "id": "d114f759-56be-465e-a9df-cd9481967d72",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c5a8f8c1-14a2-44a4-b37d-ada07893bdb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36dee0e3-3d83-4a85-a69e-522df714d890",
        "cursor": {
          "ref": "b4fe2da1-cfc9-40e0-809f-e39223db52b0",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "266a0ec7-4ccd-4fbc-96b8-439c365b4d5a"
        },
        "item": {
          "id": "36dee0e3-3d83-4a85-a69e-522df714d890",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7f27a192-8c38-44ba-bd1e-42cdfc974d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b48c15a8-56ad-4459-a881-accceb0c5db0",
        "cursor": {
          "ref": "2eaa860a-dcd9-44fb-81b6-139cd679fdc0",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9a901a74-243e-4517-928c-c1c6a044d12a"
        },
        "item": {
          "id": "b48c15a8-56ad-4459-a881-accceb0c5db0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8a30551c-f198-45a1-95f2-72966c97251f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37aeee3e-de9b-49f3-a6e0-d097b60061de",
        "cursor": {
          "ref": "b3cd31db-9261-40e2-8572-c04c3093fa49",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a608f997-4ce5-42e4-abe2-74d29d979377"
        },
        "item": {
          "id": "37aeee3e-de9b-49f3-a6e0-d097b60061de",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "70e481e7-44bb-404b-8d27-846204215bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a68f774-1aea-4d70-88c1-500a4a57b9ee",
        "cursor": {
          "ref": "d5d94394-a9ef-4322-adc5-a26d53e38476",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e1effdaa-6d75-4a53-a9c9-298027085a4a"
        },
        "item": {
          "id": "4a68f774-1aea-4d70-88c1-500a4a57b9ee",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "67c4de78-a690-4c66-8788-a9b38165d1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "094107a9-e5bf-4a8b-9353-858d69502b47",
        "cursor": {
          "ref": "d8af5714-eaba-48c6-8598-f632bba79af2",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "dbc74b6e-86c8-4aa1-a934-618989152722"
        },
        "item": {
          "id": "094107a9-e5bf-4a8b-9353-858d69502b47",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e64a9e9c-166c-4157-a34d-d26f01996a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf5ba3d-d4dc-4e35-a16e-7e07a71d0af8",
        "cursor": {
          "ref": "907223a6-acf1-460d-bd79-022700ff4e67",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4f1fa676-25c0-4546-8d24-d5695c17e7ec"
        },
        "item": {
          "id": "9bf5ba3d-d4dc-4e35-a16e-7e07a71d0af8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "82626536-0949-46a6-b583-8e43e511f1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339392b0-2fa8-43a8-8a16-78f2f14fd85c",
        "cursor": {
          "ref": "b79be031-63a5-4763-99c3-9451cb06bad8",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5f4553e9-385b-4289-986e-02871d6da46b"
        },
        "item": {
          "id": "339392b0-2fa8-43a8-8a16-78f2f14fd85c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "619332a0-e2df-47da-9dfa-bf57127f797f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54df0d30-7c2a-4128-a85a-cf70d8bba619",
        "cursor": {
          "ref": "1a9932fe-af4d-4f18-9089-5206413233ef",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "965283e2-b56a-4f82-97aa-156cea15649a"
        },
        "item": {
          "id": "54df0d30-7c2a-4128-a85a-cf70d8bba619",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e3fa9897-082a-4283-9a00-33bac2a8493e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dbd3a4d-c747-4273-a9a2-dfb904d2f3d7",
        "cursor": {
          "ref": "c92bc967-f1a5-4408-b66a-a6dca57fbdc2",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0643d4c0-4f1d-4547-bfca-1f61bf91ab7f"
        },
        "item": {
          "id": "6dbd3a4d-c747-4273-a9a2-dfb904d2f3d7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9eabaeb3-62e8-4760-b78d-c273f6ad259e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775cc38f-32c3-425c-b339-b1eee518aed8",
        "cursor": {
          "ref": "e0d4c6ed-4bf4-4fdf-9953-c6276f54b9b8",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f370298c-4893-4457-9473-f5839db35615"
        },
        "item": {
          "id": "775cc38f-32c3-425c-b339-b1eee518aed8",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "30c5bbc4-fc55-4af5-9535-b810ef3ba3ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13c414e-beff-4d74-9710-04ee95996f59",
        "cursor": {
          "ref": "6b156f83-1eb8-4e27-a5b8-e41bfb0ed31b",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "142e391a-fe66-45b4-a71b-89e95ad0c103"
        },
        "item": {
          "id": "d13c414e-beff-4d74-9710-04ee95996f59",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "de3c1676-254c-4a33-ba06-a1593be4058f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac0c354-ef6b-442b-a912-dce0730c3c08",
        "cursor": {
          "ref": "22931267-6658-432e-8c4b-62826ef0646d",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5bd9b260-86eb-4798-8916-f59f7bab08af"
        },
        "item": {
          "id": "3ac0c354-ef6b-442b-a912-dce0730c3c08",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "021dea7d-36fd-4370-8b15-249eb78bd717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95e5b2c-5893-476c-a5d1-c7d846015099",
        "cursor": {
          "ref": "0199b2f7-74da-4931-84cc-4097a86bf54d",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "69344bf4-913f-40a2-a63e-d46a79c5b8d6"
        },
        "item": {
          "id": "f95e5b2c-5893-476c-a5d1-c7d846015099",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e480a136-e6a3-4f94-ae5f-cf72f5793bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458e7d40-b66c-4690-bd3d-a221bd24d3ed",
        "cursor": {
          "ref": "c902dc39-6bb1-4c0e-a3a2-e222f79ad412",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "92669419-a479-4082-9aa1-39ba3fba1ab2"
        },
        "item": {
          "id": "458e7d40-b66c-4690-bd3d-a221bd24d3ed",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6113bd60-a174-4f78-b2e6-b69a846e45b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8503515f-2c0d-4281-8ab3-f852efd78260",
        "cursor": {
          "ref": "a48ca696-fc55-41c6-884f-85a63482329a",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "cbf62726-11cc-4919-be69-96c4cad31fc9"
        },
        "item": {
          "id": "8503515f-2c0d-4281-8ab3-f852efd78260",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e9d24fa3-99fc-46c8-bedc-ac08b4169861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c042b81-3713-4e33-98a7-41205c4cb596",
        "cursor": {
          "ref": "d14e7b74-e65a-4980-9076-ec7c45f63a83",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0fde6441-49ab-4d8f-8031-cd9b06bde092"
        },
        "item": {
          "id": "7c042b81-3713-4e33-98a7-41205c4cb596",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d7bd5d09-f72e-4d62-9965-5f2560e1a7c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89489421-1268-4181-8609-b44a2c7feca1",
        "cursor": {
          "ref": "d4a48b13-3ea8-47c7-bcdd-6ac7523d35fb",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "62a9c282-0953-4248-8fd3-c4d80e776a92"
        },
        "item": {
          "id": "89489421-1268-4181-8609-b44a2c7feca1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4550ee7c-fe7d-443d-90b5-5f3f5d5205f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "127bea93-972a-4d45-b6aa-3ea403566619",
        "cursor": {
          "ref": "cfc5bc8d-056c-47b1-95c8-9831d0235693",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "47159fdc-8b5f-41df-a9db-64c94c282053"
        },
        "item": {
          "id": "127bea93-972a-4d45-b6aa-3ea403566619",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "01ba9f7d-27ce-4027-8700-f71a4e08d229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "613c5015-16bd-4c7c-b71e-9e5105d61c0e",
        "cursor": {
          "ref": "ef38b841-ad34-4ca8-9fd0-dd0086f58478",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "cf9724f8-0968-4ac4-9a2f-ddd42b2105b0"
        },
        "item": {
          "id": "613c5015-16bd-4c7c-b71e-9e5105d61c0e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "166f878c-bae4-472d-8dda-e3cd1b1715e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "2dfcf5ff-5278-44b1-9db5-6c18a8065e57",
        "cursor": {
          "ref": "a158d948-a587-4e4e-b21a-0b7c45de4085",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "76b65db6-fc1e-4b2c-bdac-48eafc96aa30"
        },
        "item": {
          "id": "2dfcf5ff-5278-44b1-9db5-6c18a8065e57",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "045ecfc2-bb52-4882-960b-3f9ace001038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "1068378a-628c-4f07-abfd-7fef153d353e",
        "cursor": {
          "ref": "364afddb-3793-49ed-b689-167c7db6241c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bf8dce9a-d2ec-4858-adf6-73e440c79734"
        },
        "item": {
          "id": "1068378a-628c-4f07-abfd-7fef153d353e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4edb9bab-7c05-4fd2-8397-3bc201d7f5f3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1068378a-628c-4f07-abfd-7fef153d353e",
        "cursor": {
          "ref": "364afddb-3793-49ed-b689-167c7db6241c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bf8dce9a-d2ec-4858-adf6-73e440c79734"
        },
        "item": {
          "id": "1068378a-628c-4f07-abfd-7fef153d353e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4edb9bab-7c05-4fd2-8397-3bc201d7f5f3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14bf3bde-b2ee-49f5-a026-1e3580c6e456",
        "cursor": {
          "ref": "94a51da6-133c-464a-a101-265ea9bd972b",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9f9985db-ade9-4fd6-b960-bf72464375c9"
        },
        "item": {
          "id": "14bf3bde-b2ee-49f5-a026-1e3580c6e456",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2d759428-49ac-48a8-8ff9-f61711a208b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9065afb1-b08a-4cbf-a10d-a79c5f96dd03",
        "cursor": {
          "ref": "afabd373-26a0-47d0-a9f5-9d8c9ca2a45e",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "431f17a9-ac35-42b5-a1b6-7f892b0f2a1c"
        },
        "item": {
          "id": "9065afb1-b08a-4cbf-a10d-a79c5f96dd03",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9a0e0d6c-c5bb-4d40-81c2-faf3e19273f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}