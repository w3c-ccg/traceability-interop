{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d0db8544-a0ff-4673-86bd-6708759fe8cd",
        "name": "Clear Cache",
        "item": [
          {
            "id": "46aa715b-2587-4094-969d-28fda2f16cd6",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9d25a24b-1814-4087-be70-c23c853f5b44",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "205bd4bf-1764-4afd-830a-c34313e6e66e"
                }
              }
            ]
          },
          {
            "id": "15210cec-5645-4576-ab17-3c1d7d32166f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8e0dffa2-4591-40d8-b410-558d994db5ea",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5e8f425a-8ca0-49a0-93e7-002be7774739"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "62e1c331-3a96-43d3-b2fa-ef7e15d6d450",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "213f8d94-be45-48f3-b516-fe5cb6323d9b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "367f088a-f5cc-44e7-9290-739d996e3738",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cfb63d12-c12a-439e-86b3-51b6e8055295",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "11e9a283-b769-4148-a64c-1d5861903801"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "15c76257-ded2-4a58-a092-bc45287fd7d0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8b7491ce-238c-4b66-86a4-aea46eb0e2bf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "70131995-f928-484b-8769-66d53dbf1a80",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c68e00c9-45a8-44dc-aa92-690da83389a7"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "04ea287f-1fb1-4f34-b4e5-81dcd7a34ad5",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "739d8be4-84cc-4881-bb40-04a74d4f1f70"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b225992e-8a46-4655-9b22-43ee3b694992",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1388df28-690a-4c17-8b93-c2ef19d69dba"
            }
          }
        ]
      },
      {
        "id": "e3599f10-5bc8-4849-9193-bf4331aa55d7",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a6111281-0f06-4734-a2d6-ef831a3c56e3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9987c2a5-55da-4610-bfdb-b26f01b42270",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f5a3f6ef-6fce-4762-9f96-25e19d317428",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8696113d-d048-4502-9131-827ad2174302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "77051c2d-9639-4b7a-b5b9-bc92d47147b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6dc7d3-4868-4d63-8108-6dc10b1c5e05",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8840fd5-bb79-46d8-9abd-72b7e2a50496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "156c0538-7159-41dc-98e7-d853e352d8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa57aaf-1c1d-409e-a93e-5d0a78636752",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f065c415-bed6-4ffa-851a-00260bc4603c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6402c896-ba32-41e0-a6a0-3f6b40379b82"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "47420532-30ca-4609-aa42-6f414913dc69",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9e1a143e-ba3c-45c9-9e7e-4fc5a985ca5a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b03cf0-dc83-42ac-9b21-8d19bf5c4738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "110c042a-4663-41cf-be5a-4a2c088c8c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903ed1d2-ba8d-425d-b20b-f0c9462b712c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5bed578-3c1d-4410-88d7-11e9e1b630ba"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "41e7cd52-3612-49f0-8686-f2c57b3dd1aa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "437f24ab-c9d8-422d-bb7f-8c62a390273a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "38ade6a6-0a21-4834-a530-dde09214d985",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "cad9309e-531c-4d4e-aea0-9588b63e0556"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9e01fc1b-5be9-4f23-ab8e-b1fcdf95d277",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c8fa923f-8f10-46be-ba74-9d435534d9de"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e4d8fa51-67ee-40ba-9a5a-5299927f92ec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f3c1fa63-3d8e-431e-9947-5437708f5a92"
            }
          }
        ]
      },
      {
        "id": "aeb662b9-9655-4d44-83dc-72b8c10a4af9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "be1bb037-8e50-4190-8a87-ad327f7c1283",
            "name": "Negative Testing",
            "item": [
              {
                "id": "315599f2-0191-430d-ba3c-6dd7faccedc1",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "2364a4ce-ba35-406d-ade4-e741d926f327",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d75ea6d-daa3-419d-9463-61053184f314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49efc8f6-b9bc-4e61-b4cf-f637d8810f59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a20866-4f5a-427a-9013-090a046fe9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "954c23bd-8c91-42dc-abc6-033eb3343881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "040cdbef-7c60-4727-ba33-3a6f5d5a1e40",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f79501-88bd-40c1-8afd-6b709979f8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6fb6acd-e218-4c5b-9a04-3c573f2c7215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e929c325-9fee-452c-8d56-bc29fb794318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ead50a6e-a074-464d-8b77-c2a74adadf29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c8c3ca-94e9-45cf-aa71-3959b4841448",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05594453-2479-4ef5-91a3-2dcf4ef9b404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1cafd4b-c9fe-4058-a725-49b1045b0737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd17312b-2c01-4fb1-85cb-b61103ecab13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51d8e333-23ee-4800-a698-fc751ef42a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b82b59-4a70-4a98-b430-ab74077f0e27",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ecbb04b-84ad-4da7-8a3b-539efc8736e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5cd8bfd-b2e2-4c2d-aae3-4f5628096d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b1eb80-8763-458d-b1e5-86486a1f44e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf6b852e-4ed6-4f05-bc31-c21e7d06bcd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c5dbbd-8a85-4b0a-8122-78aa17e73771",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2dd4a6-f1f1-4374-b6e5-6ef4a8bbbd6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db086f16-f18a-48d9-bb13-b7e976243384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3bb10d-fff6-4f43-a013-bd80a32a6c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "487cb2eb-909d-47d6-9859-d50b2eae5b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5001a6c-edd9-4d44-8f9e-69ed5ef134cc",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f9fdb7-4f73-42c1-bfc6-eb66d66b4fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c17533-45d4-476d-b0de-e2e50bf66468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0426bcbb-b379-4e82-bd9f-e6586a6d5af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6850e484-70bf-455d-a8f9-2d7016e53603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81134540-7e85-4165-aa0e-110ffacba88b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36ae503-3e65-4cb9-8a4e-ec2b93d012db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f759aa6-7b09-4c67-93d3-7cfa58a5d90d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5da80f-3955-460b-b692-95f0c3232010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f27a3db-593b-4c63-a091-c86add54c84c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebba4093-5079-4891-8aab-bbfc63e1a585",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbbd4e2b-65ef-4b34-9595-5273bd45f3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aca97c0-dc9f-49ef-8a09-86eb3be14ad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85be044-3bca-4f3a-a3dc-aed8eaa926d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2792c012-bd0c-4b38-9dcd-c662aff33e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b784c6-0f17-4cfa-bfe1-94929631f8e9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae64f260-ffbf-4bf5-bccb-583363c189a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beb14ee7-b285-440e-8da6-d2a9fcdf17f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9e293e-c5d9-412f-87eb-c5c29b08dd07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e7d919b-ea0c-4de5-b4a7-85b20618d1c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96aaea7-257f-4e47-9492-d7944a3cf70b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c0fdb7-d60e-4626-b445-83b7ad105d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "346c0695-dadd-4779-9b6c-eb737dc607fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e0774a-19c6-4c00-9014-9903828cae41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f576e80-50fa-47a3-880f-4536205fc680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb28e89d-ad0f-4bd4-b0e6-d3800526180e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4aa685f-6ff3-483b-9f9f-4c61a6c59fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbbaf353-0495-46c5-aad4-6ac74c83acb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f01a8e-4cc2-4e89-a512-86b4b38f6386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "effbe559-cc3d-4880-af6b-f9925732b764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b77559f-0fdb-46a9-9290-2384f4774b06",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d06119c-6492-477f-9849-701022eb08e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89399a6c-275f-478a-b806-f559b5b1bd52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb7969c-5e1b-4797-8940-90c1c6c108f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc8003fd-55b9-4fc6-a372-554934912764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0fe8a73-8273-4622-8897-0a060cbdca6a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a93339-e3ca-4fd2-a994-15bb2e190749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee4b741b-f832-46c6-b465-99de234dcdad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510252b0-ede3-4b2f-a255-a21e1935e059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1c073a2-f4e9-43d0-b03e-7bbf06d15111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b3e605-06af-4248-ba96-d9e81bb17e7d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9596aab4-e9cb-4a54-aafa-7c9f125d5ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27b56922-deca-4331-b933-b89514054804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cab77c4-6bc0-4821-b5d3-7f58798ee2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c613838-75cd-4443-b1f1-26bfc2436efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459c0c96-3a05-45b9-8700-96b33ace0835",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8337c2-7a0c-4dda-984b-c3fe271d1932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e1e4919-855d-4603-aff2-3afc98078e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c9f5ac-074b-413a-8088-3d12d208c329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2fa1585-104a-42b7-805e-fd901c8258dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a85f48b-06d7-4ddb-9c7a-200dd78f95ea",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a30bcaf-4f4b-47fa-9f84-67b34aea407f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae2b2363-5cc7-4098-bb16-eecf17c1ecf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a22bb61-df55-4017-a5ef-39bdbfb8a499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50326a85-2b33-466a-aa1c-95cc3f4cb821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea49f7fe-54d1-47b1-995b-8e7ac2ce6336",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d09d108-e2c2-4e08-97d2-1ecd2883b697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29a51b35-f10b-46ad-a914-32b9d98dd6ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55e2f97-ef5a-4ee6-a28b-2df3c6f53fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01111a52-5c2f-47a8-9017-51370e680762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8cb94d5-e98d-4746-996e-548d347308fe",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "206ce784-1823-4667-a685-82ae99bcd784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67f753da-0e94-415d-bd1e-a0f854b1e012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d5dfa6-f65b-463c-88f2-5151477fd350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "59f42ee6-d07b-470e-b6a7-1bf06ca51b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0baf89-0c76-48e9-96a3-eb77f0d6a181",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5ea4fc-0d66-4281-9f1c-9699e4ce7279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf2b85dd-2e01-4db3-8a83-10958b5eb54d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d8a2205-8bc8-4b8e-89b5-94f807741281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fb369df-e31f-45b6-a66f-98ba71be5bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4f9137-251c-4b3c-8083-cde7586a5cd1",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb5a29f-46ff-435a-8a6b-65fcb1374424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d901a5ea-fbbd-4615-ae5b-eb6a418e1fda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ccad6e8-7ab9-44b7-81f1-abe7e948eee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9042b78-5ccd-4042-b5e3-9a96a0302564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339058cf-ff7b-4ae1-8dc6-642015ddccf4",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6036b559-c4a7-4a29-bac2-664e7065e4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd09ab45-d414-4d01-8e14-49ba0687d325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6c2217-2bb9-43a9-8ee8-c560ac948e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2631034d-cd23-4e20-8f60-f6c8f359d67e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8641e1-c449-48b5-9a27-d64ad4427591",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b021d1-ff0b-49c6-b546-7d37c9f556e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1a7e0a0-4641-4a1a-8c14-cf493f64954e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271dd440-cd54-4560-93a9-2ad6ef10268c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4e168f9-7cc8-43e1-846e-ab6c5873fed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0f6877-c156-409a-9cd1-ed4cbb426a88",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "621e8608-76d0-4382-a7b5-fa2cc24ab0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eedc248-6505-459f-9a23-80ad5157e3d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7c3fa8-602e-43cf-b8af-8c0f7b1c0fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "beb45b3a-15e5-4c95-aa06-1db272f4fee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69b5f36-f260-469a-a690-1093fb928807",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b867200-c0e5-461c-8722-192bc690df9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e7eab68-5811-4ebe-ba3a-8099c36475a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17965cff-1f89-478e-89c7-bd630d193056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f35649da-6fff-4631-a0ac-b276dfa599fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f79e9d-3327-4a42-b84c-bed2b30f90dd",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e32e73e-0fbe-4df0-b536-382387335c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0649d02-41cf-4eb8-8550-21624b9ccc43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df109347-56e3-4408-97a0-d80b0d7ed4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "56695d0a-49c6-41b4-bcdd-4ec98533b5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ab5d07-5f86-4add-ba82-97c837e6f573",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db3ffe26-a114-4bc2-b108-4340385981eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "228ab9d3-9331-4c89-bf65-90e443692fa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7e7178-ec50-4fa3-9b90-d326c6ffdbf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6302dae1-3c48-4249-8f64-695d1fb46c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5086a9d-b19b-4b21-be86-92a54d99c437",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1680a7f-e794-4e74-823e-85c23cfd78b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c39501b5-7b41-4699-8111-63e86240db7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b40dd67-9e15-47a2-b842-316e4c9b5442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ef9d816-200f-4959-b54e-124485f5e05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e607a614-8f74-4cff-89a9-b35b6e592a52",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "450808eb-8ef6-4fcf-b21b-a18f1619a45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b0e3839-978a-4d89-b862-e492ce86dabe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eba3785-b1c3-4785-b7c3-bd765d3621be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf2d291c-ceb9-4dae-8b9f-e83911c9c3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ffc7634-34d9-499a-9378-f69d88d04c6c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc42ea0-7870-4ac2-abf5-b3e3d8edd826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63e6d880-f15f-4120-ba76-bcf224127f64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846e3048-40e6-4f1f-8ec6-244499c59dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c8e5ff7-c840-4d62-84de-f03f734b1983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67b322a-d193-4208-940e-a4e85228d8a1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc5a4940-a7a6-4ff3-8a54-7155b8efad6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f1c43a9-bb79-4351-96c9-80ac0942da67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5770b6-865e-43ad-be34-ea96d43352e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc0680a7-c9e4-4087-ad8b-a703089ab859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e514bd5d-712d-445a-8ec8-b7486ff6b711",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0554a1c8-5e4b-43ef-8151-13c4d11a92f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1de5c43-8c61-4741-98b3-bda21611c5b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063932d3-321b-4e9c-999f-7fc3047cc488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "af2e2a81-0b0b-4452-9c55-31391a9a6c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c8b5210-2554-4d38-bde4-eb97a7bd62d7",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd6b866-902d-4080-b968-f8e12d13d7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f6f36b6-1dd7-4125-87fe-7d68fecc38d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93a073c-0045-4c33-aafb-72aea4c45ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a93ed079-acb6-4c14-a5f1-360ba167306e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bcbf63c-2ca6-4b91-8eac-ad0ad8b82413",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013e25ea-b1a0-4301-a059-ea1da4d61388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beb8aac2-5a9e-47c5-b8f3-7f2b180ac95b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e943203-81d3-4ea1-91ba-3f85853c5bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "61f2fdc7-9246-436f-a8e6-469793041861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be857ff-ae6f-4313-9235-e38c26e09fa7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "483e4c0e-e15f-4e2e-8b01-9caef81f2a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b501decb-d755-4320-8a98-dc34722367b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494be0c0-7410-4b97-b69d-55445d76969c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d1adb46-1884-4266-a4d5-282161725f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bdf889d-7510-40df-a2a9-d4a3df2c8d79",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd2c6012-fff3-430a-a86d-6b4755e98ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d070a569-b316-406f-b260-b39fca90ddfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1bd367-b1fe-4ba9-984f-70aceaf5c4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c9fd9b53-92eb-4ee9-84da-c93789f4731e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87074140-a831-4421-bb75-cf28f65339d1",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1baf7a-6904-4a53-a0ec-660c50db1df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c95e568-e1df-432c-a721-f129214cec69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f0d644-10c6-40d7-b82d-a658eb0d2cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fc2ee047-c06b-48ef-81d7-7c6d79250dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0857b18-a2c6-40fc-b5bc-08007f738fd7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0318d858-c263-479e-80db-fdd4135fdb23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22eb3f21-872e-4d70-aea2-10d3d7993734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7ffa16-5022-4280-9b57-f8cc94c27862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "57063885-b615-478e-9d87-79ee17551ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6794eb43-69e7-4362-9196-974f9e8a08d4",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ad3971-cdc0-4c60-acb7-769b71d54adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65c28a06-6c77-4559-92c1-0ca0053c77c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f5e97a-3637-4708-a286-77a8fb9022ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7052ada-a26a-48dc-bcf0-e5c5d12e594d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e5e97c-3274-483f-9deb-769fc8c3d345",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4885a56-082b-4f00-b87c-6ddbbd68fc77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b6a7cbf-a6fb-4ffa-a5a7-6393194683d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c49f27-8782-4fe2-b35b-cd880e972955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c90d7de-419d-47b2-9bc8-49c32ca894f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d31004d-69a6-49bc-9bd7-f5f1f8bc6fcb",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6bee358-0086-4427-8375-6e8611f92209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ecea42-d0df-4f9a-8afc-90d650aa585e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8aaa43-f938-4bad-9bd0-5eee9198bff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fc66b54-175b-477f-a883-4c367b3ea2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfcccd01-40bb-4e19-acf9-878defc2fbad",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2def499a-6bd0-40e7-995d-cbdb55a10147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8adf7ee5-7138-400e-ba42-44311501a6e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3edee4-3444-405a-bc15-04af9e56ce5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f56bcca-a459-48b9-99a7-af59ab21584e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c351a629-fbc7-4136-a868-657a91894dec",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbde1e5-93d4-49cb-ba31-6425e84de482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ff60916-5571-4765-a821-6442c210960e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1231c012-ab50-47f5-bc70-8c4c3a8b6241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c132ba15-c7e0-4f83-919a-cdf8bc5ca0bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d5e0ed-efd4-4517-b264-24b3b1a36d51",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a548829-3e71-49bb-b4f4-fbb8829cb0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b2b4089-54b9-43e8-8d76-c8220f7818ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96c3acd-d850-4ede-a6b8-6f0bcc541037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e03b28d1-c79d-46fb-8645-cb98daf4d4ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5267a8b4-bcde-4d3c-8847-2688a975e574",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8db609b-3074-43df-9331-843dbca4392f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15068bde-d43d-49a8-92cb-5d805250b12f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0306b43e-f665-4c2a-b014-14ab99864872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ac8ab87-a1cd-4ff7-849d-cc84209e07cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7feb85-c208-428c-9e99-6d9c1dba03ce",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad787b8-6754-4b04-86ab-b49a8a135fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff1ff08a-0f02-425b-9765-2fafc373768d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1b30ab-ed3a-450f-b0ad-e3f8a5b1cc8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c470e276-bca0-4d9d-9428-eba59efb6974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d337cf6f-f7af-4a0a-a6fe-d3ebfeeed34a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4869edd5-b11c-4fb1-aefc-81f3fd9ce289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "269abbc5-b53a-4be5-8412-6df930e2ec1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35b249c-c7c7-4e3e-97d2-487ad97c87a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5839743-03d5-4949-a997-6ce6f2377e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6024fa3-8210-4f13-ae59-40d85e74feba",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a4383e-5eb3-4b90-b885-d8739fcd29e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7054f964-aad8-4dc3-90ab-1510705ed750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d49205-6334-4d7f-834f-42c252db9da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0d93aed-8acc-47a3-82ae-f341cfea8061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f214448c-3944-4473-a606-39ad53bfce08",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d14161a-36c3-4697-a5a6-d351b14126f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd70b43a-4eab-4e26-a22a-8aee7d65c50b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0faccbb4-b190-48e3-a181-c6e9eaecabd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9c23e3e-2a82-4f20-967f-8166e50a7649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e667b34f-619b-4172-b7e0-e8cc4c8eee7a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c135ddf4-9f14-4645-9d74-71335680c82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27cdc9c4-dba7-47dd-9da1-ae75cea88da6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846d8c83-82ed-42ee-8697-2c2167bdc597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "740cc206-36a2-49e2-9f30-c517e655e706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce0903d-9070-456b-8bc9-22409954ae11",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3585728e-0dea-4300-82a9-bcc905ede9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae0228ab-2801-4c18-8b03-c93a3e403a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f15de84-8d4e-413a-b5ba-3504831da045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e8e26af4-9ace-4edf-a0a2-962c52b1a42f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b901418-4b0e-4310-890e-71e2090fbcd1",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a7a397-d8d3-4ba3-a6a7-b7302cdb4ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "853ae151-486d-4dd8-8627-8c2ecfcd2be3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3da7f0-d7d7-42df-8bd1-38c9eae77a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "acb8af3d-8d3c-4829-a186-bd5a42b4cc24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3b2fdc-3afa-4ca5-a2d4-952143cedee6",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e6fd4fe-f76a-4533-958c-b9ab46ab2af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc5c4241-c4e1-4b6f-8081-7d1c6a473fb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de52ef3-6271-49c5-b531-676bfa9c7260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "86a74e9a-7c53-47f4-9c1b-6d36f1844bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d87bfbb3-d8e9-4619-9426-19b3fa474acf",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff76ee0-61d3-40c1-9835-56779c4b1a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed42d68-6664-44d6-9dbc-7c06211b35b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8262b2-8683-48ff-8b0c-eaf5dfb175d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dc28e4f-5895-462f-9710-90cdcd6a73fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653587e9-0bbc-4ee1-b163-30724454948f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab18762-9677-4baa-9a7c-570f557f0ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96790070-2aa2-4166-8d68-711f2226668e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8454697b-e193-40d1-92bc-33d7316babeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcb0cd70-e4a8-4962-a4d8-c20aab93c744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74da3f7-0fee-436a-a07a-1c5236648e9b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd508f99-ba2c-4310-b7c3-48c1eba1f387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0174280a-8e8c-4ee8-a7f0-ec86e183a8d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a12a43-60dd-424d-b477-5a5f245d58f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d49115e-a164-45bf-b9b9-3443755a42d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70bffc45-77f2-47b3-93e3-41641d3facf9",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0460b7d-f5df-4458-9d1b-0971062abbd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7085eda3-9a09-42f9-909b-3d4a3bb1e47b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f478aa-92d5-44a7-a2b0-1621d6350fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "08ab2a49-2de4-4335-a775-455b200015c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e034936e-ecdd-4233-97dc-b564eff75c67",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26e909e-8af9-4497-9305-7f95bc0c6408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3feaf943-ede1-40ef-a238-6b2ebf3d40b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3619b5b-badd-4cd3-a8fe-f3b6a040b224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "018fe0e4-63f1-4af9-b5aa-e489e966bf36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f034656-7f27-48f9-8969-b92c0480f839",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50dceb2d-d63e-4ae4-a1f0-5e97ac82c744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac242db5-a584-451c-a40f-3054f399ca9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db7b805-72f5-430b-a87a-579116007089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "73e2fd60-c739-45a2-80b4-be83b07f1c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad316aa9-810f-455e-b0ed-b9954c392c59",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24220b35-9a9c-4341-a358-7bb7761e25b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b4e4d79-d087-4fed-832b-00c8e67ccee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21bed8e5-1cdd-4cdf-b324-5126aabd7460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2774556-cbb4-455a-ae49-2f3d998f56e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc7ada6-3254-437f-a311-ca6a3e6a5fc3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6caa0713-8062-4a30-ad24-8fe7d6f9af7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2063632c-be39-423f-9845-05b67f8fd95c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd46696e-8f72-467f-927e-4a52f9522a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e45fb80a-3724-4a5c-af40-2a626eda8fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a699a40-d51a-4d16-b09c-8657db84c5c0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "871c04e5-a6b0-41e7-af2d-e82e17db0035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d3962a3-30b6-498a-82a9-ad54ebab3a84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ec6596-7978-4aea-a2a0-5ca36e95b849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4fbbfe6-a1dc-43bd-b151-3b8c498648a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c206952-6151-4c8d-9047-8422a8a81c8f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e01b14d-3d32-4cec-867d-5fd79b083e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9168d689-9506-4605-a17e-5f82695a585f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b73bcbc-98d6-4527-b934-e17a761023c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "25ab1a89-06db-43cb-873e-940520cd7923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db742e6-27ae-497b-9a46-0609c526aaeb",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bfe42bc-336b-4b8f-a666-33ef7682f113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a328e255-a2ad-41bd-ab03-e0246137729c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a15dd7-5331-406b-8319-5023cc4be0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c00b889e-3e17-4830-a505-2a210f20fc94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f864c325-0e4f-4dff-aed6-64c217ee80da",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901fa71c-4358-4c0c-973d-2852ddf875e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae348020-2e96-4551-88ea-d49a86c370bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a7c8fa-cc8c-482d-961b-1ec706ce480b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46fd4296-cdea-4d6e-b4a5-8766f9a600e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9136c0-d43b-4218-9aab-3d60708a1761",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae99908-700f-4713-8ab7-45eaae083fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "552fd565-1a1f-45c7-87c6-d70191503b19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e261a93d-d5b5-4d93-a8ba-f5044b6a1c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5346d2dc-7cf0-4176-a4c4-334676dadc37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7fdc2e-9531-4811-b47c-2902fa2dcc66",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fee4d91-b061-4f85-b56b-a0ac670c80e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29533706-1dde-4076-b92e-6c96813d641e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298aad20-eb4d-45ac-adc4-13a7e247ea28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d244c96-247d-482a-90b8-3bef87d55674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c836194c-8e99-4c39-b078-905d2e8d726e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "597582b0-03ce-4117-b9ea-bd478b668bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ca9651f-b023-41c4-847c-6c2881b3dd43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6962c2d0-b22f-493e-9b17-bd5a0f063cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d014ff0-11ea-469e-ad7e-0c337b030997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97c8d22-9cea-46d2-b7d5-b8974bf3550a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87031df-e48e-4d0a-938a-17ff3f48098b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "079120b5-f2db-431a-a9a8-3e5b791da389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79451586-fd6c-4ecb-820c-f0d07ac0ec70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "84b1af43-cbf6-427c-acdb-88c6f565216d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6dc1f7-9fd0-478f-8cce-9fd15dd9a0ce",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ba3764-5c91-4b89-8a83-9bf187d6fb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f1e1026-75d6-408f-8cae-146d1060965a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3055bf6a-a46b-4383-af91-cab48b55ec2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d19fbfd-c23f-4598-aa2d-e7eafa830c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b6f90e-75f6-4a65-b1b6-b849961d9347",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e04e060-a4dd-44ce-92a2-196d42860df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb1c76b8-77be-4129-a584-06c3a24312bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96222e01-ceeb-456b-a183-1917f7c1d064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "02043a3a-4b4d-4294-888d-43b2390a95a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cedff18-f0e5-4d8b-9cc3-2aabb94ab4bb",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7945559d-5e71-43b2-9398-97bd565041c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6104170a-ea5c-482e-b1dd-163fc5314946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e935847c-70cd-4d44-ae86-f10ceb604a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8df0cb1a-1323-4e90-b528-a66f70f34d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcaaaa81-0199-4b8b-8677-833ac14bcbda",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae8c14c-8776-410c-a33a-9e9e24e9cdfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f23815-4a00-45b7-93d1-e103b52411fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f4a58d-db3f-4963-bf45-87cde185cc2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2bebb25-5ae4-4513-9a45-de7ae63f7e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd2a269-a894-4e42-881d-aaa53108d032",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8706a23-9c59-42df-b049-1a346bedc69e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1beee71d-a2b9-4cbb-967c-452fce44bc86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956136eb-9de5-4826-a0cb-d116d1631f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4023dc0-eb2b-4e82-8f27-ae5720f28f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4d9e60-58be-48b5-b600-ab08107b62a0",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f47b33-c717-4608-bc3f-dc13b5beb23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf26c352-7c6c-4995-b7a6-2ef10718d1e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a71df9b-1d87-4744-b58e-03c905d1a918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "facdc02f-d0f3-4fc4-946d-652628633c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b9a663-33ea-48b2-a6d4-c7a59002d29a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d1c131-3539-4ae0-ab8c-47eca56e5076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfb7e715-fb81-4cca-8abc-8aaf29d7cb85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ef0b43-85ec-4bee-84f1-1fb3ff955a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7974007-0445-4f92-8705-d11bd8210516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0f3d12-7d2e-4277-a24e-b4ee41f822fb",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbdb8f6c-9f82-4410-8ec0-d1fbd65c5e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c85cfa00-9561-4418-b705-451804c8332f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d16e0e2-1e2c-45fe-b499-eb37cc02c1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c143834-f5af-4142-8911-cbb7ccc4473f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626def4b-4f7f-43f4-a905-f21f9f2d2a49",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03959ed7-c966-42d5-8f19-2dbb1ad4fa93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1230f3a0-67f3-43bc-a091-d8b0540e8583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97288e61-4caf-4ada-8449-fae3ee90edac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "448c9615-5a89-4581-876f-7a325bd3bff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8339d962-2221-4638-a03d-81dfcea9c784",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eaa88ee-a500-4784-b34d-c0664d0e7eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c289a08-cc32-4e21-84f3-aaebd2d1761f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9bcedf-877e-4759-8b60-578d1444cb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "05aea037-d81c-4a0f-848a-b277f223124e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3444950c-2d08-4e46-a888-95615edecf9d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0d3966-f210-4f0a-8e69-00b748b0c365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ceaaaa4-264f-425a-955b-b73a0e324a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e73e655-863f-4279-858f-cd2b7f5a0a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5652d638-9288-4f76-bcdf-e8f97aa6f955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69171fa4-452a-473e-b6b5-4c7eb0c7fc99",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eff0da9-727a-4cd3-aa9c-e2001c1c1145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70bef68c-2c8d-4e26-bb1d-14c014e99d3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe666067-5687-4771-b464-334448063c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7301bd9b-a94b-4b9b-9ef4-e4b28b0d7119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79621aa0-ac3b-42ad-90fa-d2821658e943",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "498121cf-54cb-4af0-ba38-df468a4e6862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b81e596-201e-4603-b66e-e116684be8a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec51b05-2b8b-42dd-9332-40000dd7af37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d239d704-3905-45ba-92a4-9f8b20b968f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d388b9b-b65b-4b81-9271-394b848fdc9c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0184ba9c-bb45-407b-b1b6-d17540b47a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3b05604-267c-42f8-a712-0bc8073cf2f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a539f3-1481-410b-abd3-66118f727fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ac3a71f-55cf-4fa9-a61a-8695c4df3bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6dae6f-644d-4f1d-b027-6786ac25e413",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "529de130-3a50-484d-b0a1-2e608ec35a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a197a55-80fc-4c0f-8fa7-4484c552e020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8fdccab-e9ae-4356-82a4-33303920f9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9a6d56e-061e-4366-8370-acec598eb89d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae445ee-e28a-44f7-b75f-0b907114fe29",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c92932c-9d60-4e3f-a365-bb1e95004f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05f3cc5d-6766-4d2a-a2e1-4f0de5b8f9d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11787278-4c9c-4d30-9224-0e34e853a585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d169bcbf-e59f-4340-9c2a-ad392057a92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6893c894-13b4-4962-892f-2a927a1e30b9",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5ed797-fdd5-4dbb-b87c-f9f41c6960ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "840467aa-a490-4b23-8345-55d2e903a31d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3278039-0040-4ea2-8b25-d57cca21d434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "04489d0b-75bd-487e-95c4-4720c2361074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc88ec0-a617-4ea4-91c6-ba448ad9d7d8",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1784d941-ec9c-4e65-b5ab-7f2c4b0defdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0d828a0-7484-4257-b8a1-09dce3996836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "908a9684-e99f-4955-99e9-2bdd9b1291c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "24e81305-2b37-42af-a080-fb8f246ae784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988fc050-69eb-4c87-91a0-e64869c83d35",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d92f097-21c0-44c8-8e17-d509be5c6efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e47e9002-cfd5-4c64-893e-1b7cb12f679b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe65de8-9876-4ccd-b418-51ae8f4903af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "af842390-3d73-44a7-a9ca-eda402390e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c0c73b-9e16-43f1-8922-08c3ef990ccb",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "263e7e2e-c007-4262-b2bb-3ed26583cd1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "766be0bf-e44c-48ae-8830-da4223c90c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8b9dfa-0a05-4a9c-a056-6851d9cfc6e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "17fff345-9ad7-42d5-8f5b-c27874ed943a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc60f84-56ff-49aa-b225-781831fb9869",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57eb8d04-544a-490b-b01c-2d184be6d04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2575a97c-7a1a-442c-b033-1cfe7d938da1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17da0eeb-6e04-4d53-8b4a-776d79d31cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e08b2148-c925-4908-ad87-e72cdf7db266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0b1c97-36a7-42b4-b620-fce7a4e0c050",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6aeb2e-77f0-4da5-bd8d-29ee2cbddd79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "673f9780-be19-4167-bc6c-bb1018539bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eefcb18b-db25-466d-949d-7a6a35ba0d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "23385047-1d73-4633-ae27-15ad3acb1f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bcc5a18-c188-4db4-9c2e-8c0147af735f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0addbf90-ec31-43f2-8d9e-653768327801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82d90afa-b51d-40b6-9caa-c050a4573bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9063fa83-c3da-4cca-aa34-acf71f76f70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2620aa9-ab0c-4244-9a30-d2571187851f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2a9026-998f-413e-8797-7bbe70290019",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "840157c8-fb23-415c-b61a-7c7e0d7cbe18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0a179a91-1aef-41cb-9c1d-42e84a580545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed9959f-1875-42b4-a958-ce6ad732bd03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7951c7a3-d8b6-4b5a-a423-b9b3c013a45c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c0104b0d-dd50-4a95-9ede-0aa0337ef239",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "24031059-9910-437a-b991-a72427293b40",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "313e4a2e-167f-4330-ace7-7466bd184c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15b351e5-e2af-4750-b044-6265f2fca763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d5396b-fca8-4bd0-b415-dbedc97852f2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31dc1a2f-bfbb-4aea-af8b-afba752cdb9e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a7fe619-c6e9-4ca1-8e32-13d50a0e5511",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93304560-e149-4c3c-811a-fe33efbd3435"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b576dbb-aef0-4bb9-a4fe-5594b82ae64e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2611075e-397c-4a7d-ac9e-648986850efe"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0ed1c3c2-b242-4df6-a55b-32389e2eb831",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "68a3ba2a-ef8b-445a-ae17-a4dbe716ee12"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b79f2bdd-8d3d-42b0-a1ec-be5959adb79c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f4853d3e-d4d9-45d8-bfb2-0c982582a6ad"
                }
              }
            ]
          },
          {
            "id": "aee8a7ed-541d-47d7-ada2-010a5a3a3a9b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e48c6b69-5baa-4b2a-a84c-29af5393dd48",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "190f0256-fb11-4601-99b4-68ca45e6d437",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7612fe97-1832-4fa8-a3d7-3dc3669368bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9b22ee27-2ab4-480f-847b-cd231f905858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f67beb5-bf99-4434-9f0d-775c4e32d5e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e15d35f1-4db5-4f38-bedc-5e0f4eaec38b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "13654fd2-989b-4f85-9139-b4209f803de5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ced18f6-e284-48be-a510-88dcfc503072",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aff46e64-7361-4621-9686-d8cd7bab6655"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93908549-a66d-4b89-9fcd-9cd567dcba3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c2b6f723-21a1-419c-85ca-0227cdcf7025"
                    }
                  }
                ]
              },
              {
                "id": "d59e58cb-6036-426a-955a-1f86cc2c15b9",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4c02352-aa0f-430c-ae4e-0b6ff0fffb06",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1fe68839-f422-4554-bdaf-45d8a87879e9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e7eccdf-31b5-4875-ae3f-3e4dad003f8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e9c13bfb-9166-48aa-a387-a555c1ae3b26"
                    }
                  }
                ]
              },
              {
                "id": "dbdb2543-e9ac-4c4f-beb1-dd1471cc5edc",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bbc4d548-eabf-42f1-b35d-f9e17924466f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6e98b981-960f-4e18-aca2-db1e3b35c29d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07cf3884-2fa5-4bf2-98e8-b79cafefab24",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ea89ef84-4498-4c3f-b038-44ffbcf3024e"
                    }
                  }
                ]
              },
              {
                "id": "692b0795-26eb-4b09-94bc-12a86a26c0a0",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "00dc84b1-b55a-4b90-9190-dce7c0f5ffa3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a2b4adb9-6910-4824-ab6d-adf594edde7a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57cf7e35-edec-4ea3-ac91-5f9602eada11",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b8f1118a-3d8a-4f26-855a-533e16f425aa"
                    }
                  }
                ]
              },
              {
                "id": "dc19a9b3-cc72-4dc5-bd57-025d223fc774",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bbcb23b3-1ca1-48e9-aa86-177f3c1f8897",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5080cc95-c3c8-4859-9264-a1cd6cc917fa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0af74e44-d8a7-4241-9f4b-a782a2fa7c98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "64b5208a-5d5c-4493-a9fa-e343c0ca8d58"
                    }
                  }
                ]
              },
              {
                "id": "14936fa3-3f5b-4760-a8dd-dfae3a52d3c4",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "94c56bc6-c992-490e-9f4c-0322b598e051",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "48d7689f-4001-4f39-8dd8-4d8e70b5b64e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ebbed18-408f-4c1d-b291-fef9bf629cac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a2754398-e2ef-4593-b4ed-28bf44dd6deb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f1fa78b4-80aa-4f6d-897b-fddc21f0ea4f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "71a69f0a-80c3-4f52-bb85-ffe1b377ec9a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2cf01eb6-a9c2-4820-b2dc-1f34d6d23c85",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9b187907-f31e-4da4-bdab-9a341023b541"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "32952c43-a613-43cf-a4c2-d3353195594e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "16889431-cfef-4faa-b2d8-81e430e8ee21"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a9ce644-eec8-43c5-90dd-8c2e2e7d1709",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "09990448-1e12-4dd4-8fa9-6df3d4a32166"
            }
          }
        ]
      },
      {
        "id": "3ef5b615-62af-4fa8-952d-8a0d00ab8b01",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2227b2bf-a090-44c7-9d0c-0857de57663b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c17df57a-ad7f-4c4e-8b83-6a890a3ff2bb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ad1d67d5-ac79-419a-802a-86cde1416c02",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff404d5-2535-44f5-92fd-dfac6501319f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e5f894-0817-4605-8b4d-a1c8af63d027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87336254-73ea-4379-8cf1-9e0ac02381c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf73226c-5610-4ec1-aa8f-001b1d00da39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1dd8f2-0869-4502-8f08-90369463ecbf",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce42c19e-d739-497f-954d-06abb3b89868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a762d078-0943-4480-ab6e-f9058d98f0d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9e2e29-646d-405d-9488-6f7a121f2c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "015bd26b-74bd-4824-9da7-a85078fe2f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e78e5b-250c-447c-9f8a-e071475ce214",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f57bcb-56f4-45ba-b1e7-531b64e7f54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffcde280-4573-45fa-a21a-7485cee1b72f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6b216b-8e88-4f42-bab6-b61fcc1a4401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a421cc0f-a1a1-47fa-9c8a-637d7192f582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20babd45-38e3-4d3a-acdb-1a529aa215b1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "592c23f8-30f5-43f5-9387-9416128aa4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b66b60b-bfd2-485a-8320-89866f031bb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11fcd90-fe2e-4d28-8e3b-0b1f815316a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dac0dfc9-3fb2-49a9-bd10-1c296a63e3d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6586edc-5919-483a-b9e7-2a50801ddd4c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1cb5043-1c7a-4dba-859c-c6b49d08fa43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d3f90a2-c189-4c58-a112-f2a8e5e2c48a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206766a9-b843-4c02-a1e9-4854dd4f7f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "42287abb-09f8-4a87-8d91-d71de5d87a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f27b92b-af46-4c21-8eb2-fd8646236c97",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff72e46-c7d5-465e-90bc-d7bb82381208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c00a8e8f-513f-497c-9bb7-540f5ac7ca46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "435db55f-adc6-4f43-aa08-59cad4540e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a63448b2-d62c-44e8-aa57-29aaa2cdceb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa151295-74cd-4a67-80ad-219b2d13916b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f084157e-e449-416f-b2ff-636d58a71a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "593e3f37-041d-44f8-8c96-57aa778ad9b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "432c17d9-22b4-4fb5-9afc-b0b845409a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "214d014a-d795-493c-ad66-95b29882bd6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5347ed23-e204-4242-8c72-5980e1e72988",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93bdaacb-2399-44ce-8d55-56c583e381c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3872416f-e397-4b7b-82fb-7dcdb2dda57d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dfa2b00-ede6-4b8e-910d-300f86ce2423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2405eb40-a11a-4fde-9224-b87602268e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82a03e7-c8c9-4911-8000-60afb0120b51",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "555ac170-5d06-4974-ae57-6cd269429b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd11e321-18ce-498a-9ed3-bdd1cdfd64fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbba6a5a-bb44-45cc-b735-d4ce4583564a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f93fd1c5-e0f8-4d07-a188-2b03292ee9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ddf7ec9-3240-48a9-b520-1ca84fa768d8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e0b698-d1ac-4923-98a8-124633254abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45db1fc2-0986-4805-9772-7eb7f8eaf699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77631d3a-1d85-4c64-bc23-d2b661f2234a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "18fabbed-e496-4001-b628-e855a644a57c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743f2dbd-8fba-4546-b3f8-423604f2df4e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b2b299-bc8f-452f-925d-e9eff567df91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71196aa0-0808-4454-9849-3db204b31040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854dfd5b-0d95-49df-8ecf-c32aa0501f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c648ef09-9f12-45d3-9103-ecfdd812771d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "884aa666-9d10-4835-b8ff-efb1b0a4e0e0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab740b4-cdaf-4ed3-be54-5e01d19f4564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb7925b1-d98d-4e82-8d63-e8e584ccb933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a164f79a-9604-40ac-b25d-75a165aaee4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "12b6dff7-a1ea-41fd-8f08-92274daf37b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3d5cdb-d670-42b7-a7d2-af0b5be8e3a8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a50e81-6aa3-4ed6-915a-f5c970fc41de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "337dd0b9-a7aa-4258-94c9-2a46602393df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bbf4ac3-8481-44c8-b153-a3e38f7cd49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "03d38730-10ba-4d26-ad31-ed66f5cb9d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e84a3714-5f28-4b64-bee7-e538176ca2df",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "172a602b-e693-4dfc-9a2e-eecb9be170a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c3c1e1-f47d-4422-a55a-9af87d04f217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73196f7-f08d-4b23-9e17-10cc56318432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a53d49a6-c6e8-476d-8ace-187a32823bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d694617-673c-42df-b5bb-31c2c5178eae",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "190630c0-e50a-450b-8d1a-1589cf55d5ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53f5b641-17f5-4c60-aaed-e13a5fd4b4f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896769d4-bfa1-4f64-b1f8-d15860e3394c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "961fb1ee-495b-45e8-a193-b2cf47372a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e0577a-e788-4249-9258-a6a545396a5a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da1db37-24a0-42f7-af04-2a6afbb674d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbc37b93-ed03-473f-8f56-2d5e8825ff59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dfe69ad-1560-4d14-b2e5-97db5a5fd09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "65ffb369-3627-4f0e-b0be-49e591dbfca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d26bc7-4231-41da-ba58-34290e6b8716",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0752d9a-7f83-431f-82a6-4eba4a8ba7ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfb0a526-a560-422b-99dd-8d60adae8114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ff7724-2624-44ee-b067-57c4c30ecd55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3632a09-d226-4bb4-b052-6b0bc8d914be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321f029e-4091-464b-b71a-bbb80c0685b2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2a2983-adce-4ba3-b984-1b46f8864a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff8d2aaa-754f-464e-a829-a8534d58c4e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc46be4a-77bf-4970-9097-168f0f8ce617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "88f27410-69e6-48c1-b32f-308e903296db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cfddac4-e7fc-4499-b857-a3931831026c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e38de94-cfc6-4752-b1eb-24627c1b743c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66c69400-3d88-45a5-9e73-26a6f42e84a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ae056e-8e88-466a-9b89-6cf7a512f847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72128bae-064f-43c0-a9b9-6fa59a6e0b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ea091c-a78c-4eae-9437-b51cbabad05f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "133136d3-b6ff-494f-af7a-f9f41e17d39b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd78bae4-27aa-44d2-987d-1c96ad100fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d20446-76a2-4f5b-9481-cf828fff42a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27d8e597-a554-447e-9258-04ffff715987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7951ce16-8524-4874-a0ef-c5b40588c8c2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8940e577-b419-4828-b2cb-589fc9c3237a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "566c2ea0-cf3b-4787-a16f-9bd3e4258b52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d97305-6e43-4ac7-94f6-c808d4d9a8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a97f9706-778e-4710-85d3-10b11b416700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "601673c3-8d91-4fbc-91e4-dc2d7638ef26",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab05b8b8-4518-451d-a253-2106106bf20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30ef885f-09ac-4484-87aa-c6a8f4c18f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3972c17-0774-44d5-9456-dbf667c864a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2be7e600-0d4a-481b-8532-57503f7f32f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b48239-e8ad-4f27-8cae-1f841e224d35",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "679addbb-87d1-4f18-b093-235f2a56c844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d57bc327-dafd-4160-aad8-32197aa80d39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c0eae9-6a8a-4084-b303-a9efd901c4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "904f1d85-24cc-4026-813e-58acf16d0a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eff5f33-88a1-4bb9-969c-70948a43efce",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d823986e-5a8b-44fa-b0a1-5359b10663ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6be370f3-6822-448c-82bd-c6262378082f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2681aeda-abfd-466e-a780-cf82c14303eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52660cef-d3e7-453d-984d-b65e6afa6d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7789314f-ec18-4e10-b57a-417699e52ca7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b8574e-3e84-4f03-8992-e3813fcb2529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7e94e5d-1774-4dd6-9f87-31629daa6d39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d2d626-3c23-4fdb-a361-d01b1d311838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c674b8c7-6fd5-4b91-bbac-b50d29ef2281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872747e9-daf2-4abb-a085-a17219f9992e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33a7f55-2fc0-4fc3-88f6-82991a333eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f3c474-f203-411f-ab2f-dfae7ed2fad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "686c0f16-8ba8-44e1-9f93-3bc09bef1cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bbf4d6d-7b2d-4e70-b431-e7be3e59f4f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362b1627-0d9a-41b1-b7c2-c2db8ace0829",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68af6dfb-0b3e-4fcd-b1c1-0f41c9d76470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02725c44-95f4-4501-9193-6fbfc07be63b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60eb5b7-ffab-44ce-9640-7d8b339348aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9c2701d-1543-4b3a-82df-8608336bd242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9223c57-a2a5-4d57-8f38-b84444e507ab",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91fc5f6e-5409-4dd9-9fbf-20c1a31d4901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c629c5-c4cf-44d4-884f-629e07fa7b43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59158abd-1628-4cd1-b335-deed830378a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85d4907e-3e24-4f65-ba10-cdcfb3d1ca52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fff1ee2-d76b-4076-858b-35ac3da3494b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93611ef5-d8d2-4236-af1d-dcfa68d1cbca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe234ad5-42b2-4261-bcd8-855d09744544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78448aec-b084-4a25-96a9-6f17319bbf67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51aa52b9-b24a-4585-8965-50400974b911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8add185-cf3f-4121-90fc-a2564fe44cfc",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae21b77f-21ee-4a7d-9f12-111b62b6f729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87ec9b8d-d1b8-476b-b9aa-07405578a2a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5876163-ffdd-4f7a-99ca-17c3d851d54b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff371a96-648e-41a7-b5f1-bbc8a611b884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50aa8b3c-43a1-47ca-b432-3ef7024e1ae6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d2247f-3b0d-450b-90cb-bc2718faf030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba556ba3-9251-45bd-a944-e4cf8f4697a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82c0014-856f-41dc-bc1f-353c4adfa9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fc332f7-86ff-4c85-8998-bf249faf9a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1cd6eb8-db1e-48a5-b3f5-761a91a02d5b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "657ace9b-aa1f-4f0d-9e7b-ecb1dceb33be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfb24e1a-0e5e-4bb1-92bd-89e51b7ab901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36549341-8ce8-42d7-8b65-a38d50b36630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c86a01c-021e-4f9c-8e74-a7dd96793d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b4e22c-0b19-437a-a220-212f9560148b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1acc2d-a6a2-42e9-98f9-dc196d5da3bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe3d324b-d6bb-4dde-bd91-cd56f6ff070a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca92753-65b3-42e6-8c0a-f4df3b33ad0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d57d9e38-95e8-4ac7-ade1-1029760e6ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f2153b-cea2-454d-82cb-5ed47536cb96",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7ee164-7eae-4cb2-a5c1-e59170c55eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52d20aac-8a70-4b11-b957-f3fa7ac3e3eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b33890f-3990-45a4-80c5-edc8e81b8159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88cb5a7d-0c56-47cd-b401-940d259424c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a99b2a-b533-4d05-8ec5-592a05afaf92",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c51b0a-3223-4471-a21a-77ae61090477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1041181-3af5-4a8a-ac29-0c46d8fd1678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f668d9-6a0c-4418-9649-e892191019ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "692059bc-170c-44b3-b0c3-e6511f3b4521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f1f8d69-7be0-41b7-a9be-bf8eaec0a5f2",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868b093c-e82d-42eb-a72c-63506c3e02d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e64c3a1-f28b-4c5f-a006-44e0c346c420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a96236f-6fcc-4ef4-9c61-663cc6bea6aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ca6b172-2b50-4cec-98c2-b51215cf1924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4380e027-f3a7-4658-829b-9e93bb8cd6cd",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31cf1a15-337e-494f-a861-7204fcb8e238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc740d00-b473-4d3a-919b-b01ea1b1f317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b749b6-f205-4338-a76b-35d0cc739f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15fd9734-ba38-42c9-90ff-aca27be900d0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "657165eb-0c6d-415d-b6ad-a0dd63302482",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9771658f-d987-4527-bed4-adc1dac72dc0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac8448e0-d4f0-4ff9-89cb-8a0af0a8a924",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "84d21ed5-1b6b-4c0c-a11c-cdb0a44ed9b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56bcbfe8-1854-4096-b6bc-85ce331bc750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e524ee59-6161-4754-b9f1-e8c06a1ac351"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32229115-b497-42b4-8496-324f795a737a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c05cfad-a9be-4b73-bee2-cd16aeecee67"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5cd0c40b-7908-4dc1-beef-b1d75f1e7145",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a996b5c7-71e8-457f-b4bb-16dd12e09721"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e6a3d9ed-ad39-4f28-a5a6-f3e32c336577",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "81d85b8f-9463-4e50-8379-93bdf7089f23"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b283893-9292-45ee-a806-29d1c22abd61",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bbfc5a16-7644-44c4-b5c9-eb9d7ff165a7"
            }
          }
        ]
      },
      {
        "id": "dd4258b3-d581-404c-983b-a6f52770e7b6",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c6fd40f6-48d8-439f-932b-0f7b480deaec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d1f3169e-0209-4749-84d0-c40ed36808ca",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3bb014a8-9eb1-419f-a908-d631be9e0122",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a833e372-fcae-4d65-a851-69d514860fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1d0fe8f-6044-47f7-9116-1e9c4282da65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e82898-23dd-4bb8-be8e-97920cb63b31",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a605e163-8e67-4417-99d5-4f8ba41643c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d98e77d2-422c-4a56-a085-59b239984ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf9c00e-e2e2-4350-9d4e-171df6579e43",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f832f5ef-bbde-47ec-bd55-b73788acaae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7563dd8-679a-47f2-a8d0-d76a1b3af42f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a31f7b-968d-4c76-a401-5df82826c031",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cfd400e-1189-4889-966d-7c0a2ad5bc1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99f6832c-15a5-4ae3-bee5-4eac020ac60f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5469dc2a-f1ce-442a-ba92-7bbf9d43bfdc",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9bf730-7c78-46f1-83ef-53b6fb844867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02688275-4367-4dde-92a5-1a8985e5c330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd602b9-d3fd-4335-9c66-c48d40f7156c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72a0727-1496-4da1-a47d-a3b28373a554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d044b70e-6dff-4094-9f02-25331b454939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7744f24-0d16-4572-a338-380ef0e4f867",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d84a28-0b03-497a-a401-8cc0ca8c917c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0d41942-d442-4238-9587-c2983348344a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41dc3aa3-8372-4e00-93aa-55c5eef58871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d851aecb-2468-40eb-b906-ae9450ce8193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c98e39-fd27-49fa-9d53-01e625eb44c9",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79cf34aa-bba1-4d2e-979c-23c4f2706bb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe36dbb9-40e9-4492-9855-65db3b25a39c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef14c769-2863-4c51-a871-4f5b88471c71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bad065b8-51fc-4a7e-aa74-bce8aed1da1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526ae180-c1ca-4570-911a-6fcc0789776c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ece30d7-716b-478b-b580-44826b3c228d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4df449b9-150f-4abb-8f3b-4c086069f118"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ab163c-1a36-4cd1-a814-634a03872219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c6343fc-1dce-49e5-b026-f5a93431451f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8f012b-0f72-453d-9acc-b74ea3a7d1dd",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c864e2-42dc-4fc7-9247-d013f23ccbdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5d7d89e-3bd8-41b6-83eb-5def946bd23a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f87f390-f219-4d1e-8bfc-aaad46048ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6473ddd-7cde-4845-807a-3c18c3ff063c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d16f90-c7a9-4d75-83e6-7ff75f956e55",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1caace1e-5aac-47a9-9a13-460ffc21e8f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d66936fb-7763-419a-babe-7aa2ecf0d7a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85661f8a-193b-4760-bfdb-98e7f930be63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9320c31-787e-4e33-9dd2-147e4f380463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43981e5b-60d1-487d-968a-ea44d301725d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0601a49-072c-4a31-adb7-1d9b1a09c136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f824145e-1a65-40a7-a69e-8958f3c72366"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c8c596-2bf9-4066-80cf-a2a82741d5b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51c6e83a-eead-434a-8630-f0d0ed900c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91012164-7fa5-4c65-957a-c7527b83a76d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74848d31-5ed0-4fcb-ab67-48f174051aa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bc6790b-a829-4dac-bb19-11c08e9835d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9ec3c1-1502-4e9c-8ec5-c2989f0f3c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1265ac3-e2ba-4ce1-bf62-8d01e12331c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7431b51c-f634-4067-a789-85e40c465869",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350b14b9-c8fd-4fe2-b662-da035bb21172",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf47bc1d-6176-45c8-8c8e-b4e3facbeb8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e099ba9b-1c68-426c-a9fa-5fc6df6bc64e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f71903-810d-43a7-9cd8-07b54557b6e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb093691-ebc6-4b9d-add8-209cc2f9c181",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d211a478-30eb-4d83-ab1f-18be57b7073d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72199314-62f3-4f32-8d7c-976e6f57f5e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc438585-6cf5-449c-9a60-d270519e0405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a926e15-df1f-4281-8544-d6bf2ee6df05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da030d2-87c9-4aad-95dd-16df3d86d592",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa1b86f-77e9-4e07-be04-8afe183e8738",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "282cc343-ef2f-4a64-8e74-a65502ad77d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6094cc-3957-42aa-a19e-76000bb6e3c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ab37483-3a06-4288-a712-3222ef6ffeef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e0ef73-bcde-4596-ac71-0e65371ab8f2",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5074b7-8467-4b31-ae7b-bb21c808c051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52cd2c4d-b0b4-43d8-ac48-ee1d89894f0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2eff98-74f3-408d-856b-dcbbbc8520a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b4ecbb-8681-4a35-bbb6-fe56f7552e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9abc2fb0-7bb3-4367-816d-624cde7fe5b3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d748d940-5e28-49ca-ba24-ba5b46b8ed2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b930a8-6558-460c-afce-a45a51abfd2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d528022-bed7-436e-8ad5-6128eda116ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d09d16e9-323d-417d-8414-9d5fc8c0b361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925b12b8-113b-496c-baf5-a2895447056e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0289bf94-0559-4fbe-87b7-fa93c60353d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca16e73-0348-4b82-8ffb-2f23028854dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f7e805-b924-4ffa-b5ef-1194d9f07e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ccafee9-943c-44d6-b879-740b9caf6856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ad49c1-c4a7-4195-abfe-db3a62b5c512",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ef93bd-6a4a-4068-8ef3-4173875f7391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b29796b1-f015-4a1b-ac27-84408e58a467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a02915-2bb0-452f-b36c-574ce413e843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d9c6a5c-8a43-41c9-b34c-41f2243c66f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42a8a93-52fe-4829-92c6-3b9f8912e0b2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d14a49-e6cf-4357-9898-21b799838b57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "354bcae0-31ce-4f93-b2c2-27d0d6a4d6f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7db123-a297-40af-b809-1891f71c0f23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ee7e8a7-4e1e-4982-a197-b7f3a9e5e971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8d8ce4-52e5-4a74-8c5b-5684e8b0ca0d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee802996-6587-433d-97f7-e04a382b1919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4093cb7e-baea-4493-b90e-b40f3446a38d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8598c7fb-91f3-4575-85ad-32ee3df19081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a8a6618-a327-4444-ad22-3651279c3dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b124a3-3809-4ad4-b0a5-0f66d3d670cc",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a0e126-71a0-4bd2-86b0-d3eb7788d97b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ddaf035-5b97-4659-8bff-192ed144179a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d899c639-5b46-4fd4-96bd-029099855b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88e5bd6a-55db-43d3-90c2-8ba77a937909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85eeb2fc-eff4-40a2-8aad-dc140cab735e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41d4ea1-de14-4464-bf12-0dcf6b23c619",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "440486b5-951f-4f42-9019-c38f6bf169e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b2ce47-9f78-4b1e-897e-124a8628ad7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab914ef1-e408-4904-b035-12a1d7f21104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ebe03c4-16c1-4e60-a119-056804b14206",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64146f3b-5be8-43dd-a50b-2f299a27a9eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dc6dbb9-eeef-4cc1-8b02-d618bc26e1c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05eb387f-fdcb-40ff-af27-c252888f5361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ce59b27-ce8c-45ba-9fc5-347a4b428fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a254bc0a-8267-4c28-ae04-f27895f9cb05",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8036f0-8f15-4e11-99bb-f2e990c2764d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5989024b-668a-4863-925f-9eb1bf6faf39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df1a4c6-10ce-46dd-809c-081ccceeb71f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe81f48c-93ec-49aa-af87-bf72c17f811c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41578ff-c91c-44e2-8163-ec30b3e173c5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddfadd82-f742-4b68-8545-dae459b5bf99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4de0f48-2c1e-4c74-9a2b-b0b0eedbc84b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b051a3-eaab-4a02-9c8d-d0e2e478589f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "640ddb10-e240-4a88-abd3-29f8f556c8d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82750961-3565-41f9-915b-f11d1eb37aea",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d195ab-23cd-4552-a655-d0a1108e32c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cfd9735-7f34-4f96-85ed-4f481ac0282d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d382252b-6525-4d82-a34c-41cd3d9bee5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ea5afc-dbfe-4191-8bca-6c8486a5868a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79abda8a-4bc3-4eb1-a072-404909fe251b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6275ee13-05bb-4bb8-bc1f-a640f4283cef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df03d023-8980-4a77-90b8-130582c6b089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e60c1a-202b-4038-b59b-bd4ae8533adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3264fe6b-64e3-41ac-98f5-c4738545276a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34fc55c-5840-44ed-837b-cf99a1fe7522",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86222ad-0a45-4bcd-ba7e-738fd420cb39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6d24e21-ef2e-4935-a35b-98b808532762"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec09eb3d-ba30-4dee-97dd-1b8f00a2e704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5e6ce98-28fb-4d1c-9300-45c1ec885f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42902fcb-4763-41ab-b95a-4db091d81cb9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc56aaad-266a-411a-acbe-4265a3de5693",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19e7b32b-d91d-4977-aaea-49877a9539b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3007ad98-da98-4f1d-8baf-c4a5c8f8a356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9c19e18-9ee9-4e1f-a391-3cb4a80ed79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca020077-2ff3-4339-948d-b7946914818c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732c8e6f-7153-4c7a-8e60-f65e0e119fa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1186401-2281-4430-af3a-a3deaaba78a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d6252b-3b96-4499-a763-a5c93533d163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f0faee7-f700-479c-ac61-08fd93b26bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca515257-58a9-40d8-8cdf-44c55f074878",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6dd5340-2662-42b2-90d9-2fbd09e474a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14b3ecb5-ebbb-4dc3-b0bc-065f41e83eee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26a6e89-a6a7-4346-9f39-72eb959f3a60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17c65dad-6bd4-4663-bd57-697d55e6ae4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4175ed08-87cc-4d83-b7a9-cdf701db4ed5",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8649a30b-06be-441d-bd07-f0c0d20e6b7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acba46cb-f326-4de5-9c6f-4e81dc1f5a38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "717e3882-f67d-4e6a-9339-6001235e7d9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca76ec7e-114c-4a85-876c-bce0416e797c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c2a670-1e8f-4e26-9dc2-a1d6c44c7a68",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d43b29-2a8b-4ece-9e2b-c8c1fee9c230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0a5fd41-138c-4d84-9693-f80f4d82fee9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1758ec-1375-4eb5-8398-b35924110736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a61a09dd-4854-4008-a5d2-b306dbbb0e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb0f3afa-4f49-4d31-9c7b-f4b46816372d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91183a2e-bc0b-41b1-b0aa-47d9b53d0410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17ad191f-13ec-4a9d-8c05-5c2d2ef9d24a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d54f852-9c21-477e-85a9-5c2811801898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba83fe6b-80ea-4bdc-9b51-14e0f8b3d56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933ffd75-aaab-48b8-9b95-9ec3c2b2a03c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43cc309a-8993-4e01-a0f4-9c66463d0642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f99adf-5086-4b20-a215-6c74b5d99dfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f9dad0-eebe-4026-ac4b-374653e2edef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b937c4a-18b8-457f-ab84-4944443e5025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62308345-019b-4f94-af64-d02dee500ddf",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0a5ca8-be0c-419c-8e8d-e2274859b926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0319e8a3-94f7-4475-bd6b-f460b9be0923"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23dc67c6-17f7-48ce-83c9-bb62817e1195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae582d0a-9f18-4dca-a6a6-ed209a38ba58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b3fbaf-24d1-41dd-b878-20a89a89fbd2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19cea4b8-492d-4dc2-9f36-269327c8af6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0fdf664-f7f3-4e43-badf-dfa59ffec371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e7e2e4-bb5c-4885-80f2-0adbead39d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "820cc880-7718-4a83-9ce2-1307d9a0f3ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2389a306-0472-4636-9a41-7fee4fc74d33",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff0f059-2cc0-460e-81bb-b8539fc8ba31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5877c722-013a-4848-b604-46d20e28b3df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d9095e-afc7-4d84-bde5-f56e17e1f362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7563eb5-4568-4b8b-9b7a-3b3a5b3bc8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8a5e32-befb-4816-a88d-d44e06e97fe5",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a00fbaa-9db6-41b2-9fcf-3cd07a519eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61f87180-4b14-4222-b8b5-c7f35b019c06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae8af2c-102b-4893-b9bc-86b15ce2597e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "805a24f2-b548-4d1b-8348-ff5ff63e63fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a06dea-4fee-4884-8a26-8dc3661e266d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55c52b6-c714-42c6-86b6-4be92604db61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f822494a-3b29-482a-baea-9de55a876a33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b734fe06-9d0d-4430-a62d-f917497c221b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1c9b6ad-80b7-473d-b12d-f08961a0bee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6db37e9-5951-4df8-a8cb-f0a9590daa0e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539bc1af-e03b-46fb-b611-4dc65af3a3f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84624902-e16c-4322-9f8a-2cc7a8767572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0601a76b-5f75-4825-ac36-c75a7b104bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae9aa07d-0944-4319-b389-e7ee03b1c6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3fd0a2b-c173-4e39-9430-237c11aa37cc",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176a32ff-1f24-40ff-8d80-f66a2e4ccfd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36372969-8d85-4a90-9344-9787e97f41d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd774a0-811d-436a-9103-e3d05739b0b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b5d13b2-64a0-499d-883e-20fe937d134f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7544eb-cf3b-4c17-96a1-3c9b4344200d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e9481e-80b7-4046-b92a-5b9aa35691ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7841317-2b71-468a-a06c-6b3abb04289e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f6d7b9-4a3b-43b3-bbcd-ace8fa2b4c10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e914095e-0576-4f2d-b85d-589eaa7f226f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e45a218-edb4-4452-b66e-7fcc3caca591",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9726be0-bcea-46bd-b435-aaadb8522948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1b10f39-8459-4805-8bad-fb4e07f093ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9dadd36-7d1a-4988-92f1-686c119263e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b86807d8-e1a0-4f3e-a6f4-a9f65e75eb2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8815d1a-ca7a-44af-a898-53c85e28fa06",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1242d6de-8bcd-44f7-9646-567e82740a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eb37e33-e833-4dd8-878a-d0207f58361d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "298dd289-faec-4881-83e3-43a2167cc172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7c1f9ea-0838-43a7-a169-a8934e99ba51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c301d7b-d6dd-4751-8282-5295af7de72e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4211cf66-6a64-47fa-ab6a-3c511430664b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82d18089-ed11-4fa4-821f-abf8a283b66c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "decaf376-3040-4a1d-b9d1-d6856ecc4ba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e1f321d-a853-4212-842d-b24bef02c0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50617d91-301b-4ce3-a1ba-9d5457055379",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42cb6e6c-8ad8-42ac-a74c-8b10e1d0b963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4987476-09fd-49b8-b7e1-f9fa623288dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fbdb4c3-a257-47e1-9af8-956d14f71477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20e61666-1bc4-4607-824c-2e58e6501692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d38cf903-9494-4bde-b046-e2ab789e7d94",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4008c0c-49a4-4eaa-bca5-f26434c68f5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f36658c8-a1b1-4129-8be1-0f982f0daf18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f3374db-1fe8-4fe1-a230-8769f464d2f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac681806-ff12-46bd-9607-60df677b4b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f812a23f-3ad3-4a8d-9311-8510a218737a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0251dd13-ccc9-471a-b143-ef194e67e88a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd6b33bd-dd09-4432-be65-b6e68c2a08e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "136d1643-3b77-4d20-b63e-f408a37b5414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef03815a-a3d4-4a65-aa84-7ce67d44ea81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d0be39-f7dc-4607-8fef-836639644dc5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0bb2e49-dee0-455f-866b-d62baffc0650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82b742cc-9512-463e-bd23-d0294062b1d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd72101-ebee-476d-8969-f15cce9751fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d02ab482-80ff-427a-848b-7d998def8ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21618a5-63c8-4153-af5e-e04711e22b89",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f2ccfd-f88b-492a-9719-7b6876971dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58c211ae-a316-4fcc-ae92-0ebdffa99cc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08df6cc0-2c00-4c84-a2d0-60abe811ffd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f7f5b76-e12f-4010-ada9-a38b5e0c68e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0099991b-eb98-4fb9-a062-d42ed7003c09",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe009563-e17a-4f07-9039-b350718b7295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ec7f525-21c5-4792-a5d8-57af239d4dd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bdfb665-033c-473a-9f80-d1f7fbef9887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d149491-38de-40e2-8139-e966c8973a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa28a768-0184-440f-b558-52d515aabba8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75d8444-9b27-45a5-bf60-a404677de5d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b10607f4-038e-4753-bf4b-a66fe047eba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07df50e3-7b5f-434e-a49b-d794dc467783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "656c821c-cb9d-4a33-96b5-bf46e681fccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd191477-4b38-4dac-8380-3e80c59c2757",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d9b00b-3748-425c-944c-41d65cf924c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f184d037-8bb2-43fa-9e84-711d71943ec7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dfac308-b73c-4ca2-95f1-6a82484fd180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "681fcfae-0894-44b3-ad9e-dc247a8a4d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018d0a42-d117-440a-a681-1da69007b4b8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead09a57-5d7a-484a-8391-92ce496ad423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c06427-38bc-4ec5-b149-b5f16735b277"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "860b2465-ae9c-4bb5-9f3a-ba2967cb3225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43f21c8f-cfe3-4e7a-b21a-a886e4d882c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c43936-52ff-4806-a1cb-c607cc4bef64",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd1cecd-c186-4433-92ec-2bb1a4b8ea17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22c9f14a-2e15-49c8-9683-410c80a7baad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbb8c05-1d56-4d23-8a8b-f553e5cdb616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "837bcfee-f2f2-425b-8ee3-d836d91237d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d938bd-d710-4104-8b25-54bc75b6a793",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf7f124-adb2-4d24-8bf1-5ca56cc41c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a9384e-4177-4891-a508-c1b81912c3cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c918e315-270e-4ddb-aea5-185d59d76742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c37ea0a-9b0e-44ef-bffc-ddce92d62b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09153a70-966d-4218-8bcb-20f550c821ae",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c794cff5-4044-4c37-920d-333b7ab840eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71591034-561e-4b78-85cd-243003410d20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec5e0b2-29a6-4ab6-9b79-f0dcb173c6b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e4e0902-ab1d-4482-b35e-9d65ed205b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230213ff-c57d-4482-98e2-227c22954093",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7308f3-1c35-4943-b3a3-872762ed00e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f890af2a-d37d-4084-9bc4-4b5d212ac9aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24138f66-79d4-4bd2-8e0a-37cbc05bacd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e04f5888-180b-457f-a4a6-edf828733993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0330da6c-baef-4af9-a08e-9be95d20e239",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68948f05-c2ac-4de7-898f-9bf1b42ee64b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79e69352-e386-4822-b374-d9c47e109602"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "335b9774-6e19-4f53-a118-278f22dca22e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bded91e-5998-4171-aeaa-b81bb1d6c2a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b55b63-e596-43b4-8ecf-9170ee08c64b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0345c9b3-0648-4694-bd69-426b4b7b1769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe7feed8-7c3a-449a-9214-e88a60708985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb4f61d9-e79c-4768-a0c7-9c45a27a1a45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde7ed6c-4e7b-445a-9f98-e8d6e1cedc71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a23eec-af57-4858-9798-ee50a6edf54e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "debc35a0-21a8-4e77-ae6d-eb9d9a6e1caf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4eb68c65-108b-425b-94cb-af8c111cf0a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8950a117-7b83-4745-9708-be061799dea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fe0faad-e31e-4af3-8f18-056997c00b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4887c4-3c71-4a8c-9443-e7d4a932e173",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "282a0339-f8b1-49f0-8c30-91829f017cf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71fdde2d-281f-47d9-8e13-64bdda8ab4a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d402b8e-e095-412c-a8f2-259b1d344459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56013e30-cb55-4c60-9f20-e0e2d5a47c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb5ccbd-32cf-4edf-a1e0-fd041832c8cc",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73fd7619-f926-488d-bb46-9173f993ef9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f4f4fa9-b3ed-4359-b3b4-a4cf21d2bb1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9e8113-a442-4377-94b9-841c6d2e35f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b806dd60-1aad-4b6b-96d0-095bc73380e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db7e8fa-b85c-4f7f-9dbf-a6d81150f40d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "977ed362-2512-4a22-bd2a-376dd76bdd38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bda21705-93f3-40f5-a790-afa809b0668c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "699dbc12-63ab-4387-a4d8-028b93815bcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "675c7be2-5a44-42f7-9b65-756350c91eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c569bb6b-61ef-410b-a6cc-c84bbc56e1c6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14d243c-58e2-41ed-923b-79e93d30d85c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d078ae1f-a0e3-4f42-b96f-28c36cb4393e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f996c7-934f-45fc-b9ae-521f0651309a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af3f02aa-73c5-43a7-905f-fb1184d48bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5dbe0b-fef3-45bf-913d-949ba3134558",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c10204-925f-4d50-9288-c23c372e9089",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79b6bbb6-bf51-43dd-9a02-5a3506fa13c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b667e357-6fa3-4748-ae3b-4cdc1cb3dce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5fad6e6-6772-413c-b19a-954a86cfb185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d259f9-32dc-4580-896d-4dde867bacdb",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8393b2b3-362c-45f9-ad13-5880c15d36e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eca5fcd1-c6bc-45af-ad14-6ba89c10cf48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d708a0dc-e159-4b3e-ab2b-633ced27acd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd4dcd27-162f-45d8-954a-43896b41a03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66cbf3e3-7e98-484d-a55e-907904c6acc2",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5f9e79-44c4-411a-aa60-eb6b3c693973",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbacd883-ee7d-461b-9e89-5ea3b1128a69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4732402f-de33-4d13-8319-26db2d76bafb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8219aa3-2625-4eae-b93a-e5cdd4720ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8b32be-8ad6-470d-b67e-2466a2d30357",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a312f7e-9a43-4910-9d22-9374f523dcaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9485b156-df0f-4352-8944-064c380ecf4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "663ca94f-f4b6-45f3-9806-a7fc8fde9bf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19863b37-4074-4443-a1c0-6c30941e7267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d9ccbf-2c41-4d2b-9c16-a845f393ce8f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b826979-62b6-4d4b-924d-95920257c0d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b295876c-d9f1-4e98-96f1-032c83150302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87af6381-6e06-4e22-bece-6575ba6ed1b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d787ade-2434-4213-85e1-8d4a950f3a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb8b5db-338b-44cb-a6f0-de06396205fb",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e362d83-dccc-4aa0-a02c-96c66744acb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "436bb9ee-fe01-4ce6-bc76-66464cf0d1f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa4fca0-e3a7-42d3-a1b0-54f505eb9898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecb36225-4054-4f7d-b611-e6b0ba67d7b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380eb822-9ae8-4468-b97c-fc01903750a8",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e751770-133d-4696-a9cc-230d6ffe8168",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad2ef652-8bbf-44ed-9cc6-b701e3df071a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f8e6be-02de-4282-9e2d-908628b8c7ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38831a4d-f723-4030-8cba-f4d675b5aba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0afaf322-1e2b-4ca1-aab6-84c959d66427",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969be13b-866c-4db0-af48-e160d38407fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49602762-220d-4144-a6a6-825ef8054d3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e5bf97-1bb8-4161-a7a6-e315cffbcb55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ae38167-9bb9-4b08-ab61-5f3a8e459306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a60a326-62ed-49f1-86d0-1e54eecc9a53",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf32159-6c5b-4ea5-b4f1-0f808684795b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bd90056-675f-4fd6-92d2-34263370e573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0368f6b5-9ccc-492b-ac2e-698d06c67092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deeaf623-12b0-4f66-989a-ac3e20b2ec4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c54c223-195f-4211-8252-f9a780aa1b8f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0221d150-6878-4aff-b48c-13a268465fc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f63b1bf-c0ee-4c97-9739-71731c18951b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ef6cf4-5759-4a27-a17e-2d9d4d0a9810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7feb5af8-2298-41e6-a0a2-e0a625d0abdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a809bff-370b-4512-a4b6-401790d89d02",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e23b60-70e3-4348-b67d-74c83429922c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fdeac60-a038-4696-9ff1-12815ba72850"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b463e9-e234-47bd-b5c8-c187949dd1b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce0977b9-adf8-4b41-863f-5c190b715784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e690f4-46a5-4df3-81b6-b69b2812e8f1",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27cc4d3-8da6-4146-bf3d-0e035ecaaeda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee818777-212e-4cfa-8fb7-f8cb02f9b746"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "631c9114-d1a0-443c-87d7-e0496059925e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "685096de-faca-430b-8448-0a541e4629a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df8b9b7-13a6-4c51-9ce6-144c958bc379",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47546b16-7dd1-4ce8-91b3-ec25d9e3c49d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0de5caa8-2382-4082-87a0-68d5f6908e2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab82591-e394-4fda-a6ed-3f4ce647c3e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd2ba3b9-4149-4284-8e8e-843603106359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1d5efc-ab7a-4194-88d2-116581de2a52",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69d2042-99a3-413b-b5a9-9b24f693e608",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f1403d1-2af4-4db0-9cf2-31ad213dd75f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab8b7cb-d7ca-4c6e-8bd9-5891a2970c56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2737bbe7-cebf-4773-80a9-8d0a97989ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d7a188-bce1-472e-b0c1-d1a3c3665b46",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a972428-a00a-4e20-8f38-2e4f11a7a241",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28197702-88cf-482b-8918-90f7b9a55dd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06cbea78-2cdb-4506-bec6-c8a285ef3799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4374c689-f715-4dd0-8d37-8c34cc552085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60376d5-b88b-4f1b-ac97-39a19ebf78b3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f85b609-bb88-429a-8c5d-44468e1a928b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "923d7d86-765b-4920-8d60-d90ea50d3d24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d590d7c3-07cc-4050-a32b-ca16567f01bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ed594fe-a557-4fb3-931c-0366b0ca30f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "087512bc-74f0-4644-8cd6-6c6fe1d36241",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b54a6a-5ce4-4323-8fd7-17f0d58900ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2045b1a1-36cb-4589-b155-4bce31687fb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c49902-46ac-4058-8977-b97fec2e3fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c7b2514-c085-485e-a4da-5aac21e4e9f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a62db85-1543-43c4-acc5-8ebdca2c9603",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9067b2-0d70-41ec-98cf-5def03c5a5e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad774f98-e30c-4cb1-a97a-c5cfb558ce3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed92c63-add9-4950-b2bd-186700d7243f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03119e5a-6050-4087-a185-d3b4a8dd01ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df6bced-d47d-4e4d-8429-45386bc27752",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592bef01-bc6a-4735-ba16-17c8326403db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61789329-230a-4f54-8945-c9be83a5b518"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3252509-c705-4d7e-996a-2fef0c54b889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef4b1a3b-bd11-4bef-a911-44a582a85c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9526488-d316-4373-867a-44a64801a543",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5260a3-7360-4052-ab07-f689e0ea6e6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aa09c48-6a88-45fb-9d48-f252cd0abc1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a0beab-2cfa-4360-ae97-849d2c3a16a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa076f9-3781-473d-89d3-d68b0971ce5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cffd2e6f-f1f3-4267-8ca2-96359954c9b2",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d84987-4a88-4432-8872-a7707ee8957f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33314a0e-5611-497c-9efb-ddd2055404e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ddd7db-1daf-4cbb-9ccf-3a0a0dec544b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31c98e27-7b2f-4d0c-984e-c89f43aa6e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a540e7f-2e81-4f61-9750-e33dbe1e7580",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57815a1-708e-457a-a6aa-d24086ffea31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c038850-ba0f-4487-b750-32532d7bf2b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda75384-9878-4cae-8bfb-7263de9f28f8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27d66c9a-1bd3-4bac-8984-ada39b2d16c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9689d45d-db98-48cb-ae47-032e9d35b170",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c931034c-79ab-4597-8187-6eaa93536630",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eef0922c-9d70-4fb9-b04b-72432023e319"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5acf23-cd96-4e6b-8ecb-b35baaa4bc90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a804f02a-82f4-4b8f-a454-a6daa4c6acd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b8fb6a-3f05-4592-b162-afebdfe5981a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc95c151-58e8-45af-b60a-1ee59b51bfb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7a849a8-2b46-40e1-97d6-f220ddbb1580"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0097f4-b431-4014-951e-bd7abc3fe1a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee807503-2eb6-4a00-afb3-63c739fe2e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1981bf88-30bd-4b79-be9c-e1e480621f93",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f815097c-9890-4809-bdda-e9bbdd2a280c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07861313-b35b-40d4-a144-a9c3c8aad613"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed725bb-ae07-480c-9060-3ed2eb1ee709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75df14a4-6108-4d9c-a8c7-9d1fb2a9aa4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c78260-03d8-4f9c-acc5-99236c6ba774",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c65fe3-ebf4-4a99-84ad-921e9a76e628",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36fd8d77-338c-496f-9e1c-5b8d39bfb6b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead4081d-8436-4292-8e19-42e88be3a86e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b747694-5b23-4d2a-aae0-c35301bdd832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3f94c9-beaa-4ee2-adcf-8b10a2f15c39",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ef44ef-a913-42ba-8ded-73bdf716c81b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "613da6a0-1bcb-44b1-9e69-6eb7089b74c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f958ca-4b2c-492f-9108-67ce7f85129c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06c6a0cb-5ad7-4cdc-bb40-8601b26e6324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c19f687-5226-4c4d-af73-5dc25708c359",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26dabf3-d718-4b9f-8fc4-6c415bc7df38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93188b3e-78e2-4ca5-a637-f448f2484dcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0611c78-684c-4992-9d9e-87140a4c0637",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8819f40b-1515-4c9c-a0b5-192f0f9a3fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee986d57-dc5b-42f8-ac4a-205f2d553372",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9cd400-504f-403a-9d32-36e76b2a8e63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba1f77f2-5834-4365-95e7-a9bdc52b69df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3afe4f-01d9-45ab-a440-ea6971e83e37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6287285b-5117-42b9-bb79-96e3ca6a503f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78657080-c208-4093-9b96-0fdab159b0e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2dc3aa59-fd00-469a-85e0-e5afef1a67a7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb24fb80-14ee-4c7d-b653-43b52bde3dbd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c46644cb-bb2f-464b-86bc-e523a13d0807"
                    }
                  }
                ]
              },
              {
                "id": "b7ecfc92-5614-4edf-ac6c-c7a284c4e907",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "50c3104e-64f8-4931-8afd-babf48f04887",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a8572e-5a34-491f-a930-d5332dc8a9e8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6e6b29e1-3fdd-4b98-8136-c513348c408a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa644c5-a2a7-446d-8c65-b921b4a814b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c24df36-17c9-4503-a37a-1d8e5fa135a3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9392b5ed-dbb3-4a8f-91bc-93860ad8ce66",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d2b4df9-3b90-42b5-9cb5-8ef4d511efdd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b8d10b4-f43f-44b5-9568-5539a0ef672e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b8374a3-99e1-4b82-ad5e-71930d73236f"
                    }
                  }
                ]
              },
              {
                "id": "33ec7cdd-d7f1-4756-9cfe-2afbfee25a6a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "11fd3c23-6022-4034-8116-b0fec2574dad",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83316700-d3f7-4792-80fb-9d258453f950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "429b119c-f040-4019-903c-6f61ed945c94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba863a5-e8a3-4047-ab82-b519f24cf2cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1535976f-3195-4e4b-a8d7-5131f21a8eee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "862b644a-df0c-4081-b7b8-e61f9305a0fb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5b3f3061-4cc3-4495-a670-5de0d2af051d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a244c5b-e716-45ba-bac5-1e4f1ad08e60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "df952955-f3e6-4c60-b576-7196e666cb8e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77adaeae-aea4-4f27-a96a-1e7e7bfdbd1e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6909037e-9e00-483b-bb15-df48be87b4d1"
                    }
                  }
                ]
              },
              {
                "id": "fb7932de-fdd5-432c-88cf-14a6a422e157",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3e828b4-8130-4fce-8ad7-2e2735b60a35",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e32e44dc-6615-44de-86f4-c6da5bbdb58d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76a4fb2a-f505-4957-8455-bee94f72a066",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77b61948-05e5-46a2-bbc1-c4e7ad87e68d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4865b3b4-2247-4b5a-a748-f26e08321f79",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "79630eac-b351-4b53-89ad-aa4ab54a0113"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f71e47a-63f6-42c2-8b03-0b5c7780fdbf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "601fe0f4-5c54-4e05-9661-b1e81b489239"
            }
          }
        ]
      },
      {
        "id": "b52f11c2-327d-4027-bbe5-df683861dae4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6d7c84b9-7391-4bc8-a919-092a130a7d49",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1f099439-d954-4623-9f39-0f88cbe87fc5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ab4b45c1-f8e7-4d4e-b9c3-212bbe33e691",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818b1c25-c156-42c3-a789-8a11f60947c8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "73057099-1672-4eeb-9632-1a4885c33c26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c360ed3-37de-4bfa-8e5d-e62b32f5f362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ea89ae7-d1d6-4d59-a1ef-fc2915104a7a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e45ce786-a18a-4c8a-8b55-7ef8127741a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "050d4515-d173-43f2-8198-a7c8a7de7831"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "03909000-0ef4-44db-8fd6-03a868cf50f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ba31872-e0d0-4e08-9a6b-81ed95c2da73"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "72ac97fd-5d1b-4e95-9bd1-c3fd286de2c9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a5dd8a7e-a9f4-4499-80e2-2af7677b8f84"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf1c73aa-6c4a-4b4e-b696-90857c438dfd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2f8af19f-9b46-4a58-8a26-3df9a80da422"
            }
          }
        ]
      },
      {
        "id": "8079ff34-4647-4171-b7bc-91ec49a4b549",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e1990133-d1df-4bd4-9ce3-f481adc43f59",
            "name": "Negative Testing",
            "item": [
              {
                "id": "22855900-e0b5-437c-b5f8-52fe25ffeacc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0ca30ecc-2f1a-412a-a22d-b7c17fbddbab",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468c1214-2de6-4ef7-88cd-7f15671b13b8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac83868e-f0a1-4c1b-aea8-9bfc5b67f6d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50841fbd-32d8-48a0-827e-d746b4e92159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bdce9f77-e124-46c2-a02c-3086be01c802"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a238aa4d-155a-46e2-b4a1-df7c2fcc5aba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd192326-23bc-4290-981b-3a5394261ce0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e661327b-2084-4e6e-9ee7-c42fd339583b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63432a73-30b3-4b33-b470-b08e82bdfce5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "14482623-807a-40a8-8dee-c32ac44f43fc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1e926935-ddca-4c8b-a0a8-8ef24ad22c0d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "63ce2d21-78de-48fb-a5f5-94ed1c3d9567",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bd6643a8-090e-4e8f-8a7a-90ffb0ae0efa"
            }
          }
        ]
      },
      {
        "id": "90de8094-2364-4508-95c2-7a3f292dc20b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b651189a-dca8-4e1a-83b8-789b6bc362c6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "95bc1715-7c21-4ba6-8d33-f416914e55f6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dc60b4d1-c948-492b-a193-adb8b892bfe9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802f03fb-2f39-4ead-800a-b41d6c4b453f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "add2b928-b1f8-4443-8407-eacd19604320"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f33ba1-c1ac-4ced-8bff-8db0743f33d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8ba7f7d-0097-41dc-9a1d-fa0ba2d47d53"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a991ab9a-e47f-4819-97d2-44ca4aedbc19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "246471a1-b902-4f5f-a008-c0fbd7cac86c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d158aaca-3325-4731-a25a-c593edd8eb3c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "963fe83b-fd37-4b72-9533-cb43d305bfb1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0207e64c-e0b4-4db0-8848-26fbd3847324",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7f27c491-0611-498d-84b7-5aa25e6b5cd0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "949ddaed-bfa6-4103-a5b2-630b14315423",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c2465f9a-8da6-4a0b-b40b-8bfdac54e436"
            }
          }
        ]
      },
      {
        "id": "1ca04091-df4c-4d7f-b66e-48d65c5d8ea3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "99dff552-de80-465d-8595-a45e9c79621c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c6290968-3ec9-491c-a3b4-ae5fb71ef806",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "545e55e6-2979-40a1-b9e6-4987008321c7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e5e4234e-cfbf-4b0e-86ab-efb11ae2a836",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b71fce55-af85-428d-8e62-145222ead169",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 351.1904761904763,
      "responseMin": 6,
      "responseMax": 11100,
      "responseSd": 1642.2083356526591,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724200821501,
      "completed": 1724200918468
    },
    "executions": [
      {
        "id": "46aa715b-2587-4094-969d-28fda2f16cd6",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d239865d-427a-41ed-9f1c-559496bf448e",
          "httpRequestId": "b31281e4-0441-40c5-842c-96b20ae57373"
        },
        "item": {
          "id": "46aa715b-2587-4094-969d-28fda2f16cd6",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "740ff78a-460e-4a61-bd99-136d28527d7b",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 0
        }
      },
      {
        "id": "15210cec-5645-4576-ab17-3c1d7d32166f",
        "cursor": {
          "ref": "82fcda1b-e7aa-48d7-9f9a-39fd745c4680",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "20b6dac8-3a46-4dcd-9f6b-37bd12d11c7b"
        },
        "item": {
          "id": "15210cec-5645-4576-ab17-3c1d7d32166f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "dc252cce-e2f8-4c21-897e-557f8f5f4bc5",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "367f088a-f5cc-44e7-9290-739d996e3738",
        "cursor": {
          "ref": "6f0a270e-34bc-4c94-b838-3a909bd837af",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "503f4335-4bd0-4857-a02a-3e35af2f899e"
        },
        "item": {
          "id": "367f088a-f5cc-44e7-9290-739d996e3738",
          "name": "did_json"
        },
        "response": {
          "id": "c4f7642c-c722-446a-8952-6234ef73b3e1",
          "status": "OK",
          "code": 200,
          "responseTime": 577,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a3f6ef-6fce-4762-9f96-25e19d317428",
        "cursor": {
          "ref": "a7aa1fb2-2e22-4741-8da6-151f65cb42ea",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7dc5f942-0c35-4e44-b19b-1f94f45fe53c"
        },
        "item": {
          "id": "f5a3f6ef-6fce-4762-9f96-25e19d317428",
          "name": "did:invalid"
        },
        "response": {
          "id": "989b3a0d-04aa-46f1-87a3-6f1c4a6a0c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2142,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a3f6ef-6fce-4762-9f96-25e19d317428",
        "cursor": {
          "ref": "a7aa1fb2-2e22-4741-8da6-151f65cb42ea",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7dc5f942-0c35-4e44-b19b-1f94f45fe53c"
        },
        "item": {
          "id": "f5a3f6ef-6fce-4762-9f96-25e19d317428",
          "name": "did:invalid"
        },
        "response": {
          "id": "989b3a0d-04aa-46f1-87a3-6f1c4a6a0c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2142,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6dc7d3-4868-4d63-8108-6dc10b1c5e05",
        "cursor": {
          "ref": "a326d133-1f4b-491e-83ad-c2ce2b64c0ae",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a13ee110-a22f-473e-a340-1a2ecd84332f"
        },
        "item": {
          "id": "cc6dc7d3-4868-4d63-8108-6dc10b1c5e05",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9630546b-4c5c-4ddb-b3cc-e93c9fca0230",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2292,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa57aaf-1c1d-409e-a93e-5d0a78636752",
        "cursor": {
          "ref": "05720eb3-9219-41f3-86e9-3d21cd98c43e",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e2355274-9865-47bf-967f-317e8d500367"
        },
        "item": {
          "id": "6aa57aaf-1c1d-409e-a93e-5d0a78636752",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "be08abd9-770f-4874-bb80-f1260e21c1e5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2045,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1a143e-ba3c-45c9-9e7e-4fc5a985ca5a",
        "cursor": {
          "ref": "62d3edd1-c2aa-4c97-9465-c95a0d26de9a",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6479ad54-ceda-40a3-b295-6bccd77180b3"
        },
        "item": {
          "id": "9e1a143e-ba3c-45c9-9e7e-4fc5a985ca5a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9e79cc4f-2572-49e3-bcaf-9b1d49a798a6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437f24ab-c9d8-422d-bb7f-8c62a390273a",
        "cursor": {
          "ref": "821fa696-5df6-4c95-9529-4ac8ed5df7d3",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8f73748c-7656-4578-bb5e-8638efcad821"
        },
        "item": {
          "id": "437f24ab-c9d8-422d-bb7f-8c62a390273a",
          "name": "identifiers"
        },
        "response": {
          "id": "01829f26-d60a-4a06-888a-2c0b119b3e0a",
          "status": "OK",
          "code": 200,
          "responseTime": 2362,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2364a4ce-ba35-406d-ade4-e741d926f327",
        "cursor": {
          "ref": "b010349a-3216-49fc-9ad2-ab33e2193016",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "93546979-e956-477b-928d-639ecfb936ea"
        },
        "item": {
          "id": "2364a4ce-ba35-406d-ade4-e741d926f327",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0fa719de-8736-4fb7-a00b-a3379fafe003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040cdbef-7c60-4727-ba33-3a6f5d5a1e40",
        "cursor": {
          "ref": "de1116de-7594-4355-8905-6d1ce9d948e2",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4ecd5d24-7aa5-405e-993a-e3706d86e402"
        },
        "item": {
          "id": "040cdbef-7c60-4727-ba33-3a6f5d5a1e40",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "00f9648c-2eb8-4812-8ecb-da5828198424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c8c3ca-94e9-45cf-aa71-3959b4841448",
        "cursor": {
          "ref": "01fc7f9e-6b02-464c-b626-61aa774ee268",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "cf310d3b-bdcd-43e0-b6c4-e19dc379a5bd"
        },
        "item": {
          "id": "04c8c3ca-94e9-45cf-aa71-3959b4841448",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d8b8608a-cb0f-4d17-8285-49f7c49d30e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b82b59-4a70-4a98-b430-ab74077f0e27",
        "cursor": {
          "ref": "e0841e2c-7850-4a56-96e9-a79d4ae98bca",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d2b14b47-f9bd-4a49-b7c9-535e69fb3dc2"
        },
        "item": {
          "id": "46b82b59-4a70-4a98-b430-ab74077f0e27",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1b9c00e7-f36c-42de-bce1-65ff3d2d98a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c5dbbd-8a85-4b0a-8122-78aa17e73771",
        "cursor": {
          "ref": "38dd7575-de94-4941-b0a4-6788301a45d3",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9225fbf6-57d5-4993-a242-e92d9865760f"
        },
        "item": {
          "id": "f8c5dbbd-8a85-4b0a-8122-78aa17e73771",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "cf6260fb-fadc-438a-80cc-5ec20d60624f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5001a6c-edd9-4d44-8f9e-69ed5ef134cc",
        "cursor": {
          "ref": "2584577e-9e82-4410-ad23-d68ec65ccca4",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "63502a02-b975-413a-a4e4-0ebf8266a088"
        },
        "item": {
          "id": "c5001a6c-edd9-4d44-8f9e-69ed5ef134cc",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "bc62eb35-5127-4d0f-975c-b19d5ed3fe47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81134540-7e85-4165-aa0e-110ffacba88b",
        "cursor": {
          "ref": "2426b9eb-ecf2-4248-877c-b1d6b681fa9b",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7861f6ac-1e70-4d6c-921f-fe44c90bfffe"
        },
        "item": {
          "id": "81134540-7e85-4165-aa0e-110ffacba88b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8a302a5f-ca75-4ad1-b2da-ce3a1a14c0e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebba4093-5079-4891-8aab-bbfc63e1a585",
        "cursor": {
          "ref": "7cade33a-1e2a-4306-8bf2-83b448e88db6",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f1d40614-0221-4b11-b9c1-aa4cdf129133"
        },
        "item": {
          "id": "ebba4093-5079-4891-8aab-bbfc63e1a585",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "4f9e8763-31e0-4c53-beb2-937d9e3c8baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b784c6-0f17-4cfa-bfe1-94929631f8e9",
        "cursor": {
          "ref": "a5402baa-0536-49d4-b406-84f77da12a88",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c35c6a5d-b051-4d3a-8c42-f776baa6b76a"
        },
        "item": {
          "id": "b0b784c6-0f17-4cfa-bfe1-94929631f8e9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f6caf8b8-248c-4d03-89a8-ca12ec9742b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96aaea7-257f-4e47-9492-d7944a3cf70b",
        "cursor": {
          "ref": "4b946b28-591f-4067-a4a3-552f8247564f",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "768158a4-0e14-4070-b3db-e645e6da6bd7"
        },
        "item": {
          "id": "a96aaea7-257f-4e47-9492-d7944a3cf70b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c98ecd42-0fb7-4803-9793-20753c2c096a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb28e89d-ad0f-4bd4-b0e6-d3800526180e",
        "cursor": {
          "ref": "875809e7-6dc5-4510-aaf5-6185d6709f6a",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "194c50fa-39fd-42a4-bf49-9578717cbb6b"
        },
        "item": {
          "id": "fb28e89d-ad0f-4bd4-b0e6-d3800526180e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "65512d9e-3883-4c36-a90d-12608c8466bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b77559f-0fdb-46a9-9290-2384f4774b06",
        "cursor": {
          "ref": "19d58155-1329-400c-84d8-b281b613442f",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "93410692-a7f7-4c1d-8570-bab7e73805c8"
        },
        "item": {
          "id": "2b77559f-0fdb-46a9-9290-2384f4774b06",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "68f4bec0-1920-4248-b1e5-0b1cc42f0417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fe8a73-8273-4622-8897-0a060cbdca6a",
        "cursor": {
          "ref": "0d55e00f-4a32-4733-890e-9d350d4c085e",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3eb4a4f0-b642-4701-b41a-c3f6c41f32a0"
        },
        "item": {
          "id": "a0fe8a73-8273-4622-8897-0a060cbdca6a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e6adf8e6-f763-4585-8e40-01c9e0c3c34d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b3e605-06af-4248-ba96-d9e81bb17e7d",
        "cursor": {
          "ref": "208da6cf-2364-4ca9-83d1-2ad1b17f5987",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a8010237-0981-4743-9a27-9657b6df0e84"
        },
        "item": {
          "id": "92b3e605-06af-4248-ba96-d9e81bb17e7d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "730d789c-88f8-4456-b3e3-7c261512a6cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459c0c96-3a05-45b9-8700-96b33ace0835",
        "cursor": {
          "ref": "fb41cad9-4d2f-43c2-a6ef-82ccd240dbf2",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "49d0ad96-00c9-48de-b31e-6bf62ea4e79a"
        },
        "item": {
          "id": "459c0c96-3a05-45b9-8700-96b33ace0835",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "df3f4d85-e511-424f-8102-6e857878860e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a85f48b-06d7-4ddb-9c7a-200dd78f95ea",
        "cursor": {
          "ref": "7d3af647-a142-4c55-8274-7a2a8c585f50",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "370f8909-5bbf-4737-bf6a-39ea3a7a86f5"
        },
        "item": {
          "id": "5a85f48b-06d7-4ddb-9c7a-200dd78f95ea",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "81eb567e-9986-48e0-825e-1bd17d1426c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea49f7fe-54d1-47b1-995b-8e7ac2ce6336",
        "cursor": {
          "ref": "d21b4cc2-a3d4-436e-8482-b76f6d1ff287",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "40188efe-dacc-49a5-aeb1-46c31dee0fac"
        },
        "item": {
          "id": "ea49f7fe-54d1-47b1-995b-8e7ac2ce6336",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4cdc808f-8f20-4f46-85ee-ab45ef4d9842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8cb94d5-e98d-4746-996e-548d347308fe",
        "cursor": {
          "ref": "a60c766b-0313-4778-9749-64ebbe135c54",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "56d81048-e131-4391-b152-58dc2cbd0bf2"
        },
        "item": {
          "id": "b8cb94d5-e98d-4746-996e-548d347308fe",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5b3677cf-7230-4e76-9ed8-f9472affad53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0baf89-0c76-48e9-96a3-eb77f0d6a181",
        "cursor": {
          "ref": "37a27b2e-a82c-4e9b-9144-0622ef157db2",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "89ab6dd8-cffa-4126-b50f-3ecc3439e286"
        },
        "item": {
          "id": "7e0baf89-0c76-48e9-96a3-eb77f0d6a181",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "75c558d4-e52f-4061-8786-d80ec4fe0a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4f9137-251c-4b3c-8083-cde7586a5cd1",
        "cursor": {
          "ref": "ad348f6c-518e-4721-916b-33a2ab21550f",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "600cc034-8ac3-4e05-bbb0-fc5afd401445"
        },
        "item": {
          "id": "dc4f9137-251c-4b3c-8083-cde7586a5cd1",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "4aab7f0e-8cac-4ece-9bbf-1fc3b9efd5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339058cf-ff7b-4ae1-8dc6-642015ddccf4",
        "cursor": {
          "ref": "aadc083d-9728-4f69-965d-fab881eb34b7",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "397f3d6a-108c-4583-a193-b4071eff4213"
        },
        "item": {
          "id": "339058cf-ff7b-4ae1-8dc6-642015ddccf4",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "55dbc543-019f-4add-b9f5-8bbd07865c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8641e1-c449-48b5-9a27-d64ad4427591",
        "cursor": {
          "ref": "a1c30eef-24ec-435d-88cd-feb2b870c84a",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1b192327-b3e7-4b60-bf82-825114e4a9a9"
        },
        "item": {
          "id": "ee8641e1-c449-48b5-9a27-d64ad4427591",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4b3e731c-eb03-4acd-991e-852985fb4a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0f6877-c156-409a-9cd1-ed4cbb426a88",
        "cursor": {
          "ref": "9ecfbd69-cfb1-4ccd-9be8-cc0fc9945500",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "be5a63eb-ab23-4972-a709-86b435dc3712"
        },
        "item": {
          "id": "9f0f6877-c156-409a-9cd1-ed4cbb426a88",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "11b42563-928c-403f-b70f-29be9c297aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69b5f36-f260-469a-a690-1093fb928807",
        "cursor": {
          "ref": "670c5bc5-57ef-4ce9-ad9a-f002f8444c69",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "98501749-4d74-4d65-9a24-3233a7214629"
        },
        "item": {
          "id": "b69b5f36-f260-469a-a690-1093fb928807",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4b67c0e9-b127-4f36-a72a-43703dfbf156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f79e9d-3327-4a42-b84c-bed2b30f90dd",
        "cursor": {
          "ref": "2479d40d-df26-4a89-8e2c-2e656eff771b",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "58dfd386-7c40-46eb-81cc-f479ed053178"
        },
        "item": {
          "id": "11f79e9d-3327-4a42-b84c-bed2b30f90dd",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7a2eb165-fb44-49a1-94d6-9495c27fc063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ab5d07-5f86-4add-ba82-97c837e6f573",
        "cursor": {
          "ref": "07b4e444-cd50-4cad-8126-41f222bb4ecd",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e02da36d-ecdd-4db6-9c27-9f3c6407ac47"
        },
        "item": {
          "id": "d2ab5d07-5f86-4add-ba82-97c837e6f573",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "052e2d11-5131-470b-b853-8f3618c27548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5086a9d-b19b-4b21-be86-92a54d99c437",
        "cursor": {
          "ref": "e6127fe7-e56a-49aa-8f92-2c96e959cd5f",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1b20e2c5-1219-461c-995b-5f2b337c0e30"
        },
        "item": {
          "id": "a5086a9d-b19b-4b21-be86-92a54d99c437",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "22152fe0-2be0-4e5c-b693-5ab6383423e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e607a614-8f74-4cff-89a9-b35b6e592a52",
        "cursor": {
          "ref": "f7436cb1-27b6-45d3-8e6c-b123b992e06b",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b9391f98-0a35-4529-a254-51c1471a897e"
        },
        "item": {
          "id": "e607a614-8f74-4cff-89a9-b35b6e592a52",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "00708751-42c4-4e23-bc44-94ec07de4ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ffc7634-34d9-499a-9378-f69d88d04c6c",
        "cursor": {
          "ref": "4c0e7ec1-c1ef-455a-830c-e5632e1f264d",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4c915c21-857b-429d-b284-2c895ffc835e"
        },
        "item": {
          "id": "3ffc7634-34d9-499a-9378-f69d88d04c6c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "db600058-2ca1-425d-a7af-5d1c236ff0dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67b322a-d193-4208-940e-a4e85228d8a1",
        "cursor": {
          "ref": "eaa6e00e-38e7-4407-8a76-18fc01a320ab",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "50667f6c-9311-4d40-8fce-7d0e5ea13bda"
        },
        "item": {
          "id": "e67b322a-d193-4208-940e-a4e85228d8a1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7fbd855a-5b24-4e6e-884a-e3929c74ab57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e514bd5d-712d-445a-8ec8-b7486ff6b711",
        "cursor": {
          "ref": "b755b0b4-cbeb-4819-bce1-c9de25535065",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1cfa664b-1f89-470b-87d4-54ab7ff262f6"
        },
        "item": {
          "id": "e514bd5d-712d-445a-8ec8-b7486ff6b711",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e54e26f0-5cc5-44c0-aadc-6831eda191dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c8b5210-2554-4d38-bde4-eb97a7bd62d7",
        "cursor": {
          "ref": "6b869d4c-a69b-4344-b435-52b44129ddc4",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "38572cbf-6e6f-4fa0-850e-f240700d67ad"
        },
        "item": {
          "id": "6c8b5210-2554-4d38-bde4-eb97a7bd62d7",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ca40e102-cc1d-4e87-b923-7ecbfe542b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bcbf63c-2ca6-4b91-8eac-ad0ad8b82413",
        "cursor": {
          "ref": "d1ca7eb7-2aaf-4dcb-b713-fa6104113b63",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2d6ad3f1-aa42-47fc-bfcf-1f7e386f5bcc"
        },
        "item": {
          "id": "4bcbf63c-2ca6-4b91-8eac-ad0ad8b82413",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "12ac3b79-3c41-409b-b59e-6353d3f9dd63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be857ff-ae6f-4313-9235-e38c26e09fa7",
        "cursor": {
          "ref": "dba5ad1f-14fe-467b-82a1-bc7807ca1585",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f6182e6e-9486-4177-ac55-0345b04c901c"
        },
        "item": {
          "id": "7be857ff-ae6f-4313-9235-e38c26e09fa7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3faab89f-9c54-40c5-83ec-c40ecd4746ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bdf889d-7510-40df-a2a9-d4a3df2c8d79",
        "cursor": {
          "ref": "a953e87a-7604-44eb-a62d-b0b6c25bd52c",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d40726c5-f86f-4cf3-afa6-a987283bfc73"
        },
        "item": {
          "id": "7bdf889d-7510-40df-a2a9-d4a3df2c8d79",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "84931667-376d-45b0-a7b9-67be50b594b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87074140-a831-4421-bb75-cf28f65339d1",
        "cursor": {
          "ref": "c7748775-303a-4f7a-ac9a-660f254bf9a7",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "715e860b-0ee3-45f2-9c9c-f74a2ca33793"
        },
        "item": {
          "id": "87074140-a831-4421-bb75-cf28f65339d1",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "112f2c6b-b3ea-4c97-892d-91a2e9712b4c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 32,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0857b18-a2c6-40fc-b5bc-08007f738fd7",
        "cursor": {
          "ref": "00af6063-85ec-40ab-a396-287cc3fa4440",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e5f24517-2057-4aeb-a9b6-94596411b311"
        },
        "item": {
          "id": "a0857b18-a2c6-40fc-b5bc-08007f738fd7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "69754c54-3eef-4707-8482-4e4f449a64ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6794eb43-69e7-4362-9196-974f9e8a08d4",
        "cursor": {
          "ref": "a69aa0b9-5c99-4b49-8543-5ef29cd66554",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "80d2402c-8ebc-4cc0-a034-3a11b9f8dac7"
        },
        "item": {
          "id": "6794eb43-69e7-4362-9196-974f9e8a08d4",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1c21e8d7-e929-4437-9052-28bf2b847861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e5e97c-3274-483f-9deb-769fc8c3d345",
        "cursor": {
          "ref": "495862f8-0afe-4d72-b553-198f89dfeef9",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d302c894-0070-4230-8c7b-52c45d6e2554"
        },
        "item": {
          "id": "a1e5e97c-3274-483f-9deb-769fc8c3d345",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "03bd8bb4-e43f-4a20-aff1-b0c41c01e7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d31004d-69a6-49bc-9bd7-f5f1f8bc6fcb",
        "cursor": {
          "ref": "c353b085-6e3f-4403-9aea-2765d116e82e",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "af435d86-56bb-4df2-a7bd-bf36575f9fe4"
        },
        "item": {
          "id": "7d31004d-69a6-49bc-9bd7-f5f1f8bc6fcb",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "acf0f7ec-44b0-4369-bd0f-3d6712cb3510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfcccd01-40bb-4e19-acf9-878defc2fbad",
        "cursor": {
          "ref": "7b44a217-8cdd-48f8-9f30-8b594eb2849f",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a9fd45c6-42e3-4dde-9a66-e21731132f07"
        },
        "item": {
          "id": "bfcccd01-40bb-4e19-acf9-878defc2fbad",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1be9d873-86da-4270-a895-502b6a846dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c351a629-fbc7-4136-a868-657a91894dec",
        "cursor": {
          "ref": "923a956a-8321-4f55-af49-40bf05c5af44",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a1f80435-6d7d-4c84-b90d-9eb2f7e0def0"
        },
        "item": {
          "id": "c351a629-fbc7-4136-a868-657a91894dec",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "14eb8c3f-a9ca-40cd-9658-9b64e29a0dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d5e0ed-efd4-4517-b264-24b3b1a36d51",
        "cursor": {
          "ref": "a7bcddef-1525-428c-98c6-b3b65684f9b3",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a7dd070f-a193-4596-ae3e-e14c620960f5"
        },
        "item": {
          "id": "d9d5e0ed-efd4-4517-b264-24b3b1a36d51",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0771dacf-0f54-4e1d-8d94-671925f9b101",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 35,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5267a8b4-bcde-4d3c-8847-2688a975e574",
        "cursor": {
          "ref": "802df3ad-e00c-460b-ba72-cf8dc52b7368",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "44e96832-4cda-4256-94fb-4ae2dba23487"
        },
        "item": {
          "id": "5267a8b4-bcde-4d3c-8847-2688a975e574",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0b1da686-5587-4948-842a-8839b5a161d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7feb85-c208-428c-9e99-6d9c1dba03ce",
        "cursor": {
          "ref": "bb60eb4a-0f79-4e16-bf7c-cd119a4897d4",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7aeec420-0fdf-4ea9-be7c-9643cb19a12f"
        },
        "item": {
          "id": "ab7feb85-c208-428c-9e99-6d9c1dba03ce",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5b4ffd9d-1e9c-4b1f-b0fe-5e74fbc649c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d337cf6f-f7af-4a0a-a6fe-d3ebfeeed34a",
        "cursor": {
          "ref": "b88abd41-f44d-4a33-a76e-ef60290843a6",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f5ff2739-e98b-4ef1-b25d-d65d52e9fc51"
        },
        "item": {
          "id": "d337cf6f-f7af-4a0a-a6fe-d3ebfeeed34a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "328bc8f2-20a4-4525-b198-b0be67a610fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6024fa3-8210-4f13-ae59-40d85e74feba",
        "cursor": {
          "ref": "bf5964e6-dcdc-4096-8de0-902ebee39a86",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f79ec004-40de-42a3-93b2-e198b76b86f7"
        },
        "item": {
          "id": "f6024fa3-8210-4f13-ae59-40d85e74feba",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e5c036d5-b789-48a3-ba5b-6a3d1352d371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f214448c-3944-4473-a606-39ad53bfce08",
        "cursor": {
          "ref": "52efb812-edae-4228-9512-ca4aac30fe36",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "63040dbf-5aaa-4bd6-a5af-7839d756f888"
        },
        "item": {
          "id": "f214448c-3944-4473-a606-39ad53bfce08",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "baefe1fe-899d-428e-b5bc-cfabdb6301f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e667b34f-619b-4172-b7e0-e8cc4c8eee7a",
        "cursor": {
          "ref": "41f580be-e789-4d02-bb8c-b190b30797d2",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b421d43c-4d33-4f61-a610-ea008403ddd4"
        },
        "item": {
          "id": "e667b34f-619b-4172-b7e0-e8cc4c8eee7a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d7ad39df-1124-451a-a04f-4bcee4ffd3df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce0903d-9070-456b-8bc9-22409954ae11",
        "cursor": {
          "ref": "4e63ebe2-1c33-4429-ae11-7ae611abcde4",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3609215f-ffe0-4e80-96c1-59d7201ddce6"
        },
        "item": {
          "id": "7ce0903d-9070-456b-8bc9-22409954ae11",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4f53a87a-8441-47eb-9d35-c701d0d5c7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b901418-4b0e-4310-890e-71e2090fbcd1",
        "cursor": {
          "ref": "2184d414-bd5d-4829-9176-a7516fe938e1",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "812f0ca5-83b6-4a91-92f7-8f150e4e12f1"
        },
        "item": {
          "id": "9b901418-4b0e-4310-890e-71e2090fbcd1",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6bdb4a38-7aef-4ced-a6ac-4bf405370580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3b2fdc-3afa-4ca5-a2d4-952143cedee6",
        "cursor": {
          "ref": "7af70c06-ca1a-4220-9ce4-26f32728936a",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7ca00493-ecaa-4476-a7c7-c9b6d2385e8e"
        },
        "item": {
          "id": "ac3b2fdc-3afa-4ca5-a2d4-952143cedee6",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "75d1de4a-bf20-4f06-997a-a6bf2f27350a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87bfbb3-d8e9-4619-9426-19b3fa474acf",
        "cursor": {
          "ref": "b1c99bb5-397b-4e47-a0ab-60db42d5a5ea",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b82bc74e-d94b-4348-b4b6-fef47b71477c"
        },
        "item": {
          "id": "d87bfbb3-d8e9-4619-9426-19b3fa474acf",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "229bab2c-ff68-4604-b6ae-b4de2a3fb752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653587e9-0bbc-4ee1-b163-30724454948f",
        "cursor": {
          "ref": "aabed814-16fa-4f83-bd1d-ed486898bcd8",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f304b4a5-676e-4111-8ef9-385856c88c49"
        },
        "item": {
          "id": "653587e9-0bbc-4ee1-b163-30724454948f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "660b1d0b-b354-43d4-a1f1-811fe6aca3b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74da3f7-0fee-436a-a07a-1c5236648e9b",
        "cursor": {
          "ref": "9619a3f0-53e5-48de-8aac-f53c5a3e318b",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4d838c55-afb5-44af-9fa4-a9ae7f24afc8"
        },
        "item": {
          "id": "f74da3f7-0fee-436a-a07a-1c5236648e9b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "db5bb350-2dfa-4892-bcfc-83195ffd9da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70bffc45-77f2-47b3-93e3-41641d3facf9",
        "cursor": {
          "ref": "60bd9e07-b8f3-485a-8225-3251cbef52fa",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "807110be-7c74-4aec-9226-350e3578a792"
        },
        "item": {
          "id": "70bffc45-77f2-47b3-93e3-41641d3facf9",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "467d57ce-d392-4fff-b7fb-ffeb728aaf30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e034936e-ecdd-4233-97dc-b564eff75c67",
        "cursor": {
          "ref": "033e47b4-e5a1-44a3-b24c-3d37497f0225",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ad1bb0fc-026a-4b41-a4f5-2b62f1913b10"
        },
        "item": {
          "id": "e034936e-ecdd-4233-97dc-b564eff75c67",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "df06b148-c550-48cb-b314-fbea117d6497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f034656-7f27-48f9-8969-b92c0480f839",
        "cursor": {
          "ref": "404c54d9-278a-4322-b7ff-404c2d3c6ee0",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9f64c612-0ae8-47f0-8e1d-fb379f29dba6"
        },
        "item": {
          "id": "0f034656-7f27-48f9-8969-b92c0480f839",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5ffb3970-865b-4bb7-bc0c-7208be107a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad316aa9-810f-455e-b0ed-b9954c392c59",
        "cursor": {
          "ref": "b7eeeb5d-a628-4e88-bf58-e429d89f3e35",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "89dfdba2-d981-41df-9adc-ccf305b04b7d"
        },
        "item": {
          "id": "ad316aa9-810f-455e-b0ed-b9954c392c59",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8a49f585-52d6-4c79-b6ca-d6b5e5c2a136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc7ada6-3254-437f-a311-ca6a3e6a5fc3",
        "cursor": {
          "ref": "323bfc7d-f81f-4755-8392-e5bf948b84f5",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "105492fd-9ed7-4d6c-adbd-c488f6ae2d8d"
        },
        "item": {
          "id": "dcc7ada6-3254-437f-a311-ca6a3e6a5fc3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a8a962ca-6e9f-4bea-91bb-b2fd631e942e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a699a40-d51a-4d16-b09c-8657db84c5c0",
        "cursor": {
          "ref": "b171c087-097f-4fcd-90ce-8b2236c1c3bd",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d40e107b-764a-4106-ac7e-a68720e66c56"
        },
        "item": {
          "id": "0a699a40-d51a-4d16-b09c-8657db84c5c0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "da62aa6c-2e49-4743-b6f3-7019be0a5729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c206952-6151-4c8d-9047-8422a8a81c8f",
        "cursor": {
          "ref": "f8a535d6-e080-4392-ba6c-8a5de1663397",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "52821664-1752-4d12-be9c-b265671f97a0"
        },
        "item": {
          "id": "2c206952-6151-4c8d-9047-8422a8a81c8f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7fa4ae0a-4cb9-4f34-a676-a2895449dbd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db742e6-27ae-497b-9a46-0609c526aaeb",
        "cursor": {
          "ref": "4fd4a9a7-8c4c-49df-a0b0-ca124599b269",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9099e6c7-ba4e-4769-8d10-f162a4c2f0b5"
        },
        "item": {
          "id": "9db742e6-27ae-497b-9a46-0609c526aaeb",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a2ac406c-ddeb-4e78-8cb9-7d9f5211703e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f864c325-0e4f-4dff-aed6-64c217ee80da",
        "cursor": {
          "ref": "7f818612-b3e1-4aed-a377-987bedf1fc16",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "875fae6f-fdd1-4eaa-913a-3de1a95b992e"
        },
        "item": {
          "id": "f864c325-0e4f-4dff-aed6-64c217ee80da",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b0994f90-cc23-4476-808f-6be4744f8a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9136c0-d43b-4218-9aab-3d60708a1761",
        "cursor": {
          "ref": "95d0d366-de33-4435-9742-9fb8c4163295",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "cbc8a8f7-1d0a-4921-b2e1-e7508e8bfea4"
        },
        "item": {
          "id": "2c9136c0-d43b-4218-9aab-3d60708a1761",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7eb03165-bb39-49e4-9668-f769555c4823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7fdc2e-9531-4811-b47c-2902fa2dcc66",
        "cursor": {
          "ref": "a2392bae-81e5-4d13-aed5-33cbe702ad2e",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ff4e9762-5c1b-47d3-a282-a5252c81899e"
        },
        "item": {
          "id": "fe7fdc2e-9531-4811-b47c-2902fa2dcc66",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ec9513f9-2889-4238-bbed-ba24c3cf549b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c836194c-8e99-4c39-b078-905d2e8d726e",
        "cursor": {
          "ref": "627ff6a6-9d0d-4394-ae05-d10df4934109",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1822ef27-6d3e-4633-8c76-dbb5dd34d850"
        },
        "item": {
          "id": "c836194c-8e99-4c39-b078-905d2e8d726e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "59773f81-3074-453b-9a7d-7d63078920aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97c8d22-9cea-46d2-b7d5-b8974bf3550a",
        "cursor": {
          "ref": "9fd39815-f890-4164-94f0-ba3c42045fce",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "04e86176-23d0-4343-a243-63955c9403bd"
        },
        "item": {
          "id": "f97c8d22-9cea-46d2-b7d5-b8974bf3550a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "55ddcfeb-48a0-493b-ada8-3f23d53dd51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6dc1f7-9fd0-478f-8cce-9fd15dd9a0ce",
        "cursor": {
          "ref": "28ab5f96-f65b-43d3-ad90-91b56a9f530e",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3cd3cf41-bcf6-4d46-8da2-53a30f39d7bc"
        },
        "item": {
          "id": "8c6dc1f7-9fd0-478f-8cce-9fd15dd9a0ce",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1cf18296-bc84-4841-9dbf-c53e293ab867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b6f90e-75f6-4a65-b1b6-b849961d9347",
        "cursor": {
          "ref": "3a7da2d3-fb53-475c-89fb-f99a724aaf45",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3a76960f-225a-4085-8a5a-8fff0e6b850b"
        },
        "item": {
          "id": "b0b6f90e-75f6-4a65-b1b6-b849961d9347",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d8b4a5f7-6d4f-49da-9973-5177d558f39d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cedff18-f0e5-4d8b-9cc3-2aabb94ab4bb",
        "cursor": {
          "ref": "978a02e4-78f6-4f5a-a8e6-fbf1a719a5d6",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ffdc72f8-1aed-46c6-b218-0c921ff09c03"
        },
        "item": {
          "id": "4cedff18-f0e5-4d8b-9cc3-2aabb94ab4bb",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b124adea-65f0-4412-8b3a-4a07582da4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcaaaa81-0199-4b8b-8677-833ac14bcbda",
        "cursor": {
          "ref": "46128e5c-07e7-461c-98f1-f8cef28527c5",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7bc482a9-b168-418e-b709-df951a131a40"
        },
        "item": {
          "id": "bcaaaa81-0199-4b8b-8677-833ac14bcbda",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d52d93b7-0c4e-4646-b768-1ac4680c93ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd2a269-a894-4e42-881d-aaa53108d032",
        "cursor": {
          "ref": "fe2346b0-f286-484b-b01a-046885268838",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "da0cb57f-139d-4062-b3f0-b8d7a4c20d2a"
        },
        "item": {
          "id": "3bd2a269-a894-4e42-881d-aaa53108d032",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1391eeee-6059-4c91-8026-7725b42070f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4d9e60-58be-48b5-b600-ab08107b62a0",
        "cursor": {
          "ref": "7d71f931-c041-49e8-b1bd-f2f6d37cc37e",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "441081fb-0651-462a-9d31-ea498142b6f5"
        },
        "item": {
          "id": "ce4d9e60-58be-48b5-b600-ab08107b62a0",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8e779a3a-88b8-43ae-86ed-83983e1ef095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b9a663-33ea-48b2-a6d4-c7a59002d29a",
        "cursor": {
          "ref": "3e97c1bf-67e8-4d25-8c2f-4afd0722d328",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2cc80e2e-0d93-4d3a-805f-d9b5aafc15e9"
        },
        "item": {
          "id": "13b9a663-33ea-48b2-a6d4-c7a59002d29a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2be6eca3-a23d-4a34-a7cf-8c5b645dd329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0f3d12-7d2e-4277-a24e-b4ee41f822fb",
        "cursor": {
          "ref": "d96d4fa1-8b97-4535-ae45-6709b6a6e3c8",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1dd76184-c86a-4308-983c-73e3c067e50b"
        },
        "item": {
          "id": "cd0f3d12-7d2e-4277-a24e-b4ee41f822fb",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "98bafeef-94d3-458d-adba-bd97c57e6716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626def4b-4f7f-43f4-a905-f21f9f2d2a49",
        "cursor": {
          "ref": "299a924c-a714-4067-a890-c4a4aa2e4581",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "818ad91c-4b81-495f-9a65-59b70c575bc4"
        },
        "item": {
          "id": "626def4b-4f7f-43f4-a905-f21f9f2d2a49",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0098dd43-c727-4d45-a933-ead644ef6344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8339d962-2221-4638-a03d-81dfcea9c784",
        "cursor": {
          "ref": "62ff9f00-c0a0-422d-9808-a2658d4c6fa4",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "39ab0be5-5fc5-4d71-bc2f-90c3bc2cdde9"
        },
        "item": {
          "id": "8339d962-2221-4638-a03d-81dfcea9c784",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c4baecf4-03d9-4768-8e12-b0fdd3e60b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3444950c-2d08-4e46-a888-95615edecf9d",
        "cursor": {
          "ref": "98cfafaa-09f3-4441-845d-9496dc3f53ab",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "9978c330-bd2e-4b8c-9da1-910761e08286"
        },
        "item": {
          "id": "3444950c-2d08-4e46-a888-95615edecf9d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4564df48-b677-423d-97ed-0a2bd2d9cf3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69171fa4-452a-473e-b6b5-4c7eb0c7fc99",
        "cursor": {
          "ref": "5fca816f-78ec-440f-8d7c-ddc95e92d06c",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "cc7c2de1-ea3f-41fd-8487-e909b8e6e2fc"
        },
        "item": {
          "id": "69171fa4-452a-473e-b6b5-4c7eb0c7fc99",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6e8939bc-5e9f-4d78-b8f8-9b5e791e03e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79621aa0-ac3b-42ad-90fa-d2821658e943",
        "cursor": {
          "ref": "9fbd9268-2a28-4c4c-a0d2-8523a1182cbf",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c8559c9b-e8bc-474b-a9df-94cab1422078"
        },
        "item": {
          "id": "79621aa0-ac3b-42ad-90fa-d2821658e943",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c40f925f-bc2f-4407-bcb9-adf2b336e4de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d388b9b-b65b-4b81-9271-394b848fdc9c",
        "cursor": {
          "ref": "79a9346c-6c47-4828-8300-16e1ca8a60ce",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "093d42e8-c923-4133-bb78-54289ed5c456"
        },
        "item": {
          "id": "0d388b9b-b65b-4b81-9271-394b848fdc9c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "145b514c-3527-46c3-98e2-2176fc318f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6dae6f-644d-4f1d-b027-6786ac25e413",
        "cursor": {
          "ref": "2d7663e2-372f-4bea-bd77-69c3a6fea3fd",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "89f88ea3-9636-44b7-8e01-95e05a3ccfa0"
        },
        "item": {
          "id": "1c6dae6f-644d-4f1d-b027-6786ac25e413",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1a90fb11-99eb-465e-9849-3fb66139eb41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae445ee-e28a-44f7-b75f-0b907114fe29",
        "cursor": {
          "ref": "1a01f027-11b8-4174-91aa-ed30cd0a7303",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "43a5edb9-b447-42b1-9510-322d75060f96"
        },
        "item": {
          "id": "bae445ee-e28a-44f7-b75f-0b907114fe29",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a66cc20f-1ed1-4844-bd22-3d6bc32bbcfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6893c894-13b4-4962-892f-2a927a1e30b9",
        "cursor": {
          "ref": "47486d61-984d-418c-96a6-b1a266814033",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5fa23c70-23ca-47ea-983d-078c1e95487e"
        },
        "item": {
          "id": "6893c894-13b4-4962-892f-2a927a1e30b9",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "bd19250e-5ad5-4738-982c-d83a093ec242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc88ec0-a617-4ea4-91c6-ba448ad9d7d8",
        "cursor": {
          "ref": "8637ee55-220d-46e4-9770-d76a431170a2",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b1dd6cb1-637e-4b2c-9217-bbc6da023fec"
        },
        "item": {
          "id": "4cc88ec0-a617-4ea4-91c6-ba448ad9d7d8",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1ee27919-d90f-48b0-80de-6ada83f41617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988fc050-69eb-4c87-91a0-e64869c83d35",
        "cursor": {
          "ref": "e760ce4e-0e9c-4696-9ee4-bb4eafabfe8c",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1c1778c9-73de-40a7-b0f6-b23eb898ce8a"
        },
        "item": {
          "id": "988fc050-69eb-4c87-91a0-e64869c83d35",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "70ebd774-6d24-4b74-8489-9299289c25cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c0c73b-9e16-43f1-8922-08c3ef990ccb",
        "cursor": {
          "ref": "0e70f7da-6143-4c9b-b971-b0730c842a0f",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "27310d50-f790-4a6b-b0a2-60e6806477c2"
        },
        "item": {
          "id": "a1c0c73b-9e16-43f1-8922-08c3ef990ccb",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ed25b239-a793-4b16-b274-a9872568f4f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc60f84-56ff-49aa-b225-781831fb9869",
        "cursor": {
          "ref": "d612377b-4feb-495d-a44d-9afbcb1a9daf",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "41d7e67e-5d0c-445d-a9f0-b26bdcf1e1b8"
        },
        "item": {
          "id": "8dc60f84-56ff-49aa-b225-781831fb9869",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "fc6efc4b-8025-483e-957c-91960d555f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0b1c97-36a7-42b4-b620-fce7a4e0c050",
        "cursor": {
          "ref": "956c13d9-2b02-4775-8823-6e5bc2991421",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9a118d4f-cd5b-4492-9d06-e17d58f69979"
        },
        "item": {
          "id": "7d0b1c97-36a7-42b4-b620-fce7a4e0c050",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0d9d9a3d-eaa8-4c28-8afa-e7c768436236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bcc5a18-c188-4db4-9c2e-8c0147af735f",
        "cursor": {
          "ref": "a9045e3e-90a3-4f23-b5a4-5817d82cadf4",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d68e8e40-bf8a-4b9e-bd2e-305f16fb0092"
        },
        "item": {
          "id": "4bcc5a18-c188-4db4-9c2e-8c0147af735f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5eb82abc-8bab-45d7-977d-6632b0af43a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2a9026-998f-413e-8797-7bbe70290019",
        "cursor": {
          "ref": "fa668178-f62e-46c5-aa1f-3fc84223fd89",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "969daa30-8e25-4606-86bf-370a02b9b949"
        },
        "item": {
          "id": "ae2a9026-998f-413e-8797-7bbe70290019",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "23051732-3ca7-41a5-928e-53081ddbf5c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24031059-9910-437a-b991-a72427293b40",
        "cursor": {
          "ref": "590dfa94-66ef-4e18-a5c3-4be810a0af88",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0da9049c-12b2-4117-a838-e06e0b999624"
        },
        "item": {
          "id": "24031059-9910-437a-b991-a72427293b40",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "eac5db0d-c717-489e-92bc-dd889fff4037",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190f0256-fb11-4601-99b4-68ca45e6d437",
        "cursor": {
          "ref": "3f5945d8-8143-4dba-ab6b-7d70b333fe52",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1a6d84f7-ab42-4903-a29a-390717658ad8"
        },
        "item": {
          "id": "190f0256-fb11-4601-99b4-68ca45e6d437",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "b445e834-267c-4e70-84be-4195e1d77a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "13654fd2-989b-4f85-9139-b4209f803de5",
        "cursor": {
          "ref": "f74b3efd-bb3a-4cfd-80af-a0df21efa520",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "75a99948-ca60-4370-bc74-cbff505fba47"
        },
        "item": {
          "id": "13654fd2-989b-4f85-9139-b4209f803de5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "db3a46ba-e6fd-4cad-ba4e-0be8fcb08907",
          "status": "Created",
          "code": 201,
          "responseTime": 10919,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59e58cb-6036-426a-955a-1f86cc2c15b9",
        "cursor": {
          "ref": "9ff05b0c-0ed1-4b83-9552-f561d846ca2d",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f8a07a6f-fc3c-4bca-bafe-2d16f1791855"
        },
        "item": {
          "id": "d59e58cb-6036-426a-955a-1f86cc2c15b9",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "704cb42b-5977-417e-8c0d-8a26890d6af0",
          "status": "Created",
          "code": 201,
          "responseTime": 10511,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdb2543-e9ac-4c4f-beb1-dd1471cc5edc",
        "cursor": {
          "ref": "9eecd73a-4608-4767-b6fc-91e3024c0953",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "314b22bc-6b93-4f46-bd17-cc5207f0bb27"
        },
        "item": {
          "id": "dbdb2543-e9ac-4c4f-beb1-dd1471cc5edc",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "15523a50-d985-4cdb-9d4f-f63eccd4805a",
          "status": "Created",
          "code": 201,
          "responseTime": 11100,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "692b0795-26eb-4b09-94bc-12a86a26c0a0",
        "cursor": {
          "ref": "4221ca63-cbff-426c-8133-20b94e2d1d5d",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "773379fd-23bb-4d92-aa5a-33f6cb53bd55"
        },
        "item": {
          "id": "692b0795-26eb-4b09-94bc-12a86a26c0a0",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "45d486b5-9567-4692-b10c-0c0ff8912dd1",
          "status": "Created",
          "code": 201,
          "responseTime": 10369,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc19a9b3-cc72-4dc5-bd57-025d223fc774",
        "cursor": {
          "ref": "387da1bd-45db-4319-876c-71f40113f1cc",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e30111b2-266d-4402-bdc7-a4fc2bdaae39"
        },
        "item": {
          "id": "dc19a9b3-cc72-4dc5-bd57-025d223fc774",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b7fa2809-e24a-44b5-9429-4e1c010b6257",
          "status": "Created",
          "code": 201,
          "responseTime": 10328,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-08-21T00:41:31Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-08-21T00:41:31Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "14936fa3-3f5b-4760-a8dd-dfae3a52d3c4",
        "cursor": {
          "ref": "ba05c0f3-06d9-4838-906f-61996b9e2c63",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8742d930-0d5a-4175-8cec-e151dc3b66a6"
        },
        "item": {
          "id": "14936fa3-3f5b-4760-a8dd-dfae3a52d3c4",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "7b1bc15e-054c-40fb-92fb-d1ec1350d008",
          "status": "Created",
          "code": 201,
          "responseTime": 10275,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1d67d5-ac79-419a-802a-86cde1416c02",
        "cursor": {
          "ref": "866e303e-27aa-4bf2-8f79-c53e3d4a1d52",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b4f1361b-943b-49e3-a5ce-98523df3a5ec"
        },
        "item": {
          "id": "ad1d67d5-ac79-419a-802a-86cde1416c02",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "db6d2f7d-6d88-42e7-aa01-51ca93f6439d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1dd8f2-0869-4502-8f08-90369463ecbf",
        "cursor": {
          "ref": "b55c62c0-c8ec-4d9b-ac64-087c981f993d",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "17582616-e2df-4260-8f65-2a431911e007"
        },
        "item": {
          "id": "0e1dd8f2-0869-4502-8f08-90369463ecbf",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "99f58543-136a-4666-b409-97b9ffd735d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e78e5b-250c-447c-9f8a-e071475ce214",
        "cursor": {
          "ref": "27ffd29a-edb5-44d6-9bd2-e3aefece3937",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d50504ae-ddb3-492b-91e9-d4b6b72f2bf9"
        },
        "item": {
          "id": "54e78e5b-250c-447c-9f8a-e071475ce214",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "461fceb5-4319-4149-b00b-dabd16a69fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20babd45-38e3-4d3a-acdb-1a529aa215b1",
        "cursor": {
          "ref": "eb5af02b-b96d-4928-b5fd-cf0884582068",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b182e383-9289-4db2-b1a2-b0fe4cf827d1"
        },
        "item": {
          "id": "20babd45-38e3-4d3a-acdb-1a529aa215b1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7465cfef-92cc-42b7-823a-b10549366b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6586edc-5919-483a-b9e7-2a50801ddd4c",
        "cursor": {
          "ref": "8660e762-32c4-4fb3-b80f-f991aa08e24b",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "94c716ab-3745-4177-b0ec-6a1eaf86d9f5"
        },
        "item": {
          "id": "f6586edc-5919-483a-b9e7-2a50801ddd4c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "205d5557-dd3c-4563-85cc-9d011fdba843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f27b92b-af46-4c21-8eb2-fd8646236c97",
        "cursor": {
          "ref": "361e4626-1f74-45e9-a171-28428ef624c8",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5e7107bd-68e4-4e5f-ad2e-e1acb824ef44"
        },
        "item": {
          "id": "1f27b92b-af46-4c21-8eb2-fd8646236c97",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "96a7d057-490b-49ca-b74d-bcf0aad800de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa151295-74cd-4a67-80ad-219b2d13916b",
        "cursor": {
          "ref": "3a91a7b1-4b9c-4fc6-90e0-cec3574b9daa",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d3fa39e1-8d88-46ec-bf28-f5b8adb7e38f"
        },
        "item": {
          "id": "aa151295-74cd-4a67-80ad-219b2d13916b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6f718a3e-28ee-4ce8-83f8-a7ed67752cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5347ed23-e204-4242-8c72-5980e1e72988",
        "cursor": {
          "ref": "b0a13641-42e0-4fe3-95a2-968e0c33b398",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8511ca6a-a6a0-40d5-92f1-b5f3470651e7"
        },
        "item": {
          "id": "5347ed23-e204-4242-8c72-5980e1e72988",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "648d4358-511c-43e9-a33e-3456a2835b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82a03e7-c8c9-4911-8000-60afb0120b51",
        "cursor": {
          "ref": "c967aaf4-044d-48ba-b6b0-f4da3022f0aa",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e8ba5cb3-4cd7-4933-ba8c-d19e6658fb06"
        },
        "item": {
          "id": "a82a03e7-c8c9-4911-8000-60afb0120b51",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4def9869-cca1-41f7-8b94-e874f55e26e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ddf7ec9-3240-48a9-b520-1ca84fa768d8",
        "cursor": {
          "ref": "ac0a30d9-6b31-46da-9bb8-ff6aed9176d6",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "4b20e180-765a-4703-940b-ebf4e0116eac"
        },
        "item": {
          "id": "8ddf7ec9-3240-48a9-b520-1ca84fa768d8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bd229647-8e0a-414e-85bb-08b5bf24269d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743f2dbd-8fba-4546-b3f8-423604f2df4e",
        "cursor": {
          "ref": "7433e475-ce82-433c-be3b-07fb038d7660",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "16ce6aaf-a7ca-4503-83cf-ee70f6fe797f"
        },
        "item": {
          "id": "743f2dbd-8fba-4546-b3f8-423604f2df4e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a191b10e-2649-4275-846d-ba78ada8f06d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "884aa666-9d10-4835-b8ff-efb1b0a4e0e0",
        "cursor": {
          "ref": "e8ab9564-ce3f-435a-81b0-1a9b7630cce3",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7c598d45-3be7-4949-8687-1cb862114a00"
        },
        "item": {
          "id": "884aa666-9d10-4835-b8ff-efb1b0a4e0e0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "217726a2-4f5e-43a6-be9c-6d0c5d477cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3d5cdb-d670-42b7-a7d2-af0b5be8e3a8",
        "cursor": {
          "ref": "a5e61b8b-9c3e-4f8f-88c0-5cdb3598db69",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f056921f-705e-4b93-bf4b-2b3c13253611"
        },
        "item": {
          "id": "6c3d5cdb-d670-42b7-a7d2-af0b5be8e3a8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "96a8a3ad-5c91-499d-b5d1-9109290e76a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e84a3714-5f28-4b64-bee7-e538176ca2df",
        "cursor": {
          "ref": "e6deb050-020b-477f-9d8b-33374023f96e",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "240a17fc-cd50-4d0a-a1ae-ed6223a2c190"
        },
        "item": {
          "id": "e84a3714-5f28-4b64-bee7-e538176ca2df",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0bdbc446-36b8-4183-9a06-1586c6e97dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d694617-673c-42df-b5bb-31c2c5178eae",
        "cursor": {
          "ref": "a3abaea3-6365-4da7-8af1-e38ea8bff7cf",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "10be96d3-5f59-4d1e-81a6-5ce22b9d6a2f"
        },
        "item": {
          "id": "3d694617-673c-42df-b5bb-31c2c5178eae",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7183cefa-f9ab-4fc5-9e58-654f3756da31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e0577a-e788-4249-9258-a6a545396a5a",
        "cursor": {
          "ref": "f82dc1cc-1db2-4560-85c0-65f4821972f5",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8608d6cf-9775-4a8a-8b11-ed4c98afb48a"
        },
        "item": {
          "id": "68e0577a-e788-4249-9258-a6a545396a5a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2b3691a7-eca4-4d45-a092-aaa179ce9f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d26bc7-4231-41da-ba58-34290e6b8716",
        "cursor": {
          "ref": "4e5214c4-dd3d-45f9-9d19-e89059cb1e7e",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "bb399b8b-c23c-49c1-8562-87637c927c97"
        },
        "item": {
          "id": "85d26bc7-4231-41da-ba58-34290e6b8716",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "54bcbafb-d2b1-47c1-ae6a-e0f326f65537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321f029e-4091-464b-b71a-bbb80c0685b2",
        "cursor": {
          "ref": "16811c07-4b27-435c-8c06-7ee6ccb01ca4",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a1689ffa-681b-45ea-8642-0316f9209f78"
        },
        "item": {
          "id": "321f029e-4091-464b-b71a-bbb80c0685b2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "672b5477-4ae7-4dcb-9451-cafe49817e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cfddac4-e7fc-4499-b857-a3931831026c",
        "cursor": {
          "ref": "827d7dc3-afb7-495e-9127-c94ac62e3369",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3f400b3e-3bf9-49ea-b210-0e58447811c9"
        },
        "item": {
          "id": "7cfddac4-e7fc-4499-b857-a3931831026c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8338fed8-1b3b-407c-b3ae-9830a4638793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ea091c-a78c-4eae-9437-b51cbabad05f",
        "cursor": {
          "ref": "01261849-13e8-4d76-9ef5-76f43230fe60",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9bdaaeb0-a736-416c-bbd5-07cfa1bcf0c4"
        },
        "item": {
          "id": "f6ea091c-a78c-4eae-9437-b51cbabad05f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "caeb03c6-80f8-43ed-859e-2c9b0952fff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7951ce16-8524-4874-a0ef-c5b40588c8c2",
        "cursor": {
          "ref": "8b5fccf1-65f6-497c-b598-57f77750dc09",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6690a155-1960-43ad-a518-a4ef71730e0f"
        },
        "item": {
          "id": "7951ce16-8524-4874-a0ef-c5b40588c8c2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a1f897d0-f44a-45a0-b1a9-4a1a4e00627e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601673c3-8d91-4fbc-91e4-dc2d7638ef26",
        "cursor": {
          "ref": "075e9ea0-4ec1-4bfd-89e6-ef2d7fd4c75b",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7363d281-8893-4bcc-b896-a40eabf65ca2"
        },
        "item": {
          "id": "601673c3-8d91-4fbc-91e4-dc2d7638ef26",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "134890bb-a9f8-47d7-bded-e83900416298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b48239-e8ad-4f27-8cae-1f841e224d35",
        "cursor": {
          "ref": "efe837ca-7af1-402f-8ec3-62ec72bd5fee",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "fbc583cf-b2a4-436a-8197-85f7cd73200e"
        },
        "item": {
          "id": "65b48239-e8ad-4f27-8cae-1f841e224d35",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "66b5c820-ae53-42ad-8847-9627e081a85d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eff5f33-88a1-4bb9-969c-70948a43efce",
        "cursor": {
          "ref": "345e6dc0-b490-4a84-9d0a-7ac0e7572641",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4238ffba-18f4-4fae-8310-8662c639c1ec"
        },
        "item": {
          "id": "1eff5f33-88a1-4bb9-969c-70948a43efce",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9f00d828-9ea3-46a1-acd7-e1449cab5f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7789314f-ec18-4e10-b57a-417699e52ca7",
        "cursor": {
          "ref": "bdbec126-9b45-493a-824a-c57d090907c7",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "90f4f360-98bf-4ece-becb-cb5aa02c3070"
        },
        "item": {
          "id": "7789314f-ec18-4e10-b57a-417699e52ca7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "355d284d-853d-4f88-a8e7-e72bdef9e02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872747e9-daf2-4abb-a085-a17219f9992e",
        "cursor": {
          "ref": "d3cd3f8a-1a61-48c3-ae4f-b64c67a594ee",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "559fa66c-4770-4e55-92ff-e4dd2abe3491"
        },
        "item": {
          "id": "872747e9-daf2-4abb-a085-a17219f9992e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8563aa27-b781-465b-899e-17d7940c63b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362b1627-0d9a-41b1-b7c2-c2db8ace0829",
        "cursor": {
          "ref": "0b35f8a5-082a-4a2d-bc01-e6dc98948f56",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a326647c-7664-4ddc-afdc-9ef655d78643"
        },
        "item": {
          "id": "362b1627-0d9a-41b1-b7c2-c2db8ace0829",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1cd7074b-207b-4789-ac3f-3fe2178c9874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9223c57-a2a5-4d57-8f38-b84444e507ab",
        "cursor": {
          "ref": "b7fdf685-1055-4db5-a4fe-2d4ce4321a67",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d3ea2ba8-6888-4334-a463-bf2e60a7d5f3"
        },
        "item": {
          "id": "f9223c57-a2a5-4d57-8f38-b84444e507ab",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ef6351c6-c6a2-49c0-b417-3f3fd61188be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fff1ee2-d76b-4076-858b-35ac3da3494b",
        "cursor": {
          "ref": "5b53afb3-ccb1-48a3-a3ac-612a9ff3979f",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "197980fc-86f8-4656-bbae-b3b64f770622"
        },
        "item": {
          "id": "0fff1ee2-d76b-4076-858b-35ac3da3494b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6c5b7e38-fdaf-423e-8505-14781d8a9b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8add185-cf3f-4121-90fc-a2564fe44cfc",
        "cursor": {
          "ref": "20a22ac2-5c85-44af-b0df-facf69576c92",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "23f178fe-1a11-4a86-a592-1b839585b071"
        },
        "item": {
          "id": "e8add185-cf3f-4121-90fc-a2564fe44cfc",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0faaea43-3ddf-4991-b3c6-bf34dcbb51cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50aa8b3c-43a1-47ca-b432-3ef7024e1ae6",
        "cursor": {
          "ref": "ce8a6fd1-ca3d-4d8a-916b-11bc14b26011",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "99602d0e-daac-47cf-835c-7daa56749b00"
        },
        "item": {
          "id": "50aa8b3c-43a1-47ca-b432-3ef7024e1ae6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7b0fabe1-e5f2-456b-b071-810c2d6b23f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1cd6eb8-db1e-48a5-b3f5-761a91a02d5b",
        "cursor": {
          "ref": "8c2c4b51-4b1a-4a58-b0f7-6ef9bb18701d",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2aef870c-21dd-4062-b872-c1753ea10916"
        },
        "item": {
          "id": "b1cd6eb8-db1e-48a5-b3f5-761a91a02d5b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "99267b9a-2e41-4039-b9d1-158ea6d80902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b4e22c-0b19-437a-a220-212f9560148b",
        "cursor": {
          "ref": "60f86cbb-a837-46eb-8cc9-8dda7bb5d82f",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8dca411a-0ea3-43a7-968f-3b5c9d83f312"
        },
        "item": {
          "id": "52b4e22c-0b19-437a-a220-212f9560148b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2739933c-5a84-4162-92b5-ecdba5231b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f2153b-cea2-454d-82cb-5ed47536cb96",
        "cursor": {
          "ref": "19160e04-09f0-420a-aac1-4fb91adf089b",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5b7d9740-7ce0-4308-9249-3626bb744f99"
        },
        "item": {
          "id": "a2f2153b-cea2-454d-82cb-5ed47536cb96",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ea11c8c0-f966-4179-91b4-92f1b0b63701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a99b2a-b533-4d05-8ec5-592a05afaf92",
        "cursor": {
          "ref": "d0d9d0b7-bd62-4c9b-81fe-bdc557f94419",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d6bdc73c-6fd8-4fc3-a065-97086bc17256"
        },
        "item": {
          "id": "75a99b2a-b533-4d05-8ec5-592a05afaf92",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a2adde6d-dcf1-4c51-bd9e-703bc9303a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f1f8d69-7be0-41b7-a9be-bf8eaec0a5f2",
        "cursor": {
          "ref": "1775200b-ba7e-4304-895a-be90d96630d0",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "90182366-ea95-4279-ab3f-bc43540d4d4b"
        },
        "item": {
          "id": "6f1f8d69-7be0-41b7-a9be-bf8eaec0a5f2",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "03c236b9-9b86-41ee-a987-05f6e3e4fe8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4380e027-f3a7-4658-829b-9e93bb8cd6cd",
        "cursor": {
          "ref": "9e17b261-8653-4293-a3e3-9e147722498b",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a1ef4f48-66f0-45d6-a0f3-1a24a543154c"
        },
        "item": {
          "id": "4380e027-f3a7-4658-829b-9e93bb8cd6cd",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b026a26a-cfa9-458d-b2e3-8803b04aef04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9771658f-d987-4527-bed4-adc1dac72dc0",
        "cursor": {
          "ref": "11c76e46-b782-4eb2-bf11-9f66696b75b4",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "95cd71ca-6201-4aa6-905e-79d3f77d8c5f"
        },
        "item": {
          "id": "9771658f-d987-4527-bed4-adc1dac72dc0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "99dd235e-fea7-4b43-940a-047b6c1d566a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb014a8-9eb1-419f-a908-d631be9e0122",
        "cursor": {
          "ref": "1b78aeb7-5c2b-4585-9986-51f2675cde3f",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "9b1d10f1-a4d4-42ab-bd54-bac6699946a7"
        },
        "item": {
          "id": "3bb014a8-9eb1-419f-a908-d631be9e0122",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "38244838-bc7b-45c2-8ac9-934550b5d7c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e82898-23dd-4bb8-be8e-97920cb63b31",
        "cursor": {
          "ref": "484bce3e-630e-443d-9cee-ecff15cb7f9f",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "de2b8e58-d53b-4f14-a484-4cc9fbf04cea"
        },
        "item": {
          "id": "29e82898-23dd-4bb8-be8e-97920cb63b31",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "cd01837f-8047-4255-b2a6-b2cf3266c3c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf9c00e-e2e2-4350-9d4e-171df6579e43",
        "cursor": {
          "ref": "f589674c-1ad6-41f5-ac1e-b671678c0bbb",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f65c5b45-3358-4e49-9314-191a6f622b86"
        },
        "item": {
          "id": "acf9c00e-e2e2-4350-9d4e-171df6579e43",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e4049a6f-8fb1-4bb9-829f-d2c3b4f80a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a31f7b-968d-4c76-a401-5df82826c031",
        "cursor": {
          "ref": "f1af009b-7f74-4de9-b258-620feb515cf2",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "26809347-0cd2-488f-8f78-7ab2539da156"
        },
        "item": {
          "id": "d7a31f7b-968d-4c76-a401-5df82826c031",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e9382654-0eeb-4c41-a182-cfdb72824584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5469dc2a-f1ce-442a-ba92-7bbf9d43bfdc",
        "cursor": {
          "ref": "14c140f7-c43e-4dcd-9ce4-b77c72867d07",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8e56773c-3d7a-4876-a280-ba9def0bef05"
        },
        "item": {
          "id": "5469dc2a-f1ce-442a-ba92-7bbf9d43bfdc",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "fdeb2182-b583-4697-a2e2-98479a85235a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd602b9-d3fd-4335-9c66-c48d40f7156c",
        "cursor": {
          "ref": "286eae06-2b70-4912-93f5-ba87463250fa",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7354caf0-8189-454b-9ead-224efe093852"
        },
        "item": {
          "id": "dbd602b9-d3fd-4335-9c66-c48d40f7156c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f55c0156-c394-4bb5-91a0-8c98f5b5694a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7744f24-0d16-4572-a338-380ef0e4f867",
        "cursor": {
          "ref": "99169c55-efc8-4cb5-a31e-b9f0108deee2",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e349baf5-2015-4caa-9e60-7f72079f97a6"
        },
        "item": {
          "id": "e7744f24-0d16-4572-a338-380ef0e4f867",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "152ded9e-a3da-4996-973d-200ccab1f7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c98e39-fd27-49fa-9d53-01e625eb44c9",
        "cursor": {
          "ref": "050bb0a8-19d8-4d6b-9e7e-1d389208051f",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b9734681-233f-4b73-a13f-93ef3e475095"
        },
        "item": {
          "id": "e2c98e39-fd27-49fa-9d53-01e625eb44c9",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f15b75a1-b460-49ff-9353-5343155aa2be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526ae180-c1ca-4570-911a-6fcc0789776c",
        "cursor": {
          "ref": "4a713582-78ac-4633-8b53-9dd5f0bf0342",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a2b4350d-13d6-4b8d-be2d-0b5b3ed2517a"
        },
        "item": {
          "id": "526ae180-c1ca-4570-911a-6fcc0789776c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5e09d8b7-dc56-4ddb-84d4-d986a3565eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8f012b-0f72-453d-9acc-b74ea3a7d1dd",
        "cursor": {
          "ref": "a78c6022-7b73-412c-b938-da20adfd3911",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d5cd8540-de62-4eba-947f-4c54e66b7890"
        },
        "item": {
          "id": "ad8f012b-0f72-453d-9acc-b74ea3a7d1dd",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "75179604-6c39-43d1-90d7-ecff693ee7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d16f90-c7a9-4d75-83e6-7ff75f956e55",
        "cursor": {
          "ref": "4e0263a8-f8bf-4bf2-8d89-d33bb39f448f",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "efa33d70-4838-405a-8b85-c449f1137266"
        },
        "item": {
          "id": "56d16f90-c7a9-4d75-83e6-7ff75f956e55",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d768fbc0-d594-45d0-8f4d-4a1fa108130e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43981e5b-60d1-487d-968a-ea44d301725d",
        "cursor": {
          "ref": "c2db3c7e-8450-4322-9252-9751af7715e1",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6f949614-cdee-4eeb-8be7-7cc1fadabae0"
        },
        "item": {
          "id": "43981e5b-60d1-487d-968a-ea44d301725d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f70de6ed-0369-4e32-a04a-4dc5786e23ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91012164-7fa5-4c65-957a-c7527b83a76d",
        "cursor": {
          "ref": "6faf0c2d-ef33-47e1-8d5b-6481ed47134a",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c871af0c-ad98-475d-9f47-a50aea12ec3d"
        },
        "item": {
          "id": "91012164-7fa5-4c65-957a-c7527b83a76d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6e7c9744-5a19-4953-9b3c-4d9f9d090812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7431b51c-f634-4067-a789-85e40c465869",
        "cursor": {
          "ref": "60c68009-1b9e-45f4-ae4d-8e30a6e6913c",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a081be51-4502-4ad3-9e6a-80b7b841b8b0"
        },
        "item": {
          "id": "7431b51c-f634-4067-a789-85e40c465869",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f05f148d-49c6-4073-83e5-b969fe85cb44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb093691-ebc6-4b9d-add8-209cc2f9c181",
        "cursor": {
          "ref": "55ce0a04-1fb9-44be-9aaa-82b6b37561f8",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "533cd646-dedd-4de8-ae16-445d3a9e2427"
        },
        "item": {
          "id": "cb093691-ebc6-4b9d-add8-209cc2f9c181",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "27ead342-d38f-45f9-b735-09453af99dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da030d2-87c9-4aad-95dd-16df3d86d592",
        "cursor": {
          "ref": "b21f879c-fd21-46d5-b1aa-663717273533",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d3814508-28a6-40f5-87eb-d1363f0fae66"
        },
        "item": {
          "id": "5da030d2-87c9-4aad-95dd-16df3d86d592",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7f205631-1a15-4c30-8a08-94c59000f673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e0ef73-bcde-4596-ac71-0e65371ab8f2",
        "cursor": {
          "ref": "f1747406-1973-4d36-be51-baaf7580fc14",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f2d9560b-fba9-4bde-81df-8b964de5688a"
        },
        "item": {
          "id": "94e0ef73-bcde-4596-ac71-0e65371ab8f2",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8cde2f59-98a8-4bf8-b1c1-87fcf17ab920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9abc2fb0-7bb3-4367-816d-624cde7fe5b3",
        "cursor": {
          "ref": "30629572-c616-4b2a-a6c2-5966008d5a7f",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "fbfc6107-4a34-4d3d-92c2-4989a5efba62"
        },
        "item": {
          "id": "9abc2fb0-7bb3-4367-816d-624cde7fe5b3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "791a067b-51c3-474f-8421-ac9a54dee05f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925b12b8-113b-496c-baf5-a2895447056e",
        "cursor": {
          "ref": "4c2b1e94-43b3-4faf-b391-dffb3340696c",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "363014e7-594c-4654-832b-53337fda4a5d"
        },
        "item": {
          "id": "925b12b8-113b-496c-baf5-a2895447056e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8133c1c8-5689-4987-a259-6f506cc148ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ad49c1-c4a7-4195-abfe-db3a62b5c512",
        "cursor": {
          "ref": "ad748cf3-754b-4c8c-956d-ee1c06218a43",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7d4e154f-7a01-42e4-b2c4-0172e0674fb9"
        },
        "item": {
          "id": "12ad49c1-c4a7-4195-abfe-db3a62b5c512",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9cb09485-2b59-4093-9876-0b262bb37eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42a8a93-52fe-4829-92c6-3b9f8912e0b2",
        "cursor": {
          "ref": "8c299744-9ef5-4012-8e1a-0e50867fb25d",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b4633cf7-d736-4289-8ab4-c20789a41cfc"
        },
        "item": {
          "id": "c42a8a93-52fe-4829-92c6-3b9f8912e0b2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0ec64a84-df06-4208-8a6d-365de0af71cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8d8ce4-52e5-4a74-8c5b-5684e8b0ca0d",
        "cursor": {
          "ref": "e6f43cbb-ff12-4523-8ef9-358cbf0d7c0d",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d42d3fd3-e035-45be-8135-215429fceaf0"
        },
        "item": {
          "id": "4d8d8ce4-52e5-4a74-8c5b-5684e8b0ca0d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b4b90120-c4dd-4878-b8e7-9ad449591a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b124a3-3809-4ad4-b0a5-0f66d3d670cc",
        "cursor": {
          "ref": "0d6981f1-6c24-4f62-b2ed-1262e50047f0",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "39b5e34b-9af6-48f5-ad42-1b485c6a5962"
        },
        "item": {
          "id": "45b124a3-3809-4ad4-b0a5-0f66d3d670cc",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6b169576-55a2-406a-a2b8-5b68b52c5478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85eeb2fc-eff4-40a2-8aad-dc140cab735e",
        "cursor": {
          "ref": "b35f2f5c-dbfe-4b13-ad78-e27eb28cebbb",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a58412f1-1f71-4648-8977-2cb2d8eaad0b"
        },
        "item": {
          "id": "85eeb2fc-eff4-40a2-8aad-dc140cab735e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c2b80bb3-cd54-4f71-8447-1d23be4be407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ebe03c4-16c1-4e60-a119-056804b14206",
        "cursor": {
          "ref": "832a815d-cf8a-483a-a1f1-fb853d442f97",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a0d69c74-8413-4dc3-bace-2f793296e0d8"
        },
        "item": {
          "id": "1ebe03c4-16c1-4e60-a119-056804b14206",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "97e3097e-09e8-451c-ad9a-5ae76d69da3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a254bc0a-8267-4c28-ae04-f27895f9cb05",
        "cursor": {
          "ref": "71cf837a-e87c-454e-8c89-eaaec4facae4",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "5f1740a7-1d52-4c79-8701-641278546e83"
        },
        "item": {
          "id": "a254bc0a-8267-4c28-ae04-f27895f9cb05",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e0fe0111-e9b1-4ab3-8427-970934519100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41578ff-c91c-44e2-8163-ec30b3e173c5",
        "cursor": {
          "ref": "7e32c89c-09b7-40c4-b534-3f52531411d4",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "61c6f1a9-c7be-4fe8-ad97-f1ab63e4a70b"
        },
        "item": {
          "id": "d41578ff-c91c-44e2-8163-ec30b3e173c5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ba550983-bc89-4cf7-ad94-26baa75fb2ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82750961-3565-41f9-915b-f11d1eb37aea",
        "cursor": {
          "ref": "dbd6b227-4b60-4481-bbbb-3e1391901f48",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "afa84daa-c1c5-4714-80ff-dc76bc0d561d"
        },
        "item": {
          "id": "82750961-3565-41f9-915b-f11d1eb37aea",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "75bdaedb-dfb6-4942-93ae-f69d51beaccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79abda8a-4bc3-4eb1-a072-404909fe251b",
        "cursor": {
          "ref": "120f9f20-3793-4202-96bb-05c7fd234804",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4904e07f-4934-4c59-90d3-21fd18578c78"
        },
        "item": {
          "id": "79abda8a-4bc3-4eb1-a072-404909fe251b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c22266bc-0767-4c14-a716-902e0091dc72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34fc55c-5840-44ed-837b-cf99a1fe7522",
        "cursor": {
          "ref": "85fe7305-c933-4430-87e0-995eb0a2b999",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0cea60d0-be03-4f8e-bf8b-f80cf19d6aa2"
        },
        "item": {
          "id": "d34fc55c-5840-44ed-837b-cf99a1fe7522",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8dcc99ce-e3f9-4133-838a-7614f85da24a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42902fcb-4763-41ab-b95a-4db091d81cb9",
        "cursor": {
          "ref": "25d2a9d9-dfe2-427d-9db4-88543f3fef98",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "12407ebc-6d7b-413f-b050-76602e11eb6c"
        },
        "item": {
          "id": "42902fcb-4763-41ab-b95a-4db091d81cb9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6dc17214-d618-4dac-b8a6-b80fd96bb286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca020077-2ff3-4339-948d-b7946914818c",
        "cursor": {
          "ref": "5ae6e1b0-07e4-410d-931e-a2764f60628d",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "215cad58-cbdf-4afc-90d9-d576a57f5b96"
        },
        "item": {
          "id": "ca020077-2ff3-4339-948d-b7946914818c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7b8902b6-0b93-4ce1-8ff9-bba2ef759014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca515257-58a9-40d8-8cdf-44c55f074878",
        "cursor": {
          "ref": "01ebd9db-821a-487e-a7f6-5c32880d0c61",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "888967a4-cea8-40fa-8e02-2685a40941f1"
        },
        "item": {
          "id": "ca515257-58a9-40d8-8cdf-44c55f074878",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3b883ef9-dfd5-46c4-91c4-d315029c5263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4175ed08-87cc-4d83-b7a9-cdf701db4ed5",
        "cursor": {
          "ref": "c765ffc9-0e9c-4693-a762-9ddca94fc6f7",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8d285c0c-2423-4fb5-8b68-a16b98ce3a14"
        },
        "item": {
          "id": "4175ed08-87cc-4d83-b7a9-cdf701db4ed5",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f1b1164b-adcf-41a2-8d97-742138445c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c2a670-1e8f-4e26-9dc2-a1d6c44c7a68",
        "cursor": {
          "ref": "c8239098-d179-429e-9285-942d1e249b2f",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "facf9b1e-c642-4cbb-a056-5f66b944ea8a"
        },
        "item": {
          "id": "68c2a670-1e8f-4e26-9dc2-a1d6c44c7a68",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4dca359d-c5bf-4f5c-9534-8fe1689c4a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb0f3afa-4f49-4d31-9c7b-f4b46816372d",
        "cursor": {
          "ref": "a607c2cf-9f8a-49f6-b988-783bf898914c",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ad61b818-f4b9-4935-9510-0285a6d27051"
        },
        "item": {
          "id": "fb0f3afa-4f49-4d31-9c7b-f4b46816372d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "85a24582-42cd-4ccc-9fd3-776f111b4f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933ffd75-aaab-48b8-9b95-9ec3c2b2a03c",
        "cursor": {
          "ref": "b45d882b-b53b-43a4-970e-b4a8190db605",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "60fcf7d8-faf9-4238-a71a-a45150863899"
        },
        "item": {
          "id": "933ffd75-aaab-48b8-9b95-9ec3c2b2a03c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c3ac49a7-7761-47f9-94e0-c50331607a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62308345-019b-4f94-af64-d02dee500ddf",
        "cursor": {
          "ref": "4947dc05-cd8e-477d-bdb4-2d1ecf5ae2d5",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f02c683e-a9dc-4f45-99d8-a2c1a519cac8"
        },
        "item": {
          "id": "62308345-019b-4f94-af64-d02dee500ddf",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ebad3477-f341-4c22-81cf-e0a99732268f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b3fbaf-24d1-41dd-b878-20a89a89fbd2",
        "cursor": {
          "ref": "5394ff35-a414-4e9d-865c-0a09cb48e0f8",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f2efb440-6282-4f13-bf3d-520a53d5ebe6"
        },
        "item": {
          "id": "72b3fbaf-24d1-41dd-b878-20a89a89fbd2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "356ee169-75a2-4943-af94-b3a46d95adc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2389a306-0472-4636-9a41-7fee4fc74d33",
        "cursor": {
          "ref": "4292b382-6c8d-4fb3-9025-81fffbbbd588",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "cd03c7b5-15e6-485e-adbe-25bbecc69337"
        },
        "item": {
          "id": "2389a306-0472-4636-9a41-7fee4fc74d33",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5450e123-c9c6-488e-8873-2d1fffe3a37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8a5e32-befb-4816-a88d-d44e06e97fe5",
        "cursor": {
          "ref": "10bc32c2-16ea-497f-a15e-8992d70fa4c8",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "fed56806-acdd-4f09-bdff-7bbef899239b"
        },
        "item": {
          "id": "dd8a5e32-befb-4816-a88d-d44e06e97fe5",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1e4d344c-2f2c-4d34-866c-90e53db9eb29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a06dea-4fee-4884-8a26-8dc3661e266d",
        "cursor": {
          "ref": "336c56b7-b21f-42b1-8fca-cbc909232c6b",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2fce12e6-04e2-4d40-81cd-380b8e456502"
        },
        "item": {
          "id": "88a06dea-4fee-4884-8a26-8dc3661e266d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "26ba1a05-cc0b-4ea9-9146-4104fddbde74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6db37e9-5951-4df8-a8cb-f0a9590daa0e",
        "cursor": {
          "ref": "01ff8bdf-d38a-4d19-8dbc-285b7de9ff92",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b0b6f2ea-f2ce-4268-a6de-5a70215d055e"
        },
        "item": {
          "id": "f6db37e9-5951-4df8-a8cb-f0a9590daa0e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "cdd912d2-8d7e-44bd-88b3-1c5296a394ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3fd0a2b-c173-4e39-9430-237c11aa37cc",
        "cursor": {
          "ref": "4e77f986-5e97-4974-861c-1d4766b8b54a",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0a887f09-9f52-428a-ad33-4199186b9634"
        },
        "item": {
          "id": "e3fd0a2b-c173-4e39-9430-237c11aa37cc",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "576c3354-0b02-4907-b929-47fd177d5de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7544eb-cf3b-4c17-96a1-3c9b4344200d",
        "cursor": {
          "ref": "b9adc818-23b2-4bbd-9f4d-5c9d7168d524",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e918cd42-5e05-400b-b958-b41e0c5bea85"
        },
        "item": {
          "id": "be7544eb-cf3b-4c17-96a1-3c9b4344200d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3329ee83-243f-42db-90b7-dd735c1db53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e45a218-edb4-4452-b66e-7fcc3caca591",
        "cursor": {
          "ref": "683f2af0-a487-4d12-8cb4-b8043cdcbe65",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "56152db3-c418-4f5a-81c4-0d1e666dedfb"
        },
        "item": {
          "id": "2e45a218-edb4-4452-b66e-7fcc3caca591",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ebdf4c83-3fad-4573-9192-92f4429c7b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8815d1a-ca7a-44af-a898-53c85e28fa06",
        "cursor": {
          "ref": "8c682552-307f-4127-b9ab-9a91638edaaa",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "83edbfc0-e5c6-42c6-9ba0-44d97ddfd858"
        },
        "item": {
          "id": "c8815d1a-ca7a-44af-a898-53c85e28fa06",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "694e3d2c-ea4c-4ab0-86c9-18c2a512d17f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c301d7b-d6dd-4751-8282-5295af7de72e",
        "cursor": {
          "ref": "de74be0a-f740-4cec-af51-81c5be6188ed",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7a0ccab3-38fc-4830-be5c-a0be2d03239f"
        },
        "item": {
          "id": "9c301d7b-d6dd-4751-8282-5295af7de72e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "bab113c2-8d87-420b-9239-a98d58acf966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50617d91-301b-4ce3-a1ba-9d5457055379",
        "cursor": {
          "ref": "9edd2013-d18d-4fa2-95f3-866b1ea50f91",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "47e0ef53-ef67-4e45-beae-ff3377f68861"
        },
        "item": {
          "id": "50617d91-301b-4ce3-a1ba-9d5457055379",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1e987604-1947-49c1-9a53-aeb34543b712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38cf903-9494-4bde-b046-e2ab789e7d94",
        "cursor": {
          "ref": "d73ce395-4715-4c1a-bc2b-0bd1036ef81e",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "276dad74-9ce8-4b8d-a4ce-b34448b6eb0b"
        },
        "item": {
          "id": "d38cf903-9494-4bde-b046-e2ab789e7d94",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d7f69288-c66f-46df-a060-6a9b92679e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f812a23f-3ad3-4a8d-9311-8510a218737a",
        "cursor": {
          "ref": "3fc1467e-4317-450a-ace2-7250a2398f72",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a3b5adb2-78fd-41a9-b53a-98f99a07a4b7"
        },
        "item": {
          "id": "f812a23f-3ad3-4a8d-9311-8510a218737a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a5d6b16b-effe-4272-85ae-333d60248199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d0be39-f7dc-4607-8fef-836639644dc5",
        "cursor": {
          "ref": "96e47c1d-371d-4dd9-b5be-59ca8e327471",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "dcae2eba-f141-491e-93d7-316c4d07c521"
        },
        "item": {
          "id": "c3d0be39-f7dc-4607-8fef-836639644dc5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "87ea1b71-d25b-4043-bfa3-fcc62ca527a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21618a5-63c8-4153-af5e-e04711e22b89",
        "cursor": {
          "ref": "c9b739e1-e37d-4662-af81-86a4e1c4fb9a",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "43f903fe-67a7-4a72-a92d-bc348a925699"
        },
        "item": {
          "id": "f21618a5-63c8-4153-af5e-e04711e22b89",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ed306584-0d32-4ff3-bf10-8d9d687ce69b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0099991b-eb98-4fb9-a062-d42ed7003c09",
        "cursor": {
          "ref": "d56c4fdc-a2a6-42d0-afbd-7cb1c134db9a",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d16f3d12-7013-4f25-bb70-59cf59d8a4b4"
        },
        "item": {
          "id": "0099991b-eb98-4fb9-a062-d42ed7003c09",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "60bf3272-616e-4fd0-bb7d-609384b2572b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa28a768-0184-440f-b558-52d515aabba8",
        "cursor": {
          "ref": "277fe59e-c672-4625-9dd7-4bba81c6627d",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "de3eb6ae-4fbe-44cc-944b-ede37370d1aa"
        },
        "item": {
          "id": "aa28a768-0184-440f-b558-52d515aabba8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a847e71d-14c5-4639-aa3c-f6a7e3922536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd191477-4b38-4dac-8380-3e80c59c2757",
        "cursor": {
          "ref": "db705e85-ae24-45ce-a52f-1c095070731c",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "83210238-5b91-4e4d-9ef2-7de39c48442d"
        },
        "item": {
          "id": "dd191477-4b38-4dac-8380-3e80c59c2757",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4e16b704-d903-4fb8-ba10-6a8970459133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018d0a42-d117-440a-a681-1da69007b4b8",
        "cursor": {
          "ref": "4e043ad1-f0c8-40a7-9505-af5954cbe574",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f709aafb-f2f8-4cd2-80c7-cc197b1100e0"
        },
        "item": {
          "id": "018d0a42-d117-440a-a681-1da69007b4b8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "fc938998-8b8f-4fc0-a6b8-e830d8bf5501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c43936-52ff-4806-a1cb-c607cc4bef64",
        "cursor": {
          "ref": "12209f4f-1ebe-460c-89ce-3cd2e9b2751b",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "37cc4577-c5cd-4634-9fb9-561fafcab1f7"
        },
        "item": {
          "id": "c0c43936-52ff-4806-a1cb-c607cc4bef64",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "95ef919a-bf73-425d-bfcd-510728fab271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d938bd-d710-4104-8b25-54bc75b6a793",
        "cursor": {
          "ref": "4636bfa4-7e58-4e31-a965-e9072166cb94",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4d8599df-1299-4822-933a-569a3dc1e432"
        },
        "item": {
          "id": "28d938bd-d710-4104-8b25-54bc75b6a793",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e53eba09-6834-4139-aedc-21c27265b1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09153a70-966d-4218-8bcb-20f550c821ae",
        "cursor": {
          "ref": "b3665280-db7b-4f2f-b51e-4d3c8b7fce0e",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "65bcc2c5-1a05-494e-a33d-5a9813a8b1a7"
        },
        "item": {
          "id": "09153a70-966d-4218-8bcb-20f550c821ae",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a8bd876f-81c0-4d40-bf9d-ce4b80a00c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230213ff-c57d-4482-98e2-227c22954093",
        "cursor": {
          "ref": "4e486096-a233-4b44-80cf-16c5bbe2acc2",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d776a209-8ad4-45d4-925a-4658e63d9614"
        },
        "item": {
          "id": "230213ff-c57d-4482-98e2-227c22954093",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "56a1b8d2-31df-4975-8f41-ee3437de2911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0330da6c-baef-4af9-a08e-9be95d20e239",
        "cursor": {
          "ref": "90c089c6-c900-483d-b36e-bd6aff24536d",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "86976f48-6ae8-4e59-9bdd-cad5f84f17fb"
        },
        "item": {
          "id": "0330da6c-baef-4af9-a08e-9be95d20e239",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "bb39be20-fc46-48f1-8508-5e284b1a6ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b55b63-e596-43b4-8ecf-9170ee08c64b",
        "cursor": {
          "ref": "74730145-70e8-4e1c-a04f-cab18f704719",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3ec01f58-35fe-474b-a309-e19fa2fd3654"
        },
        "item": {
          "id": "17b55b63-e596-43b4-8ecf-9170ee08c64b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f22174ac-1914-40e2-8424-26754abac21f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a23eec-af57-4858-9798-ee50a6edf54e",
        "cursor": {
          "ref": "61e55ebf-c578-40a2-8540-ba3548e7cb42",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "bec42cdd-3c22-40af-b6b6-002bda7cd0e5"
        },
        "item": {
          "id": "27a23eec-af57-4858-9798-ee50a6edf54e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5d271887-9951-4751-9430-ed97778c219d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4887c4-3c71-4a8c-9443-e7d4a932e173",
        "cursor": {
          "ref": "e21436a3-7ffe-4711-bcbb-9d19de2179d3",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2f3781d0-27a2-48ce-b160-c097ee34aaba"
        },
        "item": {
          "id": "da4887c4-3c71-4a8c-9443-e7d4a932e173",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c7b5727e-8430-48c2-8310-8c8ff7d9ec8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb5ccbd-32cf-4edf-a1e0-fd041832c8cc",
        "cursor": {
          "ref": "3e024491-1378-4653-aa7c-f39144f25642",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "dab70ae8-58ad-46a6-809e-e47230822b2d"
        },
        "item": {
          "id": "4eb5ccbd-32cf-4edf-a1e0-fd041832c8cc",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "289cd6d8-4399-4efc-80f8-8519a8514bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db7e8fa-b85c-4f7f-9dbf-a6d81150f40d",
        "cursor": {
          "ref": "d88f1866-f440-4145-8e40-be1d2246fec4",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "493eac85-d1ae-4e8f-9641-041e69d04cbf"
        },
        "item": {
          "id": "5db7e8fa-b85c-4f7f-9dbf-a6d81150f40d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a75f4124-62fa-49cd-bd7b-448d4a7f1a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c569bb6b-61ef-410b-a6cc-c84bbc56e1c6",
        "cursor": {
          "ref": "792a2c5d-b8d1-4fd0-b302-cefda471eb0b",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "098ce444-5761-45f8-ada3-e683b85cf194"
        },
        "item": {
          "id": "c569bb6b-61ef-410b-a6cc-c84bbc56e1c6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "85fcb4d0-f3e9-44e9-87c9-78c5225739ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5dbe0b-fef3-45bf-913d-949ba3134558",
        "cursor": {
          "ref": "3b86a499-df45-479b-9f7f-891e27907f90",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0c490b76-ac82-47ee-82f5-78c1f75d15d8"
        },
        "item": {
          "id": "3c5dbe0b-fef3-45bf-913d-949ba3134558",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "199b45e2-b72a-4f67-809c-66b46dc8f898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d259f9-32dc-4580-896d-4dde867bacdb",
        "cursor": {
          "ref": "3ce71755-27d5-4ee3-aa64-671de00bee08",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "343b108b-3ad7-467d-9e39-f52d60d981d4"
        },
        "item": {
          "id": "65d259f9-32dc-4580-896d-4dde867bacdb",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ad4524c9-cd86-4dc8-ab4f-b11bbcdc9186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66cbf3e3-7e98-484d-a55e-907904c6acc2",
        "cursor": {
          "ref": "587b738d-8695-4a45-850c-c1256d278be1",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "dc5f6df8-ae71-4d61-b79b-dfbc1d14b4bc"
        },
        "item": {
          "id": "66cbf3e3-7e98-484d-a55e-907904c6acc2",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f81c11a1-2542-4b27-8666-21f609e0a992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8b32be-8ad6-470d-b67e-2466a2d30357",
        "cursor": {
          "ref": "288f566d-471b-4e37-bd0a-391ae1b6597e",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d93d0373-0f67-450b-b203-9751c231bf07"
        },
        "item": {
          "id": "dc8b32be-8ad6-470d-b67e-2466a2d30357",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1d9b51cd-690f-4fba-839d-c1ab1a3f077f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d9ccbf-2c41-4d2b-9c16-a845f393ce8f",
        "cursor": {
          "ref": "0c79c959-f1b7-4d90-af2d-4277eb70bdb7",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "93d193ea-af05-4d9e-87f3-f842df7b5118"
        },
        "item": {
          "id": "a8d9ccbf-2c41-4d2b-9c16-a845f393ce8f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "91aec67c-116e-4950-946d-917d2b40c0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb8b5db-338b-44cb-a6f0-de06396205fb",
        "cursor": {
          "ref": "e83c3d8e-0548-4938-8c8b-22855c896012",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a489aa54-4ce3-4d02-8443-dcb3e81a89e4"
        },
        "item": {
          "id": "6eb8b5db-338b-44cb-a6f0-de06396205fb",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e57ad805-683f-4bb9-beac-4de0cfd654d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380eb822-9ae8-4468-b97c-fc01903750a8",
        "cursor": {
          "ref": "70ab3858-3658-4523-9697-d7072213f6df",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1462f9ae-cb85-4877-a616-1c392f3a3a7a"
        },
        "item": {
          "id": "380eb822-9ae8-4468-b97c-fc01903750a8",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "751b761a-0b4b-4e17-8360-249675f2e17f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0afaf322-1e2b-4ca1-aab6-84c959d66427",
        "cursor": {
          "ref": "9fe30a6b-2987-47ac-a30f-bd23a63ffedf",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "dd76fb0d-b55e-437b-9432-1433927db2b2"
        },
        "item": {
          "id": "0afaf322-1e2b-4ca1-aab6-84c959d66427",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "844441a2-aa7b-44a4-bfa6-9b23061ab709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a60a326-62ed-49f1-86d0-1e54eecc9a53",
        "cursor": {
          "ref": "5a4c411d-624e-421b-83b0-ce6b470f4c18",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "86b4f25f-6ba9-4c58-9d53-0ccc84c2514e"
        },
        "item": {
          "id": "6a60a326-62ed-49f1-86d0-1e54eecc9a53",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "73168917-b739-499f-b12a-703128202e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c54c223-195f-4211-8252-f9a780aa1b8f",
        "cursor": {
          "ref": "ab5b5a7a-9177-4b6c-bea9-7adc9657a518",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c77354e1-f9ae-4dbf-98d7-479258b7d281"
        },
        "item": {
          "id": "7c54c223-195f-4211-8252-f9a780aa1b8f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "91642c23-f979-45c4-95c2-9a58fb442472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a809bff-370b-4512-a4b6-401790d89d02",
        "cursor": {
          "ref": "f6e78e08-7fa6-4e0a-8ea7-b58aa9f65f97",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b54fca1f-8274-4a73-9105-718d8ba091d9"
        },
        "item": {
          "id": "1a809bff-370b-4512-a4b6-401790d89d02",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f01dd273-a0a7-4c0f-bc8e-9fccfcb3c4e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e690f4-46a5-4df3-81b6-b69b2812e8f1",
        "cursor": {
          "ref": "e047c98d-90f2-43ce-b9c0-223914c53c78",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "834dc91c-1e44-40d8-ad6e-6afaed4524c5"
        },
        "item": {
          "id": "c0e690f4-46a5-4df3-81b6-b69b2812e8f1",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "78b58dfd-60bc-45bc-9835-66fa6d63e314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df8b9b7-13a6-4c51-9ce6-144c958bc379",
        "cursor": {
          "ref": "bc47574f-2c70-483a-a62d-abc9cbe65f34",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4c765987-6949-48d9-ac9b-a27e3ca02e13"
        },
        "item": {
          "id": "0df8b9b7-13a6-4c51-9ce6-144c958bc379",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9be21315-c04d-4a33-9a03-38a148d88073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1d5efc-ab7a-4194-88d2-116581de2a52",
        "cursor": {
          "ref": "f6298c8d-9654-4206-82ce-8f971835777c",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ca3c6cb7-c1d2-4eb9-8264-7ee3bfa91af7"
        },
        "item": {
          "id": "cf1d5efc-ab7a-4194-88d2-116581de2a52",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b69db64b-2f0e-4290-b3d2-edc9e3eb255d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d7a188-bce1-472e-b0c1-d1a3c3665b46",
        "cursor": {
          "ref": "560daf48-2e6c-430a-b011-af67dd6d259c",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3e62498a-00e9-4147-9c1b-8c931198056b"
        },
        "item": {
          "id": "a1d7a188-bce1-472e-b0c1-d1a3c3665b46",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6881c837-0614-4610-b217-fe9c3f53e1cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60376d5-b88b-4f1b-ac97-39a19ebf78b3",
        "cursor": {
          "ref": "40db6454-85a7-40f1-9a92-79387e12ddbf",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "73677e18-c16b-4084-a207-ca70ec280ee3"
        },
        "item": {
          "id": "d60376d5-b88b-4f1b-ac97-39a19ebf78b3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "193c38a2-a849-4858-b4ee-9459e7f42cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "087512bc-74f0-4644-8cd6-6c6fe1d36241",
        "cursor": {
          "ref": "6d36a59a-4f3f-4432-ae20-337dfe74d77f",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c7fcc5a5-9f06-4c67-827f-8781ea6c6529"
        },
        "item": {
          "id": "087512bc-74f0-4644-8cd6-6c6fe1d36241",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "fa27918c-1166-4097-8c18-e2473f82dc91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a62db85-1543-43c4-acc5-8ebdca2c9603",
        "cursor": {
          "ref": "712f0864-d291-4a8a-97c7-e185eabb7a80",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e6a065b9-327d-4c77-a499-62887f78a748"
        },
        "item": {
          "id": "2a62db85-1543-43c4-acc5-8ebdca2c9603",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "76f87259-3d15-4f94-a161-4ff100719b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df6bced-d47d-4e4d-8429-45386bc27752",
        "cursor": {
          "ref": "05aefe4c-e487-4adc-a2f3-6cc80f9292dc",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0e32ef19-403a-4f34-bd21-b917785f2d7a"
        },
        "item": {
          "id": "3df6bced-d47d-4e4d-8429-45386bc27752",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d80c2648-fae0-4803-9420-03a39d71c9b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9526488-d316-4373-867a-44a64801a543",
        "cursor": {
          "ref": "678a18b8-2179-43be-b0b3-e2d07f3dff2e",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e200d47c-55ad-4a3c-a440-11eb6acf80e3"
        },
        "item": {
          "id": "e9526488-d316-4373-867a-44a64801a543",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ec5245b3-8b63-4e1c-81ab-22b3ce9d0d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cffd2e6f-f1f3-4267-8ca2-96359954c9b2",
        "cursor": {
          "ref": "79fe0bee-7275-4967-9a77-ed205100cb38",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "61fcd898-17f1-498e-bdd8-3ec859326cb8"
        },
        "item": {
          "id": "cffd2e6f-f1f3-4267-8ca2-96359954c9b2",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a86833ed-aff4-4a33-9794-ea82f155c56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a540e7f-2e81-4f61-9750-e33dbe1e7580",
        "cursor": {
          "ref": "59d3ad34-584d-4774-9aaa-3043ac063a62",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9eda2223-dcbe-4863-a745-7582b98262cd"
        },
        "item": {
          "id": "0a540e7f-2e81-4f61-9750-e33dbe1e7580",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "bcf638c5-3e6e-4be3-b169-c55362eebc62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9689d45d-db98-48cb-ae47-032e9d35b170",
        "cursor": {
          "ref": "531d3b7c-5973-4bbe-99ab-d14fe88f613d",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "db2bd1a9-08ae-423a-8512-eaf62586062e"
        },
        "item": {
          "id": "9689d45d-db98-48cb-ae47-032e9d35b170",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e82877b3-625c-48cf-abb0-3261bcb22aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b8fb6a-3f05-4592-b162-afebdfe5981a",
        "cursor": {
          "ref": "c4671f11-b643-42de-b5d2-2e60f122d766",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7d9712c5-86a5-4daf-be96-564516f2d5bb"
        },
        "item": {
          "id": "d2b8fb6a-3f05-4592-b162-afebdfe5981a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "92201586-4fe3-433d-92cd-262f215837b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1981bf88-30bd-4b79-be9c-e1e480621f93",
        "cursor": {
          "ref": "ad7ac3fa-244b-4c4c-8670-f288d4ce6b0e",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "23a29367-28f9-4200-a35e-1e71da4ea2c1"
        },
        "item": {
          "id": "1981bf88-30bd-4b79-be9c-e1e480621f93",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "bcaded6f-a863-424a-a50a-9ecdc976832f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c78260-03d8-4f9c-acc5-99236c6ba774",
        "cursor": {
          "ref": "086df0f4-08e3-4a0f-a16a-96722ffe5a06",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0d9bf3d5-3cc5-4d69-afa3-bf68088eb208"
        },
        "item": {
          "id": "18c78260-03d8-4f9c-acc5-99236c6ba774",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c3351270-df90-4e14-8ac0-f4809bb61209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3f94c9-beaa-4ee2-adcf-8b10a2f15c39",
        "cursor": {
          "ref": "a73c216e-08e0-4184-9dcf-4ebeaab9467e",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "36dbc099-db4e-4470-b6f5-5226e626aa15"
        },
        "item": {
          "id": "bf3f94c9-beaa-4ee2-adcf-8b10a2f15c39",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e3b38db6-7188-46fe-8f95-9fbeec53092d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c19f687-5226-4c4d-af73-5dc25708c359",
        "cursor": {
          "ref": "4a7e6590-8180-4f84-8339-56a617321a3f",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8a2f84c5-ef12-4ef9-aec4-5ac791868208"
        },
        "item": {
          "id": "6c19f687-5226-4c4d-af73-5dc25708c359",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e37c7e69-0a2c-4823-93c9-77cf15e5f01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee986d57-dc5b-42f8-ac4a-205f2d553372",
        "cursor": {
          "ref": "d1a87bff-30a7-4b84-9675-98f0f0aa09b1",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a436219f-5754-4601-87dc-e9f4de4abb7e"
        },
        "item": {
          "id": "ee986d57-dc5b-42f8-ac4a-205f2d553372",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c2a8cf25-cb28-4ba9-93af-4a4d432de44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c3104e-64f8-4931-8afd-babf48f04887",
        "cursor": {
          "ref": "08fcdaa3-fa8c-4e8a-b05e-6d31486d8dff",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b622c0a6-8f1c-4acb-8239-7720e36c3430"
        },
        "item": {
          "id": "50c3104e-64f8-4931-8afd-babf48f04887",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4086d6c5-d8c8-4b7c-aa1c-536b216b3e89",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11fd3c23-6022-4034-8116-b0fec2574dad",
        "cursor": {
          "ref": "c308faa2-5269-499c-91ca-6618c4e4047e",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2d6d76f8-3b7c-4469-abaf-7d66460f28a8"
        },
        "item": {
          "id": "11fd3c23-6022-4034-8116-b0fec2574dad",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "31ad7a51-dc0c-4320-9df2-d3ebb897cb8e",
          "status": "OK",
          "code": 200,
          "responseTime": 2097,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3f3061-4cc3-4495-a670-5de0d2af051d",
        "cursor": {
          "ref": "1b6a365a-ae7f-45ee-b026-005e127e9c78",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a4700741-8e3c-46d2-b426-dfe0d4b4b775"
        },
        "item": {
          "id": "5b3f3061-4cc3-4495-a670-5de0d2af051d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3ca5a3f6-76d6-4503-b3bf-b2c89f2855ce",
          "status": "OK",
          "code": 200,
          "responseTime": 2701,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7932de-fdd5-432c-88cf-14a6a422e157",
        "cursor": {
          "ref": "700d7659-5167-43df-a619-6476c0f08d73",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "dd7c51b5-0faf-4133-bd5e-264e1537373e"
        },
        "item": {
          "id": "fb7932de-fdd5-432c-88cf-14a6a422e157",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1d294226-2320-4237-b279-0cd11654f45d",
          "status": "OK",
          "code": 200,
          "responseTime": 2450,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4b45c1-f8e7-4d4e-b9c3-212bbe33e691",
        "cursor": {
          "ref": "9c641880-6f9f-4ffd-8d9e-28e095027027",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c0d2f73d-d8af-416c-82c4-4b072097dd39"
        },
        "item": {
          "id": "ab4b45c1-f8e7-4d4e-b9c3-212bbe33e691",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "351d65a3-0b03-4f2d-bf23-fb3db558cf5c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4b45c1-f8e7-4d4e-b9c3-212bbe33e691",
        "cursor": {
          "ref": "9c641880-6f9f-4ffd-8d9e-28e095027027",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c0d2f73d-d8af-416c-82c4-4b072097dd39"
        },
        "item": {
          "id": "ab4b45c1-f8e7-4d4e-b9c3-212bbe33e691",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "351d65a3-0b03-4f2d-bf23-fb3db558cf5c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca30ecc-2f1a-412a-a22d-b7c17fbddbab",
        "cursor": {
          "ref": "d5d24174-beec-4b56-b99a-fdf43e44214e",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ae558aa7-44de-4b6e-a92d-9dd8ccef4747"
        },
        "item": {
          "id": "0ca30ecc-2f1a-412a-a22d-b7c17fbddbab",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3e4c9dd7-1d22-4327-8aa4-76855781ce57",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc60b4d1-c948-492b-a193-adb8b892bfe9",
        "cursor": {
          "ref": "3e292608-e2a8-43b9-9139-d70e3c602e6b",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "af0624b3-de61-4ee7-9afd-a337d11d2ad0"
        },
        "item": {
          "id": "dc60b4d1-c948-492b-a193-adb8b892bfe9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ef590e29-f8ce-487c-8202-9dfefc5f80e7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}