{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "75b4183f-5922-465d-98b5-895aa716ebd2",
        "name": "Clear Cache",
        "item": [
          {
            "id": "bc6e72f9-1b30-4bf7-a233-b1feebb76c95",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "24602353-bbce-489f-8eae-046c2d7b1587",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f50293cc-3833-4ac0-9bd2-fb6148ed82c6"
                }
              }
            ]
          },
          {
            "id": "603056ac-9f37-437b-a1bb-72b72cac2cf9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fc087523-53bd-4733-918b-eb0696d7ad3a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5bb3cf9c-1c29-443c-a95b-94b05dc30b4b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a41475b1-b4da-4ccd-8a81-4a26d7654b92",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "599a0853-bf9d-4111-8de3-c4e20ea899f8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "73e9d56a-ccac-4645-aac4-d714ca3b8005",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9cd5a92-5189-41be-ad58-be5e9f428458",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "05964753-9854-403b-b6f9-e20159139986"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "64a410f9-db41-4ee9-b90f-91272a12c1e9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "477a2eff-b827-47ca-8fa1-ec83babf6416"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7e3d967e-852f-45ba-99a5-c8540904acf7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e73c4a99-950c-4d9a-a640-72bd8bc51b9f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7aeb611e-3c95-4f5a-b076-6fbe266ba97e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5617d26a-e73c-4a78-9444-8a5599029a4a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "173eeba6-4062-4af7-b44b-5f79fd9a3767",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "52b722f9-695e-4b2c-a2c3-88c990a76e69"
            }
          }
        ]
      },
      {
        "id": "84214c74-641e-4713-99e0-ad29321c43c8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "40e85ab5-2116-46fc-8823-62051d67ac5e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bcd8255d-4b58-473b-a85c-1ef28025530b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ab051492-48c9-4e49-87d4-86851a54d447",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2868c81d-390a-44d1-a160-24ed853a1a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0dfec28d-f829-4db6-be7f-5cb9e2c0feeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ad643c-a494-4bcb-b8a1-540a8df30f81",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f07aadc1-0d54-4850-85f4-60ad365c2214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97d25291-1e59-4199-8a9f-208dab3d004c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1d9634-4a57-4ea1-985e-c978fa9759d7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270a2724-6d94-4cac-8be8-65cc7c712b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf2c1536-f501-4f46-9fb3-27f9253ea532"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "44921bdd-4aa1-48c7-bbdb-ef4d39c96424",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2b75c1fd-f7b8-4771-b457-d145a44757bc",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "169cd20d-7afe-4f50-bbec-0745745834bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad5782b6-a159-4bea-9594-08f2a46b6ef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7864fee7-52b0-482b-971d-dabe29a8cd39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b59c6f6-88aa-40da-b681-37a0b10f6ea4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a2e65ea1-4bbc-4bea-86e9-196aa5536423",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6e0cde6a-48fc-4d17-bd70-0396f2813d00",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ea679bc-b491-4041-b962-7ff1ec0f3eaf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "23c58620-35b9-42c1-b35c-e53c87ddb278"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fb067ab4-32d8-4258-abd9-27ebbf84d312",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "1c0cba4c-ffcf-4c21-9423-e60ec2761ba8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa8d7c2c-3a57-4081-b78f-e25deff24636",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9f0b8bbe-2124-484b-b0b3-c1c9ad75804c"
            }
          }
        ]
      },
      {
        "id": "c2e0e41e-d6d0-44d3-bbd6-b0bd86a0e839",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "71c3e3c8-f627-437e-8dd9-7cfe902d164d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "be474d07-af3a-4f7a-a755-4f81c12fd1c4",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9e7e9e92-80ac-47e4-b03d-12802085bc4a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad40fb95-556f-4c40-a199-2c0f4c604902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "247f7093-7832-4c32-ac46-7162376fbd2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87f21cb-6278-44a3-ab31-73c09ed369e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a4808ee-295a-4923-b802-4f70798ae14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61bf942d-b32f-4edf-9d8f-83039ae4c7d7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f91293-3d40-470e-83e9-c5df1f3589a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa094e0-1f88-4a95-89e2-166502f9565f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0b0f71-c0df-46f0-bb7a-62f26918c53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be8f8b37-f954-4dd8-97f0-626d13c98400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b547eb-2e33-4490-ad8c-446454e20f6e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2865a4dd-1a4d-4f2e-9723-983f31e00a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "010f62a3-4c1f-48c4-a969-9bbde85ff3aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6eaaca-0ae8-46b2-b2bb-000e5e3b3a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d839b16e-4b51-41f4-88b8-7ae7e7cb8af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3fd6bb-9289-4e98-8ffa-f06ef4dceb63",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7df29aa-ec91-48aa-ae43-324da7ba715a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6df25452-aa8a-46cf-8b46-53d6947b1781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c80d3f9-eb5c-4ee5-a3f5-7257cbeee84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e0e45bb-06bf-4e84-bbe8-a9d6515b95a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24902f9-03d9-4d01-999a-b278e52f0ca5",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2aa403e-3a0a-4627-9c5e-7a8cd3dac424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a80b0d4-a2a1-4fa4-b371-0a4206093d81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5369127e-e779-4c58-9559-6ba2f1a9e201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ebca9fb-49ff-43b8-9db1-7be028213c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2a8e70-3f57-4234-9c4d-8e3291072799",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc15e4a-a140-4899-8cbb-ee86be608b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3afea094-86aa-4f6b-8698-3d19324ac19e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d589f08c-5d77-47e8-a93f-6cc01747c938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "139c6286-35b7-4a64-b35b-8d964558e893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c1a6f0-176e-426d-86ce-7ab2ead02abe",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8cce0d-8fa0-405e-a5bc-eba410dd2ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebaa77e9-17a9-401e-b4bd-ccc29687768e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f95609-73ba-40ef-84f1-dd8c874ecf42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e714493-6d50-4d5c-9fd0-a451a8ebc874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63aed6a6-1419-4790-9074-a2669bcb8cfd",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0942c8d-b001-45b8-8123-fd2fa123fb29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b598fa47-da2b-41b1-a830-e989cdce0d85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f8ae35-d2ba-4b4b-8880-0258dd69e5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "289fc2bc-b53c-4f1f-97fb-539f3c76eec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd8d351-94bc-4010-bbc9-fcef34c08209",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6addaae0-c479-47af-b6b8-45d3a8d901bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c595211-6cca-4a8b-aa44-045d5b29367e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c3a638-0d02-4c8f-ba83-c49e5751011b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88e32b49-213c-4995-9c08-27bd2c46a900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e47263-a0a0-443a-94a0-d9617ad74837",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "479816e3-8e1c-46ff-9256-67d594496ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8cc39ba-f3b0-4c0b-898e-28395e6548fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732656a5-e3ee-48ef-8aae-6dd8957d5601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46a17eda-b5a5-44db-b514-fbd76adab3e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc2a6ee-b7a1-46fd-917c-862a4a2afe36",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "205183bb-f6e6-481b-bd59-876f74134252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ffbbc5-d7e5-4cb0-9f1a-f07aef1e7695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d0db37-ab40-424f-aa9c-f419c01cb582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "848fe29e-45c6-4d0d-95bd-60f7d2c39115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "259f2cab-b471-4d6e-b15b-7941e9377c23",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45d2f91-8462-489c-a4e5-37046284465a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fa9bd5f-e844-4ff0-9f8a-0d74f572d84d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1beec8ef-4d01-47bb-8399-f64932ccb20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7c7e30a-b1e4-4a8e-8042-f80f12d087d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e0ae42-f5b7-41b3-97f4-ad5e560ea242",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "277dd2a3-d628-4a1c-aae9-ac77c44cc209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9024451a-9ec7-4f4a-9ca6-28ffd710cf30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad68ccc-6b91-43d3-a07a-273dd8c2a3b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45845440-5861-4c3c-976c-b40f649f8029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3931582-702c-4008-9d5f-aefa0dd3c15d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "461e0947-bf5d-40a8-9b1c-9cd6cc10453a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9773ada0-eb01-4511-b5b6-6c860a9204ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86abed55-0f35-44a3-9225-9fbd66e257e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67806a1c-9f9f-4d44-9336-67048b4e585e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54761e94-9883-40fe-a7f7-fd4150531cb0",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eef5b84-cb7f-4cad-a63e-35abae81cb42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d79cac07-b05a-4498-9c87-a3c02c10fac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855c5262-f23e-4a69-90c1-470c36f1643d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "489b9d59-654a-473a-b3f6-8da7d930f4ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880b3a6f-2f68-4f19-8ba6-7b9da2f55ae6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1fed32-a68f-4b9d-ab80-1fa5d3c9b9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1490db25-1f65-4914-b283-515582d7cdfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9b7174-1aa3-4e2a-afeb-d7e127c94607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24108d13-7c98-4c48-a144-b7f669ed2d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4330425c-6a84-406e-9080-ed64497aa37e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20fd0570-1935-486b-9ed2-af2e07f34a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b843c6-9ebf-41ed-a6d0-003174a47507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3cb5957-9afc-4dd2-a39c-e35d3c84f7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2e259b8-5e26-4ae4-8381-bf06f36f59ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c38914a6-d499-40dd-95b6-92bec5b07953",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab3d83a-9480-42e0-80fb-bcd7a787a05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "898853f4-d38a-4a71-ba31-374252fb9c0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa7f77b-227e-43bd-85b2-5c88dbe04924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "800a026d-67a7-4373-b410-b7410b10dcdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5161ad-63b1-4914-bc3c-bb588fb26dbf",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec009dc-b383-477e-896d-5f8364611c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a864cd7-b48a-4d13-8c53-7277ed82959f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4904b2-7d01-4f63-af2f-13d57aa3c63f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fdb48bb-b25d-4828-9759-dbcfcf839ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febe9445-bd76-452d-ae9f-bfe7f50f0a9c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49dc1cdf-2f7b-42cf-a66f-2626e801dd96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fef9dd40-a48a-4a88-b49e-a0ac8dc44280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "522b4b46-1658-42b8-8d65-db5881af99d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcbc496f-bcec-4a2c-8182-dc8fc9002c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2496c65a-ecae-4403-8420-0c05b791e94b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d77bcac-1f52-482c-a63a-763f109d6c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3bfdd32-f7b0-467c-a523-0d6c8a4d553a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e4d0e2-5ad7-4d21-96d0-9424ea789670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "36f5cbdd-3abb-4b4b-b1d2-a6c087c5ef8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de8e166-a816-44a6-931e-3c24f6244898",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b384686-b1df-403c-a1eb-76ca395cdbd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ce75c2-f9b3-4b0d-a3f3-f07a32b570f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82d5656-97e2-42a9-b425-31b9a37fa061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff62cb6a-fd60-4f32-a3bd-aad996b916e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca80c23e-2bc1-47e8-ac5b-faa0d971a2e4",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f882f5-9cab-4cfe-a0db-a24d39859078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acababbb-cc49-4bd3-912c-0fd4d9f409b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf4de33-2f96-4a63-9d9b-f0322d8872fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6cc01dbd-10b4-4277-8294-50891f3b192e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2efeb85-ad41-4ef7-ac87-d83fb253a829",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed211e5e-b511-4458-993f-82f19da44289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c294980d-1437-45a3-a3b3-77c8aa7eb2e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeac8352-be78-467f-8b7b-7b607618fb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a23d1c1-9c16-47a5-8af5-720e5ce13585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed90191d-660b-46a0-ac82-0e35e6acc4ff",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81034325-3291-4e32-8f42-703b012f1d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fe4f315-6537-4002-8b96-951890478b8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9762bc-22bb-40ef-96c7-655bc23ddf5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "83d1c0de-cbf4-48d1-8735-7dd9e1375874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db373d59-9960-4f17-a063-2692702d2f77",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "644495a5-d156-40bb-abd6-c1b6a3768023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d81f705f-3b6c-4ee9-b22a-4e5c3da3ee19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7eaddf-f083-4a09-87f5-eed4aec8407b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b648ecbe-3867-4526-b539-ad9b3e5fef42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9d79c9-3f24-4a27-9a71-0a46926fd7b5",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88d8e55-9d92-41c4-b105-d7480ee36fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7965f479-5a3a-4c82-af01-3d8e2b2ea335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ae5aea-8f46-4541-a4c4-ee7e36d6ac3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "18826e23-0ea5-4deb-92c9-c46b2fe4d4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8414f2ad-136f-4ec3-aab7-9232c569d789",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5706504e-dadf-49ec-bc6a-be45a7aac1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa82ca11-34e9-41a4-9ca8-6ccffa5bba84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b60e21-4961-4a66-beb9-4c51d6da6361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7400bfc-e487-4463-a9c1-27d787bfa3f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f0f3ef-5c15-40b3-a3c8-db3409da03dc",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f59f97-2923-440e-82d9-a06ca3fc93b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c1ebf15-c897-40e9-80ae-574975881ecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42102e6-2640-492a-99b6-560018739cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f0f2f62-5902-4b1d-be23-647aed9e8780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7febea42-0d36-4cc7-80a5-b8fb53b35ba2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2767c32-a1e4-44ef-91d4-2190b26a150a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24c9ea41-536f-4b5e-bd41-2f8a0082267f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a655d5a4-14b1-4124-afee-c7c91f26fae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3df4430f-3ca0-4228-b7bb-dd2535672ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e5b3e5-3abf-470e-bc41-260df2230463",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75993edd-7e54-4eff-b944-2213e5a876a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77535146-2a23-459f-becb-9938db0463a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae663a08-3ef2-4fcc-a494-09e805b175d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "31194178-5097-4999-ba9c-f408d4aa2688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0252d7-3048-46cb-a071-2e382465c425",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61027224-6f48-4e49-827e-2fedd1d1c179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94e6a12f-3223-41f2-a485-ecad45f263b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f98825-a031-4752-83a4-e213d1899853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "722952d3-f9ec-4928-afd9-4ec8ad91f936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32f0dad-725d-432c-bc04-8b9098ff6e33",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86c5592-12d4-4904-a2da-c404f15dc328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b4bcf56-8caa-4984-8943-e89f923aa447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f92e5d-00c7-499f-ae03-74ab9121e898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6316444f-688b-432d-a46a-c3b7d5c3f123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a0e52e-f595-46d9-bb10-f1959746a553",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3e2295-963b-4e7e-8465-4941b12299dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07fc6a05-3a58-480c-904c-2cb168b213d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd49619-2e98-4715-b3ec-7fa66e5968ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "886fe2b7-2c9b-48f3-9817-fff68e5ac292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "548ae3f7-83ce-4f57-bb68-ea03654189a9",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa053a83-aa04-4f0f-9f9a-1e6a6f391241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5fd5a45-2151-44b0-992b-839f3bb9cd51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e541ac-5bca-4743-ac51-f9d0f943c068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "51b467b9-9443-4769-b7c8-f5a992de8a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56d05e9-72bf-4f4c-8366-5b6db930d6d6",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf5a53c-68f9-453c-a4be-53a339603e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "85755c6d-90ad-4dee-bf31-65d825a0d33c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49641415-9cc4-4ac1-b036-cc41d6912e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3b6ba430-d1f5-4bf6-9466-17b5a7d87cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b2af98-ef4e-4b8a-be10-ecd2d3eb8e81",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbdda4aa-584a-4abb-88db-7e973509080c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c97c72a-baff-4551-97cd-b3c23cdb4c72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b8b1c2-b51f-462d-8d41-3c640bd285bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "37335621-ffdd-4425-889e-d257ab0f7d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ea308b-d0a9-4dfc-a4f8-9133bc3a0812",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba53e83-8f49-425c-a46d-aad407fdccd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d12be6e7-46e7-4df2-944a-0daa2aa95638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52878862-8600-43c4-b83b-1175840899cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "67656067-2850-468f-8b73-5e825e903ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c413e83-c142-4e2a-a083-8defea634e1c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44cdaf07-dd54-4bc5-ae3b-b713c03d39c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96c14548-dab6-434b-9f8c-74a1ccf10b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41173109-1efb-4ac8-a39b-d46c790ebc58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c043817-8e66-4d2f-bd15-3da787e0ca9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6bc58d2-4403-46b5-9167-eda3aa171e1e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed19d8f-9e47-45d0-b32e-d21bc75749db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7207689c-5ad0-47aa-b73c-040c4880ffa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede7f52e-3a8d-4391-a965-1294620ede6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f508cf51-0fd5-437f-a7de-c60fc931dbd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ab1d35-e69f-4dbf-924c-f6608e9e4480",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d1d039-1378-415f-b25e-c5676c2b3dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6c30339-593c-4b26-8dda-28908e47f750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d330a05-fb41-4d66-a1b7-06ad75ffa5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f11cf29b-44c7-4393-9bc3-c71814cf31d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3d16f6-92ab-47e9-8cdd-39ef03e1d9e3",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c72d790-0585-4164-87e1-dbb7e1a64a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62157cb1-3537-4a9f-b164-55122e156d7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b3dd8d-d016-4913-9f88-67b624e91af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7bc3a6c9-7813-4ca2-9001-31efb52909c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4164f1ea-a15a-4346-8280-41f3d2bcf504",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ec77f2-217d-46d6-a6d6-26d08b42b01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a934a513-e67d-45f8-b427-e859582174d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f743284e-2301-4474-80e9-03beb3e62f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "49fbe1bd-5541-4d5d-a45f-4a0e28b5ddfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "345e5b4e-29c7-40cc-aab1-cbcc05b5bd0c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7b0174-7d56-4bb8-b744-4a03d7070192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fe2adb2-cd46-4ef7-a666-a54a36db9810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b577ed-f508-4fa2-b14c-d4f0d6bd88d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f19fdf6-370f-4ec2-8960-13e50b209fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24102b7-364d-499f-893a-3c30c86554cd",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68172eb-b592-45d8-824b-633d7a35f9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77275550-679d-47a1-97f7-1118b5e4e861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb6f8c5-824a-4486-b233-7ee166fd9796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fd12ccb-3d55-4cbb-864c-3cbf3be01606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b34430f-bbb5-4b85-9156-f3e56153f894",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b00df31-bdfb-41fa-af10-61d78e8aac89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "558a8310-741f-46b5-8284-58e678d8eb05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9638e2d-8366-47d5-a356-cec1a8fd7e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "45efc5c7-eb4e-451f-a7a5-e463afb45553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2528c2-1419-4ab6-9a27-47f80c856547",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf70475-afc3-45f1-80e5-5ced7487a000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ec412c6-f017-415d-b6db-8dd8d5bf2141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c8a5d8-8f93-4d64-a30e-7e6aa73c4bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c6453a7-f531-403e-98aa-2a37eab5bed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077eeace-6fb6-42e0-93f3-2bbd22a114dd",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "745996e0-ddce-414e-91c0-c5f36fe36768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fcbfb22-c015-4094-9feb-72265fa44292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c486c7b4-f376-4177-87d2-f90378840902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96b032ad-cda1-40a0-b882-1f24d84bb08c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab81d3a-eb51-4440-a66d-8b9bcde23b21",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d8a969-0f83-49ba-9e15-db0dd79bddf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0d44867-bd1b-41bd-b79c-ebf3f26c253e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8fa9ec-46cf-482f-bdbe-9d5bbbfb7858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4f848d4-ddfb-496d-bbfc-95fe959733ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b810f8f-fe72-40bf-8a48-916139a657a5",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f661531-c6eb-489e-9493-79907d63f2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "781cfd6c-db5d-4562-a0e6-25ba081f8502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37714a0-2693-451a-aff6-33b73ab76afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4a91288b-2797-417c-8557-6d5e3779743d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba60b9f-8e47-443e-95fc-01902b229ee3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a041e634-5d37-471a-9eed-99efed99c5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73422f73-e4bf-4d41-80aa-044465867b4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e458d5-b2e9-43b5-b2ee-904e0db99624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ad95328-a0d0-403b-ab4b-ca8be42930bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273802b4-763a-4584-8edd-2260bfa37d92",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5160ee79-133d-46f8-b519-2d8371847434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00019b3f-fffe-45be-94fb-c940a4a03209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3aee537-e026-4a3d-bd61-f70aaa64cac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4164931a-6623-44a2-a2ec-6ceaa4e0a02b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2746c6-20fb-4924-a58d-8f3e5d5ad25c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd84ea1-0c93-40ca-97c2-ccbad34c4745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e8dbbd7-fa07-4d9c-85ee-9aa2e497065d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52e2f60-e7cd-403f-bd27-beb98797398a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb7d6516-ee60-4107-bd0f-02462b032f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb8a1bb-2f5c-4bc5-a9bd-640578e6fff6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea79fce6-e068-409a-9f49-395c35eddf3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9588368a-2e19-4f5b-a765-cf1277bd928e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4fc216-3d72-4a7b-a6b4-7093181adff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "99e748f9-1414-458e-a409-fe3fff5195be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e04147-f7f5-4022-947a-e8c292364e71",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba3b099-6e9b-4837-803d-4283de42edb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e9295f2-c782-4fb5-8fdf-01c1d3626b62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb901c6b-ebb7-415c-a8b6-330084d39651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bcadc85-68dc-4fd6-8275-149a7e5560ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9851c68-d04d-46f8-b3ec-91bb39f00831",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57150202-38fe-4df4-a0ae-aaa3154a3c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50a34c01-5572-4087-b492-16ba7d9dfa7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57a3cef-f02e-47c7-bdeb-7c4e3d8aa98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f7582c0d-924d-426f-887c-b0fc9e8e1653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879b5c3f-7f8e-444c-9b65-b38a94a48382",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a339ee8-3253-47e0-a4f0-1bc68273e9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58ca9b53-a4e3-4699-90aa-f1f3d43a2103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a3c92e-7f86-4e91-a4f5-c498dc1d66ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "53ec7149-0bba-4f37-ade5-abe2a9f1fd83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505fb816-96de-411d-a906-3d66c3a4d166",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf2ab7b-69a9-48ba-81f1-43c35f423c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "560aa90f-c485-4827-b449-d61951ec319a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97288dfb-b806-4c47-9801-05044fd484dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed8f7370-10cc-4088-bb21-072bad226d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c22fbb-4f6d-4bdb-b0fe-dcb0d0aa10f9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b19aa3-f09b-42b8-abb0-a57e1146e189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2940fb-8b79-4990-8b85-fb90a95f9ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb0b576-bbcc-4472-8b01-f3593ac85904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "929a595f-d7de-4d1e-a5d2-d34931a8da7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8648b2e-966b-4268-b53d-71c03cc42a98",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fabe6a81-123f-4d12-8d87-c1263aec783c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49af2710-bad8-4687-9b23-3e901a65e254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9f353f-1184-460d-b4e8-63706b9157a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "96d60b0a-ee25-44ef-9135-ccc0faa73519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c168a2e-58d0-463d-87a9-3e77ea87b60c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "074594a3-5a44-4b54-ab60-3bcdec9282ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8e99ef7-7541-4536-baf2-0254a719047d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e893708-091f-4586-8524-df8e177785af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "12635406-5ada-47b9-8ec3-2f3ae000bb66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69203484-c568-4cc1-a3db-b7d57616c8ee",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebb71e9-370a-4383-a1dc-efdba329a3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ce46a2e-bd17-4366-a679-ebd704c088ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e6c539-c952-4bb4-bb88-32bd21aab42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8b69c72-9bfb-4733-986f-279197b14ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554b07b3-815c-4cef-9561-01afadcc19e2",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "063c7fcc-41ac-4c41-b54d-bff50c42be5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17194d82-bc49-471b-a441-04dc5ca1cd74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4359721b-7d67-4237-962f-cb2693f671b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bcb5a15-32d2-4e5f-abd7-b6509116838c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ef09f0-729f-4c85-82ba-fbf15b2c6355",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "405ff38c-224a-45e6-8f7a-dfe7ea70e31c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "243a681a-d9a9-49a0-8aaa-cf3f8cb834c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa30bcb-0c18-4c8f-934c-4936b312e239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4db5f75e-e3ad-43b2-9aee-6a62d35f6396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac598d3a-f255-4094-b9f8-4abaf4f82c69",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a014ba-36e3-4a0a-87d9-9734cfd012bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e4ec7d4-53ec-4edb-b76a-4f08bf535f2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac38483e-d9bf-4d9e-9dae-7fd78bb312fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "717f9ef6-4ca0-40c5-8ecb-0f0699e7581d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec255ae6-f293-4dc7-9f09-4aa44aaa6136",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1255c9-969b-4da6-b3eb-f72e10ff2c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56512caf-3a62-4c66-8c22-f671b3d41915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c077fad-3b72-499f-8af9-ad28da479701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb13c76c-7b97-41e5-90f1-d20da0b1ba9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad77dd29-3a1c-4cf2-a06c-d446c6fbbe24",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a5acbe-3d16-4aec-be26-3c6a863161f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1179eaaf-c2fd-469d-a23b-87504e87ff3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68a40be-0756-4b5e-a258-ec8f80374e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1685aed9-394c-456b-bebb-304bfa89f2ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0213296-585d-4e65-987a-a23dca535e24",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aecf257-3484-49f7-ab07-f011ed7cb7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64b7ebf6-31cd-4531-a4c7-e46b931f94c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3be703-264b-4a71-b009-d66132288af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "61cf8290-5975-474b-a909-34511e7517ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb394a1-b1a0-47b4-99f1-de7ceb66e0ab",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc455fa-aaa6-4a34-adfe-e8701be9529c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7aaa095-6179-4804-b52f-97d224140c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6dacd2-148a-4e24-a24b-c64f351496d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e5da5f9-4a64-40e7-aa6b-2402cf0d60e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2cd64f-b08f-4ce3-b5a6-14e7237c0682",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab3174c-f8f9-4aea-a7b7-e5cc6edc75af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae786ec8-363b-4680-9df7-c39f076b5b30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3a3f18-855f-4699-bbfc-f84ae0d4e9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd9d49bc-88d1-4bff-884f-efc507c0cf4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa64cb9-ba7a-4d48-852f-5f941e7cac79",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be38454-58ac-4010-93ed-ab90262c4c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b43e5ba-69a4-4fc9-8cd9-c50e7e042989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878702ee-9cf2-4252-ba9b-28ee7ed186fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebd141b4-ed12-486b-8a37-031f028cd6c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b77622-9b37-4f24-bbe1-32eb5d006224",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d678504-6d04-4772-a32f-62e207629023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd6df89-ee23-4634-8f34-238c4f2b6813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2272938-ea8c-4338-b7c0-60a4c7552c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91d3881b-0263-421c-8583-415c07e90893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d1cee7-5b84-406c-838f-f5940e10fef7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc43b76-5c55-4fb3-971b-0cb615bc5e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd6a804d-6246-45e6-8106-47ab025adc3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f2dba1-f5b5-4fb1-b0c2-ad7874290407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f186161-1015-4ff1-b068-f0e06bd78a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de1d905-a876-4484-88c2-8dfb0c8bc4af",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c86eac-a138-4cb5-adef-93efbe2c25d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b11a3720-b548-483d-bfe5-a39b4b197606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8e1df2-e8e7-44d3-818e-9a28a9162b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "69a95657-43b0-4f6d-8891-ebec1947df58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda8789e-23d3-4aaa-9c5a-29232ebb89a6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db97d31-3bbe-4c10-85d1-db4a8f5939d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9ba0e08-4b0a-43db-936e-cb7595c3c344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7743fc-b755-4876-9581-01c83cdb9224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "176ac210-8a4b-46a8-bd58-1ee99229798a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038afc86-f216-4e56-af1a-bffb94a102c1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4cb801-339f-45c2-a65e-78b51bbd8773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd57b78b-45a5-4ef7-9d07-9e9c9f90752a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b767cd-a8b2-42b1-a4c5-adf0c5dfaf15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eac42a0f-6e9b-4b43-9f08-a91f6a06be79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301cd353-af03-4b8e-9853-5c72253ff6ea",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a7dcd7e-65f7-4d07-87d4-3ec22f3e74c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b6e7299-0014-414b-bbab-2fe7fbd9a1c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9bb9ec-9198-4d24-9e00-83ef41853deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "350c36fa-ad8d-4e4e-ad81-a360f0fde19c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2352e2-b5a5-4367-8c1f-2f7e42ae06af",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8537c21-eece-4995-a178-f51b365dd772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b954de48-1075-4571-9172-0c8faad33303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f21c5f2d-1b40-4a5d-a828-a197b639cbb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "661c9e89-3c32-4c0e-be53-793137a62c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6054f5-a3d3-4330-9538-9ffb00db744c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70cdabe8-81d4-4e6a-92c9-1140f074a944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24a75b77-a50e-4490-befe-1989b20d9b15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead6836f-543d-444a-ba08-0ece6d5ff394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc548c8b-ce3e-4535-9ad9-8d7d6d353d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92320e9-b938-41fe-939c-d487af0ac967",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21327966-5bf4-421b-9824-7411c9c48aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d193f26-7814-4515-8915-aac722870800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85da2a68-c988-4bb3-a688-03842f04cbaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "31459c1c-83a2-4803-a44c-603b043c9491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d6f59e-236c-4578-a257-2515d36c1f4c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d18ad36-70ba-4ca2-8f53-68f9d2836e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71842cd8-1a41-4982-9320-c072dc3b084b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d2d80b9-f9eb-465e-a259-22c41654eb71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f415e0b5-180d-4815-86f8-c206998b1c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84219d8c-12c5-49f9-875e-dba2deb693e6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f01249d-bb03-4562-9e0a-7c958639c89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5bab6c6-a61b-46f4-977d-b2d1e3bae5e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1b9feb-cd44-4e2a-b434-b1924b3091ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "73ee43d7-062f-42b8-90bc-b65d9570e5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49488079-5fba-4098-893b-193e91565731",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd71f72-bef3-4678-ba06-d6c71d356fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c415662-9844-48fc-b667-57395c0e689a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abcce752-de80-4290-98c6-85a20c5f9f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26d8a735-7128-4301-99e2-5d48c36b979d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f224c4-9c06-4fa9-abd0-54e735937c2d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76fc246-756b-4c50-8295-a4e96761e88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06f9270b-330a-4b1a-86d8-52079e300e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9bb80e1-f885-4484-8d1c-8958c829da2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b0c9ffc-4c0b-4a77-ad20-789636353660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3410c27f-9a1f-46ba-96f0-bb5954f402bf",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5cd7bae-ba3c-480b-b0ba-3c162776ba61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9783a9dd-86f4-48e3-871a-e882198bfd87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfad2982-abe7-40a7-be19-59f79f91545b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "871e8cc9-ce93-4ddb-ab9c-e5bf93dea08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f20e1e-63eb-46ef-938d-fa1508aee457",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46010a44-b3d9-498e-9ba8-7c2b392cded3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec0f5b0e-4b20-4a1a-9fa9-85247fec6657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909aac86-a114-4fa3-bdf4-c2a50008aa90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "88c65ceb-e057-4515-bc2a-6948e9a5e471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d354288-7afd-4194-8d38-740d21e0120d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "136f1051-b52a-4ed6-8151-d4043a2df5db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee3569e-eb25-4df4-9c6f-cd4f1c33e507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6dd4b3-bcd7-4081-827e-f867b0e35f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc9b7e73-7167-4b6d-ac03-e26ccc39e2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa925870-5f6b-4cb2-a0cd-70784e9b736a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da785da-597f-43b2-a179-026497246626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f830c109-6a2b-4cfa-a184-f1b3c37bc4fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbad006-ce12-4ff1-97c7-fda8a410fee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2d2baa5-c46c-48fd-a18c-78e7ba025cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd0d734-8568-4576-9656-96202b3425b0",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed84e88d-fb50-44cb-bc09-87f756f2b598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd72805-c378-48fa-8b4a-c6189cf3d6f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8bfae5-bfd4-4b8c-b52a-318608a14fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "456f1c64-9603-4cd9-8647-d0def3070ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d220501-306e-4756-93bc-11871f28df52",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc08aa22-8dff-40ee-9178-62e197b4f1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64b0b199-b158-45fb-a67b-04971182106e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24883490-78cb-4f0a-a92f-91688905c284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f15d5ab5-169d-4eee-8cd9-8da3771b4b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b961ca-986e-4a46-b44b-3f7f300fc05b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f55025d-3e7f-48fd-8c27-e0ec9924a0bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c99ddd47-abcb-4ac3-89f2-cc62fef151eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eac61da-8286-4bf0-84b2-30e077fa1529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "698b8325-ef2e-42f8-b093-96e203e3569c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17a8bc4-084f-47aa-aff1-b32ef41c1754",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbf5b5d-80a8-41f8-827c-a3c4f5c92902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d8ee8d9a-afab-45ff-bea4-f58b383f0cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dea6a1b-0c87-4b40-a3ee-a9477efe2ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "91f35441-f2eb-4415-80cf-11c3e89589cc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9f309573-493b-4292-ab3f-2cdac8e28853",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f1716b2e-65b5-43b8-9da2-318d50c3ae08",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c16009-2a9a-47a6-9504-f1958213a28d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2ab71bd-cd7b-4b75-a9a9-e1bf2d8620be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda8388d-3b12-40e1-afb4-76423d563310",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e28a99f6-6a8a-4c21-82db-f83f3bac2006"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7fb73053-1316-4a1b-b956-afde6849b45b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7806d4a-5e1e-40dd-baa7-28d821e9ed05"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a50b6e72-e86b-4a24-a123-a72e9d250633",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9bca791b-f36b-4566-aae9-4f4c357d3d03"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e7a1abee-fc84-45a2-9f24-4a4bf7fcd90c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5b61a43f-0d2e-4c9b-a59c-a0fe0da3edde"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5fdbba10-9223-49fd-835f-d0ccf73de8ac",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2b61ce81-4ca7-4536-8e4e-ce89cc2d58e6"
                }
              }
            ]
          },
          {
            "id": "c9a65eda-4682-4154-8bba-34aad2498b60",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c29ddbf0-cf7b-4bc5-8ea1-e323170ef7ad",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "2fb9d515-5857-492e-9947-b801c11114b9",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d47f802-cc83-40a4-b765-1dfe634de557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "18ba1035-920a-476a-be3c-3e9db9aa4dc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c051c5-a505-4a85-bbf9-4288a7218512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "840b19a8-883f-48bc-861b-42d9ed5469da"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ec460f69-3d00-4b9d-82b6-9c1e9ca5d757",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "456c69eb-7642-4e23-a207-a950bd216968",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9fa4b2b3-de4c-4caf-84f8-841db66c8e3b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f02e6acc-f618-40b9-b33b-f2667e21a192",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f9197ef0-d6be-4a54-bded-2145d9984d46"
                    }
                  }
                ]
              },
              {
                "id": "65e981b9-2af7-421d-8a91-83783f24e7f0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9842eff6-ec90-4af7-b64f-683ac0febc40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b50f2b0e-25d2-411e-b7a2-28bff508fccc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f70669f3-9d10-4dac-8aa1-cf5d84ac9d63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a6f346a9-2897-41d8-8ede-5211921165f3"
                    }
                  }
                ]
              },
              {
                "id": "c7fb9709-8e21-44dc-b112-6f3029dd95c1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f6fad20-dee2-4fc0-81ea-5edaea3e25de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f14c83a-f9a5-4f4d-92b0-edd376e35fe8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b2287e4-653d-4e14-b484-becd12238672",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a83e1524-a55b-4a1f-b989-b40617c184b5"
                    }
                  }
                ]
              },
              {
                "id": "5f1188a3-1c5c-42fd-9426-360eddd9ed5e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2ef4f26-0566-43c9-909b-d287966ee4af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bb1c7e0e-8e99-41a9-a1bd-a44c56be649c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6f4c727-6479-4847-83ce-47a3a4780e8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "28845c62-1049-4b14-97ea-5ff43f859052"
                    }
                  }
                ]
              },
              {
                "id": "a8a53210-8b1e-4e76-b0d9-5714eefee65b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b0b208c-1aa5-49f8-a63d-8a858443ba76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ef5485fb-459b-42d6-8f2d-f71bf4cf563c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae4e947f-415e-4570-80a2-b06e390e18ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c5d6f826-9b73-41b9-a838-1c8c091061c1"
                    }
                  }
                ]
              },
              {
                "id": "2f7f509d-e2ea-4499-8519-1de80808d902",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e67ab14e-f67c-489b-9f5a-1b70e1d3ae88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "161f6361-d056-426a-b0ca-d48fdb847d78"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0438ce2-61d8-4c24-b25f-af80581b5a7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4dd01289-c700-4594-8aa3-ad7812b40228"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "626a7975-b8e7-42bf-9f8f-227a3fdee6e4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "81d5e5e5-8254-4623-8aba-ec8ec3ee08d6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e556bd62-18a3-43ce-9db1-687836f90efd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "89fddcb6-b22d-47ac-9ace-ff24e2f3046b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd8e0acb-9e81-4fa4-bce3-5b4a281b0d5a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a521a5d6-f489-48de-afe4-84d4433fa67f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b0d8a462-dd0b-463d-8a87-c5fd4921e358",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ed0ee54-9e40-4c95-821c-d949b11e6f56"
            }
          }
        ]
      },
      {
        "id": "4362c056-0dcd-45fb-b8c7-89b5bae97928",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "326b0ad2-77ed-4ddd-806c-38f525a93a2e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a5e9b27a-08bf-4864-8490-b59e7f25ca15",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8d2b46fa-d68f-418a-8fc2-60faa34d3210",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11c491a-4cfb-43f9-b84f-b7a6e2e56561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c816fa40-83c3-4344-b008-54214ec2467b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47f6364-0d4f-4d10-bcfc-61ebee2876c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "18ea54f9-aae6-4219-9e36-14a3e5d5d653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7349d87-4a4b-4283-af7b-92ef494884f2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba1dd6e-fe46-4b13-939d-a4767e6feb87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4455675-2a9c-4cae-849a-e4e78b29807a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc24fcff-4ae0-47a0-bd2d-4fee313ce265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2e8b4a0-1ce8-4fe7-9b39-b12ced7fe60c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45378c99-d024-46fd-8cb3-b83e14004d3f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd0d458-5eb5-40e3-8134-340c8f7a0308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83d5f272-bee0-4132-86c1-07f66ed71a23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9edb993a-42c6-4ccc-afff-234895757954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d50c24d-6b4b-4d7f-86a6-d40147a49099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e51e47-06f3-4a16-9c9e-7ed2ec4636ce",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b9745f-900c-437f-83f0-8b2aa8bd917f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c55670-bf24-4b6f-8d8e-09ba21ef9527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "706cde8d-9836-4c7c-ab5e-27e47f90f3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b256958-d688-4ad9-99b2-868f9f02ab13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba81fc98-469b-4316-b34c-9a949d945c1f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4cca94a-69a5-4d40-866a-16552dc346c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4c5fdb7-fd18-4fe6-8b9a-2c253ab7eeac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302a4f34-2021-46b9-8665-471f0467a108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e867b8a-03c4-4600-a4db-e0b3e041d79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1229662b-c73d-4d1a-9260-18d12c7681a8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d298b695-41c3-42eb-9d35-53fa28d124ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef25a2d8-8185-4990-b690-854f29c486c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57479ab8-ae01-43f6-95a2-483f3870b04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "40c2fb38-7516-477c-b8d9-cc4a9c25e349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d40bcc1-b008-4d21-b008-f95ae0a7f1c8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7197fe-390d-4121-b71e-475bcf6f4fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a469cda9-1135-4914-aa44-e4bc8eac1be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9045ef61-e4c7-41f2-b388-c214cec30b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "16510e76-9df8-48a9-aca2-e9382c19aaee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273a01a7-0698-43e4-adea-537cecf65181",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c982d6d0-c0a5-4712-88fd-8605931c4e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ba7a1bb-bbb8-47b0-b0b0-f46cc361bcbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e7a81f-5cb2-48fa-805a-1deb977472ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e995624-d7f3-4f32-bad0-c5d9350ed298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac0b551-86d9-43ea-bbc3-14443a73f61d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb038df5-fe01-4635-a563-01292d96edaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f99e45a-517d-4137-84fa-874444c3e364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1af61fe-b78b-401a-bfe5-b6cd74bd4b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e75310e-5f63-40ca-be2a-e59599d27166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4512739-221c-4467-9292-fe0d627ad222",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21bcde9c-f187-494a-aa36-6cf3d33660c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cb8c915-9be1-4287-bb7c-29f7d287d9d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a59737-50f1-42a0-a716-551f1e13b880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a73f259f-05ac-4c89-b08f-d37fb5019c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2902b6f1-6416-47e3-b51c-6d5366c72cca",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1075676e-5a71-4626-85de-630174d53a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd46be09-768f-43a1-bb6a-8f6bb36a3504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e85c429-7d47-4a6c-83e8-f26dc877ccd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1fa382ea-6ed5-49c1-a391-2d15e54ee5e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0859c9b5-2a69-42cc-a795-941f79ba4375",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a547b6-abd0-41c7-9651-fed7dd0706ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09789947-14b3-4c50-9811-b035436c41d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e832c01-e623-4eb3-8c69-a56557ef99ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d31c5843-1598-4b14-a1a6-000e4ae23833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39484069-9710-4e69-8690-a0e207275802",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "826e94bb-795e-4f97-aeb2-ccb45a53c3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1cf3c60-5569-42e0-9ddd-7b07dace3d87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a57e70b-d3e1-46f7-b416-08c3890ab02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b25f99c-9258-46e2-aa46-27f16ed572cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f0943a-e7a4-4db8-9eec-93f50f282969",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b760c2-ac21-4ac5-bade-4adff6a4eb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19b5242-4b56-4219-be6d-2ebd53ea71dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0160aac7-1ef7-410d-bb5d-570b78bf5c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "174ee29a-afe2-44fd-b51b-be2b12e5aed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91e9a52-dcfc-4e41-82c3-16936bd4cb42",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "213d7179-7699-4abf-bcc3-554f7d7fe64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad5f4427-e242-4256-a9cd-4d7e415da8d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304f2e9f-1562-4806-b11d-f57d5e753089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2136e387-b4db-467e-aed1-58317eb39212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23bf903f-8360-4aa0-8dd6-056d13408a54",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b51c142-8ab4-435a-9992-2c64a36bca45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fce911c8-4c22-44d4-9841-5359447fc717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aecccf27-ed3c-4586-b387-617831a15811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "803e6cf0-2106-4510-a85a-b57111e9f30c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "987c372d-bb27-4130-b9be-879b660aeab0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e652c91-9b13-476f-b79c-ed737dcbd2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2bef557-5c1c-4116-beed-b18220c1c63e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cfe600a-85ae-4e04-b3d9-157dbf52fc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d0ded2c-beb3-41a1-b4ba-b95367a8b27a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f80528-e62d-4af6-81f5-7da684fcd822",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d199b45-10e6-4a85-b2ff-6e770b53d651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8893458f-e746-4a1e-a474-64d9ecac7f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e839bcaf-d214-45cc-959d-a3325eb0e498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ced7f605-e525-4bbe-bbea-258ddbd5913c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89dbbf28-5192-4625-a8b2-2e945f51c69b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a435e57a-174e-4b29-ba65-e4bd3bd55167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6020d359-6544-457a-b2d1-b89104978671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233d13dd-3436-4b78-8968-a769b8cd1238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b46d44dc-d413-4659-932c-a22f186969eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca95260-4dd7-4d56-a7af-9f6f45895098",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc6207f-d4dc-4de0-ae81-82e1a60d37f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abd0dd7a-07e2-4b20-83e9-4b070a793431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99bc483e-ed04-46d7-92eb-39a9cb040237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc4faf87-7897-4c7f-befa-6c52862c7e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97285fb3-f5ac-456a-8f6f-986f0d903b18",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "751883e0-f9c5-4a4a-afc6-7bc0b8c32ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d94f8914-b8c9-4c85-8b0b-ccc12db2511d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a5645c-510f-4358-8bc4-a38ddea33b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f268b1d-ddbf-4e72-b585-ba848e158576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76801246-d52f-48da-81f8-1b6295c62f3f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6543ebdc-477b-46e9-957e-22881c779429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeffffad-15fe-4c4a-a91d-d173fd72b7e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8602b5b9-3db6-45d4-adf3-7bfc6975e839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "148df3eb-d136-47d7-959a-b5935a2fea46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43925095-5739-4029-a50d-95eca710eff7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b0ee6c-5a31-4743-8c6c-a92b568e3b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4cf8c14-7a2e-4e26-b991-6f6fb31559b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa18516e-5d3d-471d-ad04-a2d9035f63e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "467534e9-896f-4875-ae4f-f56b84d3413b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee16c3a8-231e-4205-ade2-2ce58efaaaf4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77a85ef-8026-4e7e-9425-b29cf838900f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1285d3b0-f905-472c-93da-2f4d21f58080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87146727-89d6-4655-b526-258421e67a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ab16ca1-b96b-4e45-bb12-2c87244faf6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece65844-ea0c-449b-8158-7aaba8bef32e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9a9bf7-8297-45d1-b4ca-d09c7de6544a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d5acb56-a032-40f9-a826-edb3973349a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b5eac7-1676-49e9-98ea-be2f7f371195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe3c0977-4be9-42c5-8663-f1f1c8a1b169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b8f2fd-d228-4e87-a7e9-ec88eb644aae",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecfd1b40-604f-446b-9a1b-c7bf4c3b2f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59062c29-be1f-480a-b2ce-8306bc0d39da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8de33d-c520-4b71-9cfd-a52222a24772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57242743-40a8-4227-a55b-0615544c4ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9340e38-83c2-4331-95fc-9619b9110ef3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5af0a41-9aaf-425d-a142-50ce6bb20126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b071f73-5447-4eda-8575-84a7439cfc2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20603ded-42cc-44cc-87be-1acf46201e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98477ee4-9068-41dd-810b-a7ffbedef8ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00973a37-53f0-48cb-801d-0d8e295f77ae",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86d4b93-f834-4e87-be8b-e9f3d09f8583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92e00263-5da6-4dba-b523-e70f8903b52c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd82b93-13a8-4e41-af1e-49d7b3804828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e07509cc-efed-4a0e-8e0f-4469ad7cf4d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a45f244-2b7f-4582-a6eb-7f93f579c2d0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d487be17-4fbe-406f-b73a-335a74e0937d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f585775b-357f-4004-90c3-9d1c2c56c527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b6a89b-c215-4016-a82e-9db4994d16a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "939e6fda-4b8c-4575-ae3c-c9abae16ff4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5176627-26f0-4fcf-b5cd-0c75bc347a1d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0560180-e217-4d0e-a93a-2c32ae500256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "718fa1b0-257c-41ad-9102-83a5ac0fcf98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be8d5ab-a6ea-4258-ac25-bf6f115c8958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3916dfd-7320-491f-9cff-eb939c169635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d19fb93-ae95-449a-a2c0-c40d6a4ddc76",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b9e3b5-3bdf-403d-a6ac-d17876921745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c38ef2b8-ab71-4ab1-b362-e7235eec1e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d4748b-50cd-4912-a659-9a0bc1ebe379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d56bcff7-2a58-479e-a963-05b2b038eb60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8353f6d0-8395-4e7b-b1fe-21c46b4cd6bd",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2095958-012e-463b-b082-994b83ee30c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81751ede-76d2-4e3e-b04d-fc1334b7413a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180aca29-31b9-4c99-92bd-f755f0c1918e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "add67c08-63a6-49d1-9f1c-6ce9f77316a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8edd5cc-fac0-4950-86c4-71e9c9c97759",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21497b95-a844-45c7-9022-59bc56ef9532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4925ee73-8e0b-41b9-a2c6-a3fbc61fb4c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3320a4-d2b7-4665-a671-1227429c76c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fce448cf-7910-4d10-8f94-6a6deec2ba12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95456169-97c6-41ce-8a1b-32f3a5f2d759",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da67294-7bfd-40bd-8866-8d8516bee9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cdd4189-d7cd-42c0-adef-6b0c7172b53d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41959798-777a-46fa-8592-0e6a0c52f06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e716e83-330d-4ed9-8c93-65018616a7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6d306e-451f-4c6a-9cf2-4b20b8741abf",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3f312d-67e7-4ab1-8ab7-da3fa78a1e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a0c13a5-3e81-48ff-97a4-cb8866609121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfc8c01-1842-4f54-8dde-b507fd352396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8884d44-9ef2-456c-a302-53b536b633a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa0c30c-6533-4fcb-9900-d36487ed7f92",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83274a24-9869-49ac-867f-c21acebc7b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2132151-57f6-40e5-98f0-5d8414bbd28f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1c8dcb-fce9-4198-a450-36d95f457fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c92e1a7-54cc-4279-9a52-aed5df6f9446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70abfbfa-4163-49d5-a1c1-5937c4ad27a4",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be86527c-4970-4b5b-a083-3393927cd26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0044aca-9260-46ef-a906-29b5d5f61575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87372e48-a300-49cc-a099-686b012d333a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "563338c8-58c9-41b1-9a06-2223187cda9e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "699b8ac7-8cc2-4f0d-8937-7c198ae2209e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "76278dcb-53b3-40c2-a2f3-f5c39f6466ea",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "291b206a-d129-42f3-b62f-5fd81287acc3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "24a36b49-f2ac-48c4-aeed-03003a7bbf97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd7e6ad1-ac3e-40db-9ad2-ecce0400556b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc2755a2-c7c9-49fd-8d5a-2eccc8de0b39"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa708ce4-849f-4839-80de-bea650073127",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4636270e-8d6a-4fd7-8cb4-622fe02f38fa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9cef2b5c-3056-41b5-bfc3-e3c493f15ba7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b516f7c2-a28d-4e69-995d-9e14514a1c75"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eddff8d7-fb4a-438c-86c7-404d7b8aa020",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "43005b5b-aff2-4ede-91c7-a072fd5a89b6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c7fd122-b908-4443-b551-1cfdee2a174a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a26db911-efdd-4391-ad2e-9f42fe76e008"
            }
          }
        ]
      },
      {
        "id": "1fdd463a-83e2-42f9-9128-033ed0ba561a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b2735ed5-43b7-4467-9f06-b0560d2a4da2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3f75eb03-b3de-4d9c-ac71-a45efb93975d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fac9bcbc-4db8-4b20-bc56-2d4f8427fc3d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41996ff-419d-4e00-baee-db8e1d8a474e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4834cf74-da7e-49c6-a009-bac20ab0e780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e22bbe17-5aee-4bcd-9928-846872b90e44",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "617f248c-d4d6-4611-93f9-0e996ecad3b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d362b73-0340-4ee6-9be2-9c455a81ceed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8930ed58-d79c-48e8-8a3e-3d49e688c10e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3148860-cfa1-49b4-8544-5cf50e81e4df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd17ec28-f7ec-4e68-9960-8614695e2c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0218866f-d7eb-4dac-bafd-ee2a92e5427b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54905b1-c158-4c26-98c1-8b0b89f688fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "495288ef-45cd-4c9c-8fc2-55e758f5a8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5efe98-59c6-408d-a261-f704ceaf9c27",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e1eb2d-f9fa-4e5b-a2f2-62be7114fea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b96b6e7a-b955-4082-8f50-66940dc40126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a235360-c76c-4823-919e-845cd9c96cd7",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "675a3118-23aa-4e50-a34c-3513a0dc496c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8747484-8aac-4820-8e43-2e69399b7a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50271450-3a9a-470e-843a-4ddfa897757a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0f69aa-58df-445a-92ba-39f31abcb875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1c6f1e7-c55b-479f-9737-9b59b3a452fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1df29c5-d8c4-4426-8a1b-9a191ea980fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24db8ffc-f621-4344-804b-75292a1fab0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7777d402-81f5-430b-bfaf-d8e2357074e9",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dcccf63-185c-48c9-a997-418386024092",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21b1a51c-3152-49cc-b688-ffdcc4543494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "968947ae-ab40-4804-82f4-92213c1dcd8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e7a7914-f178-49ba-af0c-94138d6856af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d43c96-ed97-4189-a035-c94745364c12",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344c581b-d563-4a77-82ea-03b02fdd16e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec5176a6-1bc5-4fb8-90c7-86d112041b1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f90f531-0633-4f15-9b1d-9d4d522da858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "807657c6-b278-490c-9387-240cf9cd36ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66b037f-58a3-46f0-8db5-55b7c47542d8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa5fa9c-0016-43b6-8047-61c11515ec7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4484f481-51a9-4e55-95e3-38bec195980d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00152ebe-b211-4a97-a1ee-58e886722943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a552415-493b-4267-9ee9-5faafdf1a43e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecaf29d5-64f0-483d-bc36-9214aef6227a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5552e1d-c95e-4715-8cdb-85d21ea16d8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc3b85e4-0499-4c2b-95da-bd1543c2d69a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc5b519e-b2c7-4026-884b-e3dc188bf37b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c092255-99e0-427a-9958-4b54b3f159bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a04bc0-0952-464c-8875-89068cb5c79a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e759ba4-0f17-4a24-9c5a-793c7f9c1356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e7a857-b64d-46fb-9600-47f10e48f3c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd55acac-3d79-40bb-a0a7-6a58fff5c19e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70df4870-52a0-49f4-b315-141db193d799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67b6326-8f5e-4fc5-a9ec-28f4d8e607c5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd47f2d-7803-4353-8cfd-7ea297b94c6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60133426-b13c-4cb7-b2da-c0d41ea10fea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1df9035-b2a6-4659-ad0d-38d36383a636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7c99cf8-3150-4958-9f60-39a311423d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f784930-786d-4cdf-8b8c-6cccd2c3bb96",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864df881-1bc0-4049-8b7a-e2215f755052",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb7379c7-9aa7-4092-b57f-52e4c76e1f3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "279c580f-b136-4954-b569-47878d1ee533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "181c7c7d-dc4b-4c76-a4e3-cfa9e0dd3c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b61eae8-3578-4764-ada3-e65144da69a8",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44f62da-859e-4752-9871-90e752fd96fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7402c6fd-bbcc-45ad-8040-0917fc1b0b9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "861228ac-da54-406c-b0ec-d190a1a327e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e93ad530-64e6-4186-8e4b-1d21f7464610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d514141d-151e-4de9-a045-ceeb79888350",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d1ac59-787f-4517-9a9b-027b35b69b44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21b07530-a394-4fdc-b89f-fd63f99ab1b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ff2853-313d-44cc-8b3b-8348f5471fb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c874200-ec87-4fc1-889b-e8738989a178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d8bf20-1704-4fb9-ade8-f6c002f1fa31",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1a7c8f-6d3d-4e76-adc5-cae7542d8e3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4053a194-f45e-4247-8a2a-38d2486d1bd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df928546-7e14-4637-be5d-64d8da1703aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "431f539f-beb7-4250-b9fb-be65f7df7d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7736914-7330-4c09-9fac-5bab56f6261d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0346d4a8-a65e-4c4a-a811-79b048183231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4756e9f9-3f21-4e3b-b97d-0c61c586cd8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "410f23b2-a091-471e-b1df-2c7bce63a389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff4f8d96-6a88-4dc2-9b09-1d7fbf402943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8352d772-f31c-4ddb-a616-0e0df0db57c8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092273cc-3cd1-4693-90af-228624396004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a41e7c1-543a-403a-a563-65f4b987a6a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96bbe41-5f48-4548-8bba-656f5dac936d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cd27679-81c8-40ca-a053-2de8120b8348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a066e70-6f42-489b-b6ef-217d256b76a9",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48f55f4-37d6-4484-83d8-1ac41ff8af45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7c14565-b9ea-436b-8e87-7e5a40972469"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a81861-a985-4ab4-a6d9-fcd010920170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5df2e0f5-3628-4d34-af4e-f4e57eaed213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f22163-46ca-4253-8de2-1d8132827e9c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1bb4abd-22b8-4752-a993-7b6af0c7c1ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3861a1e-3428-4dba-8404-7b0fd2d641eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2259c6e4-ffd1-4be8-b127-abe405d38378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cabc938e-9e92-448e-91d0-c3cdf3cbdb70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f799ad4-64e6-45e7-8b7d-9146c2da95fb",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195f6a15-a174-4491-ad12-76e63e258856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f450bf22-bc71-4d3c-b252-87bac462033e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a468f9-92a2-48b0-982d-a9c72a661d62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f237d85-20b6-41f7-b8d3-cb79d33c2fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439e51ae-bc9a-4754-aebf-793a93388dd1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26fbf0a-ef40-44d5-929e-0eae4e5fe95a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b164fa8c-04a7-417a-9ade-3c90a0e48973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbbd69c6-9a84-4b93-a6e8-443ade60b00d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce23c48b-e162-4cef-ad96-c788eae917f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404ae065-975b-47d5-9c56-b2c655e17f17",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2d9ce5-60ad-40f0-a890-d6602e4c1f6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15d450ac-b9e8-4f14-901b-9e0df8c44911"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "119fd0a4-715d-495b-9a62-05101a29dd1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4fda660-097d-4738-a46a-b73bd48b089d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ed6e12-c263-4d55-a324-0344b2969c1e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb9e523-75d6-4c1d-be0e-4b24ed7a99bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "532b48d1-85bc-4071-aff5-cfb7d4e291cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5ca2e2-4562-413a-818f-75d5935a37ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57ecda24-6af1-4e8b-bcb3-db2d6456829c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b73b592-fb6b-4f2f-a493-333ca505a030",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c114f0d5-fdba-4d86-9ee4-9df2b18177f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94750c0c-e7d8-4ee3-a2a1-580ed48ca13c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc67adf-b374-428b-99e6-d303a6ffb651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e26e6fd4-0f39-42fc-8765-d93938c70256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19fcfe24-ffd1-4034-9b46-35894a44d484",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67e93be-0b3a-4112-a66a-83afbb1c9701",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a940099b-1a5e-4f6b-aec2-e6115624c450"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ce081c-4603-4905-a8d1-464060c31ac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eed4e714-cca1-4c09-81db-c19b6d388340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aef6954-18ff-4c08-82b7-7c9bc60746cc",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdfcbb69-14d0-4219-bdef-62dd905dfcdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a4ffce-9d8c-4001-ab45-ac587728fa5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69a2071-dc55-41c9-b7b6-e12f1a117abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f80fbbbc-4180-418d-ac6b-502ed356efae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84b3b75-f824-4500-a3b3-ce095577364b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8650f4-c048-4e75-81a9-7be5d60d5b2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf7fcff0-9720-4e46-8b66-bbe71b0e2bfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4a7c13-14b4-46df-bdff-fd5142916b52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ee283d1-5971-4efd-9d96-605caaf5bbdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad2e5a9-c92d-4063-b23f-bccff53d59fc",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4d5bcb-84ea-4866-9633-8ebb3374ccb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bce62a06-fba7-40aa-93c5-7278cd862f85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59984515-8993-4844-8030-24100da8300b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e33085b3-ac0d-4f81-abc1-37f57e57c2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aebf441-8c80-4244-b407-e02f3e2cc2ae",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5139f940-c402-4784-88c4-2fcab6e336a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adef7d91-86fa-4e1f-80b7-275f538ed7eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67bbbaa9-da11-4586-8133-2b137b7a7f6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b40b21f8-a46a-4524-9053-8ad6a5847e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0fde8e0-267a-42a2-92de-4eafdd9a2935",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45bfc92-179a-4dc3-ad4d-eca7cd75eec7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21826951-81e7-4642-b34b-9f1cfeb56ade"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2094a740-0e7c-4299-ba29-6a0d9d6d4262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b8d3a84-3f5c-4e7c-8ff3-317353d71c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5764484-513a-4226-ac32-44cd3b7c7b04",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550bcdd7-ae6b-4685-b424-ee5f23540dfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1ba878b-137f-442d-a785-c29c4391522d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b4bbc8-8487-4d26-9ff9-82625af93443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5072708a-c192-46fe-b3e7-54e41e19b154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2872fd03-fa81-42a4-aa81-fab91339d1c0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d0fbfd-6379-4638-9702-95d49d68498a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebb4cdde-51af-4978-8a83-f625fabc1db6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f7d49a-a6f9-45f4-a25a-646f57fd6058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b156246-7bd1-4e8b-ae17-6d46c3674569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc3bdd21-420b-4de2-b09c-957fdebf237b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e0e351-dbc9-4cf6-b275-dd0dc8e280bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff05208a-032e-4711-bb2e-3367d15d69c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8bedf0-9429-430c-9d47-7eac9936574d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45bf7776-030a-47e2-b60b-422db00e66de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a19e3c-4817-43f0-8cf0-4c317ea7e46a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4482b11e-5e3f-4dd9-b31b-5bfc2ef7181d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53414eec-1428-4216-85fd-ff96b6fbcaaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3a6d3d-f315-4e6d-8c5b-8eb8772cf1dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "468bb5be-8e58-4125-9fba-1787fbee5e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee51819c-dd9d-4055-96b4-e50156dac6d2",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1ff51b-9ca6-48de-bad7-2c5d8148dfdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e083314f-1002-490d-9e8c-1ec474bb7651"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57813c3d-852e-4a13-95e7-b48f5b07159e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a33fae0d-ca14-4317-8bb4-c6f11bad5f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a940f3e2-166d-4a3f-b4c7-5cd917c5f117",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b84385-a4a0-48e2-93bf-550aa3faea63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a652081-a3a5-4f4e-8bcd-acbb5a06662e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf71e37e-d21c-47cf-b4f7-4a4c17675e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a52036a-b5e5-4444-be5d-5d28030d8a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5f7580-eea3-47ba-888b-753993474789",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7a431f-685d-4e77-b87d-d2463c3dc9c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "800e0b50-0f87-4926-b100-0e4e22a792b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2710bb1b-243d-4f8b-93a3-aa97581cf861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2224e8e2-6532-4c2f-a8aa-69d02423fa8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665801b5-8476-4ead-874e-162b059993ed",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8057536f-6d7e-4827-894b-5c4ebbc7db20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9649df10-8cdd-484c-b4ef-cd6a01a0b678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3974bd1-9685-4a78-9bb0-567592161921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db187b47-e677-4d8b-a2d7-2090bbfa604d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b82085f-50d5-4af1-b2c5-9250c605e59a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca77251-349e-47de-8b66-024236373458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbcd2856-0585-4bbe-b992-fb90d8910827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d90d62b-4504-4118-ab3b-5ed685b19a88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff4f3bde-0e63-4f8e-a440-4a52442bc03f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1e7519-8f7a-462e-9cc2-2620f2f59054",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5ad7a9-5179-4a5b-9863-07c4a1b7af08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e215378-4888-40ec-a30e-902fe5a2eed2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a91a13-5b1e-450d-a920-b42ed3858692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb62e7ac-06e0-476d-84f4-c6c0cfec3d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f850ed-0326-4e68-b31b-835bfda12415",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e75b00-7566-4081-89f2-89a2872d3841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "864f0fa6-c55f-426d-afc1-6551e0e6bfde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f92498b-c165-4cab-aac8-1ed537e00f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf7b59a8-4c34-4d5b-a219-0698e5ddd932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c757f1e8-6f6a-4e1d-be4b-679f21fb8a04",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ec527e-a2d3-4221-8e25-542e2a2389e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de976808-b758-4446-b791-5cde3d1edaa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04471bd-030d-4f22-b919-d83677e381ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0818f6bd-1d77-4948-9157-f1e62f9cc28a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84a21b8-cf21-4b24-9d2f-2a51d722c74c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5eb1f46-0279-4d58-8c44-eb79130fb219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b48b31d3-c2c5-4857-9a6a-1ed09fec74db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7943aa82-2572-4976-afaa-eacfb56b09fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abb1cd60-b492-4484-8935-690a3642816f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda0e89d-b123-42ad-8826-b78430bdb790",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af7e771-0f19-45a1-9ae1-7231db2737a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d0797eb-67da-4103-b624-9893028ef050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de20e286-bd5b-4433-8372-23116e74b49c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26448367-b9c7-4a30-b537-a86a8b668c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6704be38-3399-4020-abe5-f8d16599125d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a33078-0333-4f78-9095-20a276a031c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcbfdb8f-a5ec-4c18-b372-bb19f0b897b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c27aa0d-92e0-482a-b7a8-070460f97b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "142ca29e-704a-4088-b42f-27b9c3b6db37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbd9db6-4b6b-468e-b1ad-aae63faf633b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70874be5-0805-4f45-bb5a-04c8ba030343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1367304-1edf-47ef-ad91-f66227fddf58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1bdd2d6-9b8f-4df5-8b0c-672ad2ada607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e1c539a-3f1e-43c3-b429-9f670d11d77e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c1694f-ee39-472e-8077-5350d20b803a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e923c9b5-14c0-43ac-a849-d4ad493f591d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c89947-ed47-4f76-888e-610e6e232845"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3223c0d4-8fe2-435c-99cf-cc26a546aec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09da4a86-3fd3-4f5e-adb7-8b8261e7775e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72eb3e0e-de1c-454f-a838-61dc5755642c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e5deab-5b16-4d63-9932-084869072926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d7536d-6651-49e7-a347-65ae88e5c470"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72558e3-923c-4efb-a9f3-e586387b3c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f73a2f16-fdc2-4f0b-9444-ec892d0903ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c2c0e5-60eb-4307-9fe1-8dd217fce95e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84923f6-bf7f-4cfc-a049-eded249ccc1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52f035a3-b16c-419a-82b8-d776a962d4a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "589fdcbb-67e4-45b9-9fec-3e4c5d61e131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d384d5c4-d586-44fd-a63f-edf9f766bf3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad803882-5e42-4ae4-ab94-d67a8294d5b8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b85799-9928-4807-9089-e610e50312d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b6b0a75-ff3f-4f31-ab9f-dcc01c016b6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e3f8fa-6bb1-4ce7-81cc-d48da6159a4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bae68bd3-5eb0-4546-b647-b7fb4e4c98a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96c9696-0f21-45aa-a762-1a81722612b7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f64a1d-1c0b-46d1-bb70-647aee08f6b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82c2ebc7-ab8b-409c-b392-e04471a7db07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "908ab489-58a3-4e8c-ac8c-4d557e40a771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d9630ea-1b3f-4d77-a64f-7ce081283e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6cad9df-75a6-476a-88fc-f110dde71026",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2816d933-1866-4c75-a37e-50ef8ec18f89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c366578-5328-49cd-9d52-97b01a7ea93e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f027a61-abb7-4d77-990d-8ba0e3b4e56f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e96a3d-f022-43e8-8b62-5e1428e2ca33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5c7f10-dde2-4ed1-bc67-bc7b075a14e3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8c9b4d-39e0-4e22-ba38-102c307286ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3514de50-6966-4be2-9cad-82d3f6f118dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf52d3bf-1c9c-4e5d-a493-1d079328a0ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "704a9821-0b0c-42df-b206-76709118db71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baed8681-4f21-4d9e-8de8-3becacdd9816",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34517ae3-9af8-430a-a520-80840922ac56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f0ac8c2-9118-4ca0-b452-f102eb1cd7c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b07e9ee-31f5-44e5-907a-305f4ebb3bae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aee249e7-a71c-428d-99ca-9311f884c05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422bb90d-f135-4792-8e99-bbcb84f57843",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901b199c-fc04-44dc-a789-aebbee0d6cc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64839d25-4034-4026-94a3-94133dcde2be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65aa721-194e-43ca-a26d-875b8a4e1aec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c3190d8-b8b7-40bb-9238-c399a6eee628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "715ca0ff-ba98-4f45-86f1-8f0903de8ff7",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95723db-3469-4d7e-9358-b063b39e7dbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c20d2b-a5ee-4a3e-bc60-6b13e838c2d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4450a749-77e1-49dc-8a91-229e8a067700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "211a846b-1550-4930-9352-a25467a94b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f42118-3178-475e-a01f-eebd3e9aac80",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5a3d11-77b3-4226-8da9-b2928d931961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0456408c-65bf-40be-bf67-12b021ed89f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50654afb-5c98-421e-9529-ee89f1d88a59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb3df543-daed-4589-80ec-6655c10c6435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf83acf-b914-4036-a0ca-feef21dffdc1",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab616945-fdfc-47b4-a74f-cf2143356916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66cfbe10-70c7-44a4-bc48-6febdd54f0aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7a9159-c28a-4dd7-a063-d40285bfbec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde248f6-437b-4848-86d9-fd7ed2f77581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b1556b1-c27b-4f73-953a-608a23a6a044",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ed1fff-1348-48b8-9b2b-22ef1d9df5be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2e16f07-1353-4134-a57f-e2b90b7bb1a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0951e36-1507-4adc-ae17-22c1e674ff87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d92dd6df-0707-4a5d-8d43-ccd81f2bc68b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0863ce1a-3550-47cf-ac41-607f37285894",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327d6e04-905b-4ee1-8aa4-991555547c42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb57f2a-9924-412a-af70-49056f7f5625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39126c5-ef4f-482b-8cdd-226578160e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "785bc68c-724b-46ea-a82a-3bb7a0915e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749bb2df-5db6-46ed-b0a0-61fb548b3d10",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4787a26c-619b-411a-bcc9-1fca5cb7282d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb1b943-85a0-427f-9126-0477dd294acb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b832c34-99a6-4afa-b802-98f2a2718567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb8ff3a5-bbc9-4133-a876-d742017f20c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c710108e-4e61-4789-90a0-bd41494050ae",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be39042-8a50-4681-a186-3b65a48e8537",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8d19156-853e-45f2-a386-171062873ad3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35999a15-9b91-40dc-8554-24efe1321454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1446ac66-fa04-4fd1-b8d6-48b840cbfe33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df27536-9481-49bf-9a21-a59cee9948f3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832b8229-2aba-4ef2-9519-ff6d75d9971a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76701b73-9874-48b5-b07e-27f73d88b192"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98025d2c-3b4a-48c6-9bb1-f5a0c6a20587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f697739a-a439-4f6c-8169-aeacf25cfad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b830e343-6344-4d49-97e4-d6510e697122",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838f2dda-514c-4513-a9cb-e518b94814ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afd80e88-7af9-41fc-b854-63ac9b209998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eac7323-fdb0-401c-94bf-628394b57698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1abc59a-230d-4168-a574-f1408114b936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "006eca85-e125-44c9-ace9-8ee8ef4690c9",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcdeb003-1a0c-4bb2-aa05-64ba1dc2e7b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df4e7292-2a93-4060-8dc6-965a3d100220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a05fe1e-c961-418a-8254-f3b5c2b69fcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c7633bd-5a42-4f4c-9458-300304775aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743d121c-1409-48ef-bba4-b24da371f564",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63305f2d-3808-4ba1-aa44-b2e34228971b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b80d64b1-150e-4818-8fb5-dd69371d72c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4b3466-5e91-4ce2-b10c-e33890ebcb46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5de2a12f-9885-48ae-95c1-310ee6b07981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e565bd-d26e-4692-9f44-11060f2b3aa9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1a2d85-dc38-4856-a19c-a7a05cefddb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c9e1078-3aba-48ae-aae8-57a543bd481c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "097ae113-d94c-463d-a824-56d8defcedb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28081acc-69ec-49b1-b808-3eb019019e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f50cd66-7f89-4d2b-a933-b649b81670e5",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93148215-416a-422a-8b01-a48bf960efdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f53c7490-bdb0-4794-9fd6-75ccea763753"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1a0791-64d5-40de-8cb3-0ccb1b9fa473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef3f2253-8614-45e5-b296-582f66948f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6fa4c0-7869-4dfa-850c-d0054f241cb3",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be7aff6-3069-4b0a-9911-1186965bdeb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee8f67ae-b963-4636-ae4d-31ea8d12277d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0ba649-387e-4d3d-919f-50ce70f8726b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07db34d8-9618-4332-973c-cc75a3e2fea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e38f23e-cc45-419e-93f9-e0f9de7f3f7e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2861ae6c-f1c8-41b3-b14f-9650ad005a7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f6f0dde-c0b8-4409-934d-2c123f2e96c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2c6b23-15b8-4347-b9f1-0b77ca6886fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a3788ae-0ba1-4d2c-a2c9-ea58a1fd0006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdac7ab5-3c03-4709-8c82-0dcacfb9af0f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d45bad8-ad05-4812-ac96-c7edf5461f05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6268efb4-9c0f-43bf-b595-cb2c408719d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde48953-e505-416e-ad06-0489c4064dc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b702db0c-af13-426c-aa8e-5c05b530474d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d2c99e-29b4-4910-a461-a5f89bcef8de",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a09d209-bbd9-4ee5-90da-ca530237a2f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "957b7bf2-7ad4-4836-98c0-63ee063c7f2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44fcfe3-d863-4d1a-a48a-021c040423db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcd56176-1c8b-4286-bb5e-8e3a97399534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e351e8-0375-4db1-8248-082e047ca1e9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72754cff-3e5f-4564-8f31-8e5a50aa7aa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c08d236-8dfd-40d7-9980-0bb8e60fe1ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1295ba97-119a-4733-a3d4-f424fb5d4b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3209ab2c-5358-4f18-82c1-c72d29be1e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc09ca2-d2cf-4053-9395-f4079bd54532",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e975f405-ad4b-4967-be3e-c7276495ea20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92b2692c-e5a8-47f4-9c1e-acb3eb8c65aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "707f97b5-aebc-4d8e-bd72-e0ce60b50c2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96511084-a2ab-47d3-9c71-a31a7ecdac1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967d0ca9-0099-47d4-aa58-4a20190e9642",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3c71a8-0065-4ded-8476-4401686ac3ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d03e6f81-abc5-44f0-99e4-6a72836a79a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39be993-687c-41b5-addf-48358a2d76dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee3d3636-e1c4-490e-8b9b-d1310d5551f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cdd9c97-e27a-4b81-9094-62392b0e004c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3a0e73-a765-4c6d-a43d-3c5ceaf31b09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a4ab790-7163-4b8b-8894-8045085b469d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f66c9c-110d-40de-967f-657ff533273e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d030d764-8478-40d6-8a73-048386050da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4acde747-f685-4c63-975f-3c7496373c30",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bba0dcd-b98a-4c83-9cc4-a5599b763bf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4df22c5f-d1a1-4366-8409-3e7c47d2b46f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5990f60d-fe70-44e3-a1c7-f23d37189c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5484d52e-6865-4413-ad7c-3a7de0400027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e834029e-8a78-4fb8-bf3d-8c15461a1057",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6530bb4b-8dea-4cc0-adfd-33bd1d0ddd15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e1d1ccb-3157-4db7-9fbc-6f311a5fc2f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd8ee30-10d8-40c8-aff8-dc7d842bee54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4301dca-9d61-4d5a-8db7-8d9179db5cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7765c566-44f9-4bab-b703-8d3aea321c0f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf309e8-e4b2-4910-abec-9436303c52a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c048322-06d7-40d6-bd80-b7a10e79a897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64de126b-f101-41ae-8ef1-d5b13c357c58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5553d30-ccf3-4f0e-92c5-07632320cfce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14542f8-f5ee-46be-98ae-e5c47de87790",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7531162-610b-4c11-971e-5c16a44ca452",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0be5938f-39a0-4f1c-80e1-17e5c5e08359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3a7e81-620d-4163-b502-d2d10b61893d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0259995a-5248-4e32-adae-bdf50ada2e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2af9312-b44f-458a-bbec-6fc48f0d9618",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b676034d-2883-456c-b924-f820a6217a44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bb8056e-116a-4136-a699-9baa76b347e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd1637ba-e0d0-416f-9610-f3138fd23094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f8e9465-1de7-4a7a-b25e-b011d04d6f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9f165d-cdb8-4d65-a9c5-a8edfa9d522c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2122d0-2ecb-4f9e-a11c-fd06de389836",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b49c145-7cab-469a-a883-f4a0361c335d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07d48b7-10a8-4c3d-8d70-4aec49eb666b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c6e2df6-5cd5-4533-a3bb-6a00be8fe7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77341d88-a1e5-4d7a-b5c6-ae0faec0e992",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3102f0-3bfd-4c98-9e27-dff04e53c5ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd723d52-e3ed-4174-9187-2facb690c10d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00916a1-9a87-4004-a347-3787aa28e470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec2934c0-4b9b-433c-a403-242a59ad79be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23847bf-44a6-4b86-ae5b-7ff11c17c9a8",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36ce035-1327-4417-b556-aa9a5de59b58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c52ce612-d59c-4d82-9e94-b620c2fd7dba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdbe3f4-b42b-4be9-9a07-a1495bdd9d95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7be2d0c0-bac2-4280-8490-5f70e0e174c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3593fb-1c73-4f52-8a55-c75cbb96e46e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f16b466-76c6-4755-bc04-c39aaaf8ba96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c4f4ea4-f3f9-4cbf-8a90-0fb6c945dddf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee97cc8c-fcfd-4f4c-92c4-175ee2fc6260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6246c158-9d82-4c27-a02f-abd19a7e7e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1562ef78-19c9-4677-ae62-6c50d6ec051e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3934ad44-8493-45ec-a700-b841fd8f8513",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef9c9f02-f64b-4f15-b83f-17a6c4b9ea76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ce5ca7-0a16-4630-9e20-48479aa84afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aab3de10-79d9-4985-8593-ac83905d0c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e206602-ceaa-4048-ac78-ce91bdf67f22",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc8d621-2ec6-4187-9289-34a4af493885",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d6472d9-e883-44ff-a636-4896a8db48d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ed96b8-96af-4c94-a676-acdfb3c16993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af678c3a-4d25-4126-9fd7-40c909cdba68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d5b96f4-783d-448a-a18b-6193453733da",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0c92d2-e8bb-4afe-8d8e-42f5e08a5db2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e00eec0-22cf-4804-9e0d-207bdb1170bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7e077e-32e5-4753-962f-9b2039c59c85",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c88cf1-44d1-4a38-b67a-f039f4867840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d763c223-364a-409c-826f-619ce569c96e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa2c9c6-66b5-47a0-955c-2417676f7949",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b86e4364-60f5-445f-83f2-cb879d096805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dffc867a-43db-4630-b292-de37c31f8344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f3bc80-5778-4259-9c48-4a6922708ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db22ff7d-11d3-40a0-8d78-0c34457e271b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5d6faa-6f10-4a1a-bbed-5703ebfd429a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "817fda69-f93e-44fa-863a-230bdec499e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64687447-0d06-42c7-a026-4714dbe50ab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "203378e8-275a-49d5-8aef-9684ceb77dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a66eb7-35f8-4bb3-82ee-47a27d0b0b1f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06a00c6-aacf-408f-999a-d090a9dfee84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f3f73eb-02f1-4d68-b1d4-9d4237ca9248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0211e40a-9267-4a2a-95d6-730c6ec36ad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "941a1b37-10cd-42f5-9702-2b5b3dc3cd97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c661f0a-4c8f-4013-83b7-65cb51312fe4",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d03802-3691-4b7c-a401-339812b51fcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1bc4662-6397-4395-8916-db262f3320c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77bc495-acb2-46c0-a521-e5fa523de3cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b112978-275d-4a12-b9ae-f064834d90ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2554208f-bc68-47b3-8b8e-bcfa60f5d731",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22288738-a0eb-4ae3-b93f-6da0a9fc3026",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e2503f0-b890-45f2-81a2-8d95d0859aea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "485a4f12-5682-436e-81c3-d7f79e4036f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fbc5c84-28aa-4862-9c2c-3cbf38499a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67ae4b5-3f1c-4639-a0c3-de7f53bd01e0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "512482d0-aa7b-4ddf-890f-3067a5377baa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf2873e2-a004-40dd-b864-bf44770ef417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ef43b7-4a0e-401e-a753-a13cd5019829",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa3644f4-3896-47ef-aa23-8e4d9298f344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51254b52-c565-44f1-afe8-3417a1dec581",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe17916-d9f2-4fd2-b190-324ff3dcc412",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5fa18ff-77a0-41c6-b1f7-b2ffdb97b68c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9bcec7f-4099-4443-8d63-de286bd78752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a95339be-dc84-483a-84b0-e5be2988b41e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d065f8d0-52aa-42b2-9fee-2e7006541f03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f484d8e-f38d-4458-80b4-2c6f7158619d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9c6197d-ed8f-493d-bf12-c6c261e16586",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32d06bb0-7840-465e-a8c2-aa68325ff49c"
                    }
                  }
                ]
              },
              {
                "id": "739d5893-752e-498c-b253-cb22c6a2c93c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d4a7834b-ef0c-47d1-b7c6-68071cffa9c7",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c8104e-27bf-4c85-9e2c-3eae896ef9bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "380963d7-1a34-45cd-89d0-49daed2e0799"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e7e473-9017-4153-ae35-f78707fa3380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2483b2b3-133a-41cf-a098-23ba8bb870d7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c5f5b17-cc25-47b9-865f-ee72cbd0f959",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c494233c-51b3-4edd-8a08-1cbb51de430d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e40719d-a783-41e5-9854-aac5c0822ea1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "511dc654-3ad5-4da7-8d76-78da87f5e36e"
                    }
                  }
                ]
              },
              {
                "id": "b684fca5-4df3-4813-b453-b1779e89a061",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "24123abd-ee4e-4b5d-a200-360f31f2e425",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c069af0-2644-4ee9-9e57-ff9c6051dcc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "69d5ce75-b53f-4a24-896b-750a31896b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0314c056-96e9-4218-94db-448fd11402b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01beb7ac-a5e6-4f48-b644-72f7461e321f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4d13e4be-d0de-4a5b-81a4-f583b57c27e4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "83d02b42-9d8a-4da8-bfef-8c1a03e13d99",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f4b3025-5c68-464f-b32b-f17243eb9701",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6cf38537-f800-4981-8bee-4897fd4141fc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65b4edbc-3dbf-4ff3-aaca-42b68d8ccd79",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5982c422-e7ab-4ba3-abd2-fadf45bae8a8"
                    }
                  }
                ]
              },
              {
                "id": "3275a410-2b0e-455f-891d-7de2a05ba34c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d78dbede-087c-4f7f-a9a5-d94108be76a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9a03213a-07dd-4daf-ac17-22f57bb30efe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d83262f-6523-4e46-8093-956e8b68ec2f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a99eae4-5154-4faf-af42-e4a43e12bbb8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c93cf027-ff9c-43fd-910e-3c5a72a2b166",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "65a39b5a-3190-46e1-8aa3-f0db7354cb88"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c8687261-e222-45e6-a0ef-0d0654ee63f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0547a2a0-8ac7-4ba4-aa94-fa77c675f25b"
            }
          }
        ]
      },
      {
        "id": "a988871f-95ad-423f-b398-0a68f643f800",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2a61d37b-58b4-4ef9-a14d-a67ad01ed856",
            "name": "Negative Testing",
            "item": [
              {
                "id": "82507bfd-78fe-4798-b9bb-f7570edbc9e1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "adde0fd4-b1aa-48bb-9cf1-f45c49377a7b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04cc800e-7ca1-4eff-8029-ab417f380b2f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c3a19f5d-99da-43d8-8ae7-f4ee397d900e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7805d7e-daf5-4101-9a3b-09626d3d7ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41ef130e-1aab-4a80-ab93-e8b4667c38c6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ef4e335-4fe4-4142-98a4-4789e69b56f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a4b2af2-9de1-4550-96a0-6d7bf11afa3e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "abd1507d-6bff-43a2-9d05-3c8c0a47edb7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb17b279-7915-4e19-8719-0d6acfb71cf0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "863a5a78-d249-455a-970e-6b9cdccff160",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "61b22f38-8530-414a-8f1e-c846d977de2b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c0e78fe-a16e-4065-940d-6a2b60c3d371",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b1505fc9-fb87-45c5-b63d-76145cba79f1"
            }
          }
        ]
      },
      {
        "id": "13585bfc-d9a3-4d84-add8-78fe74d76dcc",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "1b431750-8a49-44b8-aa03-10cd720c1c67",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ea4516a3-4cfb-4fb3-b0e5-f378b2f8e1df",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8be33a16-0f2a-45f2-a758-0c6ac2cf70bd",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ba496b-d895-451c-a93a-2338c24cc62e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9e78665-1a34-48fe-bfc0-aaec7fbdb8ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aecced9-1e0b-4d22-9d6a-73eb8c6627bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a76fcff-94b4-458e-81f3-f99323e5e98d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e74d430-6754-4bb0-95a6-265743762835",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67b116c0-7d94-4e46-af3a-0e00e6c54319"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee67af2e-a56c-4890-a5c7-d4f6d3b6c6b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a9f28f1-0993-4263-a00f-9791ab7b8de9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d53cbc30-5ce6-4027-8c4c-dcc8467df00e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a012f4b5-0464-49eb-a35b-72f298a1fe78"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e841108-bb0c-4d26-bcc6-980b45407fa2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "58df93a1-e5dc-4967-a5c4-2bae9e0f0e28"
            }
          }
        ]
      },
      {
        "id": "d84c62f4-8924-493a-beaf-e278822ad7f6",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "225ef5b6-523b-4744-a775-240bd74505b7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5f834691-184a-4e6d-8209-f9bb28077f85",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1e318e88-5c87-45c2-b793-261abe900e56",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62baa03-0bb4-4e4a-88a3-6f326486fe56",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1dfb475-687c-4347-a3d6-f380556194dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7315fe26-8d83-4f84-a9c7-9df3e3ce6b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b3ad9dd-7e65-492b-8820-4187e9c2b840"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc1b7b61-117b-4ada-b4f9-d8fc382a8daf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "340b05c7-ef5a-4ebe-8b07-61e1533f832a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7fafa11c-5759-4f08-952e-c20910a6eaff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8cb9a3d6-34c4-40f5-8a7f-9099e11062f2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "55b74421-09e5-4f5f-96ed-7fc429bfb4d5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c7b1e24d-6562-448e-b2e9-9db371b08256"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5735a9b3-d02f-48aa-9ff9-7514d009bff8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fbda2030-921f-49e7-9859-de41a272226e"
            }
          }
        ]
      },
      {
        "id": "94e812aa-2954-42cf-b62f-849647ef1cb8",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "753890b4-a4e2-43e2-a689-258d8e9abce4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9d39899a-22ce-479d-9ca6-22d2d896e6bf",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "69ef012d-3cc6-4460-9426-f61cfabb107c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1134a8e4-b32b-4f5c-a6a8-881de734132c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d9c1768-bd0c-44d8-8047-20004832e36b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 248.94841269841277,
      "responseMin": 11,
      "responseMax": 5030,
      "responseSd": 775.1507030365872,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1716770290980,
      "completed": 1716770362134
    },
    "executions": [
      {
        "id": "bc6e72f9-1b30-4bf7-a233-b1feebb76c95",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d1e5dfb8-312b-449d-8df6-bda96639167c",
          "httpRequestId": "316e753e-3676-4938-8827-a6c8258fd2ad"
        },
        "item": {
          "id": "bc6e72f9-1b30-4bf7-a233-b1feebb76c95",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "444a0b5b-c808-4b42-85a9-b886967acf2d",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "603056ac-9f37-437b-a1bb-72b72cac2cf9",
        "cursor": {
          "ref": "dbf62c8f-c2e2-49db-b27d-2b70e453b8a5",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "bedef11b-e74d-4ca1-9c6e-ed2f99f2ac4e"
        },
        "item": {
          "id": "603056ac-9f37-437b-a1bb-72b72cac2cf9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "698d1827-0591-463d-bc41-9d872822b2d7",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "73e9d56a-ccac-4645-aac4-d714ca3b8005",
        "cursor": {
          "ref": "5ad303bc-2ab4-4451-9cb2-5e9faabd61b3",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6798c743-bf6a-46cb-812f-a6e4eb65fe60"
        },
        "item": {
          "id": "73e9d56a-ccac-4645-aac4-d714ca3b8005",
          "name": "did_json"
        },
        "response": {
          "id": "4d209a5f-66f4-46bb-9c24-39f77b505290",
          "status": "OK",
          "code": 200,
          "responseTime": 436,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab051492-48c9-4e49-87d4-86851a54d447",
        "cursor": {
          "ref": "b433c625-7832-4b8c-ba24-c570769af54b",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b77df621-f10b-49a9-a095-c6010bc701d8"
        },
        "item": {
          "id": "ab051492-48c9-4e49-87d4-86851a54d447",
          "name": "did:invalid"
        },
        "response": {
          "id": "d5a20a09-3772-49e5-80a4-e7397fea838b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2237,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab051492-48c9-4e49-87d4-86851a54d447",
        "cursor": {
          "ref": "b433c625-7832-4b8c-ba24-c570769af54b",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b77df621-f10b-49a9-a095-c6010bc701d8"
        },
        "item": {
          "id": "ab051492-48c9-4e49-87d4-86851a54d447",
          "name": "did:invalid"
        },
        "response": {
          "id": "d5a20a09-3772-49e5-80a4-e7397fea838b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2237,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ad643c-a494-4bcb-b8a1-540a8df30f81",
        "cursor": {
          "ref": "7d44a0df-9e36-4dbf-b041-2e6fd2783968",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0fbf20bf-e2d2-417b-86cf-ffbca377d567"
        },
        "item": {
          "id": "41ad643c-a494-4bcb-b8a1-540a8df30f81",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d52c62f6-336c-4054-8682-137e9a9839f3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2539,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1d9634-4a57-4ea1-985e-c978fa9759d7",
        "cursor": {
          "ref": "5c5807c5-7f2f-4f86-8a50-77b9945ad5a4",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ff163828-ba2a-411a-9a51-d6bb2563ae2d"
        },
        "item": {
          "id": "7d1d9634-4a57-4ea1-985e-c978fa9759d7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "770b9fa9-c144-4f78-828e-474559a4c36d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2286,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b75c1fd-f7b8-4771-b457-d145a44757bc",
        "cursor": {
          "ref": "94b72fb5-f9f0-4a0d-a98d-21e29208e696",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "12d0ab02-ba05-4bf4-aa2a-0f180712e17d"
        },
        "item": {
          "id": "2b75c1fd-f7b8-4771-b457-d145a44757bc",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "efccddb5-5716-44dd-a7b5-13791fa2b74d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0cde6a-48fc-4d17-bd70-0396f2813d00",
        "cursor": {
          "ref": "32a3495c-9cbd-4a0d-9c98-b77b68bd6d90",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2002f924-c361-431f-bf97-d9a3b6e47f1a"
        },
        "item": {
          "id": "6e0cde6a-48fc-4d17-bd70-0396f2813d00",
          "name": "identifiers"
        },
        "response": {
          "id": "576c6f71-869b-44fb-8442-3c81ddec5369",
          "status": "OK",
          "code": 200,
          "responseTime": 2338,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e7e9e92-80ac-47e4-b03d-12802085bc4a",
        "cursor": {
          "ref": "5dae6b3a-1301-42b7-85e1-af876e599558",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "05949878-117e-4120-b70e-44979553dbf2"
        },
        "item": {
          "id": "9e7e9e92-80ac-47e4-b03d-12802085bc4a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2e0b92a9-b018-43de-a9bc-9ebfafefc9f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61bf942d-b32f-4edf-9d8f-83039ae4c7d7",
        "cursor": {
          "ref": "d2eb7ff4-b9df-4c0b-bea6-8f29fa78e982",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9e59d82d-e05b-4e6a-9c01-4f074946ddbd"
        },
        "item": {
          "id": "61bf942d-b32f-4edf-9d8f-83039ae4c7d7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8235b37a-bfc7-4401-af44-544e9c827509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b547eb-2e33-4490-ad8c-446454e20f6e",
        "cursor": {
          "ref": "6731a47d-0888-41c5-a630-5c9f430aebc1",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2eea98cc-de2a-4c90-8d40-2ad91aeb336a"
        },
        "item": {
          "id": "87b547eb-2e33-4490-ad8c-446454e20f6e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "fb34ca62-cad2-4de6-8950-5cca1ee89b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3fd6bb-9289-4e98-8ffa-f06ef4dceb63",
        "cursor": {
          "ref": "1075df66-060f-4060-b821-75bb0faecd2d",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c8a31222-5e73-4078-8860-49ea8b60d8bf"
        },
        "item": {
          "id": "5d3fd6bb-9289-4e98-8ffa-f06ef4dceb63",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d09490e9-2ecf-41e7-9698-4d110fba77e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24902f9-03d9-4d01-999a-b278e52f0ca5",
        "cursor": {
          "ref": "c05358e6-a63f-4fdd-bf46-ce6ef0fffc35",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6542b592-f37e-4a33-a517-f1b0ef009b5a"
        },
        "item": {
          "id": "b24902f9-03d9-4d01-999a-b278e52f0ca5",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f4b076f2-a780-4776-b5dc-0d866d20e465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2a8e70-3f57-4234-9c4d-8e3291072799",
        "cursor": {
          "ref": "ce2f40fd-5ddb-4243-bb33-cc7fe5bd280c",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "292f6868-6eca-455e-b091-c9637a0169da"
        },
        "item": {
          "id": "1e2a8e70-3f57-4234-9c4d-8e3291072799",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ed50b451-19e8-4800-aca3-12b968325b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c1a6f0-176e-426d-86ce-7ab2ead02abe",
        "cursor": {
          "ref": "adc7523c-0efb-4166-9442-a4700280cd57",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0111ce97-0466-467a-87e4-857f250fd65b"
        },
        "item": {
          "id": "d0c1a6f0-176e-426d-86ce-7ab2ead02abe",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5196bdb6-9297-4b67-8788-66e97bbabb75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63aed6a6-1419-4790-9074-a2669bcb8cfd",
        "cursor": {
          "ref": "ab8651ce-4411-422f-9ff6-356e3106a5fe",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "30054ab9-eaba-48ab-81d7-89503455a196"
        },
        "item": {
          "id": "63aed6a6-1419-4790-9074-a2669bcb8cfd",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0939e405-fb1f-401c-826b-73c7a2606025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd8d351-94bc-4010-bbc9-fcef34c08209",
        "cursor": {
          "ref": "4a50fcb2-9441-458f-b066-f81ba7cec93b",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7bb323d2-7b98-4504-a401-974b761d9f8e"
        },
        "item": {
          "id": "5dd8d351-94bc-4010-bbc9-fcef34c08209",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "436b3369-7b23-44e2-b6ba-cef123d89c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e47263-a0a0-443a-94a0-d9617ad74837",
        "cursor": {
          "ref": "048bfc72-3efb-45ae-9d87-2f8a87c353ca",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5d995a4a-6f7b-4960-957c-275fb94a968e"
        },
        "item": {
          "id": "90e47263-a0a0-443a-94a0-d9617ad74837",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c0f246db-5d60-48e7-bb1b-04b5c7f971b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc2a6ee-b7a1-46fd-917c-862a4a2afe36",
        "cursor": {
          "ref": "050f7b7e-4a5d-4e43-852a-ebfcf3df6921",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "aba01c93-dc07-40c5-bdbe-aba7550224c8"
        },
        "item": {
          "id": "ebc2a6ee-b7a1-46fd-917c-862a4a2afe36",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "810fc422-9704-4153-8151-90f3f51a4532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259f2cab-b471-4d6e-b15b-7941e9377c23",
        "cursor": {
          "ref": "84eedcfd-909c-4351-ac84-0e2bc10e50fb",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "33d69350-1f18-461c-a71e-4aeda4c0c3eb"
        },
        "item": {
          "id": "259f2cab-b471-4d6e-b15b-7941e9377c23",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ffe04739-81d0-4372-bc80-a0d70cd93658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e0ae42-f5b7-41b3-97f4-ad5e560ea242",
        "cursor": {
          "ref": "ef6ec53b-c6de-46b6-96db-edc7b72537cb",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a27be270-f714-438b-a80a-6568c9f8a816"
        },
        "item": {
          "id": "b9e0ae42-f5b7-41b3-97f4-ad5e560ea242",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "de938902-4667-4129-800e-cae3bbb38e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3931582-702c-4008-9d5f-aefa0dd3c15d",
        "cursor": {
          "ref": "1a7b31bb-0a1c-4130-a465-cc32ca65c63d",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6cfaac21-52c6-4c44-8389-cc591986b8f3"
        },
        "item": {
          "id": "b3931582-702c-4008-9d5f-aefa0dd3c15d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3777e304-ee9a-4a07-9d6c-fe9c996841ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54761e94-9883-40fe-a7f7-fd4150531cb0",
        "cursor": {
          "ref": "4e931232-77f9-4e39-becc-53d394089718",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5f07672a-5842-4200-a34c-c38c0e74d761"
        },
        "item": {
          "id": "54761e94-9883-40fe-a7f7-fd4150531cb0",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a2d1d543-ea99-4aca-9da9-e28513cbddab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880b3a6f-2f68-4f19-8ba6-7b9da2f55ae6",
        "cursor": {
          "ref": "e0e98be7-bbf5-448b-a490-4f5138a60c7f",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8e63b913-6bc0-4c0b-980f-f2241a538345"
        },
        "item": {
          "id": "880b3a6f-2f68-4f19-8ba6-7b9da2f55ae6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d5b86829-7c96-4d68-8011-114a9736ed0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4330425c-6a84-406e-9080-ed64497aa37e",
        "cursor": {
          "ref": "96763d89-65e7-4162-b06d-f660dd008532",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "04db2d7f-77a5-4dc5-9ab2-b824e27d959c"
        },
        "item": {
          "id": "4330425c-6a84-406e-9080-ed64497aa37e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a6dda659-dba8-40ce-b230-d2b8c9540fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c38914a6-d499-40dd-95b6-92bec5b07953",
        "cursor": {
          "ref": "66249df0-ff4a-4274-a14f-40f3d26013ed",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "29dfa916-2542-408a-9e37-1e82a6a57e3e"
        },
        "item": {
          "id": "c38914a6-d499-40dd-95b6-92bec5b07953",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8257c9e7-5e3d-4d4d-a3d9-325b5c330497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5161ad-63b1-4914-bc3c-bb588fb26dbf",
        "cursor": {
          "ref": "efd1fc16-4e47-4a5a-b972-accf122b8bf7",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4c0c01fe-01b7-4d44-bc65-62fbe863bb01"
        },
        "item": {
          "id": "2b5161ad-63b1-4914-bc3c-bb588fb26dbf",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8f3dc9e4-1dbe-4258-8170-c705e8719534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febe9445-bd76-452d-ae9f-bfe7f50f0a9c",
        "cursor": {
          "ref": "d0f899b5-8e1b-48e1-991a-c53d31c63225",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "5608452c-7813-4bc9-973a-91e52d5f764f"
        },
        "item": {
          "id": "febe9445-bd76-452d-ae9f-bfe7f50f0a9c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b56d12af-af6d-4766-bab9-b497233540ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2496c65a-ecae-4403-8420-0c05b791e94b",
        "cursor": {
          "ref": "8017c7f2-2bc6-4cf5-b4ed-a94d9ad05682",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d6cc7590-9e9c-4c58-94fa-e624ee4af215"
        },
        "item": {
          "id": "2496c65a-ecae-4403-8420-0c05b791e94b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "858a7dd0-4629-4eac-bd40-d8b25d1e4e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de8e166-a816-44a6-931e-3c24f6244898",
        "cursor": {
          "ref": "a77aad0a-447b-435a-97e7-55bcc52b0efc",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "97afee9e-8ea6-4411-8116-b08adae2a4ca"
        },
        "item": {
          "id": "5de8e166-a816-44a6-931e-3c24f6244898",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "dbe086a3-15a4-41bd-b095-2b5c3b6f0079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca80c23e-2bc1-47e8-ac5b-faa0d971a2e4",
        "cursor": {
          "ref": "c1844c12-c9b4-4400-bf8c-e637c4ce411d",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "368541cd-5aee-43f2-b14e-1869fcc3ddfd"
        },
        "item": {
          "id": "ca80c23e-2bc1-47e8-ac5b-faa0d971a2e4",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "44d2f7b3-a853-4c68-bf07-dab44c8e68c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2efeb85-ad41-4ef7-ac87-d83fb253a829",
        "cursor": {
          "ref": "5067b748-9a02-4a42-b41a-a114e5541ed7",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "60180a33-d2da-438e-a299-dee757d4e478"
        },
        "item": {
          "id": "f2efeb85-ad41-4ef7-ac87-d83fb253a829",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5d46a7b9-ca46-4c52-a34b-ef8ad0baf89d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed90191d-660b-46a0-ac82-0e35e6acc4ff",
        "cursor": {
          "ref": "72364777-0027-45bc-8548-a22bf5040a26",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ca009dba-deaf-499e-b674-aa98a8e3e832"
        },
        "item": {
          "id": "ed90191d-660b-46a0-ac82-0e35e6acc4ff",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "44c86fa0-af0e-40de-bc61-36d01fab79d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db373d59-9960-4f17-a063-2692702d2f77",
        "cursor": {
          "ref": "c3a6057c-8681-4771-a601-548d139bc01a",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ac7df5a8-a571-45db-b192-3264213d2bf4"
        },
        "item": {
          "id": "db373d59-9960-4f17-a063-2692702d2f77",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9d462956-fb4c-46ac-aa79-223e3a9b9351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9d79c9-3f24-4a27-9a71-0a46926fd7b5",
        "cursor": {
          "ref": "4e50f937-7f25-4a0d-a260-8affacb5d362",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b2e438ab-452c-4560-9ae1-7180b6c7f8c3"
        },
        "item": {
          "id": "6a9d79c9-3f24-4a27-9a71-0a46926fd7b5",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ad12d6b8-08cf-4c90-a280-3ca70adcc64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8414f2ad-136f-4ec3-aab7-9232c569d789",
        "cursor": {
          "ref": "53e969db-f443-4f63-aead-25da83843110",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d5097228-b3d2-4db1-bbcc-92f8f64c03fd"
        },
        "item": {
          "id": "8414f2ad-136f-4ec3-aab7-9232c569d789",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "93406ee7-5a4b-44b0-bb55-b1537285b72b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f0f3ef-5c15-40b3-a3c8-db3409da03dc",
        "cursor": {
          "ref": "80dcdf14-0913-407e-8927-34db4e85509b",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "0d7459b6-6b29-4a6e-b99a-62f4f832d20b"
        },
        "item": {
          "id": "f8f0f3ef-5c15-40b3-a3c8-db3409da03dc",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "aaf2ecc0-b38c-48ad-96a4-a48a2e00a992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7febea42-0d36-4cc7-80a5-b8fb53b35ba2",
        "cursor": {
          "ref": "03199314-d90b-41cb-8d6c-81cf63e1460b",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "acaa6cdc-4081-4203-84da-14b66ac69da3"
        },
        "item": {
          "id": "7febea42-0d36-4cc7-80a5-b8fb53b35ba2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "810cd7e4-9c3f-4fe8-b97a-02c03619195c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e5b3e5-3abf-470e-bc41-260df2230463",
        "cursor": {
          "ref": "ffa7f0cc-bb28-47e9-900a-f81cd22ec280",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4d77b60b-5d3d-4d43-82e3-44320cc4f37b"
        },
        "item": {
          "id": "e7e5b3e5-3abf-470e-bc41-260df2230463",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "36843507-cabd-425c-b80c-3d62eac34b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0252d7-3048-46cb-a071-2e382465c425",
        "cursor": {
          "ref": "9d174400-22d7-4aa6-8fb8-40bdc66cef3a",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "51f71175-b741-45a9-aeed-7dbd9d2aae4d"
        },
        "item": {
          "id": "bf0252d7-3048-46cb-a071-2e382465c425",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "17155caa-cbc5-4410-b227-ac901693c2ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32f0dad-725d-432c-bc04-8b9098ff6e33",
        "cursor": {
          "ref": "fea8a4ef-dcaa-482b-88e9-981e56207dc6",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8ed1f3b0-ca6f-43b2-932b-40546eb5b755"
        },
        "item": {
          "id": "c32f0dad-725d-432c-bc04-8b9098ff6e33",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4ba24a40-62d3-40a2-8501-0d1a290255a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a0e52e-f595-46d9-bb10-f1959746a553",
        "cursor": {
          "ref": "61680c5d-caa5-4de6-b5fe-e11994b98b6b",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0f754a77-257f-49a8-a3b1-17ee804789be"
        },
        "item": {
          "id": "40a0e52e-f595-46d9-bb10-f1959746a553",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7c7924da-90dd-4efc-a554-6d95ab5defd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548ae3f7-83ce-4f57-bb68-ea03654189a9",
        "cursor": {
          "ref": "dc27edd0-c919-47dd-86fb-07ef49206305",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a3ed3e74-46ef-4222-a91c-b103022ee80c"
        },
        "item": {
          "id": "548ae3f7-83ce-4f57-bb68-ea03654189a9",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "502729eb-8c9b-4ace-bdfa-3c190a83d742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56d05e9-72bf-4f4c-8366-5b6db930d6d6",
        "cursor": {
          "ref": "2e99adec-2331-44b6-b6f1-ab0df6c38a09",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "11cd3442-a693-4115-add3-635e0d4b3cc0"
        },
        "item": {
          "id": "e56d05e9-72bf-4f4c-8366-5b6db930d6d6",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "80955353-5383-41eb-a243-44432527738e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b2af98-ef4e-4b8a-be10-ecd2d3eb8e81",
        "cursor": {
          "ref": "af760993-9bd7-4861-96a4-7489eed7f1da",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6d285855-0526-4424-9ea1-84276623304f"
        },
        "item": {
          "id": "35b2af98-ef4e-4b8a-be10-ecd2d3eb8e81",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b96935d7-079e-4397-8dd1-e993e87b407d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ea308b-d0a9-4dfc-a4f8-9133bc3a0812",
        "cursor": {
          "ref": "08981cca-770b-4362-97e5-328940792322",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7b6a406c-a683-4eaa-b1be-dce42ae971b1"
        },
        "item": {
          "id": "78ea308b-d0a9-4dfc-a4f8-9133bc3a0812",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c8891fd7-6b93-4875-84f9-3b86aeff196f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c413e83-c142-4e2a-a083-8defea634e1c",
        "cursor": {
          "ref": "13a77c2e-cba6-4904-a254-298ca58ddbda",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c7c72bcb-ee35-4eca-b330-95d8c00d5fca"
        },
        "item": {
          "id": "9c413e83-c142-4e2a-a083-8defea634e1c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "899ad880-320a-41a2-a62d-9664ecb09a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6bc58d2-4403-46b5-9167-eda3aa171e1e",
        "cursor": {
          "ref": "d016f446-46fa-40ce-822f-93032b40c85b",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5f7cd3af-2a2d-4d7a-81c5-3761bb651b2c"
        },
        "item": {
          "id": "f6bc58d2-4403-46b5-9167-eda3aa171e1e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "09dc427b-882e-4c6e-977f-4e8c110ed2b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ab1d35-e69f-4dbf-924c-f6608e9e4480",
        "cursor": {
          "ref": "7a011faa-d589-427c-b2c2-36fecf28355a",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1f933a5a-1222-4857-b694-12ee1fb18090"
        },
        "item": {
          "id": "59ab1d35-e69f-4dbf-924c-f6608e9e4480",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "25005d80-a6e8-4c11-bf45-169fecde32a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3d16f6-92ab-47e9-8cdd-39ef03e1d9e3",
        "cursor": {
          "ref": "0b4c2ec6-4ffd-421c-a93d-3888fd9c239b",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "cb919450-9e78-4f2b-a2b5-a44d351c8993"
        },
        "item": {
          "id": "ee3d16f6-92ab-47e9-8cdd-39ef03e1d9e3",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5ea2b8d6-01ad-4912-9ccc-25cde388d5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4164f1ea-a15a-4346-8280-41f3d2bcf504",
        "cursor": {
          "ref": "a3f9a019-42d1-4324-89d7-a29d68739052",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5b5e62e7-41a8-4ae1-9044-048b56a51f90"
        },
        "item": {
          "id": "4164f1ea-a15a-4346-8280-41f3d2bcf504",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "76b9fce1-b6f6-4a74-9118-56e3c3730cb5",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "345e5b4e-29c7-40cc-aab1-cbcc05b5bd0c",
        "cursor": {
          "ref": "a97fa53c-92c0-48f0-8510-5c151443ea28",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3546b092-5eba-486c-8543-a8dc5d452d6c"
        },
        "item": {
          "id": "345e5b4e-29c7-40cc-aab1-cbcc05b5bd0c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6871af65-9bae-432e-8839-5db382e89cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24102b7-364d-499f-893a-3c30c86554cd",
        "cursor": {
          "ref": "9068201e-1882-437d-b6fb-d7a321f71e8a",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a687fe04-75a4-40a5-926d-e37d9757e884"
        },
        "item": {
          "id": "a24102b7-364d-499f-893a-3c30c86554cd",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f203493d-63ea-4d61-87f9-998c9f264460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b34430f-bbb5-4b85-9156-f3e56153f894",
        "cursor": {
          "ref": "72639a25-74bf-4003-8530-36719a8ebe12",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e6865662-38c2-472d-abb0-4b61fd36e3e1"
        },
        "item": {
          "id": "7b34430f-bbb5-4b85-9156-f3e56153f894",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "045abe4a-33b0-4eff-a3c1-3948a8f62cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2528c2-1419-4ab6-9a27-47f80c856547",
        "cursor": {
          "ref": "0bb3a6a6-cddb-4bfe-994e-a2c415865933",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ada93871-a0fa-4689-bb86-3e1aba978749"
        },
        "item": {
          "id": "9e2528c2-1419-4ab6-9a27-47f80c856547",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8bc54b2d-a1bd-4aef-99e4-bbd5362bcbf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077eeace-6fb6-42e0-93f3-2bbd22a114dd",
        "cursor": {
          "ref": "3371991d-7995-4df5-9ac9-b2e13867eaa4",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9150ef3b-2428-4a23-aac4-2e6e0f86c59d"
        },
        "item": {
          "id": "077eeace-6fb6-42e0-93f3-2bbd22a114dd",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7724bb12-79cd-4af4-aade-421c83da6b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab81d3a-eb51-4440-a66d-8b9bcde23b21",
        "cursor": {
          "ref": "de874dea-aecc-432f-aba9-fcff43ce47d9",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ee7663eb-8565-4912-a9c2-6eb188368765"
        },
        "item": {
          "id": "dab81d3a-eb51-4440-a66d-8b9bcde23b21",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b8b1c857-50ce-4cab-af2b-07d143bfbebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b810f8f-fe72-40bf-8a48-916139a657a5",
        "cursor": {
          "ref": "f5a5ef10-a306-411c-8682-2fdb0d13929e",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3ed73522-64ef-4383-ab24-c358e1027322"
        },
        "item": {
          "id": "5b810f8f-fe72-40bf-8a48-916139a657a5",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f52603a2-96d9-45eb-8f86-3c56dab1df80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba60b9f-8e47-443e-95fc-01902b229ee3",
        "cursor": {
          "ref": "2f97610f-7a6d-4972-9c6f-e377509f6b4a",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a612c6a8-1118-4c8e-9cf3-6ab2de60b424"
        },
        "item": {
          "id": "cba60b9f-8e47-443e-95fc-01902b229ee3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8246638c-6505-4ad0-82b0-74024fa5105b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273802b4-763a-4584-8edd-2260bfa37d92",
        "cursor": {
          "ref": "1212c482-632c-4973-a910-a73cbab3c913",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e067271e-edc1-4c95-8001-a912197fd1ab"
        },
        "item": {
          "id": "273802b4-763a-4584-8edd-2260bfa37d92",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a181b985-61ab-41ff-9af2-588f2b627fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2746c6-20fb-4924-a58d-8f3e5d5ad25c",
        "cursor": {
          "ref": "789cb7f2-5821-492b-a456-4c334fa71146",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "fc7eda79-7617-4d06-ab42-898de1914526"
        },
        "item": {
          "id": "eb2746c6-20fb-4924-a58d-8f3e5d5ad25c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "207c1948-4991-4934-95ce-2ebf21a30a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb8a1bb-2f5c-4bc5-a9bd-640578e6fff6",
        "cursor": {
          "ref": "deb54d8b-17e0-4431-8b12-739ca7b7a052",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5be3fba7-bdf7-4684-a9b5-f2de0af479ee"
        },
        "item": {
          "id": "8bb8a1bb-2f5c-4bc5-a9bd-640578e6fff6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "123640e3-1082-43ba-8bfb-a85165354ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e04147-f7f5-4022-947a-e8c292364e71",
        "cursor": {
          "ref": "c3fe42a4-e2e5-4440-abe3-60a59fcf8829",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b9dd7240-6c29-42ca-87a0-31640c1d4eaf"
        },
        "item": {
          "id": "95e04147-f7f5-4022-947a-e8c292364e71",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d5708235-f157-4513-a20e-dc27754901f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9851c68-d04d-46f8-b3ec-91bb39f00831",
        "cursor": {
          "ref": "080a74c3-69c5-4560-8241-dbef6804092f",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "de0142a2-99c0-4195-8c63-aadc40629705"
        },
        "item": {
          "id": "b9851c68-d04d-46f8-b3ec-91bb39f00831",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "413db624-f409-4522-846a-096115e13226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879b5c3f-7f8e-444c-9b65-b38a94a48382",
        "cursor": {
          "ref": "95cefb02-d6a3-45ac-a4f1-e579939d8d75",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d51c9c04-3105-48ba-bee8-9e8ea76a6954"
        },
        "item": {
          "id": "879b5c3f-7f8e-444c-9b65-b38a94a48382",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "85ddcfbf-cc53-4e2f-ac06-2c7268cf0ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505fb816-96de-411d-a906-3d66c3a4d166",
        "cursor": {
          "ref": "39b697c3-dd8b-429a-97fe-546d04cd8034",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ab3d2ea6-9c39-4e6b-914a-00d73053a245"
        },
        "item": {
          "id": "505fb816-96de-411d-a906-3d66c3a4d166",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "51dba928-df88-4970-a618-7dc62b3127fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c22fbb-4f6d-4bdb-b0fe-dcb0d0aa10f9",
        "cursor": {
          "ref": "dd0fa172-36cb-42d5-b9a6-8683eb5da931",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c0cad89a-8349-4882-af1c-76b29983680c"
        },
        "item": {
          "id": "b8c22fbb-4f6d-4bdb-b0fe-dcb0d0aa10f9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "eaf48ba1-3b46-49f1-ab62-78a943754161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8648b2e-966b-4268-b53d-71c03cc42a98",
        "cursor": {
          "ref": "71968d8f-0c4e-48e0-8710-dae2da87b803",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a06413bb-e1c1-455b-8dbb-090ea7dd95e1"
        },
        "item": {
          "id": "f8648b2e-966b-4268-b53d-71c03cc42a98",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0a78fc4b-43fc-4ed2-a7e4-7bf971d955a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c168a2e-58d0-463d-87a9-3e77ea87b60c",
        "cursor": {
          "ref": "a116ce5f-1f24-4e78-89c6-1b8b8b942a8a",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c1a0427d-f25e-4334-8fa8-77a1093cfe7e"
        },
        "item": {
          "id": "4c168a2e-58d0-463d-87a9-3e77ea87b60c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2ba07ee7-5c58-4694-b15a-01cbc8705be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69203484-c568-4cc1-a3db-b7d57616c8ee",
        "cursor": {
          "ref": "e948ff49-65ef-403b-9aa7-b05aea2a632c",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8ad8fa35-a65b-4f3d-a12b-dadc668d2662"
        },
        "item": {
          "id": "69203484-c568-4cc1-a3db-b7d57616c8ee",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1044741a-e641-4bdd-a58e-19f53843b339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554b07b3-815c-4cef-9561-01afadcc19e2",
        "cursor": {
          "ref": "d8aa6cf8-3dc9-415f-aa98-90979db68040",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a7406d34-7453-4f51-a9ae-657c32025b8f"
        },
        "item": {
          "id": "554b07b3-815c-4cef-9561-01afadcc19e2",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "16b4d3b4-9478-4da7-9532-f0a2fabb240a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ef09f0-729f-4c85-82ba-fbf15b2c6355",
        "cursor": {
          "ref": "07fdd488-03be-4ac6-a731-a02cbd47187c",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7e96055a-df3a-4314-99f4-88b3b827c64e"
        },
        "item": {
          "id": "d0ef09f0-729f-4c85-82ba-fbf15b2c6355",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ae555be9-e640-4f47-acf0-cece833d7999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac598d3a-f255-4094-b9f8-4abaf4f82c69",
        "cursor": {
          "ref": "a9ef3351-7d13-4fdd-966a-6b5a73cda23d",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "90ecff08-f953-4bf5-92ee-1bd876f4fdc1"
        },
        "item": {
          "id": "ac598d3a-f255-4094-b9f8-4abaf4f82c69",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "aead4d22-734f-42da-a3d4-f59288891561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec255ae6-f293-4dc7-9f09-4aa44aaa6136",
        "cursor": {
          "ref": "69a70e9e-b6a6-4679-8660-a96f81c618e3",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "efe55035-4771-4be5-bbbe-6b557c6d0e8e"
        },
        "item": {
          "id": "ec255ae6-f293-4dc7-9f09-4aa44aaa6136",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "38f342fb-7db1-4fd3-95c1-dff5cd486e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad77dd29-3a1c-4cf2-a06c-d446c6fbbe24",
        "cursor": {
          "ref": "a3ecc647-5cc5-4943-989d-5d85e5f6224c",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2c9bce0e-b8de-4d73-89ea-79136ac1f5e5"
        },
        "item": {
          "id": "ad77dd29-3a1c-4cf2-a06c-d446c6fbbe24",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2111186b-44d1-445f-bf8a-4c64d312340b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0213296-585d-4e65-987a-a23dca535e24",
        "cursor": {
          "ref": "216a77e1-4bc1-4eff-b9d5-7c269fd81868",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3cd35828-dde2-4417-a815-502588d4b40f"
        },
        "item": {
          "id": "f0213296-585d-4e65-987a-a23dca535e24",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "350c27f1-c3b6-43dd-8c27-9a4685ec3686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb394a1-b1a0-47b4-99f1-de7ceb66e0ab",
        "cursor": {
          "ref": "6c0ac742-5c4f-46db-bfb5-60152cbd6a52",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "443f9741-c3ef-42c1-8679-952a1ef02f49"
        },
        "item": {
          "id": "2eb394a1-b1a0-47b4-99f1-de7ceb66e0ab",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4fecacc8-e626-4b80-83d6-f823e07710a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2cd64f-b08f-4ce3-b5a6-14e7237c0682",
        "cursor": {
          "ref": "54ee608d-5438-4d71-87e4-18378ece616a",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "19a6f2b2-7445-4395-847f-d0b1c35056b9"
        },
        "item": {
          "id": "ab2cd64f-b08f-4ce3-b5a6-14e7237c0682",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b8682bba-7997-4ac1-b700-83508fa84c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa64cb9-ba7a-4d48-852f-5f941e7cac79",
        "cursor": {
          "ref": "4c17609f-a54d-41a8-a2e8-a5a395a1aeef",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "2565e549-5b88-460e-9f68-f634428b9f19"
        },
        "item": {
          "id": "2fa64cb9-ba7a-4d48-852f-5f941e7cac79",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "940e0692-70ba-45fb-bf6b-7fb0866e901a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b77622-9b37-4f24-bbe1-32eb5d006224",
        "cursor": {
          "ref": "8e49aa62-f519-4bce-bb04-ae9fe554ebab",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "19376091-4ee3-4ad7-a6b6-4c404941e4ad"
        },
        "item": {
          "id": "f6b77622-9b37-4f24-bbe1-32eb5d006224",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b40ffff6-dae9-4fd8-898b-96458aa8c96f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d1cee7-5b84-406c-838f-f5940e10fef7",
        "cursor": {
          "ref": "a7160ec4-7a1e-4bd5-8155-d03933bd3726",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ec18826c-feb7-4c81-a4cc-2e23c37f5cdf"
        },
        "item": {
          "id": "33d1cee7-5b84-406c-838f-f5940e10fef7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5877da36-86a3-4b5c-94e3-77d624479dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de1d905-a876-4484-88c2-8dfb0c8bc4af",
        "cursor": {
          "ref": "f145bf60-46c4-49e3-8241-d2ae47610857",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "af7cd37a-46f3-4f82-b11a-693081a82569"
        },
        "item": {
          "id": "8de1d905-a876-4484-88c2-8dfb0c8bc4af",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5e32c440-acbc-4ec3-8114-d49bbeaa810f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda8789e-23d3-4aaa-9c5a-29232ebb89a6",
        "cursor": {
          "ref": "79f8c0d0-c129-4e6d-8dde-46038d840a3b",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6a42f868-578f-4e57-be04-7603584206c9"
        },
        "item": {
          "id": "dda8789e-23d3-4aaa-9c5a-29232ebb89a6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c12ec676-9955-477d-a4a5-1402170002c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038afc86-f216-4e56-af1a-bffb94a102c1",
        "cursor": {
          "ref": "002ee31c-82f4-431a-9c7d-6cac9038a903",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0cfb27c4-4eff-4a70-b27d-722fb0d0af0d"
        },
        "item": {
          "id": "038afc86-f216-4e56-af1a-bffb94a102c1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "08fd16ea-d6fa-447a-ae72-ecce15e640ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301cd353-af03-4b8e-9853-5c72253ff6ea",
        "cursor": {
          "ref": "04710518-9850-4475-a12c-cfed27a2a01e",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0730313f-8ee8-40d6-8bda-8719c95242d8"
        },
        "item": {
          "id": "301cd353-af03-4b8e-9853-5c72253ff6ea",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "cc53ad5e-8c0f-4ec7-966d-0d8dbf7e4d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2352e2-b5a5-4367-8c1f-2f7e42ae06af",
        "cursor": {
          "ref": "b80187f4-9872-4e0d-a155-3584da4b593d",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b6861723-0b8c-42b4-9fdc-1e0166398478"
        },
        "item": {
          "id": "9a2352e2-b5a5-4367-8c1f-2f7e42ae06af",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "eff03014-b0e1-4adf-bddd-a47bde701ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6054f5-a3d3-4330-9538-9ffb00db744c",
        "cursor": {
          "ref": "54d5e264-eecd-464a-ad36-f83529e6d4e2",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "cb2724b3-5287-4652-99da-ae5b34af86c2"
        },
        "item": {
          "id": "3f6054f5-a3d3-4330-9538-9ffb00db744c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4edfe5cc-9c72-4f79-b188-5c801d7213a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92320e9-b938-41fe-939c-d487af0ac967",
        "cursor": {
          "ref": "4de3c38a-7410-4336-8d9f-7108806d1ff9",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b76caa35-69c4-497a-9b5d-c4ff92df06dc"
        },
        "item": {
          "id": "a92320e9-b938-41fe-939c-d487af0ac967",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8253cc6c-53fc-4e5d-b8e9-c44e7b6f6946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d6f59e-236c-4578-a257-2515d36c1f4c",
        "cursor": {
          "ref": "778c3c2e-bd22-47df-bf79-9dbaf763b590",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d63fb2df-c673-4d9e-9869-36101416a360"
        },
        "item": {
          "id": "29d6f59e-236c-4578-a257-2515d36c1f4c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3b60d2ad-5189-4233-9059-5e74104b5237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84219d8c-12c5-49f9-875e-dba2deb693e6",
        "cursor": {
          "ref": "aa3476d4-7dfa-4e87-b848-e42a4c145a32",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "20a480c7-6421-454c-bcc5-97d92a592f18"
        },
        "item": {
          "id": "84219d8c-12c5-49f9-875e-dba2deb693e6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8c17b520-331b-469c-9c94-170493b43d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49488079-5fba-4098-893b-193e91565731",
        "cursor": {
          "ref": "e87af388-a9b5-4b7b-af8e-10622d1d1793",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "39f72c72-7783-44b9-887b-abb70578a1d4"
        },
        "item": {
          "id": "49488079-5fba-4098-893b-193e91565731",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5d1fb26e-bf28-4e9f-9a4d-4d8569e165ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f224c4-9c06-4fa9-abd0-54e735937c2d",
        "cursor": {
          "ref": "b211165d-72bb-4cb0-a962-208f657c07b5",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "da4cfc61-ac52-4a29-88ce-668d134b9aae"
        },
        "item": {
          "id": "88f224c4-9c06-4fa9-abd0-54e735937c2d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "873a71ba-597d-4468-bcb7-dac4cd446583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3410c27f-9a1f-46ba-96f0-bb5954f402bf",
        "cursor": {
          "ref": "6d85224b-227c-4b95-b905-c44b336f7d6e",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "55162fc7-bfce-42b9-ada6-441e5e7bd21d"
        },
        "item": {
          "id": "3410c27f-9a1f-46ba-96f0-bb5954f402bf",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6a5b768f-9ff7-4349-9d55-433302cbe6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f20e1e-63eb-46ef-938d-fa1508aee457",
        "cursor": {
          "ref": "45ad3845-a56b-4c6e-b424-614e33e08301",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "71582911-8a98-45bf-9416-df9d3c404e6e"
        },
        "item": {
          "id": "80f20e1e-63eb-46ef-938d-fa1508aee457",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2e23f265-5d49-4075-baf5-29d9ee7902e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d354288-7afd-4194-8d38-740d21e0120d",
        "cursor": {
          "ref": "55f56e1f-7bd3-40a2-866f-134a3c6996d2",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7ae7f923-acbd-4997-b176-6bc1bf611523"
        },
        "item": {
          "id": "7d354288-7afd-4194-8d38-740d21e0120d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1b587ebe-db64-4404-83a5-ebcf5b5116fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa925870-5f6b-4cb2-a0cd-70784e9b736a",
        "cursor": {
          "ref": "87afc07c-070d-47bf-9870-20bb879ef6eb",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fb6ae435-094b-49b5-bad8-478507dad58d"
        },
        "item": {
          "id": "aa925870-5f6b-4cb2-a0cd-70784e9b736a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a95e5be8-8cca-4cea-b7f1-7e03fc8711bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd0d734-8568-4576-9656-96202b3425b0",
        "cursor": {
          "ref": "ef72c054-882e-4a71-80ef-1fe4125f0737",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "dac236b5-2f84-4edd-92e2-9e5d457f72fa"
        },
        "item": {
          "id": "5bd0d734-8568-4576-9656-96202b3425b0",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "bcdf73c7-28bc-4f44-83b3-344e90802c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d220501-306e-4756-93bc-11871f28df52",
        "cursor": {
          "ref": "a63d7346-ce08-470e-8316-9bfaeb3d2a31",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "540d1e8e-1793-4964-8077-a1307b53077b"
        },
        "item": {
          "id": "2d220501-306e-4756-93bc-11871f28df52",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2f283515-4afe-493c-91a8-fd4c3bc544cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b961ca-986e-4a46-b44b-3f7f300fc05b",
        "cursor": {
          "ref": "d48e8d93-9a12-4c4b-969a-f22825c96b55",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4cb065ce-1676-43ad-a508-9749b22102c3"
        },
        "item": {
          "id": "a3b961ca-986e-4a46-b44b-3f7f300fc05b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "fb61983a-e934-4428-a47a-c557f2d31feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17a8bc4-084f-47aa-aff1-b32ef41c1754",
        "cursor": {
          "ref": "8728b339-f42b-406d-a5ca-d20a2e96291a",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9077febe-2d0b-4961-9437-d9e9f2881525"
        },
        "item": {
          "id": "f17a8bc4-084f-47aa-aff1-b32ef41c1754",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d8a757f4-3cf1-412e-ba5b-11334a26c421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1716b2e-65b5-43b8-9da2-318d50c3ae08",
        "cursor": {
          "ref": "33d8dcc6-8845-4696-a027-ff897aa3eada",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3092dd8f-8dc2-4449-86fb-2cd822efef1c"
        },
        "item": {
          "id": "f1716b2e-65b5-43b8-9da2-318d50c3ae08",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5eecdeba-6df5-4851-8770-462326aee73e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb9d515-5857-492e-9947-b801c11114b9",
        "cursor": {
          "ref": "0e986e1e-c3c3-4d47-b669-78df7da2e811",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "596ed2e9-7925-4be5-9441-44843b0468bd"
        },
        "item": {
          "id": "2fb9d515-5857-492e-9947-b801c11114b9",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "f14f3d2b-43b9-4b6f-8f2a-da0349197f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ec460f69-3d00-4b9d-82b6-9c1e9ca5d757",
        "cursor": {
          "ref": "834a3c29-bece-4b3f-adcb-7e8817491fce",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "48a8990c-a2e9-45a5-a155-549f428837a1"
        },
        "item": {
          "id": "ec460f69-3d00-4b9d-82b6-9c1e9ca5d757",
          "name": "credentials_issue"
        },
        "response": {
          "id": "34d752a5-cc0e-41f6-940e-ef8d53a239f8",
          "status": "Created",
          "code": 201,
          "responseTime": 5030,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e981b9-2af7-421d-8a91-83783f24e7f0",
        "cursor": {
          "ref": "91f578f8-185a-4603-ac73-7e31bfe05697",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8081bc9a-2a46-457d-8a6b-326f165b9c35"
        },
        "item": {
          "id": "65e981b9-2af7-421d-8a91-83783f24e7f0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3f28598e-7cd1-41b9-9b79-2b99d7be37ef",
          "status": "Created",
          "code": 201,
          "responseTime": 4484,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7fb9709-8e21-44dc-b112-6f3029dd95c1",
        "cursor": {
          "ref": "d7412321-f9c0-4ec1-8e56-2fae4e40a258",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f0322330-3709-4c7f-a53c-09f9fce2ca50"
        },
        "item": {
          "id": "c7fb9709-8e21-44dc-b112-6f3029dd95c1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "cebecc26-aec3-403d-a7c6-6e8ed371b7af",
          "status": "Created",
          "code": 201,
          "responseTime": 4850,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1188a3-1c5c-42fd-9426-360eddd9ed5e",
        "cursor": {
          "ref": "50ef2e06-0a66-42c8-bbd8-ca1edbfe48e8",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "eac46518-97ea-46bc-b19e-47be25a825e3"
        },
        "item": {
          "id": "5f1188a3-1c5c-42fd-9426-360eddd9ed5e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "46381aec-5105-434f-ad1e-ec9533e8a83a",
          "status": "Created",
          "code": 201,
          "responseTime": 4172,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a53210-8b1e-4e76-b0d9-5714eefee65b",
        "cursor": {
          "ref": "fb3558ec-ba4b-4ce9-bb53-08a292be13b2",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f7c984f9-50c6-43f1-8821-f02d0763fc2f"
        },
        "item": {
          "id": "a8a53210-8b1e-4e76-b0d9-5714eefee65b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d45ae6ee-24a4-4f25-ab1e-4fe8466ab642",
          "status": "Created",
          "code": 201,
          "responseTime": 4351,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-05-27T00:38:54Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-05-27T00:38:54Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "2f7f509d-e2ea-4499-8519-1de80808d902",
        "cursor": {
          "ref": "bafba8ef-68fe-41df-8c91-070a368ba52b",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a1629d06-0df8-41ed-83e8-975e467d2884"
        },
        "item": {
          "id": "2f7f509d-e2ea-4499-8519-1de80808d902",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4dcd19bf-f947-4754-9a5a-eefd63c6bc68",
          "status": "Created",
          "code": 201,
          "responseTime": 4352,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2b46fa-d68f-418a-8fc2-60faa34d3210",
        "cursor": {
          "ref": "2398c5a1-77b6-4f19-b51e-c699b371534b",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1eb0f8f6-3336-4cf2-ac50-92e84d9f2544"
        },
        "item": {
          "id": "8d2b46fa-d68f-418a-8fc2-60faa34d3210",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4a5da49c-4212-4add-b527-72a9b7437871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7349d87-4a4b-4283-af7b-92ef494884f2",
        "cursor": {
          "ref": "3c4f96da-99e6-49ea-93f6-af95a05f736d",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c0e63205-13fb-4718-857d-13700e41b774"
        },
        "item": {
          "id": "a7349d87-4a4b-4283-af7b-92ef494884f2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cff3417f-6abf-4b7e-8d7e-4d2137719b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45378c99-d024-46fd-8cb3-b83e14004d3f",
        "cursor": {
          "ref": "2d68ad21-d2cb-4cde-bd36-2661e13a9a6c",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "38fe30e2-3bec-4bb9-9d2d-80e3f99d024c"
        },
        "item": {
          "id": "45378c99-d024-46fd-8cb3-b83e14004d3f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "100f5b36-27a7-47cc-b796-af0ef4d1447a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e51e47-06f3-4a16-9c9e-7ed2ec4636ce",
        "cursor": {
          "ref": "fad4f72b-d378-44f2-b307-dccf027880b7",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "cb018d09-d8ce-4212-a9df-c071c49c133a"
        },
        "item": {
          "id": "11e51e47-06f3-4a16-9c9e-7ed2ec4636ce",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d3eeee36-7c00-459e-a29e-c3eeab9bf332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba81fc98-469b-4316-b34c-9a949d945c1f",
        "cursor": {
          "ref": "677b9e9f-cbd4-4c01-876b-839dda59a681",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e62d3286-54de-4fa6-a6d8-97dcaacfb07f"
        },
        "item": {
          "id": "ba81fc98-469b-4316-b34c-9a949d945c1f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0f773390-d830-41a8-97fd-50b5e19e7316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1229662b-c73d-4d1a-9260-18d12c7681a8",
        "cursor": {
          "ref": "05af3fe6-cd23-412a-8dd1-358aa85c5964",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f770e7be-2608-4860-afcf-b857f63e30d6"
        },
        "item": {
          "id": "1229662b-c73d-4d1a-9260-18d12c7681a8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "93c60ff4-ea7f-402f-8b26-259e244a51b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d40bcc1-b008-4d21-b008-f95ae0a7f1c8",
        "cursor": {
          "ref": "bcc7d2b0-ebb4-435f-b97c-ec89c78988ff",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1867d605-d5cb-4ca3-9411-6c37d22d2ea8"
        },
        "item": {
          "id": "7d40bcc1-b008-4d21-b008-f95ae0a7f1c8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "512ee627-a454-4fea-8d0c-f71fc4167d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273a01a7-0698-43e4-adea-537cecf65181",
        "cursor": {
          "ref": "9a71654a-0c1e-44d1-abd3-4ea5afe25ee3",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f202e3eb-1ee6-454d-9931-0596b4b0faaf"
        },
        "item": {
          "id": "273a01a7-0698-43e4-adea-537cecf65181",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e5f85982-7e84-4a32-84cd-1d003f9d528e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac0b551-86d9-43ea-bbc3-14443a73f61d",
        "cursor": {
          "ref": "f21ffcdd-8f0b-44c0-a1db-87b8cedc7a2e",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6ae65d3d-123a-44ad-b858-559e2c0b1b07"
        },
        "item": {
          "id": "eac0b551-86d9-43ea-bbc3-14443a73f61d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f0913f0e-4760-47e3-9913-af3e9b671688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4512739-221c-4467-9292-fe0d627ad222",
        "cursor": {
          "ref": "cd4d12a9-821f-49fc-8719-b1b3fa221c6d",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9270159f-ae54-4d86-ab94-32dfe47648a4"
        },
        "item": {
          "id": "c4512739-221c-4467-9292-fe0d627ad222",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "dc1e0e11-45c4-4abe-a48a-e166f028b145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2902b6f1-6416-47e3-b51c-6d5366c72cca",
        "cursor": {
          "ref": "6514aee5-3046-481e-8303-f9d3bf63d121",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "49d0cf78-c8c4-4e36-afb2-e30cf63545c1"
        },
        "item": {
          "id": "2902b6f1-6416-47e3-b51c-6d5366c72cca",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f216f0cb-be21-497d-82b9-f5c37cf5e4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0859c9b5-2a69-42cc-a795-941f79ba4375",
        "cursor": {
          "ref": "d48aaee9-b2da-4b26-9bd7-183b5a969bf7",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4935bcc1-fa04-43a8-8332-5f2650b776cc"
        },
        "item": {
          "id": "0859c9b5-2a69-42cc-a795-941f79ba4375",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e26cfaed-4ce2-475d-bf53-7110b6823355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39484069-9710-4e69-8690-a0e207275802",
        "cursor": {
          "ref": "149d6ae5-6f8b-4274-8391-23b4419a42be",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "93fa0693-51b0-4e18-aeaa-047948bd3a2c"
        },
        "item": {
          "id": "39484069-9710-4e69-8690-a0e207275802",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d42d3b2d-7d38-45ec-8bbc-add8dc9da694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f0943a-e7a4-4db8-9eec-93f50f282969",
        "cursor": {
          "ref": "3404d3ad-eb80-486a-b08c-58830b65c67c",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5dfdd532-67a7-4d86-a848-03a2eed22e78"
        },
        "item": {
          "id": "12f0943a-e7a4-4db8-9eec-93f50f282969",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "04f8322a-cf1c-4eda-84e8-504db9234618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91e9a52-dcfc-4e41-82c3-16936bd4cb42",
        "cursor": {
          "ref": "07d53743-4478-40b6-943b-c88346e18ef5",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "48d60df3-3db6-4099-a438-b5ac012b2003"
        },
        "item": {
          "id": "a91e9a52-dcfc-4e41-82c3-16936bd4cb42",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c023071a-fcc9-4ce9-a51f-d9e070bdd722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23bf903f-8360-4aa0-8dd6-056d13408a54",
        "cursor": {
          "ref": "ec472488-bd9c-4c72-990e-79506b3671a8",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f1d09044-962a-4e73-9e89-4e0ea6b0296e"
        },
        "item": {
          "id": "23bf903f-8360-4aa0-8dd6-056d13408a54",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "820e422c-96e6-4494-a3a5-455e685c9f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987c372d-bb27-4130-b9be-879b660aeab0",
        "cursor": {
          "ref": "6a37e021-0128-496b-a20e-ddf745d754d7",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "09767c71-61b2-4f25-aa85-24f1d76556ac"
        },
        "item": {
          "id": "987c372d-bb27-4130-b9be-879b660aeab0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "46640e53-61be-4070-8301-b727d0175e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f80528-e62d-4af6-81f5-7da684fcd822",
        "cursor": {
          "ref": "8052a59e-e8f5-46cc-bfbd-068863bf5d43",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7cf1f521-5302-4534-93fc-3d7667338cdc"
        },
        "item": {
          "id": "c5f80528-e62d-4af6-81f5-7da684fcd822",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3b08b722-9f73-4f09-beb1-6ad0c16f690c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89dbbf28-5192-4625-a8b2-2e945f51c69b",
        "cursor": {
          "ref": "32813ffe-7e32-43ef-9c30-edc31027bdfa",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "130e17d0-cd04-4680-af2d-ad8ee7597807"
        },
        "item": {
          "id": "89dbbf28-5192-4625-a8b2-2e945f51c69b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cd56ce62-11b5-4830-849b-ecb523d89a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca95260-4dd7-4d56-a7af-9f6f45895098",
        "cursor": {
          "ref": "0a48f3a7-bb03-4e84-8431-a68a699dda1c",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a809d0f1-dc52-4024-919d-13e19fe453d8"
        },
        "item": {
          "id": "3ca95260-4dd7-4d56-a7af-9f6f45895098",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9a96ee76-96ce-4581-a75b-fe5d8265af52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97285fb3-f5ac-456a-8f6f-986f0d903b18",
        "cursor": {
          "ref": "8d310949-984d-4ca2-b655-9f9cd412c685",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "fedfd5d1-7aff-4c46-a4e6-979fae883328"
        },
        "item": {
          "id": "97285fb3-f5ac-456a-8f6f-986f0d903b18",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "49f48121-4829-4a7a-a4fb-0086857ca018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76801246-d52f-48da-81f8-1b6295c62f3f",
        "cursor": {
          "ref": "2fd7a7f3-9da9-44fa-b3e4-01f74125e5b7",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "11f1f940-8bf2-4e8e-8a8a-387ae0e96bcb"
        },
        "item": {
          "id": "76801246-d52f-48da-81f8-1b6295c62f3f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ea192388-4602-46c2-bf6c-e6284334b6e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43925095-5739-4029-a50d-95eca710eff7",
        "cursor": {
          "ref": "1e0f191d-f23e-4bfd-ac4a-a0af519021a6",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b3e97446-efa8-4598-b6ae-39bf6dd4d1d2"
        },
        "item": {
          "id": "43925095-5739-4029-a50d-95eca710eff7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fe142ada-3fac-4b6a-8153-b6cb9c85b305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee16c3a8-231e-4205-ade2-2ce58efaaaf4",
        "cursor": {
          "ref": "dba981f3-b833-40b0-a559-b43df9c6830d",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "85e11b08-9e44-4b89-b9bc-ccf209509260"
        },
        "item": {
          "id": "ee16c3a8-231e-4205-ade2-2ce58efaaaf4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "96665612-c8a3-4944-8993-2229947d5f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece65844-ea0c-449b-8158-7aaba8bef32e",
        "cursor": {
          "ref": "b27ce215-83be-49c1-8e13-bbae97fd8e83",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ed5e7932-79b4-4951-b884-1b6921e2de72"
        },
        "item": {
          "id": "ece65844-ea0c-449b-8158-7aaba8bef32e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "71d3d3a0-1d10-4e6b-86d0-eef30bf58c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b8f2fd-d228-4e87-a7e9-ec88eb644aae",
        "cursor": {
          "ref": "6cdf600c-69b3-4c17-b8b7-3555b84bf156",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a65d70f5-3629-4fce-89a3-9b98126dc851"
        },
        "item": {
          "id": "91b8f2fd-d228-4e87-a7e9-ec88eb644aae",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "570d7a68-0ca7-483f-acda-501b4cb85c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9340e38-83c2-4331-95fc-9619b9110ef3",
        "cursor": {
          "ref": "bfed7779-32f7-4f45-80fd-d344474bd2e7",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "eeead6cb-b2de-418f-b7f5-5af9fa27ce3f"
        },
        "item": {
          "id": "a9340e38-83c2-4331-95fc-9619b9110ef3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "47ef6c81-5306-4e13-9225-6221f0496e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00973a37-53f0-48cb-801d-0d8e295f77ae",
        "cursor": {
          "ref": "180328fd-5cdc-4560-9ff3-b2eda690b2d4",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5efbfff3-d2ef-434f-af40-ed514dbb7fb2"
        },
        "item": {
          "id": "00973a37-53f0-48cb-801d-0d8e295f77ae",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c6469683-9ee1-44ce-bbea-29d6755287f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a45f244-2b7f-4582-a6eb-7f93f579c2d0",
        "cursor": {
          "ref": "2dc0fc63-0dc7-47bd-bfb9-e25b282debf5",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c4004dab-ae48-47cf-8e1d-e38d912807bc"
        },
        "item": {
          "id": "5a45f244-2b7f-4582-a6eb-7f93f579c2d0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e6ef8f42-90a0-4ca1-8d6e-6024d59f95e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5176627-26f0-4fcf-b5cd-0c75bc347a1d",
        "cursor": {
          "ref": "bc9f4419-5481-40e1-85a8-d792721c3059",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8b6568a5-a900-4f88-93bd-88b8db95dce1"
        },
        "item": {
          "id": "f5176627-26f0-4fcf-b5cd-0c75bc347a1d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a44e9f72-e200-41bf-ba55-a61eb28cafa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d19fb93-ae95-449a-a2c0-c40d6a4ddc76",
        "cursor": {
          "ref": "4ee5b8b2-19d8-444a-81fe-4028fe59ed13",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "dca61ed3-5b32-46e4-933d-b4127e6c7652"
        },
        "item": {
          "id": "5d19fb93-ae95-449a-a2c0-c40d6a4ddc76",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4fcc4c77-66bc-4121-872e-b6b8ff09d3fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8353f6d0-8395-4e7b-b1fe-21c46b4cd6bd",
        "cursor": {
          "ref": "33d91449-1bf6-48a5-bbb9-7ab00f0f1505",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "34a8b54c-6a3a-475e-b48b-2ad85516be4e"
        },
        "item": {
          "id": "8353f6d0-8395-4e7b-b1fe-21c46b4cd6bd",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "55992e91-911c-45e5-bb26-b4e2b8682fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8edd5cc-fac0-4950-86c4-71e9c9c97759",
        "cursor": {
          "ref": "0179faac-9a74-4fce-a577-39a12c1b732f",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "737ab972-6e34-48c5-8ce2-eeb69e2d39ad"
        },
        "item": {
          "id": "d8edd5cc-fac0-4950-86c4-71e9c9c97759",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "984e7776-c8d6-40d5-b8a0-d9dc21778195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95456169-97c6-41ce-8a1b-32f3a5f2d759",
        "cursor": {
          "ref": "caca2375-6000-4f2c-b12c-f31fe4b83c32",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "73e6255e-ab40-4870-ad04-d3c9ca86392f"
        },
        "item": {
          "id": "95456169-97c6-41ce-8a1b-32f3a5f2d759",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "21b575ca-207e-4707-bfd1-24a188a0bd0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6d306e-451f-4c6a-9cf2-4b20b8741abf",
        "cursor": {
          "ref": "d1d86522-5276-4d81-bfb7-f512d8432bea",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "03e2a57b-8d44-4f6f-8b71-e4c1ce422b27"
        },
        "item": {
          "id": "8c6d306e-451f-4c6a-9cf2-4b20b8741abf",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6e54c107-b9b3-4427-8130-51039bbacb63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa0c30c-6533-4fcb-9900-d36487ed7f92",
        "cursor": {
          "ref": "e83a60be-a1d5-4018-99b4-f173609b849d",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "40789fd2-79f3-4c99-b9c6-b48034efe335"
        },
        "item": {
          "id": "cfa0c30c-6533-4fcb-9900-d36487ed7f92",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "2edabc34-d9c9-4de6-8442-bb95a479b673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70abfbfa-4163-49d5-a1c1-5937c4ad27a4",
        "cursor": {
          "ref": "e6539552-e071-4d64-9f88-28261581e385",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "93d24877-2df5-4f29-9062-e2fc8cc2154e"
        },
        "item": {
          "id": "70abfbfa-4163-49d5-a1c1-5937c4ad27a4",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "540ab3dc-f656-4fd8-8326-d93c4bfdb7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76278dcb-53b3-40c2-a2f3-f5c39f6466ea",
        "cursor": {
          "ref": "7bd0066f-14ec-4cd1-9e19-acdb65b59953",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f56708d6-694f-4a4c-992f-8e9200902432"
        },
        "item": {
          "id": "76278dcb-53b3-40c2-a2f3-f5c39f6466ea",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c9e935da-aeed-4376-a9db-b507e24420ba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac9bcbc-4db8-4b20-bc56-2d4f8427fc3d",
        "cursor": {
          "ref": "1f69eae5-fa1b-4e85-84c6-b0acaa76f6b8",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1dcba26c-bf38-400a-a022-cc82bebc8f7d"
        },
        "item": {
          "id": "fac9bcbc-4db8-4b20-bc56-2d4f8427fc3d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6db6be3c-dfd7-42c2-aa70-f26c9e3d1c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22bbe17-5aee-4bcd-9928-846872b90e44",
        "cursor": {
          "ref": "3998b354-88b3-413e-bddf-607bc2be5340",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "11f6b6ad-ca88-4679-86bd-0c702a5b3d77"
        },
        "item": {
          "id": "e22bbe17-5aee-4bcd-9928-846872b90e44",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "bf797866-6caa-4da4-810c-bff84b07f292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8930ed58-d79c-48e8-8a3e-3d49e688c10e",
        "cursor": {
          "ref": "6d816c59-bff2-4673-8741-f122a49ea26a",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e91b5600-e6f6-4af2-9413-9b9cabfd630a"
        },
        "item": {
          "id": "8930ed58-d79c-48e8-8a3e-3d49e688c10e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c326be4e-1531-4f9e-8091-dcc65bd2a120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0218866f-d7eb-4dac-bafd-ee2a92e5427b",
        "cursor": {
          "ref": "b2f54d49-e4e1-4fc5-840b-fc0bc48dc1f1",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "066eda6d-118b-439e-9354-e83109a6d7ee"
        },
        "item": {
          "id": "0218866f-d7eb-4dac-bafd-ee2a92e5427b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "73782899-195c-42fa-b091-6f50ddfb3006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5efe98-59c6-408d-a261-f704ceaf9c27",
        "cursor": {
          "ref": "33e5f72a-371c-43aa-9fe1-4227c4a5f183",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "be1d8f67-d239-44ad-b0b3-21446d583d2b"
        },
        "item": {
          "id": "fc5efe98-59c6-408d-a261-f704ceaf9c27",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "31e6bf9d-6564-4464-b939-1cf0199bf1ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a235360-c76c-4823-919e-845cd9c96cd7",
        "cursor": {
          "ref": "b48e5009-4aa6-4b8f-8d98-201a7cb2318b",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e7f6d68e-4671-4573-b7e0-fd3a767f757a"
        },
        "item": {
          "id": "3a235360-c76c-4823-919e-845cd9c96cd7",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "352045c3-de4a-4dba-b17b-ee9e16d46c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50271450-3a9a-470e-843a-4ddfa897757a",
        "cursor": {
          "ref": "3c598722-f333-439b-83cf-6c64a104b674",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8a909b35-1756-406b-8562-e6c0db779276"
        },
        "item": {
          "id": "50271450-3a9a-470e-843a-4ddfa897757a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f085d3df-8d7a-49b2-9ec7-f0009c42054f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7777d402-81f5-430b-bfaf-d8e2357074e9",
        "cursor": {
          "ref": "40b898e3-de12-48a6-b9e5-bed00a857dc4",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "34b073f1-28ff-4045-9b50-6db55e1add15"
        },
        "item": {
          "id": "7777d402-81f5-430b-bfaf-d8e2357074e9",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "01608d36-abb2-4147-91cb-56e6343d3202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d43c96-ed97-4189-a035-c94745364c12",
        "cursor": {
          "ref": "ca94c0f4-94b5-43a1-b80c-236beea16bdb",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f251306b-061b-4088-8052-c84c007aefa1"
        },
        "item": {
          "id": "79d43c96-ed97-4189-a035-c94745364c12",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3777d732-277f-43b6-9e40-2a23ec021547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66b037f-58a3-46f0-8db5-55b7c47542d8",
        "cursor": {
          "ref": "d5e91369-5ff4-4f15-b17e-7a3e49f1dc2a",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "aad23839-9977-49f2-886c-58d7596936c6"
        },
        "item": {
          "id": "c66b037f-58a3-46f0-8db5-55b7c47542d8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b2be5e5f-f04a-4acd-8901-e8d6359477b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecaf29d5-64f0-483d-bc36-9214aef6227a",
        "cursor": {
          "ref": "d40493c4-6a36-499c-b4bf-1e8c6865224c",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9d499446-bf1a-4ebb-8c16-ec0b3500cf53"
        },
        "item": {
          "id": "ecaf29d5-64f0-483d-bc36-9214aef6227a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5e99f4cb-0ce5-4df3-b3fb-8c98f07a5354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a04bc0-0952-464c-8875-89068cb5c79a",
        "cursor": {
          "ref": "ff2896ee-3e41-4f8f-a5f4-f49819606480",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1b6805fe-f8e1-4062-89e9-a47f340cdf14"
        },
        "item": {
          "id": "08a04bc0-0952-464c-8875-89068cb5c79a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7219f083-722f-4c72-b79e-885bbe1b7662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67b6326-8f5e-4fc5-a9ec-28f4d8e607c5",
        "cursor": {
          "ref": "444f84d3-fc1f-4ef8-9433-5ff3fa4a8cfc",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "403a3215-ed12-43c6-9d23-88677a19f51a"
        },
        "item": {
          "id": "b67b6326-8f5e-4fc5-a9ec-28f4d8e607c5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "43564fc5-232b-4d48-8e78-b34ce9fd0a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f784930-786d-4cdf-8b8c-6cccd2c3bb96",
        "cursor": {
          "ref": "96049b63-3aa8-4835-b051-3e1fe3b0f17e",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "db1156b5-1d93-49b1-9cb9-9b5b616fe4c0"
        },
        "item": {
          "id": "4f784930-786d-4cdf-8b8c-6cccd2c3bb96",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5fc2b355-5a9f-4d74-b4d8-7124076fe5f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b61eae8-3578-4764-ada3-e65144da69a8",
        "cursor": {
          "ref": "fad90997-6c32-4272-90e5-ae8b92e24a29",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a3ebe7fe-68c0-41f7-8cdd-c5c6be99893a"
        },
        "item": {
          "id": "8b61eae8-3578-4764-ada3-e65144da69a8",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0a4dc8c7-3263-47d9-a972-63ec23f1f19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d514141d-151e-4de9-a045-ceeb79888350",
        "cursor": {
          "ref": "30666839-809e-4b45-93f5-17e8f5bb3d13",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3a6f58fb-aa16-44cc-83fa-5a19eef33501"
        },
        "item": {
          "id": "d514141d-151e-4de9-a045-ceeb79888350",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "037e66e8-6e1d-4733-98b2-43976013804b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d8bf20-1704-4fb9-ade8-f6c002f1fa31",
        "cursor": {
          "ref": "d894cb61-eab4-4c06-b0af-eb7971ddfdc7",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a3c6f4f7-e0f2-4295-8105-1106b517a49e"
        },
        "item": {
          "id": "d8d8bf20-1704-4fb9-ade8-f6c002f1fa31",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "96075711-1cc5-4f49-a039-7b59ac93d85a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7736914-7330-4c09-9fac-5bab56f6261d",
        "cursor": {
          "ref": "a918ab9d-d261-4e06-96da-7f68eae868f6",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "83a1f410-a625-438f-b38f-51e8325f2e89"
        },
        "item": {
          "id": "b7736914-7330-4c09-9fac-5bab56f6261d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d3cbb800-f723-482e-881e-54bcfc1d8cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8352d772-f31c-4ddb-a616-0e0df0db57c8",
        "cursor": {
          "ref": "13a80911-f057-4800-8215-6b9abfa62398",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "5deaf558-1c33-4a0e-a1cc-428514cc92b3"
        },
        "item": {
          "id": "8352d772-f31c-4ddb-a616-0e0df0db57c8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7aca79c8-84a4-4fab-a7bc-635eff57f616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a066e70-6f42-489b-b6ef-217d256b76a9",
        "cursor": {
          "ref": "e3ffd8bc-be48-48cf-aa64-72bc9fe1882a",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c972b0c2-ba6b-49bc-b634-14742e54a18c"
        },
        "item": {
          "id": "1a066e70-6f42-489b-b6ef-217d256b76a9",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "bc62f0e0-9500-4c8d-8b5c-9a6b59777025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f22163-46ca-4253-8de2-1d8132827e9c",
        "cursor": {
          "ref": "31e41024-0eb3-4c0f-976a-3611ff1cb929",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "46e05f8c-91ad-4cbb-bd47-4c0dbe977a8a"
        },
        "item": {
          "id": "a8f22163-46ca-4253-8de2-1d8132827e9c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3e1db746-6d81-4289-ad77-034f3fce4a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f799ad4-64e6-45e7-8b7d-9146c2da95fb",
        "cursor": {
          "ref": "32c30b4a-e036-4d26-a44c-b164da62e5f1",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0e44d4b9-5572-44d9-9c1d-e9c26107f250"
        },
        "item": {
          "id": "2f799ad4-64e6-45e7-8b7d-9146c2da95fb",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "217aa57c-81cc-46d8-b2fe-0cc77bca9398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439e51ae-bc9a-4754-aebf-793a93388dd1",
        "cursor": {
          "ref": "f2b54d59-fae7-4224-8212-ff0ec92fb600",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4955f44f-b868-449c-b847-66bebb050287"
        },
        "item": {
          "id": "439e51ae-bc9a-4754-aebf-793a93388dd1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "fcf75e84-5c0b-49bb-90b4-8e8971d5bd7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404ae065-975b-47d5-9c56-b2c655e17f17",
        "cursor": {
          "ref": "a61780cc-90cd-46f8-a681-3d42e8371537",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4d4bee95-e84d-4403-9f12-886bb780820e"
        },
        "item": {
          "id": "404ae065-975b-47d5-9c56-b2c655e17f17",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1b2b7b8c-3b1e-49e8-a945-9edd8098db6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ed6e12-c263-4d55-a324-0344b2969c1e",
        "cursor": {
          "ref": "e3fe60e5-697d-431f-a565-93c4084126a8",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "484caa79-22ce-4373-9fe6-7b7914a89ecb"
        },
        "item": {
          "id": "63ed6e12-c263-4d55-a324-0344b2969c1e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "372ec0b3-1c2c-42c4-aa16-961fabec8f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b73b592-fb6b-4f2f-a493-333ca505a030",
        "cursor": {
          "ref": "53181322-529f-4a8b-acc4-37a4b2a72fb1",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "4251a00d-093e-4031-bd84-536f72c0dd53"
        },
        "item": {
          "id": "0b73b592-fb6b-4f2f-a493-333ca505a030",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a58c8086-30fc-4969-b937-6898b5ffadef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19fcfe24-ffd1-4034-9b46-35894a44d484",
        "cursor": {
          "ref": "a15b0cd1-06d5-47db-9b0e-af301a0d96a6",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4a93a256-93be-4fbc-97a4-66400a0c4a5a"
        },
        "item": {
          "id": "19fcfe24-ffd1-4034-9b46-35894a44d484",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ec396174-3ba5-4dfc-af1d-2ade700bcb2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aef6954-18ff-4c08-82b7-7c9bc60746cc",
        "cursor": {
          "ref": "b3646cc0-f93b-4788-aaf7-df4460cd7b0d",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "89b627de-be44-4841-bbac-8449f7340da8"
        },
        "item": {
          "id": "6aef6954-18ff-4c08-82b7-7c9bc60746cc",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3409344c-752a-488e-88cc-509dedeb07b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84b3b75-f824-4500-a3b3-ce095577364b",
        "cursor": {
          "ref": "7cff8ebd-3248-4cb7-80ef-1f5e0bb52e9a",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a6c4633a-0d50-4789-884e-918567e95e0d"
        },
        "item": {
          "id": "b84b3b75-f824-4500-a3b3-ce095577364b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4f770ab3-ab6c-4fac-8414-154967c3d7b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad2e5a9-c92d-4063-b23f-bccff53d59fc",
        "cursor": {
          "ref": "a417f341-44c1-4843-abe6-06d28c2e9077",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "923691ba-877d-4a89-a030-0f2c515f3cfe"
        },
        "item": {
          "id": "9ad2e5a9-c92d-4063-b23f-bccff53d59fc",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a92126c1-3c75-4b88-bd18-9093eb72e6b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aebf441-8c80-4244-b407-e02f3e2cc2ae",
        "cursor": {
          "ref": "b87d35a5-4508-469f-9ded-38e9a7e33e79",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f214380d-1fe2-40da-abda-1f281b815a03"
        },
        "item": {
          "id": "0aebf441-8c80-4244-b407-e02f3e2cc2ae",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "4dadc8e2-f03b-40db-bc1b-108faf4f853d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0fde8e0-267a-42a2-92de-4eafdd9a2935",
        "cursor": {
          "ref": "14ed18a4-6d8d-4eb9-8359-fa993924cce2",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "437e4fb7-ca3e-464d-825b-9d79c4b666c1"
        },
        "item": {
          "id": "b0fde8e0-267a-42a2-92de-4eafdd9a2935",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e3713623-1e37-42e8-8571-58b7e8bcea68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5764484-513a-4226-ac32-44cd3b7c7b04",
        "cursor": {
          "ref": "b0ebe176-5cd9-4a6b-94ee-97c2f55b101b",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8e1afc0d-457a-4abe-800b-7a99afb09e60"
        },
        "item": {
          "id": "a5764484-513a-4226-ac32-44cd3b7c7b04",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "bc4c7244-e198-4694-b989-a8d6173f0de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2872fd03-fa81-42a4-aa81-fab91339d1c0",
        "cursor": {
          "ref": "53c5f437-2ee1-451e-9c51-8304b55eabdf",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2ea91fb3-1a6a-44ec-9a63-63b18df6d9a6"
        },
        "item": {
          "id": "2872fd03-fa81-42a4-aa81-fab91339d1c0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "335e6892-df34-4ee3-91f9-7024f65d2a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3bdd21-420b-4de2-b09c-957fdebf237b",
        "cursor": {
          "ref": "b6297a66-09f9-48b6-8cbc-b466c304c504",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f1080933-e0c9-43b6-bafe-02eca3e78be9"
        },
        "item": {
          "id": "bc3bdd21-420b-4de2-b09c-957fdebf237b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "32cc4a38-573e-423f-94a3-6111aaa750e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a19e3c-4817-43f0-8cf0-4c317ea7e46a",
        "cursor": {
          "ref": "95ce3392-3905-4441-bc42-0aee2a130b2d",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0b62fad9-50c0-4e9a-9ad7-ba69ee38514d"
        },
        "item": {
          "id": "09a19e3c-4817-43f0-8cf0-4c317ea7e46a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "46e2ea33-bd11-4674-ba97-c2a14e58435e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee51819c-dd9d-4055-96b4-e50156dac6d2",
        "cursor": {
          "ref": "85034c16-d3fe-41b5-a2b0-e46990564ff3",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "67f0f064-d15e-42b7-b87f-823b67377662"
        },
        "item": {
          "id": "ee51819c-dd9d-4055-96b4-e50156dac6d2",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8c96d019-4bd4-4878-8d29-bd08ea3551c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a940f3e2-166d-4a3f-b4c7-5cd917c5f117",
        "cursor": {
          "ref": "ab7c6e2d-701a-4165-88d4-e771c41c2a84",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e9d16fe4-a375-47f4-a021-b7c58504eb8f"
        },
        "item": {
          "id": "a940f3e2-166d-4a3f-b4c7-5cd917c5f117",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c7d1a50a-2309-40c9-9fc9-e3ec88349bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5f7580-eea3-47ba-888b-753993474789",
        "cursor": {
          "ref": "04b30b59-7a03-4504-a0b6-549557f45b65",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "384017f6-0c2e-434e-93f7-b07aa7dcdcae"
        },
        "item": {
          "id": "6b5f7580-eea3-47ba-888b-753993474789",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3cf3dd85-7dab-4919-a535-3d733561110a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665801b5-8476-4ead-874e-162b059993ed",
        "cursor": {
          "ref": "0995e9bc-1a01-45f7-8747-0956aa48045e",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "aa30e04b-8a7e-4c03-98a8-d678ed627ee2"
        },
        "item": {
          "id": "665801b5-8476-4ead-874e-162b059993ed",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d5eee697-7bf0-4c74-b9ef-d6f08d5059f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b82085f-50d5-4af1-b2c5-9250c605e59a",
        "cursor": {
          "ref": "7f108158-8553-4142-8a47-f607d7a73cca",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "cf18023f-f96a-4aa3-b1f7-84c53cb35bc7"
        },
        "item": {
          "id": "2b82085f-50d5-4af1-b2c5-9250c605e59a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "65675a45-1760-462b-a845-5e3affa8d77f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1e7519-8f7a-462e-9cc2-2620f2f59054",
        "cursor": {
          "ref": "8b05bf73-6adb-478a-8806-4b2faaf442d4",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0d19e33f-3032-4918-bf0b-f2fe9a3d3c1e"
        },
        "item": {
          "id": "cb1e7519-8f7a-462e-9cc2-2620f2f59054",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "aefa960a-4e4b-4f6f-bdc7-c8a750dd2e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f850ed-0326-4e68-b31b-835bfda12415",
        "cursor": {
          "ref": "14107d5b-8c02-4675-b540-6cfd003d1851",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8ca0933c-9327-4ad0-894a-1e474ea1fab3"
        },
        "item": {
          "id": "b2f850ed-0326-4e68-b31b-835bfda12415",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c9c113a8-6995-4791-bc4e-f717b60b964a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c757f1e8-6f6a-4e1d-be4b-679f21fb8a04",
        "cursor": {
          "ref": "3e92415a-70b1-4588-b3a9-3c26c3fd3996",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f5043736-5471-4008-acf2-f31f0187094a"
        },
        "item": {
          "id": "c757f1e8-6f6a-4e1d-be4b-679f21fb8a04",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "20906041-220a-4737-ad9a-8beab05eff7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84a21b8-cf21-4b24-9d2f-2a51d722c74c",
        "cursor": {
          "ref": "b1ce2b30-2c89-4c9b-bb35-a0519d143e38",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0e1d3fb2-30e9-407b-8bd2-2668284beabd"
        },
        "item": {
          "id": "a84a21b8-cf21-4b24-9d2f-2a51d722c74c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0ab62499-701a-4164-af6e-8295c9b1cb23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda0e89d-b123-42ad-8826-b78430bdb790",
        "cursor": {
          "ref": "671bd60e-4973-4c39-8f40-ce84b9d663cd",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7a9ad315-26f2-4bfb-833a-ae8b5156e831"
        },
        "item": {
          "id": "bda0e89d-b123-42ad-8826-b78430bdb790",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "11487227-acd2-4132-b5dc-bc6c66ba30bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6704be38-3399-4020-abe5-f8d16599125d",
        "cursor": {
          "ref": "10afab96-664a-44e4-ba36-fc2e0b182f28",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0cb25718-71d3-470f-b2a0-855b335003b4"
        },
        "item": {
          "id": "6704be38-3399-4020-abe5-f8d16599125d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1e619fdf-afa5-4cde-b6db-14aa0dc814d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbd9db6-4b6b-468e-b1ad-aae63faf633b",
        "cursor": {
          "ref": "597fa721-856c-4758-8dab-ac01680772b0",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "cb0ce0a8-b257-475b-878d-0458a7167b0a"
        },
        "item": {
          "id": "7bbd9db6-4b6b-468e-b1ad-aae63faf633b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9e82e3d8-65e8-46fe-baab-7d970a1d1ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c1694f-ee39-472e-8077-5350d20b803a",
        "cursor": {
          "ref": "70cb888e-0c55-4590-9d8c-4f62cb319b5d",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "981948ff-9161-4437-948c-8c8d3a0e39ea"
        },
        "item": {
          "id": "e3c1694f-ee39-472e-8077-5350d20b803a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bbd2daaf-cad9-4c70-a9bb-ce1ffe70d4f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72eb3e0e-de1c-454f-a838-61dc5755642c",
        "cursor": {
          "ref": "1f725b63-5375-4dc8-8956-9a87686af1e5",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "cd6acc28-1eab-4dd2-9b33-c9af89c4c485"
        },
        "item": {
          "id": "72eb3e0e-de1c-454f-a838-61dc5755642c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9211a883-db21-4949-be12-9d4ffe0ceac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c2c0e5-60eb-4307-9fe1-8dd217fce95e",
        "cursor": {
          "ref": "2be70793-caac-4520-9876-f261eb57a8bb",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c7f92d07-044d-4dad-bd02-47c4852b33b5"
        },
        "item": {
          "id": "63c2c0e5-60eb-4307-9fe1-8dd217fce95e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c5eb4924-4df6-46d8-b80d-08ced3a2ce62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad803882-5e42-4ae4-ab94-d67a8294d5b8",
        "cursor": {
          "ref": "b52efb43-1e82-4d80-98bd-c5e8c1b73afc",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "69efe8fd-ce57-4fac-874e-f10abc1606af"
        },
        "item": {
          "id": "ad803882-5e42-4ae4-ab94-d67a8294d5b8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2f74b8dc-ce5f-4b43-a388-f7d4c14eeb5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96c9696-0f21-45aa-a762-1a81722612b7",
        "cursor": {
          "ref": "aa999f07-ccb7-4bd0-a09f-e2111d5977b8",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a0227ecb-0e44-4e5a-ac63-16c499cfbb4e"
        },
        "item": {
          "id": "b96c9696-0f21-45aa-a762-1a81722612b7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d40bc009-2bf2-40eb-91d2-5050723d2801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6cad9df-75a6-476a-88fc-f110dde71026",
        "cursor": {
          "ref": "58869ba2-658b-4dfb-b443-20d7cc5472ae",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e645fa60-341b-45e4-8780-acff32364eaa"
        },
        "item": {
          "id": "f6cad9df-75a6-476a-88fc-f110dde71026",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8ba46d59-efec-465d-8eef-43b9fe71eae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5c7f10-dde2-4ed1-bc67-bc7b075a14e3",
        "cursor": {
          "ref": "04e2b64c-5186-4e92-a5ce-b9fba25b2c6f",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7d0c3f18-7496-4677-8a6a-8a80d92b1c00"
        },
        "item": {
          "id": "8e5c7f10-dde2-4ed1-bc67-bc7b075a14e3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "73047ffa-07f2-4152-b9b6-b3a660a6a5bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baed8681-4f21-4d9e-8de8-3becacdd9816",
        "cursor": {
          "ref": "8dbefe6a-f0f6-4e48-a616-a0e311797f97",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d033c8ff-58db-471d-b961-e9e6842216cf"
        },
        "item": {
          "id": "baed8681-4f21-4d9e-8de8-3becacdd9816",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7df9d96c-510f-42c0-9ad9-58810ded96cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422bb90d-f135-4792-8e99-bbcb84f57843",
        "cursor": {
          "ref": "3fee4dc5-0212-4d92-aae5-bce82936616a",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c62d9c4e-0b8a-46a9-96be-e1e74f69d955"
        },
        "item": {
          "id": "422bb90d-f135-4792-8e99-bbcb84f57843",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "080b9164-44f1-4bde-b270-cb1fa790b53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "715ca0ff-ba98-4f45-86f1-8f0903de8ff7",
        "cursor": {
          "ref": "fbe8309d-4c76-4306-a540-558ae69e018d",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "de1c636c-7b0c-451e-80cf-c0a09cca81d5"
        },
        "item": {
          "id": "715ca0ff-ba98-4f45-86f1-8f0903de8ff7",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "adddb9c5-e39d-43b1-82aa-492786600b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f42118-3178-475e-a01f-eebd3e9aac80",
        "cursor": {
          "ref": "cf512c82-4849-48d1-9743-d37a903b28c1",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1bc5d14a-6e38-4ab4-ad1f-625dff2f6073"
        },
        "item": {
          "id": "14f42118-3178-475e-a01f-eebd3e9aac80",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "60863e00-cf14-4346-ab3d-9620015091e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf83acf-b914-4036-a0ca-feef21dffdc1",
        "cursor": {
          "ref": "73c97ff4-225f-49a8-b8da-e6a0f791d4ea",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "33ad1669-d364-41a4-91f7-33eb65e93ada"
        },
        "item": {
          "id": "fcf83acf-b914-4036-a0ca-feef21dffdc1",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9a02c214-abd8-4e04-b666-7cf1f1bc5bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b1556b1-c27b-4f73-953a-608a23a6a044",
        "cursor": {
          "ref": "e99123dd-16f9-4810-b6f7-531899363a5f",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f876db75-4a64-4b44-892a-b38537848833"
        },
        "item": {
          "id": "2b1556b1-c27b-4f73-953a-608a23a6a044",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b090360f-78fe-471b-a54a-873581bf3ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0863ce1a-3550-47cf-ac41-607f37285894",
        "cursor": {
          "ref": "1f16d044-1f12-40c2-a143-d46fb00154ae",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "dd1823f6-2083-41af-bfec-88f8fab03ad5"
        },
        "item": {
          "id": "0863ce1a-3550-47cf-ac41-607f37285894",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1003bc74-2e7d-4d75-86da-4b3520eb7dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749bb2df-5db6-46ed-b0a0-61fb548b3d10",
        "cursor": {
          "ref": "08fdb424-9e4c-4136-be01-dc4db1c0d76f",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "bb7897c6-aede-45cb-bbfa-950da7251818"
        },
        "item": {
          "id": "749bb2df-5db6-46ed-b0a0-61fb548b3d10",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "988191ca-2db2-411d-9708-3c4947b6005e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c710108e-4e61-4789-90a0-bd41494050ae",
        "cursor": {
          "ref": "ce56f67a-cad0-44b1-a504-7845eac31720",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5dd80e09-e8ce-4bbc-a45b-011cda5bb4c2"
        },
        "item": {
          "id": "c710108e-4e61-4789-90a0-bd41494050ae",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "bb7558a0-9a43-440b-9162-09c453e66e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df27536-9481-49bf-9a21-a59cee9948f3",
        "cursor": {
          "ref": "08fd5d3b-d0df-4c13-b78c-4db3d209d523",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "39e6bf34-e029-4952-ad2f-9c792cfd4efc"
        },
        "item": {
          "id": "1df27536-9481-49bf-9a21-a59cee9948f3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4fcd2ef4-be10-4c27-b155-d51f1fe050f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b830e343-6344-4d49-97e4-d6510e697122",
        "cursor": {
          "ref": "65d42b12-f038-4302-b9d0-892418c8a651",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7fae1461-5969-49af-a2fd-71c077c4a702"
        },
        "item": {
          "id": "b830e343-6344-4d49-97e4-d6510e697122",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f2f81bfc-a37f-4c70-94d7-99b5a6253b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "006eca85-e125-44c9-ace9-8ee8ef4690c9",
        "cursor": {
          "ref": "72447680-535d-4120-b580-f5b4c4034a8a",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f681c3a5-11d6-43bd-afe1-bf8e54bbc1fb"
        },
        "item": {
          "id": "006eca85-e125-44c9-ace9-8ee8ef4690c9",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "946cce1c-eba9-4079-bb96-e95de22228e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743d121c-1409-48ef-bba4-b24da371f564",
        "cursor": {
          "ref": "3b1563fc-7956-4bca-a188-958391668ab4",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8a33a7cc-b8d7-4000-aa90-4562862c9fd0"
        },
        "item": {
          "id": "743d121c-1409-48ef-bba4-b24da371f564",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a259479b-2d5f-4389-b24d-288c96fdfc8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e565bd-d26e-4692-9f44-11060f2b3aa9",
        "cursor": {
          "ref": "15bfb079-8e0b-4659-b986-683d246c82c1",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9b5117a4-3780-4eb0-a24c-7286f6ebc647"
        },
        "item": {
          "id": "a7e565bd-d26e-4692-9f44-11060f2b3aa9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "77743df9-deac-408d-9665-d43fde731d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f50cd66-7f89-4d2b-a933-b649b81670e5",
        "cursor": {
          "ref": "5abbef95-45cb-4aaa-8225-d67b103f290f",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c64d3e4d-9bb5-4951-b29f-d9629ea38760"
        },
        "item": {
          "id": "9f50cd66-7f89-4d2b-a933-b649b81670e5",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "de2350c4-0844-44a0-87f5-8b372b52b7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6fa4c0-7869-4dfa-850c-d0054f241cb3",
        "cursor": {
          "ref": "95c616ff-4598-485b-9f35-207e7ea85ce3",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b1e28e12-d952-443b-a78a-b1954b6dc809"
        },
        "item": {
          "id": "2d6fa4c0-7869-4dfa-850c-d0054f241cb3",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "761b020d-2629-4750-9c8a-cfc2c19e58f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e38f23e-cc45-419e-93f9-e0f9de7f3f7e",
        "cursor": {
          "ref": "75b00684-19e0-449a-ba6f-e9f3041208ae",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ba0bccd0-7511-4881-9357-33c10c0a3735"
        },
        "item": {
          "id": "2e38f23e-cc45-419e-93f9-e0f9de7f3f7e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d4aaf053-0916-4406-90cb-b2c446032aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdac7ab5-3c03-4709-8c82-0dcacfb9af0f",
        "cursor": {
          "ref": "a0e14600-9141-4a95-9382-e451d876fc7a",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "fc2f2252-b142-487b-91d5-eeb8ab4ac916"
        },
        "item": {
          "id": "cdac7ab5-3c03-4709-8c82-0dcacfb9af0f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ef459384-58fc-4705-a28d-e9b5323ab4cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d2c99e-29b4-4910-a461-a5f89bcef8de",
        "cursor": {
          "ref": "db5af57c-b135-4e38-bf02-af7f53110471",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "3f92f1cd-cc34-4916-9af1-e16b6b9cb447"
        },
        "item": {
          "id": "b7d2c99e-29b4-4910-a461-a5f89bcef8de",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "720a3620-f64a-4b29-906d-2b85dc1d064a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e351e8-0375-4db1-8248-082e047ca1e9",
        "cursor": {
          "ref": "f3683cd5-8699-4ce7-9e71-c5470fa839c5",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0c1dcdd0-a6a4-4c0f-8062-8e974b7d22d8"
        },
        "item": {
          "id": "19e351e8-0375-4db1-8248-082e047ca1e9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3b34a654-71ef-4763-8862-2ae5a8cbc73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc09ca2-d2cf-4053-9395-f4079bd54532",
        "cursor": {
          "ref": "335df218-8cae-45db-aa8d-9511d0384042",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c5e7a31f-0604-4736-93b9-db042f1b5e3f"
        },
        "item": {
          "id": "edc09ca2-d2cf-4053-9395-f4079bd54532",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d1431580-9a5e-4281-99a2-ef764a355c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967d0ca9-0099-47d4-aa58-4a20190e9642",
        "cursor": {
          "ref": "d9247d3f-af4f-49a4-aa1f-1c9d26dd90cd",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8a877272-658a-4c6d-a74b-0e394af1981e"
        },
        "item": {
          "id": "967d0ca9-0099-47d4-aa58-4a20190e9642",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6db0ba45-ea08-4d71-ba26-49ab47263d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cdd9c97-e27a-4b81-9094-62392b0e004c",
        "cursor": {
          "ref": "145cb8ae-7b07-49a2-b303-489882756579",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0291a5b1-d408-4df0-a99b-38bf83c58904"
        },
        "item": {
          "id": "8cdd9c97-e27a-4b81-9094-62392b0e004c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3c39e9e5-cbd0-4cbc-9d31-998f5c77c6b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4acde747-f685-4c63-975f-3c7496373c30",
        "cursor": {
          "ref": "cfc3c114-9620-4c22-ab90-da1e1a04d2da",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c0203edd-5120-4147-8337-a6525fd2067f"
        },
        "item": {
          "id": "4acde747-f685-4c63-975f-3c7496373c30",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "85c18b5f-0010-4650-8447-84ed157ec417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e834029e-8a78-4fb8-bf3d-8c15461a1057",
        "cursor": {
          "ref": "557822b0-d513-42ad-8e90-568cd3294686",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9222c21f-f957-4160-93fc-d50715f866fa"
        },
        "item": {
          "id": "e834029e-8a78-4fb8-bf3d-8c15461a1057",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c823d556-2503-44b1-92bd-265ead6b6a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7765c566-44f9-4bab-b703-8d3aea321c0f",
        "cursor": {
          "ref": "2d17ed55-98a6-4399-abaa-08cf8ade42d0",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c421cfd2-67a3-491b-875e-930332b4abe9"
        },
        "item": {
          "id": "7765c566-44f9-4bab-b703-8d3aea321c0f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0aa5e124-523b-481e-a0a8-18d8ae9aefc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14542f8-f5ee-46be-98ae-e5c47de87790",
        "cursor": {
          "ref": "70a711b7-0539-42c5-9bc8-a828d88b15c4",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2887ccf6-66b2-4d07-9dba-6985c29dd971"
        },
        "item": {
          "id": "d14542f8-f5ee-46be-98ae-e5c47de87790",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "adf41b42-b3b3-4c28-81b6-bdac8981948d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2af9312-b44f-458a-bbec-6fc48f0d9618",
        "cursor": {
          "ref": "ca14daa9-5b0d-498c-b3a2-48461609f415",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "97411c36-ee97-49d1-afb6-f47cf961f730"
        },
        "item": {
          "id": "e2af9312-b44f-458a-bbec-6fc48f0d9618",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f1ee137f-e3ec-4a86-b53a-2f3d36408c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9f165d-cdb8-4d65-a9c5-a8edfa9d522c",
        "cursor": {
          "ref": "869ac3a2-ef02-4a24-b5e9-c2b7f289426b",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7d68872f-f532-4646-b957-af9e9e9b9bb4"
        },
        "item": {
          "id": "7c9f165d-cdb8-4d65-a9c5-a8edfa9d522c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "346ea3f6-cfeb-41a1-b737-f30bde0dc6d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77341d88-a1e5-4d7a-b5c6-ae0faec0e992",
        "cursor": {
          "ref": "649b4971-aaa2-406a-93c5-48184b1a24d1",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3a45d41d-7620-4c40-92a1-22c6ce0215b3"
        },
        "item": {
          "id": "77341d88-a1e5-4d7a-b5c6-ae0faec0e992",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f244b1fa-3557-4e96-8b27-7b86a943a51a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23847bf-44a6-4b86-ae5b-7ff11c17c9a8",
        "cursor": {
          "ref": "40772dec-2f04-41f3-9d06-32517f12226b",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2a8f8096-3d62-44a6-bb09-d65b297e0da4"
        },
        "item": {
          "id": "b23847bf-44a6-4b86-ae5b-7ff11c17c9a8",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8f2cddfd-fdfe-4124-8099-092f9ebb3c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3593fb-1c73-4f52-8a55-c75cbb96e46e",
        "cursor": {
          "ref": "5ffd7872-f6d7-44ef-be42-1e44bf1e4b0f",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "07d137f8-87ae-4b16-b8c7-577a53ad0832"
        },
        "item": {
          "id": "4c3593fb-1c73-4f52-8a55-c75cbb96e46e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2fb42e86-22a2-4fe8-9bf3-421b65d6b1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1562ef78-19c9-4677-ae62-6c50d6ec051e",
        "cursor": {
          "ref": "71973cb4-494f-4c15-bea7-dfa143e0e461",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "899fab49-865b-4ef7-a7a7-979654af439f"
        },
        "item": {
          "id": "1562ef78-19c9-4677-ae62-6c50d6ec051e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "dbe0eeb5-5ba1-4079-ae26-b3da29483d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e206602-ceaa-4048-ac78-ce91bdf67f22",
        "cursor": {
          "ref": "ca20a0e4-d0d7-450c-ab5a-8a29c418fa8c",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d0a82b55-d940-4df1-b4e3-050525801bd3"
        },
        "item": {
          "id": "0e206602-ceaa-4048-ac78-ce91bdf67f22",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "13882fd7-0cd5-47c2-b288-d084ebaa56ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5b96f4-783d-448a-a18b-6193453733da",
        "cursor": {
          "ref": "5cafd320-1743-4617-9c1a-3fe6c0c5c365",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1dd1644f-2a6f-46d1-bb60-1e088ced8398"
        },
        "item": {
          "id": "4d5b96f4-783d-448a-a18b-6193453733da",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "95b307d6-ed40-4339-a728-862132e37718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d763c223-364a-409c-826f-619ce569c96e",
        "cursor": {
          "ref": "e84534c9-1ebe-4a58-85b2-1ba52e7866e3",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "cd101832-cb56-48fc-939d-1936b18e667f"
        },
        "item": {
          "id": "d763c223-364a-409c-826f-619ce569c96e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d972a2ae-9e66-4657-b295-fd2f40445a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db22ff7d-11d3-40a0-8d78-0c34457e271b",
        "cursor": {
          "ref": "bccfae28-9b72-401f-803e-5200da638c71",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4768bbb8-cd48-4e61-9d63-67833628b68e"
        },
        "item": {
          "id": "db22ff7d-11d3-40a0-8d78-0c34457e271b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f5f10c14-5aae-4665-bc0b-1dbb37944009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a66eb7-35f8-4bb3-82ee-47a27d0b0b1f",
        "cursor": {
          "ref": "8cdda509-862d-41b9-a876-41a0c5ca83bb",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e43ad19b-ad07-41f4-bb12-ac642ac090d2"
        },
        "item": {
          "id": "06a66eb7-35f8-4bb3-82ee-47a27d0b0b1f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "5acd3b3c-b7b8-4806-8ca4-2e2e63fd48c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c661f0a-4c8f-4013-83b7-65cb51312fe4",
        "cursor": {
          "ref": "cd14eb7b-860a-4bee-a623-19c45dd938fb",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5c0ca2d1-538e-451d-98fd-838d6c887c7b"
        },
        "item": {
          "id": "6c661f0a-4c8f-4013-83b7-65cb51312fe4",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "34b615b9-914a-46be-8135-59121f0e11ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2554208f-bc68-47b3-8b8e-bcfa60f5d731",
        "cursor": {
          "ref": "0d3e1570-87ac-48d2-9999-ce22e68580cf",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "057547c3-8be9-4ed3-b312-890cfa00caac"
        },
        "item": {
          "id": "2554208f-bc68-47b3-8b8e-bcfa60f5d731",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4da73aa5-551a-4619-8129-cec154d40bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67ae4b5-3f1c-4639-a0c3-de7f53bd01e0",
        "cursor": {
          "ref": "a85a247d-78f1-4b57-9bd4-ce6c0bfeb390",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6065d58f-5392-456f-b566-8ee024a76834"
        },
        "item": {
          "id": "a67ae4b5-3f1c-4639-a0c3-de7f53bd01e0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e57a132c-9cc9-4150-8fe7-d74b24b4316a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51254b52-c565-44f1-afe8-3417a1dec581",
        "cursor": {
          "ref": "3b4264c7-13c7-4cd2-a2f3-89d185232d9b",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ca8ef4b9-9315-48cf-9a78-4b2f05e5367c"
        },
        "item": {
          "id": "51254b52-c565-44f1-afe8-3417a1dec581",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "318d0d8c-aa81-492b-a599-c303e7141cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a7834b-ef0c-47d1-b7c6-68071cffa9c7",
        "cursor": {
          "ref": "f09f5a78-a46f-4edc-9fe2-01dc58e9af84",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a12b50ed-3d86-441c-ae2a-717992812440"
        },
        "item": {
          "id": "d4a7834b-ef0c-47d1-b7c6-68071cffa9c7",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2e21a688-adc8-4348-9802-d1963f7a64d5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24123abd-ee4e-4b5d-a200-360f31f2e425",
        "cursor": {
          "ref": "89432c96-46ae-4d26-b123-bfa5995a38c3",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3dc679aa-d54d-41cb-8f7a-3f8c451f8c46"
        },
        "item": {
          "id": "24123abd-ee4e-4b5d-a200-360f31f2e425",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5c346dc6-3321-4fd5-b6ae-ea52e3c11745",
          "status": "OK",
          "code": 200,
          "responseTime": 2421,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d02b42-9d8a-4da8-bfef-8c1a03e13d99",
        "cursor": {
          "ref": "acb3311a-1b7b-4855-8ce8-e80803604b3e",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f9a2a209-bc9e-452e-b106-4b12eb30ec13"
        },
        "item": {
          "id": "83d02b42-9d8a-4da8-bfef-8c1a03e13d99",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b6bb6d6a-5fa7-4368-b428-3c0eb9c43318",
          "status": "OK",
          "code": 200,
          "responseTime": 2811,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3275a410-2b0e-455f-891d-7de2a05ba34c",
        "cursor": {
          "ref": "53ba44e0-5d3c-43d2-960d-7a9fba56a7ce",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6200e20b-bf51-4234-989f-b4ea772ee460"
        },
        "item": {
          "id": "3275a410-2b0e-455f-891d-7de2a05ba34c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "bb87e23a-3845-4677-af18-08efcca2baa3",
          "status": "OK",
          "code": 200,
          "responseTime": 2312,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "adde0fd4-b1aa-48bb-9cf1-f45c49377a7b",
        "cursor": {
          "ref": "dd2ed92b-2fea-414d-ae16-a202b9c7d28f",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b9a97710-4945-4f25-b7b0-dc81540ccb26"
        },
        "item": {
          "id": "adde0fd4-b1aa-48bb-9cf1-f45c49377a7b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b737f326-7947-4310-bc0e-30f9e4c8844a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adde0fd4-b1aa-48bb-9cf1-f45c49377a7b",
        "cursor": {
          "ref": "dd2ed92b-2fea-414d-ae16-a202b9c7d28f",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b9a97710-4945-4f25-b7b0-dc81540ccb26"
        },
        "item": {
          "id": "adde0fd4-b1aa-48bb-9cf1-f45c49377a7b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b737f326-7947-4310-bc0e-30f9e4c8844a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be33a16-0f2a-45f2-a758-0c6ac2cf70bd",
        "cursor": {
          "ref": "de37ad3a-f492-4554-8546-3664db16d50b",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ce54f818-c0f4-4c57-b650-8afdee089e77"
        },
        "item": {
          "id": "8be33a16-0f2a-45f2-a758-0c6ac2cf70bd",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "215d2c42-8bec-40ae-9724-bc56a1e3f688",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e318e88-5c87-45c2-b793-261abe900e56",
        "cursor": {
          "ref": "bfd0c599-904c-4766-8715-15017167ab68",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a59c8245-a01b-4e5d-861f-fda7b6e73ea8"
        },
        "item": {
          "id": "1e318e88-5c87-45c2-b793-261abe900e56",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b8849437-eca3-406e-93c9-6f3f66bb2682",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}