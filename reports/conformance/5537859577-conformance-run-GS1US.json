{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3eea0749-83b9-43de-803f-365edd8f9e6e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "219ed1d9-b3b7-4f62-b939-34e16a005590",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "28031583-1e82-4949-906f-fdda4eae419b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "87d3c97a-d60b-42f3-9aff-c65e687bea39"
                }
              }
            ]
          },
          {
            "id": "f92e9532-c350-447a-bbf5-61baca687ab1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "85de006c-6b64-431d-ba80-0f3abee5bcc7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "76eb2bf5-7f8e-46f3-8983-280b566a613f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "74af9583-2b57-4621-a857-69675e0b0b72",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5f0bdd8a-e2e6-4947-b091-9f9bfd7d0225",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6473bc30-94ab-477b-acaa-21fa30d4d40f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ded9edfc-0878-4148-aafd-bc12cd44502e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e8d9bb8-8b0b-4b63-8b41-148e1710fbad"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "99860628-1316-4954-8276-2c644bb10fd4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "141121de-0c04-4d1a-9b2e-cbc40c9f821a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7ff85444-761a-43c8-855a-ef3629f6e1ed",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1607c49b-4c00-4015-8fd0-17b44efc3dd2"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "df128c14-f6c3-4c42-a299-35e65b042b7a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c3658743-b99a-4a81-90fc-897f3c560f40"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4df56318-212e-4c8b-ace3-e6fd264e328c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "340cc962-8d08-4bd5-89ce-fbc838c33d93"
            }
          }
        ]
      },
      {
        "id": "e8e8c968-3ed0-44d6-812e-adab8b9749c1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "752491e9-ca2c-4e1f-b736-29bc43fad2dd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "10ab014a-5284-426b-98da-ec40ef86dfe3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "34223283-7040-417b-a3a1-5e3a98dd0898",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5dcd39c-af06-4b4b-8bcf-c8418cf8ab68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5996197c-ee10-4d43-9887-29ec1bd4b66d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb1c1c7-feaa-499e-9387-8781cf5fb219",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b88532-8e10-481a-af73-91470f7f12c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c29a0999-1209-43ab-914d-c25548a455a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea3d828-c582-498a-95a1-3eaa9b576fb6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71bdea57-3109-43cd-8ec6-f20e13e8ea6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a78db9e8-2929-488f-8307-2c5ed1710d02"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9922df91-c626-4d4a-aab3-5f625aad132e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c1e4f7de-b559-4148-9014-620d905db360",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e624ae-bada-45d3-a939-ecbf03ea69a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "605dec63-da19-4a70-b5a1-a79201c689ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ded52b3-c07a-4382-983e-9a0f53147475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c636ae97-1411-4cf9-b596-b59d9de9e5c9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0c02a45f-326b-4b05-a722-c7ea7e2e4e4c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "10f16c16-4f4d-4d9a-a834-9532eb737c9e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c82b24c-45b2-4708-bf55-568126e87f2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "43a013c7-b3a9-44be-bee5-a78bb71267f6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a37d8c6a-8c5c-4bca-9907-3fb6aaae224a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f2c23234-0894-4ca7-97fb-f9821d3cc9db"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99a20234-1996-4cb6-8ad2-f345b29dfed8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fef82d90-f8dd-4589-b95f-b30d56fad519"
            }
          }
        ]
      },
      {
        "id": "c820a9d5-efdf-4215-bfcf-631dd9c4b0dd",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a47503bf-a0ba-476b-8377-2217434a0d6d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "240be5cd-5411-4252-9f18-95c509f74525",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f829450f-b7a4-4ec2-9ee3-9ae0f2159d9c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b34f16e3-7df8-453a-8e57-935b97ab0fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec5ab5d2-8854-4bc2-8185-0fe19733d24c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05217f98-aedb-40b9-bd40-6be77331f60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1e86c75-ba6a-4fcc-ad9b-eeeff05c950d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38fe707a-151c-4ba7-b10c-3d11a5218e42",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71baa14-cb6f-4317-9874-68f05f6a4481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be7d21b0-bc6d-4706-a7d0-5b16a93d45c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd018ae-8b92-4ec9-8822-e329495a4ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c41ea414-02e3-4e37-b57e-a42854da46ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21210094-ef5f-402a-8cd5-5394fa25825b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f16a88-ded1-45e7-92ce-3885381b915b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "123efce6-d275-4844-ae81-dcbfa917b897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de03e066-14bf-479b-af77-e276cca40ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52a35f07-df8f-4d21-8ff8-ad9201d65c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d876695f-86a7-4bf3-87f2-9bf9811a301b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "412f29bb-38be-433d-80f8-bffc54dc92e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d39fee24-9eee-4282-8b1a-b768bcf03d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c4f2d5-5e37-49ef-b8e7-aa533b99e80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1eba66e7-0061-411e-88bc-ded9f730a54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ffbad3-9a62-4d63-8cf0-d7e8ad06599a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91cbc081-91bb-4f37-b1f4-24a8f4bb679f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6f88e51-998e-4bc2-a8f2-b7e414544053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849a5934-8879-43b3-b239-659e2f9b074d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6c4d015-4070-4329-b20c-8ed8956d1227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5d7167-de7d-41df-8f1b-3f3befe03825",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335c1ecb-c1cc-4cf1-aa6c-a0f1577a5026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5d28d66-f758-499b-9e18-9dd3fa2b16f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ca5554-eebc-41aa-b35a-310392835580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "117de7e3-f16a-403c-a639-8fe1554c1283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5bdc7e-4277-4087-b897-b83e65649508",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dafe4755-93bd-4e10-80c0-c7b67f3c7e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7373631b-181d-4faf-9890-cff924f95bee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da8ebdd-b8f8-42e5-ac60-d1bb9dd16225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "842d18be-e754-4ce3-a6cf-a9520c2664da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7dafc47-0804-424e-8da8-39e97155caf5",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931fa85b-027b-4bf2-90b4-a5142772829d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a1ddfea-c911-48fe-8cb3-96d2b9d175f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8df21b9-2c11-4d1f-861d-75b4d2f8ce61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "627f1e12-8a3c-4ef2-9be7-060d8a75976d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49552dd3-9e88-420a-9541-ed0622751dd6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc88248d-0a71-40af-ab9f-dc631b3eab5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "353919d0-7141-4ed3-a6c0-170712e08d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f0f7b6-c441-410c-b02a-aa8dbed57bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd7c5d12-beef-4ee0-a86c-9460ec97753b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97335f8-7f59-43ea-9589-4bc02f37dc81",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1fa2ddf-8dcf-40a1-aed7-a87c860ba75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81691137-6f30-452c-8d72-49bc350df78a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7736c2b-2186-47ec-ab9e-85c4f4cdabf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1d5d7b1-dae5-4e6b-9d68-8f85982fb868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a122c00-c0ad-46ce-9000-ce5101a8de52",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c118a189-b0bf-40b8-8cd6-7e97e11dceba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dd1bcda-2bba-4d5c-a2c7-6f2fdd3550ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b5e2a7-46a2-4e1f-86be-e8396a471c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f39db8f-1a57-4433-8d9c-0eeeaa49c5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6e5af1-de89-4bc5-9bc5-4b906b107773",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65cceb5f-1690-4c71-8b07-5c9fa0344bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf4bdb9b-874e-4e95-99ce-8407b7a6b693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003144da-c1ca-462a-a384-fb20b538e845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9652c352-15ed-4b37-b51a-a37a8996621f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eecdcb6-8922-4d93-a111-502a348c0d8a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "712c57b9-9058-49ad-b30d-0f3234b74f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e60a1317-7ed2-46d1-b8a3-ad0209cf0cfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e2d14c-76e9-44f1-9ae5-05137d62d509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b36515a-f0d9-434c-8eb4-523a1cb0dc6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb01a6c-5a0d-4866-999e-6df689147e21",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22859c8-67af-4ec8-8e2a-e8f911c7b089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "608dc6af-5d92-4f59-8bb0-f13d1c040f94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b22991c-e01e-4d40-9947-3664ce718a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4cd3cf27-8578-4787-b962-651d938bcdb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f8f6b6-3cfb-4afd-9067-d3d0dc8f7867",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d05ec0d-4b49-4c5a-b60d-08be6eeb67f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc18f333-a48a-4ce7-b6a6-78a5cd0d5fed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e48569-4c35-495f-b0a2-ca1c93b45deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04696642-e3ef-48ee-a301-fcb641a1ff30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f199031c-c6c4-46bf-9a2a-44feb04a885b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dcf0c21-3f3e-40cb-8ebc-6e7240e9322c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac95a082-51be-415a-92ab-5f6f83bfd605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1e887e-df5a-4079-aaba-12ea2224deb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc985a09-6940-4146-9828-31ac63f51b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ffa0f6-1ff5-4a23-99ff-6cf40a907300",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e3a38c-d99c-48b9-b9a1-2f524afaad10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3010b505-0769-4349-9e5e-6dfc0e1d5ff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e6c98b-a366-4526-840b-4c5e5cb8cbd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c6c4b68-ceb9-421e-837b-d31c026a7c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7eda9f-b806-4d61-9b7e-75029ddd9690",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47916838-caf8-4fa1-930c-35a29f9ab225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84f6c577-b68f-4c10-a9ff-08e8350b959e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c4a34dc-bfea-4dad-b121-9a1ee29f2ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e41cba1-1c49-4295-84e5-c4b4b5359217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3203c5b1-7047-4cc3-9b5b-4eedd58ec653",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9138de91-629b-4cb5-ba6b-e8cd076b5f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aacac216-84d3-48c3-9e50-12db6fb2f454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345620e5-ce68-4d38-9a95-46bff87172d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a77ec979-7eec-4045-b091-aa679ab90dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e08739-4af1-4395-b77a-f662ba750ac8",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17025f70-eef3-4456-9681-1bece3cf24f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e642bd3-ae19-44bf-bcea-2098be148a28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "facc0af8-2f36-434d-acbb-db05aceebb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbc2239f-24d5-4b8d-8d9e-f7b27c0390e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df22845-7411-41cf-bf9e-ccc8bbb040dd",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d90ce5-1e4a-4f54-8add-a78c872e2ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c552b37-8ae9-4d56-be91-a1b16fe39e48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acfe3bbd-cf64-4ba0-99fa-2a1788252f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "648e34f8-9459-4e15-b78d-6a6ce02f62a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b901412-7075-43e7-9c9f-eef767e1aacd",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7300b764-58ad-43a2-9bf9-9baae9c26dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da00590c-a5eb-4bb7-b3f0-54b0a1b25b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f0cb74-a3af-46fb-b8e2-a99677be00ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc9e8c80-e89d-4324-8215-a1871529285a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e0481c-5c97-4586-8016-8a9031a49040",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "594c25ac-c06b-4262-9215-cad1a5cb6ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ae2f9d-3b33-492e-a0b9-c37a778635c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65cd2553-5764-4c98-aa8b-88cb2014cac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f5f4e8f0-352e-402e-8034-150ba25b06df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc488fe-2941-45c2-a0f6-8d0a2b7a688c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa90a54-8e2f-4f5d-b00a-c6f43fd7df89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdd67000-adf7-4dca-956c-77551b7723b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd048db-22bc-4c69-aad0-842a3093c64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f24f67f-d1af-42da-b05d-1808a6e778c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e97863-fd3f-46a3-bf61-8552f941ce86",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed2a26a-422b-4088-a1a1-4b9af0d732bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e968daa-6d8e-4a85-9264-40067e79629e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee73d43f-28e9-4eaa-b712-87faacd73bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "45c40446-979a-4426-94fe-d0fa5d18231f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619be25e-1dc0-40e0-810e-7a75d327ffe5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c064afd-f3a5-4641-999b-a7766c987029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c6b747f-f4fa-49a1-ac3f-1b0fa11d5939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715d1c92-75f4-4e3e-8d24-04efb1b6e39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e22d559-cc09-4442-870b-d588f914b78d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04beeb2e-a41c-4409-8726-f6bb771ac036",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "502b4c02-0cc4-492e-ac5b-4b5b6032fbf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c274b765-269f-4344-9b54-b8b12ec2c976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ce893f-d1b8-4372-8cbd-47a68221ac84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "96c7f6bd-3604-4a70-b9da-37cacc4e575a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a92830-a155-493c-bff3-ee9308a138ad",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf62a6cc-cfbf-45fa-9047-0dd25d5994a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd8ca0dc-b4bb-47e7-9990-459fb3e670d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26313db-0004-4ef1-b502-571a6c5b710d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba2f4e1d-01d5-43f1-9ec6-77db743acd99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47441674-2ca1-49ce-ad66-f92be7a46862",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82719a77-7dff-44d6-82e4-a00a9f6b0f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1409cb46-e568-4d74-862e-cba2e07949e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e9ae98-3dc1-49e0-8d89-59e0084803d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f6208a6-7379-48ef-a2aa-40dcf5a76cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e0f894-8414-4b2e-884b-e31656616fc9",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee69697-b4c6-4dba-80b4-2f654654d406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dc2d804-5d85-4784-b3d9-e5024a08354c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8001ac-f3a9-47cd-834f-b4776af2a2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb32391-4fb2-493d-84e6-e2ee2919f771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "944e8b9c-6dee-4e2b-be6d-95fbe9357158",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72832c2-27cc-496c-b0b5-9ad5067bb352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07fe7927-af82-4415-a356-148390af8b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b4e970-9a2c-41ef-abce-cf23ea8a111c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f5c486f-d667-42b2-a67d-7d06c3fbf767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddca8ff1-e032-44c2-a5bf-cb5505646608",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5637c3-d34e-48ef-ab31-cbff4cb02db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec2afbd-a918-4317-acd8-b84636150709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca3916c-7b62-4f2e-8978-1c794b6fe98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "591eea60-cca6-428b-b224-ca44fc597531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41036c1-ea04-4c63-8094-8bb2e5ce243d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c0182f-ba37-4033-84bc-3e6a14575c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13a556a8-6a9f-458e-81de-a9f3678751f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556b24df-b233-4b66-b52f-19b57222ab44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7445b17-7f55-4cd9-a09c-e9988512f393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dbe1874-5859-4e8f-a343-f46ea5e0007e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eff3831-fbfb-42f5-a1f9-c579ce0e130f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a3b35ee-7752-4a75-8cc0-d8bb8216f24d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30cb6f70-745a-4962-bf63-49b2aef1ff5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "033be2b4-b829-4450-b4f8-ed2836788877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e98d560-3d19-43fe-acd0-2dc2934c9a8c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c4bb1d-f229-42ef-a843-039b4d2996b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b08838-64e8-4677-aa70-f3885277bc46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a3db96-30dd-40f5-94d1-686b3d36a7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8ab7277c-5c7e-4d90-aae5-d943ce68bb82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97bd8c80-29d5-4112-b69d-7e4c00426e90",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b09ea6-74ca-496f-b409-fb1e3333042e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71de4914-b452-4a42-b98c-9aedc11ee645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875ad8a9-92d4-41f9-9bc8-06918f2b121d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f6da542f-1a35-437e-93df-10b52c053c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650acdf5-6164-4694-9d88-3b896ae61faa",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d32714-063a-436a-be51-95883fb39a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "153e26d7-5cd5-4b9d-a323-da08f8ebb0f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28df9a45-14ed-4077-95bb-7b3482aa1828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb08dfdf-3e99-4d54-90b4-083f3f4e3068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aeba7d3-d7d9-4fe7-9dd0-426e04b8d2c2",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a714ee-40f8-47a8-aece-00f63465b670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "258390a4-6c99-49f1-af83-e40d88062943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892d4fa6-081f-444f-83ae-39ed3031b984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b21cbbc-f3cf-477a-a8b9-8efe465aea7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73203c1-1657-4a1c-8758-342a42ea54ca",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28bbf9a6-8a63-497e-a012-7053360458aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "291708b5-97dc-44c1-99ba-ca783ab50c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee9a493-4b2c-4934-8d2b-41724f8467c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca5fa9bd-ec3a-4c04-b134-ff897b369911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef5d7a96-efd6-4b53-90b9-0603c439f9a2",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c60ab82-79d2-4a8f-a5be-893a1b22109f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7e86fbc-f1f2-42ba-85f6-1688896a39d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d74df92-fd19-4fef-9f94-874ae7534bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e076a1fc-0b10-44a7-bd9e-c646d6254fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a7819e-6db7-4cf0-a06d-db95a62be79e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ccfa46-6892-459b-945d-dda0d5269874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ab183a-aa30-470b-bd04-1b3c1641eb3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be36cf8-2234-448c-88cc-8caf2e719723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6711c6ad-0906-418f-9440-3df89fb13818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b05ecd-ac92-4129-ad71-058e6aa9dc6f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4daccff0-0ebb-4c3d-aca5-70f36fa58617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab6344e0-fcb9-4535-a46a-e715200c670a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08de5c77-b31e-4420-9367-4e3e3f7bb941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d4ff79ca-2a24-42b8-a689-2815dc9635bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e06b8b6-9918-4327-bc39-c429ac87af57",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91d9228-43dd-45c2-a3b7-39949e2a1cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ced8274b-b101-42e3-96fc-9f563aa473d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda305a4-0b13-4d2e-9ad8-c752e4470480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4d5a545-5ca1-4a72-a882-211c158533d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6351c775-2b68-4c67-861c-29c0c530016e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be563bfa-173f-49e9-b11c-94f2419e5829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df0d116e-0b56-4105-8c50-70739b22c096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7e674e-7923-4c48-8788-931e1a590e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "58466162-fdf1-44e2-a172-5dd86c3d65bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1c4e3c-c5e1-4997-801f-0384cdc705a4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b03ef74-2774-44d1-bbba-345698976d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "089cb878-1f5f-424a-b379-9f8dfbcaada2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e7e8ef-4a3a-4364-b6ca-4565ede385c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b11d5c55-87b4-44b7-8ac7-a26ee3a55e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b803f95-8287-4413-99d2-8191ccc081e1",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1327840-90b5-466c-a9b4-8583234b9d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "585e00fb-74c0-4885-8c1f-1bec164c81ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f0c6b09-4525-4ffb-b2d5-4ef8423c1581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1161429d-bb03-405a-a83c-60d3c848a675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f8ff76-86f3-4561-97c8-3e813c216b56",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1a5575-fb67-4442-8eee-07ca43a36484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "743bf8e3-8264-49c5-abfc-ef1f5a7e1feb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2781bdef-ab18-43bd-b3e5-386f195eb68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "77217bf4-13b5-47f5-a195-1432a0c303b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb83cc0-6fe5-4a50-8811-22c6fbe0fd68",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00fe0cdd-df71-426e-be86-ba1b322443f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f23bc341-7643-46f3-828a-839d8e883fb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c9d61a-c36a-4770-bdf4-ff86610f470f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c7e5980-406a-44bf-8084-bce43191899d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1281a3f9-6175-4897-9957-da519069618b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe93d3bb-5b1b-411e-a10d-2fe181873c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc233aa-5893-4898-a832-6870d38386cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65560e5a-6f44-43ad-891a-390d895e3f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "af780fc9-8a52-4370-9fc9-9db4772c4f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf6d0f5-541f-4018-a756-fb889ef37c5e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "145c57ff-f339-490d-a0f8-8884411c26b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c92b31-894b-470c-b09b-693bd11c8da8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7b44a0-79cc-4e1a-9f4c-1a19c31fb5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "680bff6b-9767-4adc-bc5b-ad9f26e4ad0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716e5241-b54b-41c8-936c-d6fd6f6a75ef",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c494c4ac-fd9f-4a24-8a2f-f5b962d9d084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d1da590-7ea8-462d-bd39-e35a9143054c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72da2db-98bf-47e6-80ae-c6242c1a4dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4412a4d4-f9a8-4d3f-9c4e-29756b6e13d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e95d16f-2fbf-4515-8275-b52420f975bd",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf90d41b-b3df-4c2c-a46e-23ac24f64612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54f10295-f142-4d75-88d9-2649af80a827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "230f3082-8c2c-4aff-9f1d-613d0ca3c8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "31cb3bed-ffa1-457e-ac40-b92a4ade3697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3058b74-9723-45ec-aefd-a812b82eca6a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0491ff-e1ce-4b6b-8a75-410c5c75053e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c00309c4-10c1-4e2f-a780-e3e4d3f20e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93589251-2722-49c5-95ed-12a6ae1f74eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0c65770-b8a4-4aad-8f06-2e65238cf693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5946a4c5-1551-4684-af98-125268a88e6c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ab0234-3947-429e-b51d-95aa5ed4300c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cb33523-6e37-4b9c-a5ee-d72bafac05ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344866ce-3a0c-489c-83f0-361c7825ad29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04714221-0127-434d-ab71-449e996e7ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0620a657-da9b-41c6-a550-bdf22db6ccf5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "978d8441-6a77-45b1-9080-5d4615815efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1edf9020-176b-4826-99d3-17d878e93630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9620ce-713c-4717-8588-c96d702de1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d793880-c988-4158-97a2-27b880a30611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a03b7c3f-60f6-45ad-860d-7a8a70a42345",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d807e8-b020-4b23-8b22-9f40dfd2823a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe5f9103-6ebd-437b-9df3-772cb6a245a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6795d721-c810-4378-8c6f-cfd720e348bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8654eee6-28d1-40ee-b260-5d90a3ca118e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827f0c73-a2cd-480d-9324-c7a962ca8cd9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8204536a-b238-4d74-9df0-c95451223f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ec59fcf-81eb-4c30-b3a4-af9c6b70b199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f6674f-bfd4-434d-b646-5cacf38c3d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "031c6702-3c96-45d8-b6e5-17a9ffee7fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a707df-6bb4-4fe2-a3f2-9f9580e52553",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc77ed72-9d81-422c-baae-dbf86ffd3d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60395afb-c5a7-4873-a66d-42e1c6042c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6397fb5-a6a8-414f-b9b0-e8be890fac19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a181d05-861c-4a2e-9f8f-88fed31462e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211ff53f-3693-43d8-a6e3-014eb968e7ec",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d401b67-9f34-41cd-9edd-366e5a7ac3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f8e574d-9594-4c5a-9a21-282a8262eccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf45728-1b23-4c32-aa1b-8a82267efafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3500207-add3-47ce-8d7e-0c0a9ca5bf62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8820933d-ffa2-4c85-ad04-4c007714440c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ce0e09-3152-4d36-bb67-1a3703ae26b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1c61a6f-44f9-48d1-84cd-2e6453951dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6687613-646a-4dc2-b1a0-12adcf5779db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8715c6c8-3622-491e-8640-5816c5d7a389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42311824-4fac-47ae-88a4-404782932628",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2f39cf-dcd3-4a2d-a927-8ba923635972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91b1a887-89d3-4adf-a0e3-af5669579615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba3ad00-5668-4383-92c9-92b6c59d3cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f4270b0-2fb2-413f-b1ca-851d2c4bc88b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51690c68-936e-48b3-88dd-41e9399b7581",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b6c4db-4816-4a8c-a7af-510228df4664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "809f8dc1-f714-4e40-ad6c-4e6fb3c2d4c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2129b3ad-479e-4793-bced-21f985346827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc550e4a-ed88-44c4-8e55-cc7f691f5595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d01549-68e6-4ff4-a9fa-3be6d7e1506f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23a14fe-b595-46ad-8de1-bc1139e2a341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "196dde91-04e5-4b15-93a1-83e80b29879a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e95633c-0974-43b4-a58e-35e49b3de9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "af778485-225d-468f-9973-afbe877057fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee53e07d-3a2a-4b56-b1b9-9abc827e2579",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "539bcc65-5ad9-4349-89fb-545aff7484fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56c414c7-101d-453f-a641-b1ac49b93abb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc929a7-60aa-428d-92bf-0ff5964b22d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "827b1067-3112-4f82-9d16-322f6e356dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86134274-1935-4eb0-947b-d40072831551",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fafbd5cc-710e-4114-8586-7fedfc12bf38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d6a1c8a-a4d4-4981-b61f-f1cb9f630523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be2587ed-957c-47ba-b7e2-4efdeb5668c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1913bae3-3928-46eb-a20c-1d21eb4f974c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e000d2-1185-4a6d-ad23-366134b72775",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "934ba823-a537-41e7-b760-901c78835c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c8bc35-2b82-4165-9141-501bdcf0d7d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49662123-67f6-4718-88ef-a420d01cc799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f638ee32-0494-4f63-abd0-9ddf051d48d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a626f32-4bc9-4544-a9b0-9457dc501e14",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f0ca10-85b9-4695-9614-b252e479e606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd768c08-3d66-4b6b-8631-58de2b60eb91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089b05d2-0a36-4df1-867a-e5dd01a714f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "02bc25fd-509a-438d-b9db-56782bb25718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814fc18f-8ad9-48d4-9c8a-76d27f1b1382",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44babbb8-929c-498b-b174-f3db68e52ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c336fa48-e060-4c11-aad1-7a5956300f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ed3352-d8c3-41fc-a789-c0a9d28f0472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c6b610f-ae1a-4a01-870f-157c5ba753a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4460b3e1-62cb-4bd9-b1df-36c02949d729",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91479b8c-9456-4efa-9f1b-bc66b7dddfb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e5c4a6f-f4eb-4455-9d96-8a86f23f463c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5c636d-48aa-415b-99b2-a959e29ffbf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "81de08c1-20d5-48d2-ae5f-f7a1032a408e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a4802d-6c65-41f7-8a29-c225ebb314a1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "322c40ad-2343-4fa5-a6b5-ec8ca9441909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdd07e7f-658c-4ff2-b64b-bbd0491bee90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55cc739-4933-43a6-a4e4-d8647830d53d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5e553b7-b646-4751-bc3e-c1575f13ad36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "299008c3-43cb-4157-b925-863936c82cec",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f9b45e-bf38-40e2-8c52-a9015d9dec1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0565004-810c-4bad-a827-14c6115519dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75db5f71-3b34-4fe4-803e-3835fa201ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f89a0131-a700-4791-8d55-581f1284a9e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0ca324-e64a-4f57-b193-522e2655709f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f5a8e8-1911-4a04-bb5e-117f3adbc103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89f2431d-e55f-471c-9abc-4daade90b7f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2a0401-4039-4f2d-9329-565bd8246a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "675df34c-f507-4a00-98ad-692f650275d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45db946e-c123-4550-813d-ef97b7875c24",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d427bd-3b96-4fcc-af26-4bbcc3ac2bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "512048dc-1ac3-4385-a585-39186871a7fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4dc6f6-a7e6-47cd-8e80-6bec4c98880c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "00bea7bf-c8bd-4303-8315-8d0b12b461ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03cfe229-c645-42d7-a291-f6bad2fa9de7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c924edd-8bf3-449a-a27e-801062a03b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6dada21-af72-4706-ab9a-b67856e4051f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8c93d1-e340-4b41-a3ba-dffc10ed467c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a85e2300-383a-48b7-83b7-7e6b86b803ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0805b88-9eeb-4822-9145-9478d26b26d2",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9428b4b-0882-4f23-a214-b71d6d6e730f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14e412ac-610a-41c8-a3e5-658304a31f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3899838-c204-46dd-9b9f-8cfa208852eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d29c8b73-eb64-48c6-b572-ba78c51e7dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f9e38ab-fb7b-45fe-9774-0db2a1949f7a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "948b43df-1f5b-45f2-a172-e6bd232ab4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be1a0cef-f16c-440e-b6e0-33fc208ca975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15eabd8-4399-4b8c-9f8e-0cc1afb8d0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4348a48a-461d-473c-a282-4185b9ce12b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e41e85-d727-4ecd-840b-f52250f98a6d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4901c05-e464-4276-b692-ae5ea523522e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abc6bb6e-01a8-495f-a2a9-63a41018a7a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "544c2ba0-0288-4181-a1b6-5490a0772e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0560e8db-1a82-469b-9489-b6f9c0cf835d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc39b7c3-51ae-4ca2-bf1a-8da700c3e8da",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f21043b-6fa0-48f3-a4f5-49b6d918aac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00db41b2-b79a-4e5d-aec2-2e23e548fef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66626e01-5655-413e-99e3-c00da0a98742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "64d82ca6-e8f0-43b5-a7d8-e1bc4dec3418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccad653e-5ea1-4f8d-abce-462f4a3e8fff",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2e825a-4c14-4130-97bf-65aefd40febc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30aada63-c9ef-4d0a-8b21-33ba035f0975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919b2130-d190-4e98-b45d-8b8357e543a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd7f2dc9-fdfe-447f-9fdc-56ee3def7b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33e8858-34b8-4a48-8505-ccba962ef58f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4839937-d077-4df8-a326-a770b0e32e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "079cb6e9-fdfd-42ab-b116-4500ec454e56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "031c2947-470d-4ddf-b966-f433111f2a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "85c2e7aa-3841-44da-9851-cffa74e40037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e220f05-4668-413a-9bde-237dd13d6358",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d649fa-deb0-43c9-90a7-1a7acf671c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edbac996-ec81-4988-9e53-b2b96532cbe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ce5b9b-8db0-4200-9f10-32052321a5a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "88159c0e-1691-48c3-a204-8cf94e2a8d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4356d04f-3ddc-4e4c-96be-ae765c6acc34",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e9a49c-5357-45ac-88a9-c5c0bf40ff18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17abb25b-e51a-4a96-8248-11d93b8328cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb5e5bd-b2ca-4268-864c-e1a49c92fb92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "700f2acd-3f4e-41e0-b887-54c3d0d653ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a61cf6-ec21-41a1-b1a8-ee00b3ad6873",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "062f90b0-3f30-40c6-9009-d922165cdf50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee83fe2a-c318-4243-8920-b08924d4b80b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f1405d-f4a5-4a45-aa5f-7de1e70babd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95054a17-c9c4-4cb8-afdb-2c35bc131b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b460e5f3-f660-4776-9b0a-12d91ccc7fd4",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43357916-d326-413b-97d6-5f17b7d37cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c58b5268-0236-4b3b-b838-db9433803e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470d1625-170a-45a8-b81a-8c06f6386ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "19635eeb-d74c-46c9-9991-5d931b1413d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9943c446-5223-4672-b041-2311b14386ff",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce512908-5736-400e-accd-d5e4623ea2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f102942-9985-4698-90b0-d2aab8efe928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f17fcd0-ed8f-4939-be00-5f5ca40508a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4321a6d1-46ae-4298-8f4b-dfc0eaaa5df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea0531e-099b-4443-87c1-a7f77a304825",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e407a4d-056a-4726-839e-1b800c9ea7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68a9b284-4318-44c3-8fdb-64edd8602376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46aa27a5-2f9d-4e89-b52a-179a78e7bf3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d50e818-3794-4242-a706-2bd79856c32e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe4868a-4fc5-4572-aec2-fcd185ae367a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "078ff8fb-bcc1-494c-8d6e-252211339b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56031942-7c95-4129-915e-ec65fc75b722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485bd282-978f-43fd-b910-b330d3aad357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6ab79a3-a163-48b1-9c8d-059ad4bb85fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9808b53f-c295-4fcb-9e63-58755c505657",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c91d22-fcff-4b17-987f-14424e1ef184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05ea5e95-bfcd-4782-b3e2-c2f0f2738b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7418a7b-1f22-40be-bc9d-ae0420f63433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1eda9732-bcab-4073-a31e-696b44621899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62e7b4e-f44e-436e-9a56-d5363a9673d2",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "237cac37-afa4-49d7-8abc-4abecbccef56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df5f7dc0-1460-4084-90d5-41a2541f704d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11cb8209-6227-4b35-91d3-40b996ba1065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a15833c5-7199-4a4c-8474-d10522fc8f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5cfc4bd-70c9-4b99-9639-6b19b4f8ed42",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b239abda-cbe1-4bff-aa92-1ffbfe952152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb519676-f930-4d61-8af2-dbe9a016e730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e689d0-7352-42da-99c6-fa06f1f72be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b47b24fb-a524-4880-9487-6e3b8b37e875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3b16fb-898c-4fda-b06e-56cdf82a6368",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "159552dd-66a9-4a9c-9651-d975c2bc48da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33441085-7083-4185-ab40-2c16227ab8a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee95c42e-87a5-4206-b144-4d466ab791b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b2ea2e3-6d7d-475c-bc48-0ec150aea914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed357ba-d28e-4af1-a3d0-7cb552389d79",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f712736d-f752-479b-a30e-9561fc439f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "75527b23-866a-4b05-899d-17ecb3a69629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f65945-589d-4940-8e2a-3b7cd925426a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1b8bfdf-14a9-4ceb-a759-cc6ebcfc99a5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "faa2e68b-1e30-4bef-963c-b8d9d0b1eaab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "292d45b5-d842-4af0-b940-7462cd0114f7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e111dcb3-56fb-4d71-8372-9478352160c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f02fa70-5cbf-4a55-b367-76e7eb4d440e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "933c94bc-eab9-4f00-8687-74b860a38405",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d742191-fa99-4d21-b0d7-f26a82c097c5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4583ad2f-faa7-4122-b5cc-5505721f3efc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f89cc9ab-f915-45a6-a2c8-f36831780c05"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "581b9b99-6885-4150-9da4-18b013937c20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ca0bc98-3523-4070-a75e-d5d656817f11"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "10c1d709-e262-48e5-aae7-4db18938ff6c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8ab67e5a-b08e-412d-b478-b016f4da1589"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "123014ef-deaf-4315-b529-e5a809690ad0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5ae91c50-1481-44ed-bf09-981404c82d6e"
                }
              }
            ]
          },
          {
            "id": "ffe1744f-949d-45ca-8ea3-badc541d6f04",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bfb5bbc5-59a7-489e-99fb-b678228fa1c8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bfbd2c2-ebeb-42c8-bb8d-d84816e9b19d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3eccf4dc-ad8c-41e9-a19a-6f4be52aef8e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e933e40-074c-45f4-889d-b5ea65129076",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "14cadf9d-2d8a-46b3-8280-8383e45ac193"
                    }
                  }
                ]
              },
              {
                "id": "3ae628bc-dcfe-4a34-b020-cd8c970f9c91",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "350d4067-4d59-4e49-bec5-6f1f2487fee9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4545807b-0c7f-4311-81ae-b7fb48db480f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f73d576-e01f-48f4-9e06-9b54c3d825d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9a84f52b-75ca-4d08-8de0-2c8928b960da"
                    }
                  }
                ]
              },
              {
                "id": "60ec62c9-0017-4809-b06c-c6c52200f5e8",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c297cc6c-7bb4-4dc2-9a18-a3d4946f0922",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2c53cc60-08eb-41fa-a4ce-472819829854"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bbf9ccc7-38df-495b-a054-6da7b75c2918",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2c4d18f5-4b95-4a57-8335-de67ad2c3633"
                    }
                  }
                ]
              },
              {
                "id": "1f152924-d6c7-4359-a074-660dcca50b52",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5fc2cfc8-7f58-4c1d-88ef-7ac4c61f5199",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ebb5813d-6dce-42c4-ad8a-bdc719085dfa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88b24d6b-8708-4e82-9198-930c2e2250cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1882b1e6-3bcc-4f08-bd1f-b734059b41a1"
                    }
                  }
                ]
              },
              {
                "id": "f64e1792-b030-4972-aa75-c1a3a116947d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "34c92549-1831-4391-b9b4-9ab019d0807b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5fe84e6c-429e-4bcb-8097-b8cdee9a715f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f997d56f-9b2a-44cb-be92-9d84161d2c06",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5f1edfbf-5d5a-4e34-b94c-cb6ba2545669"
                    }
                  }
                ]
              },
              {
                "id": "d8d95976-f951-4d3f-9dfd-d2353fca0418",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c00934e-19a3-4065-a8d2-3aaa8551a508",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2ff606f6-d81d-4a72-bc87-6c00260efad7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "611b45d4-99ed-4755-9b8f-c2d8a938a429",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "71c4d582-f9bb-4030-9fa3-0f478832b834"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7dac5c04-a748-4a88-b273-34132343fd80",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dbe86b50-8a1d-43eb-b62e-d9da7a776b35"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "35837e87-aa18-43d3-b0b1-24aebcd6f641",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b0d89cf0-ac9b-4271-9506-c703e9ccf0f1"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ea6a9af0-856c-4481-ad15-f3ffa1090020",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "adbaa599-198a-4bbe-9330-5473a60c5761"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "96733288-4f33-4ec4-8479-c142dae179b0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "585ff223-eb95-4470-9799-8f9661e4df24"
            }
          }
        ]
      },
      {
        "id": "974c9fe8-b4ff-4394-b361-98d560c717d8",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "370a48f5-e615-4013-baf2-c56b53d3983c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ffe3ee42-7d2e-41db-9717-0055d38694ef",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "403f7d7c-1ffe-41ed-972b-0b4532f5e735",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc42a71-c80d-4096-8478-45a984180f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99a86f8b-5db8-43d1-8baa-2cc5c1030c58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad7cb801-9ba6-469a-866e-a5b3ac137d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "21a294d8-b2c9-40d8-8d9e-a22c30918426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95164762-9c91-4a82-aab7-47c8c380aeac",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc44f5a8-9fb7-487a-9c3e-01d9b65142f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8fb0fd-5d31-4ee5-b390-b6322645995c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6698757f-5200-4f92-a5b5-7237c5ed825f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3686fb6b-68af-45fe-a786-e5e18b30b039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f921ccf7-808e-4f91-b50e-aa19ef5a5775",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbec3578-3f96-4248-8a90-ffb10aaa4436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9321eb3b-5099-43c7-8d94-376bc1bfc473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ca51f3-6717-4402-98fc-02b25534a840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5accf1c9-0c4d-4524-8881-75c83c51fd7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c874f4e-158b-48ef-a6ba-1f013680cd83",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca1dd35-6940-4c9a-b41d-0e29d9a6535e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cf46bff-7a6b-490e-a14b-c6f7c4f9bb78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72af26c-aa1f-4e7e-9261-c2bb792ac8cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7930280-eea9-44e0-a556-8a3c9337e03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8913cfe7-7aea-4793-9b03-05d673564699",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f367b1a6-1899-43cb-8947-4324c77c90a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "744714f9-4d60-4fd4-bc28-395e7c8881e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f1a47e-140e-4634-b94e-70339b1c6b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eba91658-c363-4953-a948-5eb641631ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5142dad7-230d-40ca-829b-e79133da92af",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99dcadfa-46a0-4cfd-8483-08b77cc906f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d6ea52f-8f31-41f4-b3fa-94db2e350cc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6fc97e0-afc4-4f53-828b-aee0a3c995b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3c4e813-abfb-406e-a5e3-f632b6e82c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb4f037-5cbb-4db3-8355-6e8628988fe8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f6cec9-77a2-43bc-8e84-42c24bbb5bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "806fdc30-59ef-4be4-b5a8-dd300c3d3a36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3562259b-fd99-4c5e-8bae-6b15587059e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "19a652f4-a802-415d-89a3-f8f43d68fb7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfac9c6a-5ed4-4b59-9bd6-8dc96e329e52",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21471a37-d676-46f1-b745-f64b1e5298c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c35971c7-da76-4509-963b-186023293501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f8067d-48bb-4a99-b655-965b7d03b865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d73acd1-e356-47a0-84eb-8c9b98338f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9b0440-e77a-4219-a402-1d276c569d42",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fddb12a-1176-403c-ac23-a8e77eb68cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e863d72c-603f-4934-b356-7060a984cdee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7db7cc8-b50c-48bc-a257-24046687e407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "255d9c61-4df1-4321-bf9b-ad24947adb51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d47ef86-79c6-438b-8b40-471755ff4549",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4fff92-a182-4044-ac84-4028ebdf63ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "698a9905-cb84-45c5-978c-5aead0477a95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa7bbe3-ac42-459b-bb1a-36856a136025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4c1715e-b0db-4c68-8d45-9c056f466ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22a10f9-151f-44fd-91cc-932d88e514d2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e68b35c-2b90-437e-8c58-220736586163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "272eb758-1a52-47dc-b6c3-9f7e5b55049a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42efe6b1-c219-4d2a-b4ac-eafe59459ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "45b521f5-3bb5-4e75-ac3e-cec20337eac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3190757-93fc-4ee0-a020-d8153e738d01",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f27e85c-3527-49be-bc88-43a54b62b2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49223a00-2793-4665-b7bc-8e11fc53f3a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0c7413-0e50-465a-86f1-3330f08f1888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5e6bbdf0-6eec-4a7a-b419-c4bdbe430db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c129641e-7aee-4782-8d40-beb24504720e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38e57d0-6b1a-49e0-9694-9f9beb0b733b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad3c2e54-6bd3-4630-a224-a4341787dcf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15efa5c-26cc-4f95-b50c-a2b10924426d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee9b11ce-c69d-4e4e-801a-361bdd8e7050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536ca362-0831-4e11-96ea-4d2fa03f3271",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ff536e-5b90-4215-a6ef-4bf035382f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "693b6b38-abd3-4eaf-ac52-9e4397e096f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873a88b8-e3f6-4ea8-9f04-d9e27226a0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec0fe985-6427-4977-bd3b-fc076ce0a54c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe919465-1b4b-4c06-ac3a-7320cb394ed6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77355d8d-7c55-40db-9dd8-dadf2810ce67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebf4680c-7978-4e55-b086-5d6c37e0dd2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d341c8d7-46d9-4d5f-afd0-c479e69e9775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bcb1db5-d47b-41e3-af3a-33d01a1334d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7662c3d4-b580-4951-813e-d132ab7d6a91",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c1df7b-a262-42de-8f40-44721d956c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99e9b917-7548-4db5-9d71-a0b375fcd80c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254f661e-dd7f-4c2b-9d89-9fd224fb4ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5b2e73c-f92f-45f4-b649-7c28f16bba84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692ea3e8-f71f-428c-8927-a87ca0c09a05",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca12aeb-fa7d-4647-b20b-0adc73686b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3922be8a-3df4-4937-be4a-e4da9eb96462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0668151-58b2-4735-99f1-f95ae1f710fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a65d533-b626-4594-b0d0-d8e83ebd9a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a838fca0-dc86-400d-875c-df021cd203ca",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e32f0f-c8d2-4139-87e1-6181b68edb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d379a6-5076-4c2e-a5cb-1b0bdd13d5dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e9b784-2d33-4041-bf38-3d730f58e140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "077e2e14-7caf-4924-a706-cd8f65bf622a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676998f6-fc9f-4a4d-98f9-0242ddd49b5b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "505dfc95-923b-40d5-8c53-cd2da09967d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c69f379c-cf3a-4b59-b088-ff3a3196c6b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc91616c-810f-4456-beae-ce9a0324df41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94a13b49-e629-4e4e-8a04-3f0bb2a93d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321db035-0972-4b5e-9570-6f5708e50213",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a1f684-4eb2-4b81-9d91-eee119112c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dadd77d-64c6-4be8-aa19-e8f9a6c4a936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed39e7e-247d-495a-9ccc-bcc89629fd7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "682c1f02-734c-48a8-93ce-71b58916646a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "149e28ca-1f7d-4994-939c-1e2bca9fe91c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a508cacc-46c9-4281-b3d4-46cb6b4fc169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f702c61-25cb-49e7-97d3-f44f980dd4d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34e27a3-57c1-47b5-b1d6-3a18e13d3eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e5446eb-5a92-4112-919d-6c4624299a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a4b5ebc-0f25-4a22-8e8a-1c50c4aa415a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21d41a3-8a82-45db-9175-6c1903a0a086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eb6ce65-b408-4126-b48f-a16f20eede01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5f4c0c-92d5-4b87-b032-90a1317572fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b7abc97-88a6-484a-acef-d981ff9da98d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c37e12-80c7-4418-bdd1-c029384ce93d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "999914df-9a95-4c52-9789-7704ca01fa47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e60e434-2003-4633-bfa5-c231ccb931b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de3e9a9-c796-4ae9-8c75-b2cfea070fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da16122e-8f47-4d25-86c9-3ba4fe7caf02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8baadf5f-2891-47ac-8553-6cb117aec23d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "995ef5ac-902c-482d-bf7b-607c1f227b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11e9fe1-2afb-43bf-bbf2-2c2249d8d949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa98dbc9-a2d3-4f8d-a307-7fc7a020d8b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e18aa08f-9559-41cf-aeaf-a7b84f1ee4ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72be1c6-9999-4582-9270-3b678ac5e1ad",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e237bc-6310-4c21-9b4d-45680b02ea1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae2b41ff-2a08-46f2-beaf-a00103300f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf68b54-e1a8-45d7-aa27-01af876389df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30f01812-89d0-4c48-b67c-2f116b64a0e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de28fa4f-bc38-4a2d-a931-ef88671ad416",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba87351a-6158-4e06-83eb-fc6af6db8477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bf28671-8c52-4078-b43c-c62234a100a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc10357-05cf-4940-b508-78baa1dd5794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "786c5087-8b01-4a54-ba4d-4abc88f1a216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0ce5ae-7e9c-413d-b639-989501107cdd",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9411d7bb-ad26-4016-aa24-f973ca920480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec5741ef-273c-4408-9b8d-306e1c3bbbe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc0980f-af7b-46eb-a26c-5cb5155b7745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79b61213-a9a6-4e2e-8d7b-d3aea49bc041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23873150-35ab-4bda-b686-6af70aeb6c38",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7fd844-cd82-419a-8135-02314965e74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8471c1ed-73ea-4600-b49e-02f53981726b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e4e32f-9042-4d0f-93c6-51de81caeb2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23b16996-d3e0-4f7a-bfc4-623ffad92e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156841ee-d68b-4483-85ea-6f418589d13e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be08697a-a7ee-4863-a5d4-57498747c863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b0b8831-2250-49dc-90e7-7cc57112d02c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb107fa-9526-409e-a5fa-de71d0853742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1df4c67d-32b1-4a80-8418-a7de3f00c5ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1afdc60-4eee-4b4b-9131-316637fd4f88",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4aaf8ef-fdae-4a3a-b01b-691aa86b88a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "861a6786-6f11-4d0f-b37b-70fdca2304fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1cb9b13-c440-4960-9770-f3aa6f4bc18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "270a236f-02a4-4a3c-b466-6c5d1e035793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf926b0-a51c-48b3-85ac-7ba0eb8d7449",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "804f2c06-94f7-4d40-b70d-35ff7c824087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1944d91e-35e3-4105-b0bb-ad6c93d36a3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d7e159-63b6-48cc-87ee-e0be8fa07e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "273a04cc-f197-4cc2-8e8a-9eafb2e31b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3b4a50-2ed0-4bdf-aa88-ddda62c87ae4",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc14a706-9d49-4ed9-b758-2bc9dacfacaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc478942-c3e9-4618-81c2-7d558254eb44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f724401d-d563-4ff4-b55a-4855e7c9f086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a33c61a-53a5-4f9a-87a2-076075acec76"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "acdb2b7e-398f-4c07-8f87-c0f697c4c2d8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1a9cd93f-e48c-4dc1-a71a-09c04a36fb56",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c64104-23de-4333-a406-b85562b08523",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "89b147e9-b15a-4886-a9e6-c05415d77ca4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "685acd09-8eb6-4ec6-ba0e-4ce811b6a1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a721841-64d2-4c16-a823-1ba4efd216bf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ebe96bc-4a64-4757-8678-c0af13384d8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a804241-780d-46ee-99df-a03399cb4b0c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e146c201-0424-42a0-a98b-5c388e410ff3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "863c513f-855e-4a52-bbfb-50752061af4a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e2002f91-7a67-4630-94a0-d1d2cb1819ef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "720808ff-9cf3-4cc4-bdac-e34af73b9d1d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e93cb219-744a-4a18-b027-33a0304e3431",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7b301131-f9ff-4dc7-877f-3a54a9e6fbc1"
            }
          }
        ]
      },
      {
        "id": "71abdd64-b1c9-4bbc-9780-8ec164e36e1a",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "1b2e2b42-5976-4ed3-a076-06476723495b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "33295a4c-bfba-47ca-b848-889cddbc3d44",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f579e78a-c590-4589-a037-b06940fdb77c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b57ef7-3aac-4cc0-bd1e-206a8941ceb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4382c8b7-d150-42ca-9413-f77c860e399b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ebe382-f809-4bfd-9138-c80eb2d72624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "59530657-bdb5-480d-a853-6d6729329942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c1a978-82a4-4a39-bcf8-efbd2cdcfc6d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b80eb0c-d4c5-453d-991c-f2d5871afb63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82d23c59-a49e-4ab1-bc43-2ee30572048b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b822692b-3040-4c2a-be62-8eb67edf2184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "458ef430-29d8-43ae-8c02-b40cbf92be17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68f7042-129a-4e32-8f74-2cb1defd8b15",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42bf2816-7043-4586-8a1c-ea4865763bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc0db951-d276-4701-89c9-83fb609f2579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a23ce7-bd32-49cd-9770-cb2a3ee32df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01ddfa09-f163-4c56-9b70-c78e46c1a5fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a54905-f1ec-4fc7-8b81-62301162e7ba",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d771dc6-acd1-463d-a58f-2a7c8384e89a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de560bfc-8f02-474f-8e30-67eaadb46ada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07698768-a4ca-4450-9059-6951dce7cc89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc8fe496-9d23-4ffa-a716-f5656ad37d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5551c7-2868-4843-b440-32d4bc1640ad",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44148a9c-7630-4022-afb7-212c5b882334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a8541a3-2abf-47d4-adb5-8778269e4e04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d4fe05-d1c2-46c5-aebf-7d63f207fabc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed7a3d86-228f-4e97-ab2f-dedc3615d9d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12fb00cc-a680-428f-9f5d-b5905b542911",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3354199a-d8e8-48fd-b1a5-16c409fe482d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9969b26a-c57a-4bd1-a0f0-3f8a27e72c51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ebdf43-4cc1-446b-b49a-fa6f2d7d0183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "048c64f5-cb70-4f6c-957b-29f46106b108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36803e4e-d3e9-4365-a3a5-89e81fcd042a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f362a123-ae68-405f-9642-5e8f5062c445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b4ff26-8f6f-46f4-a098-512fbf37fe45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947c7d7d-d61f-4279-be75-a4b716e47c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "deeba147-748e-4ab4-9508-e677434d76e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3312ed5-4c68-4c8f-a3a7-20c2e6b40be2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a243a812-9ec6-44cb-80b9-b25f4d10a85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c3c16fb-2d06-41d7-93f0-0f0530d6209a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8f5901-9b9a-4f81-8b10-bf472d7f6a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdd007f7-b646-41f7-bce5-d563721da1c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ca939a-b033-44af-8fb0-11a5ab0446ab",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ca1f63-6cbd-4fe6-9343-0dcc76daef2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60bed49e-c4de-4b3d-bdbf-4e3e31d83549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb0ce11-dfd6-4023-9624-b754d63414a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "117fc0d2-18fe-4a74-a3ac-933fc0c47768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529bb6a2-ba8b-405e-a1db-40579efa43cb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acffa128-10a2-4b4a-ac51-06ef69609f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80c9121f-632e-46f9-842e-508bd73fa374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5deb790e-5525-4d49-9fd4-6491fcac3e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f84b02e-1c75-407c-a805-1490fb0486f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e936a2f-f332-4011-9316-93cfda1520f4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fff3529-24da-4e1a-857c-51f0943cf804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f8b207f-f8b5-44f5-b4bb-fa1e8e02936e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43bbe18-74c3-4ef1-a6e7-a494633bf3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "67b10049-b4a1-4d42-b2e7-479b287b6a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf20d7f5-3f1c-48e0-bc79-22a6ab01519d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19adb073-52df-4105-b6f1-69bfe5256760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b1523a-2798-4eb5-b9de-1350d791a10b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce3279c-a892-4e52-b34c-2023aa5b1f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a37ddc50-55f3-4b32-ac78-acc57ee34039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0035d07e-59fb-4b5b-a7e3-359ceab19704",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35270c8-1a8d-4ade-8fe3-a4920f835e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e001512-7ab9-49f9-8fb7-5bdb0347b521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc47d258-4cb7-4963-a809-76adccb37377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b2f3dfc-c2ef-4dac-b31a-e222eff02733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9030ad88-7d94-4505-8a12-5a2268db9306",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc32981-da80-40c0-b325-d081c30d142e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83cdc618-6d2e-4a9a-bd9d-b080fb5d6265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1743f5c7-68c7-4c66-aad7-53b0dce50601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9ff7d64-9c8b-44b5-ad07-5e8d14975a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90330b0-6b9c-4335-975e-2f05003da6f8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd46f9a-528b-42d6-9806-66d23366f6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79a0395f-ff97-419f-bbf3-7131ce1bef46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6227bb7-72fe-4a21-be9e-5c53bea92a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "45f58faa-3822-4bb2-9146-506cab7c75c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230d798c-2043-47f3-9dac-aa740e4cfc56",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03aa77c-419b-4e8c-8d82-24ba5ebed9c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c3735b-fe16-4cca-9a2d-85900bf37335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68fd298a-c357-42e4-ae25-f44f39753ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0cf6e74-aad5-40a7-8247-9de0da902002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48763ad3-dd6b-47f3-ac97-0759186e3ad8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f9c739-2a30-4774-a120-0ddb773b2035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fea0d46-7607-4c96-a4eb-01c3e67da78f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6391a6-91d9-4834-b348-71ed740defe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "64e07b08-5d44-42d2-9258-6a8ebb64de3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4535b1fc-2b85-4901-8283-bb00af904814",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "059e95e2-7321-4295-b166-73d55ea50c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e12822-53d5-419c-b827-2448b2fcf0bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee9976fa-c3aa-4c17-aaed-feb671123aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3d50021-25de-4184-aa32-d92066c0f316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc7d89f1-d0bc-45b8-a01e-551160787091",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c31988b-a532-4884-9803-e95545ba70e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e0f3164-9713-413e-a4e3-81f11c5ccf1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a258caa-cdf5-4e26-a465-d61a95303e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5507ccb0-a6d6-487e-af02-f157f26bc82b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88073388-51e2-4e12-bb2c-0c9f6f7280cb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4bb82cc-ceb0-41ac-ba5a-aeb4e4072c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49fe1ff2-b18e-40e2-9080-dbca64e0a7a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5acbb883-24f6-4b7a-8a56-9dfe23b24a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0b46e1e-d5ea-4de1-b461-0a6605c942f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0814ae2e-79a4-4940-8f9f-f4cb149d98d1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f889a134-6398-44f4-bb27-776b1e86306f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fd0874f-5189-45df-a489-de2e7c5c8bb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1415eb-3abe-47bc-bae0-213f2a9f4221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d02a7e0-d84a-4f2f-b586-cc2c4c33687c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34739b3-0bb8-4efc-a98e-f41b046979f2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "350c1bd3-9ef2-4141-b1d8-1d6541c29720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56915fc3-f9fd-4320-a64f-51d689501ad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28fa8939-6410-4a4c-938e-c90cc3b68089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54492706-3f75-4b54-a910-4231627f987b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63763c3-89c9-4666-864d-a90985394b9c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "079edc0b-ee81-474f-bdab-6ed3d505f582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dd8d239-984f-438c-9bbb-91408903ef31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1163c4e2-3750-4380-839e-d93402f67bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "434d871d-415d-4875-b625-b44863237ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ee9937-34ca-441d-96af-c31a56c21974",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd21e99a-200c-4367-82df-87a3cc177d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b59208d-1b5d-45bd-9c79-63ceaa612929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716977b8-df85-440b-9c2e-0f2a9dec07f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b269286b-b9d0-460d-8c74-4694750ad055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18778b4f-1658-4656-84ca-a2f3658c7a53",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c4782f-c68c-4dce-8d4b-b2ce7b60ac72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d751155-2b72-471a-ac85-22cf4986c43d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe76b42e-4c65-4c08-8644-887d30ab25f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aed6e152-636b-45aa-bc29-4963247943b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08e14e6-7041-46c6-adca-7ad6d60b2617",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c6453f-960a-404d-a191-c116d8015337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15b16243-9069-41cd-9467-c3fdff07b2e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a307eff7-d1c8-4c0a-a323-f96c7a81ec95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d084e8a9-97cc-43cb-8c8e-43cdd30f83f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f0ccf8-f19a-45d0-9ebd-6747884693b9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f26580-29c3-423d-87c8-91b50b53a128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5583652-24c1-48c0-863a-bc08cbb23857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69885d1-918f-4702-bc8c-22a764bc3c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db674f9c-027a-4532-9a1f-095925a6b4c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c258a3d3-1329-4bb4-9881-e97595ca825e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c0a538-4b5d-44b4-9a01-399c35f836f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4234cf4b-0a45-4368-a89c-7f846dc21c91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b476870-23bb-42d3-9c11-acbef3eec043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d655c15e-e221-4708-a283-7ccbff726aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed438a0-c319-4f2b-9f51-44a671ae80fe",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8090caa-554e-4a9c-9091-64a98325d7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f5eaf44-4b45-43da-8d02-f9d3447b95b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc479d8-4c1e-4ad6-9e26-c2446bd96a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "950ada79-0a4a-4cfa-ae34-da14b1d760e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ebd7170-50cf-4939-a090-93fa34494283",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfddd006-090e-45de-af10-b12d04dc53cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13be51b3-fa0b-4c0e-801e-5acb8012c8a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6440c16f-c180-4c67-a355-96dc3a04ea22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65ffbf71-b2a0-4e44-ab0f-687d8c07801d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4445f2b2-67cd-48e7-9029-31a68449380a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54192db6-89fe-4ece-97a5-af97c3bf15dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4eb2396-fb26-48ce-a5f8-f5cc51704cf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "787118a4-2739-44d0-aff8-bbacf14be31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0761a71f-5386-4a68-86fe-504ee0ed20c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f2d7f1-7142-416e-b32a-109ebf8b89cd",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4ac004-3c85-41a5-b28f-4b65e0d2df86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "583a6f7a-4a20-493a-a5bb-949a463aa457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e219ec-7120-4c3f-b346-980287d9edc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd623161-5c48-4650-aac5-1c46dd0d8bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a5c3fe-ba46-49f0-beca-4e776ea4fb91",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf6dd56-a4fe-46d2-8ed1-ee486642c304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55d5e463-9dae-4825-9bd9-8929efd2835f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea091a0-ffc8-4a89-9cd4-fb9fd9f83e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dab241c9-30a1-453e-a7b8-3b7ed7fd5038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b43c4a-9d43-4f12-a44b-af77f75ec928",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f978b01-5bb8-4daf-8c99-597100da79bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0831a98d-2402-4d44-9326-08e29cbf048f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5376afc8-2b3e-49ff-8ece-54bbad9f235d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddd785fc-6639-4b1d-a867-ae1793419e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63cf14e-dc04-4b07-989c-eb3fb7c1525f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19dd3742-49f9-4456-a6bf-e95214491137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8eda90b-a1d5-4c3a-bb06-34d453d31b96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f23ff31-5544-4de3-acc8-c20dfffb2c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d04d5ee-c81e-4a7f-bba2-0ba561d89f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366c06c9-e170-47e1-887a-b180d5f2d936",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda73d1e-f999-4dca-8235-4d55144a0e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "768f8ca6-43bd-4eb0-9be2-3613eff1444b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef54e676-768c-4554-a9a0-aef4e7873314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e6c298d-8dfe-4309-9d92-7d9b17e5c7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08bc1086-ce35-4fc6-82d1-8c8b92d07830",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b37038-55cb-49cb-ac72-77772bbd3689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5334f06b-d1f4-4d21-b986-57de9fec4578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1399381-aaf5-40ce-929b-e6408e7dceae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "168a04e2-1b6b-4bf6-a563-a3cd9cdbbc32"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c6ce67d6-2630-4250-9fe2-20349fc3485f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6fa7ebf1-9ab3-45ac-989e-723ecdef6a79",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c8b2e32-0180-49c5-991e-3bd82293b609",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b0520967-2447-4a41-af4a-294574876b0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df55b4f8-ed8f-4e08-b0af-cf8b5da32daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d88b2f2a-adc7-4017-85b6-0bde1b841ce2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43088b69-5462-41a7-93e3-1ddefca4e5f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6e9bca8-cb45-4041-a040-77b2f5d4cb88"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "395794d5-4e73-4ad0-8833-aa4a7d94ea90",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90f4d854-c49e-4a62-b725-d329f149b845"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d7213763-c93b-4881-bdd5-26f37ece3ffa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "55ab1e7f-b241-4f5a-a00f-952d95b4eacd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "929765bb-7dc3-4a24-b138-c87424c046f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8b1c1041-293e-4c63-92de-47898ac46408"
            }
          }
        ]
      },
      {
        "id": "e9f7c266-c132-4c63-8d24-782b7b9013e5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7aad93c7-1e4c-4cd6-9b5e-93ca0984d978",
            "name": "Negative Testing",
            "item": [
              {
                "id": "31a287df-a3d5-44ab-9b6d-cd584e450355",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7d6d9087-19e4-4400-8d61-7186591f9633",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e4d840-e1bb-4aea-a62a-5e4fba959406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d1c83a9-615b-4cd5-a748-637897b0bc7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d2e552-0a64-4232-8d30-c7265c574b5c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c44a147-157a-47de-a390-622b3f46f933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e27e3e-c47b-4e1b-835e-bebdd94c494f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8fa118-af1a-4089-89b1-fe53aa2a2af8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a721873f-791b-4b10-b919-c844e500e443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06f1471f-e1ca-48b6-9520-9548f4c2c984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f41607-81b4-461b-96cf-53d3e1a9518b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d11d16f-078b-4c02-8e7c-8a3bdd08d06f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "231e5070-01bf-4efc-8987-6e147ca8e69c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3577cae6-50df-404a-abc7-68dda36ec942",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf3fbff-7b35-45ad-9c14-45e06703d98f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b56a8435-c651-4054-bcd6-e6016c8f0d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5971bca5-8a95-4695-af5c-890f58a6f807",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "951182c6-c292-4b25-8c73-ba01944fed1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "520d4cef-ed60-42a1-980f-bf5c374de567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63205fc9-5355-411f-9bde-924bd646f215",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db45093d-c767-4911-91c2-0391d94e2359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "655818ea-ff7c-4265-9f9a-f309d6a4789d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "726cb8e1-ae9e-4014-8d22-f43848a196e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea6787c-263e-4045-86ec-72d5388c55a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8f03b6-ac61-4095-8135-35b257662434",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a96511c-b376-4623-b344-25db04a77d03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3e9f747-8cd5-461d-9448-feac6166bde2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5195376-299a-4d09-87a8-fba35ea47bdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "472fcd0d-31a7-4b18-92b9-a38959ae2c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47d4678-58ea-4d88-902f-cce1fe7fd0a5",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a64f1d3-2758-42ee-8de9-8861b7319faa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70ceb362-94cd-4926-8e1d-f4a505461ac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02d10cf-263a-45a3-951b-99deeb673fbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e87ffa8e-f0d8-4ef8-815c-25f8ab419b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e03c6c-a06a-4fdb-b77e-e86e978ba4cb",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a1591c-dbd3-4b08-b247-84fb40cd6190",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e12a06ba-25a3-47f3-9976-53505fb198dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d696344-6fa6-4bb4-97be-3fa640e8a7d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "460afdd0-f947-4a1a-96ae-de09b0fb0536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6cce9a9-f747-46d3-9ea4-c8d493ce6735",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ba7404-c146-4563-bdcb-9e30a2dec6af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e81473b2-56d7-4f7d-97aa-7b1ce4b5b026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03825b83-a654-4442-a10a-4a44c8e1cda3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a799aa79-d5fe-4d48-aac3-58bf8f517a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de266990-3d60-43fe-88f9-659df4efc46d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddab189f-39d6-4a27-951c-c9c60bf2ddc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d97ea8-238a-4728-a485-924d11be306e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48aef4b4-1151-4bf2-970e-f1a6c6a80e55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a66ccf-a026-4df4-86a2-b41192ea3a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638476ef-cf63-4794-afb1-f87975af35a6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804b3c0f-805f-4553-925c-761c3e6ca3c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3faf4632-8915-4ca8-8bc6-785ac2250e0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "933515ec-d00c-4d64-94dd-0a500683c25b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43f162ad-0cc7-4af5-b5e4-c7d00393d58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7506a11b-e749-4992-8a2f-1af24bdb6b88",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5740b5ca-065a-4658-bc09-e8673cd54580",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99686415-ce2a-465c-8515-85a9c4ace5ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce615cd9-6e77-49e6-bb13-862fa6da0452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c8996f3-6a3e-48e4-ad35-db5401e18e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cea7c61-7953-419e-9a32-44f48fc730ee",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e1adca-33f7-4010-9f41-f070a4dd6da9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37e6b526-bff9-428f-ba37-0a0b5b44b16e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b54dd9d-64ef-4206-8671-5e5706ce532e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57f16ded-d36a-4822-9617-985a3ac64fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7450c328-7668-4ed4-b025-92feff4f6ec5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2eddfc-286b-4057-bf66-6b4c736ee2cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10061d29-6dec-4108-80d0-777d44d85368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bfc982b-9bf7-4d0c-97c8-9b798cb6e361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30953e9a-eb11-4b10-aac7-fc456ab6749c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6384661-7d0c-4a30-81a4-12e734d94346",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe92155c-b704-402f-82a8-db7ba92c47b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f994b8d-da09-4868-b2f9-86a1878352b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db6962f5-8a8d-43b0-99a8-0ef88f350472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc0549e2-fd80-4b62-af1b-70ac6ccedfcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1274f950-94ea-44a5-a88c-2cc859c8674c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dfb44bb-8d41-4469-bd34-c50b6cc8b174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "841bd163-edfb-4777-b5f2-1de51a8edd81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3e0af3-6183-4cf9-b515-ce12cf286f7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3755965-5e1a-4669-9452-932926483c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6edf76c2-dec3-41a5-9ce9-70d0533cd268",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc390fa-0528-474f-8820-90d9d387d04b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf364b70-7f88-4bbe-9e7a-8d5ab45fcd05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae3e88c-ba0b-4f2b-975f-337844c9caad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30999141-84f4-4686-82ed-e246fd571f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dfe0fff-1859-417a-94c1-b234af48665f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c1266c-4e11-4f2c-9c88-41c5a61cbc35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76725db6-29d5-48a1-a93b-30e83ff5f326"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e255fa4-eb16-4df5-b408-9d814bd4ce20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25bf4874-54ab-4d2f-8a15-33fb46cdeddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880b27fc-41dc-4efc-8219-b22f9bd1294d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499ea77d-64f3-48e1-b944-b16abba0e8b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e18eda2b-b18d-494c-b4ce-0c5eef51fe91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5011fda4-92cb-46f3-8c92-1544946054b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f1901f4-d1c0-49dd-807f-66aa684ec7a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e195ce-606d-4710-a0f5-93f3936e2839",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77d0644-b4e2-4ef9-9c0c-7d93be3a97e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44094b56-4f36-4853-ae8d-560fff168eef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e5af91-9163-4217-9cb9-1b334cbc2a90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c05d34b7-f8d2-414a-b36f-36cf33734a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84c629b-ce5f-48ff-9525-74485daf4d90",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ac8236-0240-41f2-854b-7fe7f3550682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5dc0dac-0226-4f36-95d2-3083d48a1d46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7c32d1-0e09-47d0-97ff-bbf0acd2fb87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "978d1d4b-382e-4473-80a0-3cf05cc10fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88fabb8a-47b4-433a-a275-3693c030a043",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "824ee399-59f6-4f59-880b-898f00ef52b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e02e6330-bd75-4bf4-ba9f-026ab21ddb17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8371971c-4bbc-4deb-9b4b-36356fc12cc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4efb7741-3fc6-4bb5-aad2-cc1544bf89ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0113b847-d2f5-4d34-a811-ebe69364fdfa",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c65b22-891f-45a0-9d5a-ef35d3149da5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b21bf023-6a8b-46e2-bb0a-743acb2f33c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a64a7f7-5750-45e2-ad9c-696a6b458bdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1af3694b-a38a-4586-9f9f-afbff1efc44c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8bf82e-ad3c-45d8-8f18-0abaecd7b536",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d2b94d-4cff-4402-83ab-264392da7691",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ad16a53-0a08-4850-b333-f58a72c7fc6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28586746-e771-403b-b774-6ab34a2ed600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c805b5be-952b-4e2f-a6d2-6a0431be83b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5052249-ca3d-4c4e-a11e-9ade37fa63bc",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d64337f-5849-4416-ba53-049332322cc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47ce5b82-3b25-4c47-8591-2805b2a4f655"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4944dfa-0380-40fb-92db-127504795056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32a0535f-7cfa-4841-a99a-23b2a885d09b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97049e07-1ec0-4397-a937-b538ed33771e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "429e0064-3a70-4bd3-a358-cd16a5878994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80fdaadb-bf8e-450c-b841-ae7851f40747"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d696231-9131-4494-a28f-0c7e815d12e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74bc8067-943b-41ee-86f3-c04d80982b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d17c6ea-e944-4cb3-8303-fbe7847860b5",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d5ca9b8-163c-43c5-bba8-25aa78139069",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6382c966-0b6f-4434-be6e-099db3f403c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e2270d-85e9-42f8-a8e2-87e5ed82a3fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b1604b-963a-484b-91f5-16e56052aa1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869d5ba5-90c7-4ef1-b16f-fd15fc19e249",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b27d9b-39d7-4ed2-be56-6e2b57919fbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39ec7a51-8c6d-4277-a81a-6cf201490b2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2afe340e-a997-437d-80b4-faff54d8892c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e5a51de-8099-4a55-adfd-b8f47c3b7334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46fadae-2cf2-4235-9285-4f3d65967a03",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88bee7a4-5b50-4699-a65c-df727337c7bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f6cead0-74ad-464b-ac80-0b14f1be140f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34b29e0-6ff2-49e2-9b5f-b150804e3865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c8d0d34-aa4b-4bf1-894a-47ece36efef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42b6622-17d7-4279-a3aa-31b945ce235d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43436d82-a680-401d-8c86-f4b00c7f109b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29575640-54c6-4b1a-8e4a-1ac11cbd5f0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1cb5f84-69bc-4752-9168-293c16dde8de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8253d973-3512-4d35-a34b-63aa842b9249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7825743-ca53-423c-8465-1b634cca5f89",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb96acd6-ddb8-4943-8228-44c070c768a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0382d4be-2b0f-4592-b022-f0d4154ce52d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db3f828-03a2-4823-8803-0b47e6ce7d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94617a36-ac37-4044-9703-b9947d4bc0cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8663c7af-83a1-454a-9d38-0d9bb3799e74",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29533374-014d-495c-ab6d-d24fbd1de4d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb7466ea-8e30-4e5d-b0db-165f9fda8b1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09fab360-7559-43b5-bb05-65d075cceb78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8270a7f7-97f7-4a90-bcec-748abfc7d21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473d9d8b-ec5f-447c-a34c-adf4b5a78ced",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75010b2d-806c-4d72-8895-18910b741625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "010a30b5-ec1f-407c-b44b-0ab75320adef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a045954-5854-43fd-9885-ecc9712c92af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e69e1e78-6778-4740-8e74-2b6f3e357fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97b999a-40ff-49f4-8083-f11f50bf0c37",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c4f063-8ee1-4b33-9977-9d755db09139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e901f4f-3b13-4310-922b-069d794f5cd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e30457-4568-4b2b-9165-7784928d76cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7d3eb03-0878-4167-8809-37235354166c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afac824e-73e5-4693-a6b4-5f78da05ba36",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44bb921-ad7c-483e-90d6-298807361037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f4a642e-3840-465f-b69e-6f94195b62a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b119c030-acb9-4cb3-ae13-6690d850f900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d7ed45-732b-4c49-8375-b8e277ae14a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6089edcb-1178-4e96-9220-873a3cdfb390",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9388f2fc-81ee-4553-8d97-044d4ff802ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33837a9b-ba4a-41fd-8ad6-46aed9cab8bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf0eee6-c0f9-4fe5-be14-b886d17a8870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65930640-1a56-4f05-a9fc-ee0e7db191f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ddb81ea-37a9-463d-88c5-e743617b443e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398f0d1b-feeb-40fc-b814-800c6339065f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf4f2dfb-bd91-42c2-b27b-9ffbc74ac088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd63c6e7-0998-4416-bd50-5958f0c99d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "909792b9-e17d-4466-b796-c404ba4fa6ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def8cca6-7382-4728-98f5-b121034b9cbe",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6575fb16-4da5-4499-a962-45c6e00f28fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6368b37-8e32-42d2-aab7-aa6a19518571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "585ec2dc-f0d2-4221-8b12-fc597881fbe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39116f31-9de2-4675-a3de-1619a31ebd05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7cb7c0-81bf-4c70-a0ca-2913b2b00278",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3432d1-33fa-45c2-a982-aeffee337d21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c7a1c91-1819-4068-9c11-6f93d2d6581f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9fae6a-e133-4baa-8f3f-9d3f02b2f831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbea8dca-2cbc-4047-83b2-36a91fe11113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84db7e9-20bc-48d2-b2a2-1ebef2852ea1",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7c66fd-b6b0-4b5c-9446-456ed8df4aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82cc9ce2-d0fe-4feb-b14b-5a29b443ae06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e085b8-1876-4ce2-ad32-6c4a267e3b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a82b5b2-9bf0-40bc-95e0-3cd379cb8483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9ea853-a6a9-472a-bbd1-f04ea548b31a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c28235-00f5-484e-aae1-f188a4920b65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a00edb00-b120-4503-aff9-c3e07c7802dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae79cf4e-63f7-41bb-85da-d53d51efd37a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71e2faef-42b6-4731-b41f-162988680b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b75033-7d41-48fc-b732-3fe52968e280",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927856b0-cc2c-4d3d-860f-cdf62fcfce89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2057bca-ddf8-4169-a09c-046ab2419836"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd5429a-f7f1-43d4-88ba-7d58a3ac4073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a008c47b-7e0b-4805-916b-36f211f2354f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567655b4-b593-4cff-9fbf-5386747df3ec",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcbc12c2-c496-47d1-ad41-900c797cd48c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42e24d55-1fe3-4ba6-8d2b-d8c4241f6c4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c940157c-5d14-4f15-ab18-32f56cc33cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22e5c41-687f-461a-89fc-33ff9a86e757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cec865b-6098-4732-96c9-29dcc1d04fa3",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31f6302-e938-44fe-b3ca-757aa29d84ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1ff43c7-2e5a-4f92-9671-d7e98e083b36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80783e82-3e01-4943-9cce-60e3d8daf80a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "269242b6-77fd-4667-afbd-e45923a81217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24288fc-dc67-4361-a202-4931c26fcaa5",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38895fc-4fb2-4ec9-98ba-74f7495bcc06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9ca817b-7c89-4171-9c60-68bb8ef3af13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "202c4f81-f146-4c4b-bbab-f2fa0d897c20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fd72218-f2b0-4373-ba07-ab433214e592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a145e1-07a4-4629-82e2-1db37a9308ad",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4772298-c667-4568-a6c4-e4bedb7dbd17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c81452b5-5035-4ff7-82e3-9c472909c363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edddc2c9-a8dd-4657-b95d-c47977c57636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c22230c-275c-49cd-8949-f90104f0cfa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6237bce2-1336-4d43-8cb5-7208c321de3a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d381dc64-6486-45c2-acc5-6a80c99834d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d985473e-9223-46b9-8844-11edd66e7674"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9880711-079a-46f9-ba89-dcc8e6c9a1ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21d718d6-64e1-43f9-b643-445afa2e535d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcea00b0-d90a-445d-aad1-d8c00ef594a5",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00f3b83-3616-4368-8ea0-704c0fbcc632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8b617f6-b898-45b4-b032-686811cb4c46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c48c8234-2c6d-494b-8271-00dc598962a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a7d103e-b2e0-4631-8f62-635834fbc01c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f39d52-7e82-4d6d-861f-29ab0f773eb0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ac27f6-4f2a-4924-b323-f466a85ec4ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc653720-a96e-403c-88ff-07b4524638f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe33aca7-fff1-4986-9e0c-85c8c1f09574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fbaf21f-2d89-427f-8cc0-784935895fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a4687d-1b7a-424b-bf4c-c5c419261c5c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f7d37b-85f9-48ed-b627-ffbd1aca577f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b304574-77dc-4c3b-8e90-9fd9e71991ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece8c947-075d-4aa3-80fc-fd9914821e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d08ce01a-cb73-4278-ac3b-c0e8e7beb86f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ec3eb2-8497-4671-b81b-d1994c75e91e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924fed91-abc6-477b-b1bd-247b3782e0ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b893392-4235-44d6-ba21-742528dbbd36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73832fed-984a-4dad-a1d8-4741a8ab608e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a394ec-cb60-43b7-9aeb-93689f1e15dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c310ee-1303-45a3-be3c-34c57a06f4a3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8d3a1c-bf55-471f-86c9-3d329c9592b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df28874-4378-4553-959f-879b50a63851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2daf8292-8a77-4ce2-b061-28b949fc1e7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfbd386b-eb4c-44f9-a996-65d905e21adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2af4a9d-4a1c-4d5f-8881-dd555bf6ad84",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "876d26e0-de37-4ecf-8ef8-48a5beb22162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "978468cf-c6b9-4c9f-91df-c26c2f4c7159"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4322709-c683-4404-adb0-e2413d0059c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb1dbc8b-f27e-4a12-82b0-cd059c0f8040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e42c4ff-a176-4cda-8110-95b0f09ff486",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ce0642-0a33-425a-b4c5-b0e4cb621a16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7163f83c-8778-493d-be44-32664fc4d106"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f0866a-9c4e-44c5-9aeb-1431983c7fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d6e86b4-a94a-421b-952e-f31758008fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c65903-1929-4db1-8ec8-b622fffc1828",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f79d0f-a861-4a1b-be03-d1745ed083c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a9bd602-675b-44e0-baf8-8e7672419004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab675618-21d7-4027-a9c5-00a8d7f16b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d44fde0a-7056-4ba8-8495-50ab295f16bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18a8ff5-1d99-4b93-aa1d-b7213df4e80a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa028436-e250-47a1-b630-63a7f191856e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8153e0a6-cc2a-4250-af0f-c31c6809e5fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1889c91-a8d7-40ec-853b-d23ca8001d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a8c8be5-e699-4dea-b3fe-c6f09bced6de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319b1fba-0189-481b-9a98-72df68f0dfb1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f13495-d90b-4f15-b7c2-4ebab52fb20f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c943d6a1-859f-4ff7-abd8-4247aeda4548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb8f88f-e234-4f2e-8411-a3bac5dc26bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bde4389-2c6f-4b33-8cb4-86719c2c7494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "322fd109-5df6-414f-92d5-0c5c939d514b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda432b5-ad4d-47f3-9ad1-fce2a5b18b1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f2906dc-4558-453e-ac12-4464a104c862"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed07d58-c6ff-4c96-b110-eae3304b9a7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34804e3a-dd82-4257-8af9-5351eabcbcda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e1b6c2-ddfb-4f3c-afe2-661356d3b689",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014e2c1d-4d88-4c79-8a19-e9a33ab3b9c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9dec857-2c10-40fe-bada-6c801100880d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db9e4bb-c8b7-49b7-9f2a-9702684c4794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50e987bc-a2ad-421e-b487-d7d01bdb301e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc47619-46d3-41ab-ac7a-6ea34aa26dae",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83bcb064-fb91-4ae8-917c-eed50c224a01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2818b1fe-cbbe-4fec-b21d-caa9a74d950b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "053e1b6e-f863-4a44-8a57-fde96465d6ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b238f958-889c-44c1-b8ee-362ee5125662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ececdb73-5dae-4dc2-bdbc-a1f129fd4c23",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2009b49b-c9eb-43e9-a66f-8e8a22f29532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a3b406e-b0a4-454a-ae50-94c593404f5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "708df0b3-dc49-46dc-ac8f-6c3138d29de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e5e8ab9-563a-42dc-abbf-fcbfdb845810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c9b8f66-9a09-4f66-9a34-3199c387c2d7",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142e5394-1596-49ef-903e-57480a7a9bb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07a5b138-2f1b-43d1-9a5b-43b315b6e859"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4272997f-167b-44be-a3c3-5342a9cecbe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb31e161-bc78-4fe3-98d8-72e34f3c9445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5acfa0ca-d1f7-4f18-9554-d0a7224c2635",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ff1cbc-7652-497a-8743-a4007fe683be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "737ac931-2ac0-44cd-a21f-a3a989508846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "977cf6eb-5521-4a94-8fa4-191248700490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bceff163-e2a0-4acc-bc4a-be79352e2488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c90cdfc-7b36-444a-a856-d301507b48d4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4208715d-c5da-43dd-b524-c0f8fa92aa4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b7ea2c9-44a8-4231-b29c-1a128c357d81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e53fdac-d328-4b45-ba92-29e7c85b18fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80fc8738-ea61-40bf-9a08-a533ca5dadf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c440170e-b96d-4970-92a4-0d61d8155ed7",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e7711a-73da-4b15-b233-2273fd5b5db7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e3a706d-7182-45d0-b3c5-ab5237caf95d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b2574a-c1e8-4653-84d1-b2cdfc605ade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85ce4736-eaaf-49ba-9edb-85e971fb4cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6442af-929f-4bb2-ada8-3083eb8160d4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901394f0-6cbb-48aa-b5e7-1780e8c3b104",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a6348f1-7afe-43d9-bcc9-e8e022de92b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e687f7e-4eb7-4256-b23a-1404380d94c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dc999aa-ae3a-4528-8419-6176b682dc68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7aea4bf-fcdb-43d1-b4a9-027b1cfc1444",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774b08ba-b765-4df5-9fdc-72275ad80add",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5826fec0-0560-4a95-9fcb-1df29d545623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db59e459-5a62-4fa6-82e8-4368811e93e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6ea1d28-03cb-4571-bca1-06b300148a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f97a7a-537d-4165-8ef3-60cd41721519",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9cbba0-6711-4b5d-bc3a-0508e3f82176",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba061ca8-478b-43dc-8825-5491efeaa0f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9387775-0a53-494b-ba07-e0fa64ebc304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4455203d-8f7f-4e5d-ae9c-2d36e3ed2c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dfa8d65-682a-4208-9b52-0cc24fced7d6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446b8275-653f-4003-b661-64c95cf6df34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40fd40a1-1083-40f9-8b94-65776e043add"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87ef018-076d-4191-acc5-697b1c3bfbc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0df1386f-88d3-4355-b546-e43082c10865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bafadd6-728e-4214-855f-c62de78261f5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7354ad10-450b-458c-9526-63c961ffbe34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92a1e3e6-6d86-448a-bcf7-f9f339dc66f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b0f7cc-57db-4f95-a752-720e73e1721e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d22359d3-a98f-4aaa-89ad-eafae7b78242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef02d5ae-0ef4-431e-8edd-510ea96e790a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f01608-9157-4d9d-9915-13406a2b4b17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ab367e0-ebfd-4d9f-bd24-889e9cd8b688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d2880e-f506-4b53-95b0-63cdae711270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4684ebc-10cf-45a5-8987-5b714ecf1bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6331e322-1b0f-4218-ac9b-12d9e447d332",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5528493d-7821-4013-b1db-069ef7ba9dd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6a7f977-9274-44a3-8a12-faafb4e393d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aff03e1-b8c5-4f1a-ad49-35ce4844e32d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c7343e6-a641-4265-954e-a3f260b87829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1c022d-3ef2-4fed-86f6-12c5a8650458",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b79623-0edf-49e9-9ac8-a518233494a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "702243d1-b08c-4f3f-85ff-75267d2b75a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec7679a-9dde-449c-8757-adcdd6d16d9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27c8d4af-00ec-4881-843d-9d97969cd4fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89e2a80-43da-4c44-a30e-a0cdec1f8f67",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade75c60-e6f9-4bd4-a73f-935f086312ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb7e0749-aa64-4256-b0c4-de14f05810d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b3156f-f884-4e35-9d22-aee681974b21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7104a701-f1d8-4e08-8f26-c52b666e3dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8df58ca-2072-4a61-b36a-f8a67e100a16",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7ea5ea-5c05-46d1-8938-479515a57336",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a95ac7d-a730-464a-8c4f-948ffaecf3e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f0920a-fe79-459a-a4be-2b61d28fa19d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17fe49f9-df10-4c6c-9a69-6be513a5ec42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256632ed-858a-4a7e-98cc-76b0698093b2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95523e6-22a0-4ce5-b63c-8523d12494d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d86e7d8-291e-4d09-b122-3c945854e6b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e481d5-d7a6-4b6f-9f2c-f3f61146291a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba92296-c77a-4225-ac4f-25faa19a5de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af29a5b-0272-4113-b658-7d4a66f9d8cd",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52c29eb-e3c3-4b4e-b425-12b1ada46efc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f9c2cea-6913-4167-aded-894a49a902f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "163847f1-aa1d-48e7-b098-4832d8d8a956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba9b2d9e-4dc3-497a-bd20-0aeb06bad476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc24355-e0a8-4010-82ab-27fe725e2a50",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "662fcdb6-fdaa-4eaa-a8f6-853e939dc6fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5397afd2-0ca9-4bd2-85e5-dbd6fff33950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b96b156-4f07-49d2-9008-24a545ebe841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62beaf77-0c1e-45d3-8ca1-dd2ef8e88e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d525ea-43e0-4efd-b43e-86b2f0127d72",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649681cb-49d2-4bf7-b4bf-026a6498f3e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85bf45e4-3aac-45f2-a631-6c4a565a3add"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "238fedd5-0d21-4b10-adff-793040806ed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff08bab5-7ce5-48c2-aca4-b434b3e7405c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070eb768-43d3-4cdf-991a-ef34933722d4",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206117d3-bf9e-4f30-82f7-ba0f00593eca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6c4553a-2cff-439b-9da9-22ba595a6b14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3258cc-f872-4b3f-b621-fde74c4041b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f2018a9-96da-4fd2-bb05-e72b12eda616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81994a9a-8559-4f21-b458-efdd45ad6ea0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab572b5-e668-4c20-aa1c-60d7ff10ec08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc8aea72-cc62-4d50-b39b-741c3a9a3d54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9fad4cb-b6d6-4dc2-ac2f-547f7ccbfe53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c3e06c4-7a09-493f-b421-ee24efd82c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c253e41-dec5-4078-9913-e21b8b649557",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd9a7a1-1716-4da9-bb4d-5e2977032650",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3d081c0-2dcc-45d4-a058-a8272e534680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8eae900-c170-4df6-aaeb-b7754b42faac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ba5b02c-2030-40cd-9ab1-db210b2d22c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ab3a53-0e06-4dc7-b19f-dcc72472b92d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ea8226-4773-4c8a-bc77-32597987c796",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc4b17b6-dbba-4bbb-9e77-ad225e6f3c1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb156307-23f2-45da-b99e-8a275fc7c750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8768198f-f58f-4ba3-8c38-d8f6c71aabb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5643c1-9693-46d4-a585-ee51949f2a45",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed3a362-715d-42e8-b74b-fe3d1a0dff66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a56ec36-ec03-4413-8b01-84a589e7c00e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2856898d-c683-4770-8bf6-addbb68ea0b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82bb263f-8b58-4414-9e1f-3bf89b0d185e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399ec6bd-a494-4bf4-b76c-f25c16246d68",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd8aeee0-7595-4f86-81d6-a8b044d23ec5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98a2e153-1d39-497e-b95a-2ec5086e187e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd864721-e7e4-48e8-9a21-12dce3832171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56aadc17-3c14-428c-a452-2b6d4f6abe42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e10782a-97ba-45b4-acd7-1121e8613f27",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82bd5a7-b33b-46c0-a092-c1cce27124c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56444ab8-4103-453d-8d8c-9247f51a8540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "353f6ea9-b562-4a26-903c-bc7efbcdbbc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c705d15-6694-4439-a13b-553e929648a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea3a9c7-45be-495f-ad59-0178c4de6287",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a984cb2-bd03-45f8-ade6-ffa2b6bdb261",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ef475de-4371-440a-9c60-0ee359891221"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe91479-f152-4fb3-ae8f-2b082c141c83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29221930-895d-4fba-9147-66e413ba4c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace57be6-1205-4577-a4e3-31f545e3aa53",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed59fb40-fbd8-4a14-b544-32a50a1efe62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f82138a-6257-44c8-ac71-a68871c24040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb55b8b9-d602-4302-9ff9-6a9254f5fe4c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac10f9d9-1815-4c70-80dc-29619273da53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1432fefb-7a67-43e3-b163-5f2bbfd1e705",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8632da6-8950-4ba0-8faa-c5a2b2ca05a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cc2090c-ddce-4f33-a9d3-b82111db19c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e81c4e-d6e9-4c05-8523-31cd6bebf2b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a2a1cf5-c53a-42f2-994a-2f46f89c9371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf895cdb-65f5-42f5-9870-5fe173be579e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b80419a-c753-4a62-8870-7f08610729c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e3047d9-5295-4218-8a78-ac60a7bb7c35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a46f0c-2cf3-438d-8f56-19a2e850ed09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "877fb65d-a050-4b61-b4e8-9bd779cb9606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347264e6-2b4c-4bb9-a055-b5a1522de305",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb28fdf-bd77-4821-90cc-8f442c13ba8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1854fc7-b090-4fc4-84aa-5dc0ef257dfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10738108-fdc1-49d3-9bea-fd58ef27cfb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e0f0e7b-b4db-45c6-915e-b50ab0227a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6b7596-9e51-414c-8934-943aae5ced7d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41629cf0-7bfb-495f-86bc-26722f8973c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb24136b-c558-47aa-abac-4a945cdc4954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "472aa659-6fcc-4c34-8934-7894b3aeddab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a23fef-73fb-4b47-8895-2aa87ba05016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390486e7-5058-4af2-baa7-4023b27b7df9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fffba770-3621-49ee-843e-9f7350124b32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dae30aed-45cb-4295-b3c6-119ff6512b78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c413404-7328-498a-b3a7-c8c73090b60c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "357de450-1849-4c72-9719-70775826357d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4fe676-cdd7-4629-925a-f1b315e77a32",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2fd66a-104d-4021-89b8-227b7b2f38e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d94ec10-e43d-4b4b-9c7e-64b3792e1432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90695c64-8d46-4d7d-9867-975f825e6ce0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0343ea0-e9ed-4fcd-a78e-f3905a324eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1129ab-cd77-4413-989b-0ed4c9d9baf8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e906be85-0ab9-4dfe-b7af-ef2e9d1f5b68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91290777-4ce1-45dc-8f18-48e5eccfa059"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8013e2-81c0-4700-8662-a49ccbbeaa8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84dee001-64b8-477c-aea9-a1f6d2d8096d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2441f8af-6bf4-4081-b020-beb0ab426f55",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e4ca9a0-2f9e-4735-af79-4f8ccdb2f762"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be4cae90-5adc-4f51-8e36-924dd08163d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4a8262ff-5b64-45df-9ba7-e32c2f421a84"
                    }
                  }
                ]
              },
              {
                "id": "7c5bad1a-00cf-42dc-ab58-409b78e2ea98",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1de490bf-34bc-415e-9bb7-e21c02595515",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2abb6478-b1a5-49ba-9251-82aef43eb45e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d7d7c5c9-fb4a-46a5-acc0-5ba3c5e80ff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b23ad11-2c3c-401e-839e-122053d5e844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aec2fc8d-91d7-4bcc-967e-2b56d9deec1a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "796507f6-e48b-4b22-83b3-77956de054a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb2237a6-1151-4ec0-b2e4-96a7298c7bd8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "732538b1-c35e-4f4b-853d-c14d0c6d2611",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83ca85a8-8491-40ee-b5c9-0746a652a8c7"
                    }
                  }
                ]
              },
              {
                "id": "343ac35b-ed78-4101-ace7-5efb03f39f20",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "bfeb07cd-bf6a-4112-a50d-5c73f152dec1",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ec9c5f-d8df-40f9-9fa9-de7aec0112ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "87254c50-7140-4b8f-96ad-64db7c8e0657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1aec5b-bcac-4725-8d57-0e6b4be73b8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff51a21a-0466-4621-96c1-99be40272455"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "15032120-0752-469d-943e-32601c38b438",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c86356ac-e87f-4225-ba2f-827618d2aa1b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "993635ff-2cd3-42f3-9200-9287ed1bc8c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "24def607-a5ba-41cb-a492-29c402f19dbc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84fc5de3-a6e3-4717-8963-10745d8cb037",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b569019-b555-49e3-9645-e8d6f6cf261a"
                    }
                  }
                ]
              },
              {
                "id": "5df73b07-8bca-443b-be8e-2b29b76246a1",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "82b92a56-d859-44cd-b27e-9066f4a1d36e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e344a319-fe2b-4af5-bcce-431cd8e138ce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "410a80bf-5e01-445d-8774-59ce7ba7334c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37fe48ad-965a-4bc9-b352-11e4e6bed5c3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "badf59d3-f24a-4bec-913b-88fa7b03d559",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "71653724-f142-4b70-8851-ee19dd4b38af"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "61e811c8-ceec-4110-b0ff-c312e3e65b96",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dc1359c4-54dc-4041-8fcc-0a915fc6e0b1"
            }
          }
        ]
      },
      {
        "id": "15efeba8-d9fd-49be-bf29-a29cd4bf8d6d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a47b9998-cfb6-4e80-81af-e184e6e30a6a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9423b9da-5c7c-4ed5-ad9a-3724d12dc995",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "695d8c13-94f0-433a-9502-2e5ba1417b1b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d661e35c-6a16-4f49-ac25-5d05775c7843",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "427e3b39-4d25-426c-8a15-993d39e3546f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf7ac47-0c07-42bf-8d5a-54cb0d95383b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "454f3c25-95fe-402d-8eaf-093ac661da12"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "746d79f4-7c94-4e91-acac-f1d6c05802b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4a42d47-5623-4f02-bc60-91f2ca2b3990"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "030ef0fa-0d9e-42be-bb42-cff12afc8f92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4bd871ad-1f28-4bf1-a470-fd4955efc788"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "073f6008-439e-42e2-92d6-72a04bb5bec3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7dc27b1e-f839-42f5-9f4b-fb943f1a5232"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8c3514f8-ba72-4006-9e6c-289afc85a721",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "876cacb8-9300-4d3f-83b3-f9926cf95df9"
            }
          }
        ]
      },
      {
        "id": "c03cf6b9-4693-4734-b0f3-46b5df5bfbe3",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "df9cbfa2-c6ca-4fa7-85f8-0e596cd94125",
            "name": "Negative Testing",
            "item": [
              {
                "id": "699f70b4-c76b-432d-a08c-1baf0b83ac0e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "267630dd-d8b5-480c-9caa-f4e3529c4f52",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c8ab11-4a4c-46c4-a957-e954c47149ff",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "671e47a4-82e6-4ff0-8eb8-099c09b3f492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5664bf1d-8d13-4a5c-b964-074c3cd8daca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a322e721-2907-4a09-bc0b-18ed2ec40879"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4dfe6535-3955-4b1e-8763-b2d2e1111336",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e274374-0ee1-4a7a-8cd3-a111afb05a41"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ef23da3-f453-48a9-b9b1-8bc2df5258a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48a98925-ec4d-415b-8a8d-2111401c2281"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8e0e63b1-90af-489a-8672-69a803ba1c59",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ba133d59-2530-419f-9a34-9451dad9980d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a0b4b3f-74a0-4b5f-ace1-ac4c7eb4b1b7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "77d6efa0-d612-4a6c-bfa2-9746bf7e07f6"
            }
          }
        ]
      },
      {
        "id": "1074b563-c3ad-48a5-95f8-c61dc2e1e995",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8f50d8c5-0d36-498f-8157-67ee87d36cea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a2995759-f998-4a51-806d-cccac69d7c48",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "411cacbc-5f0a-4155-8f33-3d4100e6141a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f969178a-09ad-4146-8268-cdc9e944526a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9976ee4-bf1b-48dc-81b6-c3dcd33a1eb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3af1c3-dfd6-4419-9563-d8ed1e135313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52bd521d-c327-44f6-8bc3-2ee9e5904627"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a3921ed-e162-44f7-9572-24d10b1c427e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e855ba4e-f46b-47dc-9486-771f6abed60d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e516a6b5-955a-4790-99db-149f6b6e541b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97e0baf2-9a04-46dc-bb60-3759d9eb0f4e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34b7e452-119a-45bb-86ae-1bd2f04da320",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ddb7914c-0b93-423f-b2f4-b6fb3a56a3ca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "564ee08e-7b2a-4ec3-bf9a-b210bfae5e6b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a39e58b4-f6bb-4e8d-8f71-c4c589907dcb"
            }
          }
        ]
      },
      {
        "id": "f2c64417-195d-454f-b798-72bfc8fbb535",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d792b3d9-e456-4502-9e1d-0b5612c1d41f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "20b80543-edaa-410e-b172-5baba71e1188",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "68816369-7d78-49dc-8e58-ead65085fe2b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ef687a8-98b9-43b5-900e-f0088e3eed50",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c746c56f-fa91-44b0-80e3-8a9dbe8a6c4d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 294.2112676056338,
      "responseMin": 7,
      "responseMax": 10956,
      "responseSd": 978.6169122796737,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1689209310324,
      "completed": 1689209409886
    },
    "executions": [
      {
        "id": "219ed1d9-b3b7-4f62-b939-34e16a005590",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8b8e172c-2f98-44f3-ad48-68780c7dd0b5",
          "httpRequestId": "0f2d12bd-b826-473f-bc74-34f21c72ce67"
        },
        "item": {
          "id": "219ed1d9-b3b7-4f62-b939-34e16a005590",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0ef25a83-940b-4387-a992-8ebdee1d1218",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 0
        }
      },
      {
        "id": "f92e9532-c350-447a-bbf5-61baca687ab1",
        "cursor": {
          "ref": "0f6a36e3-039a-472c-a743-52c23c559663",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4f709eba-7568-4dd0-8309-8bc6760b10ed"
        },
        "item": {
          "id": "f92e9532-c350-447a-bbf5-61baca687ab1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5da7080b-447e-437d-a572-eb32f1fe9027",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "6473bc30-94ab-477b-acaa-21fa30d4d40f",
        "cursor": {
          "ref": "bda6450c-f6a0-4ce6-bf87-fcb7a915437f",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "23fade69-295c-498e-bbc6-78094df62183"
        },
        "item": {
          "id": "6473bc30-94ab-477b-acaa-21fa30d4d40f",
          "name": "did_json"
        },
        "response": {
          "id": "4b4603cb-5792-44c9-836c-6a8f8363c099",
          "status": "OK",
          "code": 200,
          "responseTime": 591,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34223283-7040-417b-a3a1-5e3a98dd0898",
        "cursor": {
          "ref": "d64b863a-4990-4064-9478-897ba931ea77",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "85f453e2-79aa-4a71-879b-73293423747a"
        },
        "item": {
          "id": "34223283-7040-417b-a3a1-5e3a98dd0898",
          "name": "did:invalid"
        },
        "response": {
          "id": "b2e6c739-bb81-475f-9214-68a3fbd0fe5e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1025,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34223283-7040-417b-a3a1-5e3a98dd0898",
        "cursor": {
          "ref": "d64b863a-4990-4064-9478-897ba931ea77",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "85f453e2-79aa-4a71-879b-73293423747a"
        },
        "item": {
          "id": "34223283-7040-417b-a3a1-5e3a98dd0898",
          "name": "did:invalid"
        },
        "response": {
          "id": "b2e6c739-bb81-475f-9214-68a3fbd0fe5e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1025,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb1c1c7-feaa-499e-9387-8781cf5fb219",
        "cursor": {
          "ref": "571b9492-9b7d-437f-8d49-1a087214eba5",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4c615599-e144-4759-86f7-c09bceff06a4"
        },
        "item": {
          "id": "2cb1c1c7-feaa-499e-9387-8781cf5fb219",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "12e91038-3fd2-45df-b0d5-be4ec97e8ec7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 68,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea3d828-c582-498a-95a1-3eaa9b576fb6",
        "cursor": {
          "ref": "d411310a-86ed-4506-87a6-9afb00155fb7",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "534144b2-2df8-4553-a208-c0181582f443"
        },
        "item": {
          "id": "eea3d828-c582-498a-95a1-3eaa9b576fb6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "422899d3-0d82-44e1-8186-f33e51cdfc5d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 74,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e4f7de-b559-4148-9014-620d905db360",
        "cursor": {
          "ref": "6fc167ae-6c05-4ae0-9e28-a8acbc06e887",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d03eb2f5-1e40-4b3a-ab02-755ce7b19388"
        },
        "item": {
          "id": "c1e4f7de-b559-4148-9014-620d905db360",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "72498ac4-4f63-414e-8675-f8ff699dfcbd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f16c16-4f4d-4d9a-a834-9532eb737c9e",
        "cursor": {
          "ref": "210bbb43-c788-4df0-b403-28f5c3921f44",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e86dd8bb-38a6-47d4-92f5-f563f57489b9"
        },
        "item": {
          "id": "10f16c16-4f4d-4d9a-a834-9532eb737c9e",
          "name": "identifiers"
        },
        "response": {
          "id": "d300c62e-ee4c-40a3-90c8-460c862fa93a",
          "status": "OK",
          "code": 200,
          "responseTime": 135,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f829450f-b7a4-4ec2-9ee3-9ae0f2159d9c",
        "cursor": {
          "ref": "b2aae2fc-e4d8-4111-b2bd-fe709fd40edc",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6d515dd3-5889-4e85-b165-b25fa6ddd1af"
        },
        "item": {
          "id": "f829450f-b7a4-4ec2-9ee3-9ae0f2159d9c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "528141ce-f350-426d-879b-c2cae0a9ea03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38fe707a-151c-4ba7-b10c-3d11a5218e42",
        "cursor": {
          "ref": "e62e97ed-074b-4f4a-ac5e-b2e2702ac265",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "74746ea2-e0f3-4185-a331-504746f90817"
        },
        "item": {
          "id": "38fe707a-151c-4ba7-b10c-3d11a5218e42",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0cde2c5e-1ea9-46a2-af6f-4624e3c809c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21210094-ef5f-402a-8cd5-5394fa25825b",
        "cursor": {
          "ref": "82af084f-4902-4e20-8633-7ee29efd243b",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1dc7a291-d37e-4131-9473-f146d7be02c9"
        },
        "item": {
          "id": "21210094-ef5f-402a-8cd5-5394fa25825b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d68afa62-1840-4b9a-8582-73bae547d274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d876695f-86a7-4bf3-87f2-9bf9811a301b",
        "cursor": {
          "ref": "bfd98b02-88e6-4755-9c75-9efbc1736695",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "94189f8e-73cf-40f1-9af3-57a3a72f0e35"
        },
        "item": {
          "id": "d876695f-86a7-4bf3-87f2-9bf9811a301b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d5828c82-2a92-4280-ab18-c30270d8d755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ffbad3-9a62-4d63-8cf0-d7e8ad06599a",
        "cursor": {
          "ref": "0b5eac0b-340b-4455-a241-e5ba2b8ef031",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b25a0b5a-785c-4f4b-906a-da1a7c1c4e70"
        },
        "item": {
          "id": "a9ffbad3-9a62-4d63-8cf0-d7e8ad06599a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "11a004a5-d90c-4e51-bda3-6d9306fd5f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5d7167-de7d-41df-8f1b-3f3befe03825",
        "cursor": {
          "ref": "6eb0d4ec-b04a-4a46-a291-94d13060add9",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "45b86452-43ee-4b34-9cfa-a83de076dc7b"
        },
        "item": {
          "id": "4e5d7167-de7d-41df-8f1b-3f3befe03825",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "20413c5f-f8b9-4965-aa79-befb28e6ebab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5bdc7e-4277-4087-b897-b83e65649508",
        "cursor": {
          "ref": "8f5009bc-69d8-4eac-920f-d4be6a9c4310",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4c1b7dd8-6cbd-442d-93a6-646597e1e5f1"
        },
        "item": {
          "id": "db5bdc7e-4277-4087-b897-b83e65649508",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "04e574ef-72f3-4651-b5e0-2369cae0ca9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7dafc47-0804-424e-8da8-39e97155caf5",
        "cursor": {
          "ref": "df8be2a2-8539-438b-991a-babbe830114b",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "98fa89db-0ae2-4ce4-83a7-53643d6bf054"
        },
        "item": {
          "id": "f7dafc47-0804-424e-8da8-39e97155caf5",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "79765e47-d63b-4159-a58a-ade72af4ef9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49552dd3-9e88-420a-9541-ed0622751dd6",
        "cursor": {
          "ref": "680a183d-1f4a-4996-b8d5-cde8810a75a4",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b2130803-8e17-4d66-a83f-cb9145385a41"
        },
        "item": {
          "id": "49552dd3-9e88-420a-9541-ed0622751dd6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ca2d8ef4-04c7-447e-b7d2-a44b80489c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97335f8-7f59-43ea-9589-4bc02f37dc81",
        "cursor": {
          "ref": "4c8eb49c-1b77-412c-98a3-cc5055555fa2",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "62e5504c-c846-482d-9afb-03fe9a651e61"
        },
        "item": {
          "id": "b97335f8-7f59-43ea-9589-4bc02f37dc81",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "01451180-e53d-4c5d-bbc6-d3e0c86530b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a122c00-c0ad-46ce-9000-ce5101a8de52",
        "cursor": {
          "ref": "8c2dc294-ca1b-4c1e-92d7-63377f732771",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2c295504-41b1-4a0f-a17d-15e4426e53cc"
        },
        "item": {
          "id": "5a122c00-c0ad-46ce-9000-ce5101a8de52",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "bb91eb9c-6091-4f81-9a87-5ecf42bdefe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6e5af1-de89-4bc5-9bc5-4b906b107773",
        "cursor": {
          "ref": "bb0c71f3-24b3-4373-86f6-850ae67e769d",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d5ce404f-3de5-4cb2-a98e-159cfc613695"
        },
        "item": {
          "id": "af6e5af1-de89-4bc5-9bc5-4b906b107773",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c58c9a22-b77f-4365-ace1-08b1a326aba0",
          "status": "Created",
          "code": 201,
          "responseTime": 1952,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:20)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:20)"
            }
          }
        ]
      },
      {
        "id": "1eecdcb6-8922-4d93-a111-502a348c0d8a",
        "cursor": {
          "ref": "d0c821a5-3cbd-45fb-828b-5ae0a4eb8d5c",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "621aa7fb-b6e1-4f1c-9f58-241e1be8bb37"
        },
        "item": {
          "id": "1eecdcb6-8922-4d93-a111-502a348c0d8a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "99069044-b8d9-41aa-9900-c2ddbf330227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb01a6c-5a0d-4866-999e-6df689147e21",
        "cursor": {
          "ref": "8922bc3f-eacf-4c85-be98-d53cbf95ca6d",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "90e46547-ff70-42ce-bac3-04e0e934c3b0"
        },
        "item": {
          "id": "edb01a6c-5a0d-4866-999e-6df689147e21",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c5024ee2-3419-49fe-a58a-06067b0378d9",
          "status": "Created",
          "code": 201,
          "responseTime": 10956,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "b7f8f6b6-3cfb-4afd-9067-d3d0dc8f7867",
        "cursor": {
          "ref": "6752f224-ad9a-44c2-a8b4-7fd1ba910cc2",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b5361dbc-2214-4b7b-a105-57cbc08866c5"
        },
        "item": {
          "id": "b7f8f6b6-3cfb-4afd-9067-d3d0dc8f7867",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b4698613-e132-4217-86a4-a990321d7deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f199031c-c6c4-46bf-9a2a-44feb04a885b",
        "cursor": {
          "ref": "0f98aab8-4b43-4ccd-8db9-bc1c09ac8d3c",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8c00bd21-97e3-4279-8162-a81a142532b4"
        },
        "item": {
          "id": "f199031c-c6c4-46bf-9a2a-44feb04a885b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6e5f9a06-b1c0-4610-b2c0-4bee65d88c69",
          "status": "Created",
          "code": 201,
          "responseTime": 6603,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:24)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:24)"
            }
          }
        ]
      },
      {
        "id": "b3ffa0f6-1ff5-4a23-99ff-6cf40a907300",
        "cursor": {
          "ref": "daa491b8-5dc9-49e0-bcdb-70cbcc8ee39b",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f221809a-a4cf-44ac-bcb2-39452ba29f48"
        },
        "item": {
          "id": "b3ffa0f6-1ff5-4a23-99ff-6cf40a907300",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "017808cc-73c6-4362-a7be-59380a466190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7eda9f-b806-4d61-9b7e-75029ddd9690",
        "cursor": {
          "ref": "cf4e5dd0-044b-4329-9801-bcabefd80967",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d12c48c2-030d-455d-bb37-7e4f365a3b6a"
        },
        "item": {
          "id": "fe7eda9f-b806-4d61-9b7e-75029ddd9690",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "07be84ff-5c42-49d9-b999-70cc8a629772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3203c5b1-7047-4cc3-9b5b-4eedd58ec653",
        "cursor": {
          "ref": "4c4806a4-afa2-4a82-af94-65f106073ce4",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c11e5bb5-8002-4efe-85ae-a95357fa60fc"
        },
        "item": {
          "id": "3203c5b1-7047-4cc3-9b5b-4eedd58ec653",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "de9ac5bd-f063-4b25-908b-fa270becc87f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e08739-4af1-4395-b77a-f662ba750ac8",
        "cursor": {
          "ref": "81d84ae7-2288-4be3-843e-31aff623e941",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "98963296-d6a6-42c4-8b10-76a56a4233f0"
        },
        "item": {
          "id": "56e08739-4af1-4395-b77a-f662ba750ac8",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b1004f88-6c68-46af-87ee-41c7e8d06059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df22845-7411-41cf-bf9e-ccc8bbb040dd",
        "cursor": {
          "ref": "74173809-f9ab-418b-87f4-62e94685353c",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1e21304a-1662-44ca-a6c5-eb5185ae7d7e"
        },
        "item": {
          "id": "7df22845-7411-41cf-bf9e-ccc8bbb040dd",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a4d869aa-aa07-4e4d-89a5-e361f59ac44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b901412-7075-43e7-9c9f-eef767e1aacd",
        "cursor": {
          "ref": "1a42fd71-7ffe-4e58-a40e-cc78d9c6c1d1",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0c2da80b-48c7-440c-8316-d4f29415995a"
        },
        "item": {
          "id": "8b901412-7075-43e7-9c9f-eef767e1aacd",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e01763fe-1b85-4130-a70b-d0589c82fe01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e0481c-5c97-4586-8016-8a9031a49040",
        "cursor": {
          "ref": "34a4c48c-0c02-464e-bc63-9ffeb75e26c0",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e8e3dee5-6618-4d51-9efb-edad0c7c07c2"
        },
        "item": {
          "id": "76e0481c-5c97-4586-8016-8a9031a49040",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c50d83d2-14bc-4b88-ae3b-27806f874a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc488fe-2941-45c2-a0f6-8d0a2b7a688c",
        "cursor": {
          "ref": "967f2567-1664-451a-bb39-c0f34e8b9a37",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ab4bc1b3-16b7-45ee-b06e-51c6631c0381"
        },
        "item": {
          "id": "fdc488fe-2941-45c2-a0f6-8d0a2b7a688c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "82a86eec-1913-459e-9227-5f18340d4c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e97863-fd3f-46a3-bf61-8552f941ce86",
        "cursor": {
          "ref": "c7b3104b-f7e0-46e6-8735-e06ca2fc9343",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "aa504cc1-c30f-4182-9b28-99a048491b31"
        },
        "item": {
          "id": "a6e97863-fd3f-46a3-bf61-8552f941ce86",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d4a9a06c-7b1b-4d8e-a181-1c4ad2508a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619be25e-1dc0-40e0-810e-7a75d327ffe5",
        "cursor": {
          "ref": "c1567111-66f4-49ae-a348-c70f07252b9d",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5f096c7b-c248-4671-92b7-2b677fa8a70b"
        },
        "item": {
          "id": "619be25e-1dc0-40e0-810e-7a75d327ffe5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e66808fd-d429-4217-b9a0-1a64678b43fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04beeb2e-a41c-4409-8726-f6bb771ac036",
        "cursor": {
          "ref": "26b751ef-7e7b-4dbc-a013-81129fb405fe",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f6d9dddd-53a4-46bc-b6b5-e63cbaa0f51a"
        },
        "item": {
          "id": "04beeb2e-a41c-4409-8726-f6bb771ac036",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "464cf7fd-6fd6-4e10-a040-74164263d2e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a92830-a155-493c-bff3-ee9308a138ad",
        "cursor": {
          "ref": "8bdbdea8-2586-4927-9394-e88bc117a027",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4e75654d-1d53-4277-a949-3e084ce980d8"
        },
        "item": {
          "id": "96a92830-a155-493c-bff3-ee9308a138ad",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "bb69b8fb-1ec5-4b74-86f4-c3bffec31262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47441674-2ca1-49ce-ad66-f92be7a46862",
        "cursor": {
          "ref": "480516ec-bc0f-4714-baea-1ae327d517ea",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "dc6f79da-33cd-448b-8aff-895f0422bf42"
        },
        "item": {
          "id": "47441674-2ca1-49ce-ad66-f92be7a46862",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d0284a5d-28d8-4205-ad63-5850c2908976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e0f894-8414-4b2e-884b-e31656616fc9",
        "cursor": {
          "ref": "91b4d045-97b7-4d04-a4e4-17e3ca1b07b2",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3d7d7c11-3112-400b-9622-18927010d6e2"
        },
        "item": {
          "id": "e8e0f894-8414-4b2e-884b-e31656616fc9",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c7aeb0b6-91d2-4596-8fb4-ba84c6e1f286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944e8b9c-6dee-4e2b-be6d-95fbe9357158",
        "cursor": {
          "ref": "e0c03b0b-c80d-4d63-9a42-1080ad818c13",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d640c254-a2d3-4353-8a54-464e56ac6c24"
        },
        "item": {
          "id": "944e8b9c-6dee-4e2b-be6d-95fbe9357158",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "79c9ac2e-176b-43d3-a3b2-77201d810627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddca8ff1-e032-44c2-a5bf-cb5505646608",
        "cursor": {
          "ref": "9593a874-17e3-4bab-abcd-d467099aac11",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e3b5af97-e4ce-492f-a20a-9d2b1cd6adb8"
        },
        "item": {
          "id": "ddca8ff1-e032-44c2-a5bf-cb5505646608",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f12adb23-469f-4531-89a4-28c21253e9a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41036c1-ea04-4c63-8094-8bb2e5ce243d",
        "cursor": {
          "ref": "07c4ccf4-7991-4181-bbbd-039fb1e6c7e2",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e93c606e-cad7-4cb8-b96e-58def27681e6"
        },
        "item": {
          "id": "b41036c1-ea04-4c63-8094-8bb2e5ce243d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9e9ac34f-f9de-45f7-8f99-f4158399b46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dbe1874-5859-4e8f-a343-f46ea5e0007e",
        "cursor": {
          "ref": "83147420-55e4-49a1-8960-ae17114654e4",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a8920ccd-0742-4d32-b93d-4fe711170031"
        },
        "item": {
          "id": "2dbe1874-5859-4e8f-a343-f46ea5e0007e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "803c793b-97fe-4803-ba9b-c7a63324034c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e98d560-3d19-43fe-acd0-2dc2934c9a8c",
        "cursor": {
          "ref": "35768da8-89b0-4b4e-ad05-5ac302af300e",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "aa044d4d-fabe-4580-9930-d20076d8bd6a"
        },
        "item": {
          "id": "5e98d560-3d19-43fe-acd0-2dc2934c9a8c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a8be65e3-b701-4176-9bea-426e82ee1869",
          "status": "Created",
          "code": 201,
          "responseTime": 3490,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:43)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:43)"
            }
          }
        ]
      },
      {
        "id": "97bd8c80-29d5-4112-b69d-7e4c00426e90",
        "cursor": {
          "ref": "a3bfff92-10f4-42b0-862a-a72a864ae2e0",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "382e914a-4542-4766-9566-8f9cfe0bcb97"
        },
        "item": {
          "id": "97bd8c80-29d5-4112-b69d-7e4c00426e90",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d8cf3980-6d12-4ed8-a7fe-5cd65c277a65",
          "status": "Created",
          "code": 201,
          "responseTime": 2215,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:44)"
            }
          }
        ]
      },
      {
        "id": "650acdf5-6164-4694-9d88-3b896ae61faa",
        "cursor": {
          "ref": "05b747c7-948b-4f72-8ec7-e9081848eb19",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "48517f4b-8e2f-45d5-98b0-7075ecc556aa"
        },
        "item": {
          "id": "650acdf5-6164-4694-9d88-3b896ae61faa",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9cbd5a98-ae90-4f3f-a346-66e4997d528e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aeba7d3-d7d9-4fe7-9dd0-426e04b8d2c2",
        "cursor": {
          "ref": "e364bca4-3a34-494f-bddc-e0fd6340e79f",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6ba9bab3-db34-4514-90c9-ce362032b910"
        },
        "item": {
          "id": "6aeba7d3-d7d9-4fe7-9dd0-426e04b8d2c2",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "fbaa6fc5-d097-4be9-9c27-1d201befe267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73203c1-1657-4a1c-8758-342a42ea54ca",
        "cursor": {
          "ref": "6fadb755-daf7-41a7-8774-cb8bf6821280",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3bb6ca63-b654-4078-837b-0108ea32fa2e"
        },
        "item": {
          "id": "f73203c1-1657-4a1c-8758-342a42ea54ca",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6b2cdfbd-7d16-4b9f-b99f-a9bc442d022a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5d7a96-efd6-4b53-90b9-0603c439f9a2",
        "cursor": {
          "ref": "49cd1615-55ec-4f30-95c3-4ff7d9748e94",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c2f40bba-2291-4565-a327-7aabc0e20ff0"
        },
        "item": {
          "id": "ef5d7a96-efd6-4b53-90b9-0603c439f9a2",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a6a014b4-01f6-4218-8a63-945f1763f9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a7819e-6db7-4cf0-a06d-db95a62be79e",
        "cursor": {
          "ref": "c4fdcaea-1c37-44b4-aa4e-ab17d8aca93e",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "cd31d072-4616-499e-a335-0f3c61374206"
        },
        "item": {
          "id": "d6a7819e-6db7-4cf0-a06d-db95a62be79e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c2c16f71-59d3-48e9-80c5-afd2b5e52387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b05ecd-ac92-4129-ad71-058e6aa9dc6f",
        "cursor": {
          "ref": "9aedc09f-393e-4ba4-b21f-be508d577a3f",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "11176d8d-cbf7-4b99-abb0-1cbe090efa7e"
        },
        "item": {
          "id": "d4b05ecd-ac92-4129-ad71-058e6aa9dc6f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "02069b4e-e04d-4437-8b1d-5c4357fecde7",
          "status": "Created",
          "code": 201,
          "responseTime": 2912,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:50)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:50)"
            }
          }
        ]
      },
      {
        "id": "4e06b8b6-9918-4327-bc39-c429ac87af57",
        "cursor": {
          "ref": "0dbe74c8-fb41-4a25-b9b9-2cb4ac837249",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b240470b-bc76-46ea-b9ae-483c1be42e8b"
        },
        "item": {
          "id": "4e06b8b6-9918-4327-bc39-c429ac87af57",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9ca88b62-3bb7-426d-9b82-2a31a52d5c89",
          "status": "Created",
          "code": 201,
          "responseTime": 2631,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:51)"
            }
          }
        ]
      },
      {
        "id": "6351c775-2b68-4c67-861c-29c0c530016e",
        "cursor": {
          "ref": "46f3d961-4a31-4fce-9f22-a5997149a0fc",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0c549184-c7f4-43bb-b495-6cb1796273e9"
        },
        "item": {
          "id": "6351c775-2b68-4c67-861c-29c0c530016e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1d6ae219-7800-44fb-8445-426f44a3e327",
          "status": "Created",
          "code": 201,
          "responseTime": 2568,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:52)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:52)"
            }
          }
        ]
      },
      {
        "id": "4c1c4e3c-c5e1-4997-801f-0384cdc705a4",
        "cursor": {
          "ref": "64bd7fee-3e64-4c2e-9c53-e82474104849",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4ae755a9-040e-41e8-a1c3-9e59b88fb9f4"
        },
        "item": {
          "id": "4c1c4e3c-c5e1-4997-801f-0384cdc705a4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f1e8e30f-cae1-4749-a77c-ba399ddada9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b803f95-8287-4413-99d2-8191ccc081e1",
        "cursor": {
          "ref": "57644e44-c548-4bba-865e-658ef3e0650c",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "bff5bd4b-a68e-4d94-a570-ba1c0188b1ca"
        },
        "item": {
          "id": "8b803f95-8287-4413-99d2-8191ccc081e1",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c04268a4-5198-4645-afb6-bead9fabab4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f8ff76-86f3-4561-97c8-3e813c216b56",
        "cursor": {
          "ref": "02b98d76-d8ba-40f3-b194-8a23c321b343",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e2f309ed-c7bc-4ca3-b15b-f92520adae17"
        },
        "item": {
          "id": "97f8ff76-86f3-4561-97c8-3e813c216b56",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "627ddf5a-b43d-48da-ac82-a03f7765d1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb83cc0-6fe5-4a50-8811-22c6fbe0fd68",
        "cursor": {
          "ref": "398d3075-58d0-46ea-b1bd-2572413950e3",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "fa5eb609-4249-4586-bbf5-78ea5dfaffbc"
        },
        "item": {
          "id": "adb83cc0-6fe5-4a50-8811-22c6fbe0fd68",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "9d8ef3cf-0ea8-4c24-a776-32a7a3d08a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1281a3f9-6175-4897-9957-da519069618b",
        "cursor": {
          "ref": "89315126-3379-408d-a3d0-c42d7bfb85ff",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b5ac48c9-2d56-490d-95c7-696cdf53fd54"
        },
        "item": {
          "id": "1281a3f9-6175-4897-9957-da519069618b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e9d43f3c-3a04-408b-9373-aeacd72b868f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf6d0f5-541f-4018-a756-fb889ef37c5e",
        "cursor": {
          "ref": "dd55ce8f-3368-4d8e-b5cd-9eb223397ca5",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "66aa08d4-7666-4932-b718-d7a571aea595"
        },
        "item": {
          "id": "caf6d0f5-541f-4018-a756-fb889ef37c5e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d2b9d142-9ea8-4601-bd8d-69726bd8d083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716e5241-b54b-41c8-936c-d6fd6f6a75ef",
        "cursor": {
          "ref": "78e4926b-98b4-423b-ac3b-9fee2b729d3b",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4a79f879-3477-4b4b-87ac-1d2e3d59422f"
        },
        "item": {
          "id": "716e5241-b54b-41c8-936c-d6fd6f6a75ef",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4e30107b-9a08-4672-898b-9cbbee24934c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e95d16f-2fbf-4515-8275-b52420f975bd",
        "cursor": {
          "ref": "38273531-6490-48dd-8304-d2ff4d23d003",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d274d286-2930-419c-a909-49f892fc51f9"
        },
        "item": {
          "id": "4e95d16f-2fbf-4515-8275-b52420f975bd",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "0f571f17-4739-4783-aa3a-c2e37049bf64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3058b74-9723-45ec-aefd-a812b82eca6a",
        "cursor": {
          "ref": "a4d74fd9-0f4b-4d43-8790-ddb031c66832",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "81e7b858-88cf-4c03-9752-52c8e453c667"
        },
        "item": {
          "id": "e3058b74-9723-45ec-aefd-a812b82eca6a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "357ca5ce-bdbf-4845-9686-c0513b94ad7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5946a4c5-1551-4684-af98-125268a88e6c",
        "cursor": {
          "ref": "8cf9bd4c-277f-4b78-9fec-581def5e285a",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1a4af756-4732-462d-97b8-b3c284f7f6cc"
        },
        "item": {
          "id": "5946a4c5-1551-4684-af98-125268a88e6c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c5aafe85-5c12-47a7-84aa-a515f1286e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0620a657-da9b-41c6-a550-bdf22db6ccf5",
        "cursor": {
          "ref": "1deb57ae-6615-47b1-9d54-feaa1b50c596",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f3f826d8-b11c-4fb1-a928-636d5bdcdfd8"
        },
        "item": {
          "id": "0620a657-da9b-41c6-a550-bdf22db6ccf5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "565d0538-68b3-43ab-9484-07e6ea5865a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03b7c3f-60f6-45ad-860d-7a8a70a42345",
        "cursor": {
          "ref": "508db6f2-9f4f-4cde-895c-49f9a29cfed4",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "72678312-7fae-495f-8212-c208d3e6b98e"
        },
        "item": {
          "id": "a03b7c3f-60f6-45ad-860d-7a8a70a42345",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "dfffce3a-86ad-421a-b844-236ae8bd0ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827f0c73-a2cd-480d-9324-c7a962ca8cd9",
        "cursor": {
          "ref": "200d4e38-d28a-4a5a-92a7-dbd96f51542b",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2c887c2c-8adc-4203-8288-aca9c32fefb0"
        },
        "item": {
          "id": "827f0c73-a2cd-480d-9324-c7a962ca8cd9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "42eb6ec2-c9af-41d6-9a00-e21d349eaba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a707df-6bb4-4fe2-a3f2-9f9580e52553",
        "cursor": {
          "ref": "77d160f1-cc43-42eb-a304-d2e1fd7eb8b8",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "70b93d7a-89ba-4d67-8027-71a1fdf875ec"
        },
        "item": {
          "id": "e9a707df-6bb4-4fe2-a3f2-9f9580e52553",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d939f7d0-2d95-4d36-95de-1cb7a7269e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211ff53f-3693-43d8-a6e3-014eb968e7ec",
        "cursor": {
          "ref": "b1eb2e4d-7b6a-491f-a19d-c8cb57c72150",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "28b8ebbd-fae3-4a26-8d68-1f4de738c4b0"
        },
        "item": {
          "id": "211ff53f-3693-43d8-a6e3-014eb968e7ec",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c89769d9-58e1-496f-b4f8-0fa78924a8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8820933d-ffa2-4c85-ad04-4c007714440c",
        "cursor": {
          "ref": "1ea16a0c-f645-4826-a206-28e63a1f1362",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "837168da-c050-40f2-937f-e28597fe6d7b"
        },
        "item": {
          "id": "8820933d-ffa2-4c85-ad04-4c007714440c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0dea6072-12d6-4861-92f5-73203cec1017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42311824-4fac-47ae-88a4-404782932628",
        "cursor": {
          "ref": "940523f6-92d7-4394-842b-922855a18d4b",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c1db3597-435d-413f-91e4-55807ef3af63"
        },
        "item": {
          "id": "42311824-4fac-47ae-88a4-404782932628",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "10d0c6b1-5d5d-417b-ab7c-35ac1f58ff1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51690c68-936e-48b3-88dd-41e9399b7581",
        "cursor": {
          "ref": "17b54d1f-7249-460b-8724-e9d7c19bc85a",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a4a7ae86-a0f1-494d-82fb-e7c3ebab3584"
        },
        "item": {
          "id": "51690c68-936e-48b3-88dd-41e9399b7581",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "49dbc5cb-e72c-4073-8a2c-5341ba77d6ed",
          "status": "Created",
          "code": 201,
          "responseTime": 5607,
          "responseSize": 976
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:70)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:70)"
            }
          }
        ]
      },
      {
        "id": "e8d01549-68e6-4ff4-a9fa-3be6d7e1506f",
        "cursor": {
          "ref": "d602aef5-571b-4bdc-8d08-8abdf6fa19a9",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "058b3ed3-0c41-4f12-aa56-824bff0de740"
        },
        "item": {
          "id": "e8d01549-68e6-4ff4-a9fa-3be6d7e1506f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9948dc8a-86d4-4156-8ffe-9cb268c20111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 172,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee53e07d-3a2a-4b56-b1b9-9abc827e2579",
        "cursor": {
          "ref": "9ad59ff5-0ef4-4ea7-be00-0f55042cea33",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "50ad3261-c892-415c-b1bd-a5d8ad254724"
        },
        "item": {
          "id": "ee53e07d-3a2a-4b56-b1b9-9abc827e2579",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d5cede21-97cb-4f7a-a5ab-b02350575a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86134274-1935-4eb0-947b-d40072831551",
        "cursor": {
          "ref": "ee33d4fb-9f55-4d55-b910-7882b8cc24b4",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "08c2c041-1ae1-4174-98e8-837f39265c30"
        },
        "item": {
          "id": "86134274-1935-4eb0-947b-d40072831551",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1042b720-0c2c-4fa9-8aaa-d776f96fd51f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e000d2-1185-4a6d-ad23-366134b72775",
        "cursor": {
          "ref": "992d8c4e-782d-40cc-b24c-20ef8c3d95a2",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "099c5c77-a5f3-471d-ad31-3ba8c8dfec0e"
        },
        "item": {
          "id": "c3e000d2-1185-4a6d-ad23-366134b72775",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d4b72a29-0869-444f-a863-de34e279c921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a626f32-4bc9-4544-a9b0-9457dc501e14",
        "cursor": {
          "ref": "238b499b-625b-4e1f-94cc-7ef92cdac170",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "85642c5e-79a5-4b39-830e-b5ebd7d71437"
        },
        "item": {
          "id": "4a626f32-4bc9-4544-a9b0-9457dc501e14",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6e55091d-2ac5-4322-8b61-81f91d47fb63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814fc18f-8ad9-48d4-9c8a-76d27f1b1382",
        "cursor": {
          "ref": "cec7c6a5-bf39-4433-a23b-239216de57cc",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "986ca1d0-38e2-451d-8285-0af1a3f94443"
        },
        "item": {
          "id": "814fc18f-8ad9-48d4-9c8a-76d27f1b1382",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "fedb7355-1a92-4eec-9aca-1da8bbcb047d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4460b3e1-62cb-4bd9-b1df-36c02949d729",
        "cursor": {
          "ref": "a157e808-60f9-4907-868c-9f4fac1e359d",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "616d401c-9508-426f-8fce-1c93441457e6"
        },
        "item": {
          "id": "4460b3e1-62cb-4bd9-b1df-36c02949d729",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ff9ce4bd-16aa-4f7c-ac23-a0c535bdfd77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a4802d-6c65-41f7-8a29-c225ebb314a1",
        "cursor": {
          "ref": "1d80a7ca-cbf0-44dc-99ad-0759607d77ee",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "335dfdf1-b642-4874-ad07-8c0bc6ea892d"
        },
        "item": {
          "id": "45a4802d-6c65-41f7-8a29-c225ebb314a1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9591421f-72e6-4023-9ad7-7d519afeb3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "299008c3-43cb-4157-b925-863936c82cec",
        "cursor": {
          "ref": "a98eae8c-1b24-4f7d-8893-81d4cc9eb997",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ba2a7e65-9b8b-4789-979d-fba11777aaa2"
        },
        "item": {
          "id": "299008c3-43cb-4157-b925-863936c82cec",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5b490619-500f-4e47-a1e4-b7a7b7c7e387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0ca324-e64a-4f57-b193-522e2655709f",
        "cursor": {
          "ref": "b1569458-49ea-4180-a765-13a8b573e61a",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "34e3207d-fa0b-484a-80de-c7c8bdaf0873"
        },
        "item": {
          "id": "7d0ca324-e64a-4f57-b193-522e2655709f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ee03c354-e763-4ad8-b5aa-f6479ef42810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45db946e-c123-4550-813d-ef97b7875c24",
        "cursor": {
          "ref": "fdaa67c7-0d59-45da-abed-a01faee0d1c2",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b13a6d72-99c7-465e-8bad-bf4d93d18f8e"
        },
        "item": {
          "id": "45db946e-c123-4550-813d-ef97b7875c24",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f2658a4c-6fb3-48e0-954b-32de94d105d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03cfe229-c645-42d7-a291-f6bad2fa9de7",
        "cursor": {
          "ref": "57d67716-5a36-4017-bd15-d2079e5df828",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1eef8eb6-1f54-4346-b35d-938f5de12f1b"
        },
        "item": {
          "id": "03cfe229-c645-42d7-a291-f6bad2fa9de7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9fc27285-4b5c-4fac-9258-d84718698050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0805b88-9eeb-4822-9145-9478d26b26d2",
        "cursor": {
          "ref": "debc0dc8-ba48-446a-b570-da494de0cadd",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9fe81999-06d4-4492-a3ef-eb2c89c2d53f"
        },
        "item": {
          "id": "a0805b88-9eeb-4822-9145-9478d26b26d2",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2664364a-919b-4f69-82a3-2fa5e6b3d58e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f9e38ab-fb7b-45fe-9774-0db2a1949f7a",
        "cursor": {
          "ref": "bee7019b-5175-4eb7-9ffa-a77bf9e61c90",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "75c20d28-0bcd-4669-8ba1-2d92b88bb150"
        },
        "item": {
          "id": "8f9e38ab-fb7b-45fe-9774-0db2a1949f7a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e792862b-b8f6-42e2-b72e-b7e64a7e6001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e41e85-d727-4ecd-840b-f52250f98a6d",
        "cursor": {
          "ref": "c7e0fd3d-073b-4e65-9122-d58a928f1b5c",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a64f49a5-b0bd-4f7c-b0a3-841ac613b5d3"
        },
        "item": {
          "id": "24e41e85-d727-4ecd-840b-f52250f98a6d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "01ad16cf-e0d4-4ef2-bd96-98d5bcb6ba9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc39b7c3-51ae-4ca2-bf1a-8da700c3e8da",
        "cursor": {
          "ref": "fcddcbb4-d840-46ca-b7bc-266dceb5dd4c",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "323723c3-35b8-4a67-a4bf-87a5094a15af"
        },
        "item": {
          "id": "dc39b7c3-51ae-4ca2-bf1a-8da700c3e8da",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2de1a123-282b-4eb7-9648-c3a6b35c378e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccad653e-5ea1-4f8d-abce-462f4a3e8fff",
        "cursor": {
          "ref": "143f6488-a5aa-4aa4-bdea-677e1a6712ed",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1dab89ba-991f-4d00-8295-0e3ca7f7d486"
        },
        "item": {
          "id": "ccad653e-5ea1-4f8d-abce-462f4a3e8fff",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "dd6eb5ca-0164-4448-92b1-34e90ecba857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33e8858-34b8-4a48-8505-ccba962ef58f",
        "cursor": {
          "ref": "becedefb-8eb4-4c78-8d47-27333c2a9a1a",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ce7b6d30-e69f-4a8d-b7ea-1f59db659059"
        },
        "item": {
          "id": "d33e8858-34b8-4a48-8505-ccba962ef58f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e093bc21-62c2-49b0-a035-3a7f9b6e5aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e220f05-4668-413a-9bde-237dd13d6358",
        "cursor": {
          "ref": "e32ebb06-e5da-4018-8fb1-237a9444d592",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b1e6ebcc-e940-493e-87ac-14b56e89a520"
        },
        "item": {
          "id": "3e220f05-4668-413a-9bde-237dd13d6358",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f4129e00-d4f1-44db-97fd-0f437976a5d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4356d04f-3ddc-4e4c-96be-ae765c6acc34",
        "cursor": {
          "ref": "03205030-c9b4-4233-a4a1-15cb75299b01",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "874f5e8c-2772-48e7-a73e-676ee4318506"
        },
        "item": {
          "id": "4356d04f-3ddc-4e4c-96be-ae765c6acc34",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6afca136-5e5e-4e10-a9c0-0d49cda20121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a61cf6-ec21-41a1-b1a8-ee00b3ad6873",
        "cursor": {
          "ref": "5ba4aa1a-d336-4706-b8a2-e8784c87d5b9",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "897c93b0-2085-405d-885b-8596f0c00bdd"
        },
        "item": {
          "id": "e5a61cf6-ec21-41a1-b1a8-ee00b3ad6873",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f8bf27a7-82d9-4715-b3a9-55ae00509f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b460e5f3-f660-4776-9b0a-12d91ccc7fd4",
        "cursor": {
          "ref": "7f409614-01d5-497a-8b05-9685d019292c",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "abf8d879-410c-4334-88bf-41c0ec00d601"
        },
        "item": {
          "id": "b460e5f3-f660-4776-9b0a-12d91ccc7fd4",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1248825c-1aac-40ab-9fca-987b8c37693d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9943c446-5223-4672-b041-2311b14386ff",
        "cursor": {
          "ref": "40f1ca09-76b0-40ed-971e-2911dba3edfd",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e089619c-e36a-4952-9695-c5a0fdf0465e"
        },
        "item": {
          "id": "9943c446-5223-4672-b041-2311b14386ff",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a43cad8c-26b1-4f20-9a42-312c736557d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea0531e-099b-4443-87c1-a7f77a304825",
        "cursor": {
          "ref": "2c49049e-e1f2-4959-b934-f4af273a784d",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "cf04ca7d-1c63-4d68-9600-2fc829a1437e"
        },
        "item": {
          "id": "dea0531e-099b-4443-87c1-a7f77a304825",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "de460861-a6c5-40f7-b51e-2432a89f33f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe4868a-4fc5-4572-aec2-fcd185ae367a",
        "cursor": {
          "ref": "37936985-85e5-4f96-b4e2-1b915960d5b2",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "de505fc0-11fd-4941-b8fd-d3add8216026"
        },
        "item": {
          "id": "5fe4868a-4fc5-4572-aec2-fcd185ae367a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d3b478dc-dc79-4977-8dea-c3901dd1b662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9808b53f-c295-4fcb-9e63-58755c505657",
        "cursor": {
          "ref": "f9793478-f1ee-4418-820b-90bcff76aa4c",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "bcd66e65-baf0-4bcb-b3aa-5731d6ba5fc5"
        },
        "item": {
          "id": "9808b53f-c295-4fcb-9e63-58755c505657",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f5460d90-521e-4742-8a35-8d70beaa70e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62e7b4e-f44e-436e-9a56-d5363a9673d2",
        "cursor": {
          "ref": "b6caccbb-b3f6-4346-89e4-dc24a42493b6",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3060053e-74b4-4e32-84bf-4eca7aec940e"
        },
        "item": {
          "id": "d62e7b4e-f44e-436e-9a56-d5363a9673d2",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7aa8f850-0029-4ee4-8a5d-435c2aceb640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5cfc4bd-70c9-4b99-9639-6b19b4f8ed42",
        "cursor": {
          "ref": "fec1a867-ac31-44a3-a44e-348bb2afaebc",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "24fc0e59-2566-40a6-bdf0-bdfa2b3caa40"
        },
        "item": {
          "id": "c5cfc4bd-70c9-4b99-9639-6b19b4f8ed42",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0ccd203a-6498-4f07-931f-5f2368372ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3b16fb-898c-4fda-b06e-56cdf82a6368",
        "cursor": {
          "ref": "21a5a69c-0c41-4d7f-9d7c-f42292609283",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "108ee43a-8acc-43cd-9cf0-7d868d86aa6b"
        },
        "item": {
          "id": "ac3b16fb-898c-4fda-b06e-56cdf82a6368",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "48b5c8cd-e82d-4063-a4ac-3130d60ae68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed357ba-d28e-4af1-a3d0-7cb552389d79",
        "cursor": {
          "ref": "02a129ca-9638-48c9-8d94-cf3fdbb568f5",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f287cc23-fc94-4914-a2f0-92f3cf992c53"
        },
        "item": {
          "id": "9ed357ba-d28e-4af1-a3d0-7cb552389d79",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d954d344-f7b8-4da7-8bff-fa1a7e2ef4b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292d45b5-d842-4af0-b940-7462cd0114f7",
        "cursor": {
          "ref": "8d38c0ac-b15c-41b5-bda6-284c8c94e751",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0d374c63-8823-47f5-a789-e3ab5e2f4781"
        },
        "item": {
          "id": "292d45b5-d842-4af0-b940-7462cd0114f7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "03f4996c-8763-4420-8020-f337104c334d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb5bbc5-59a7-489e-99fb-b678228fa1c8",
        "cursor": {
          "ref": "0ff0cd1a-9387-49d7-8d2c-37bb087a36d3",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f7c2fe0b-f8c5-424d-9c06-ee55a419f036"
        },
        "item": {
          "id": "bfb5bbc5-59a7-489e-99fb-b678228fa1c8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "98d9fd64-7f0d-4aac-8df3-244b53203b65",
          "status": "Created",
          "code": 201,
          "responseTime": 2168,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae628bc-dcfe-4a34-b020-cd8c970f9c91",
        "cursor": {
          "ref": "719be9ec-d1a4-4c76-97d9-007a68ee0492",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8b88404d-9a38-42e5-a779-10c1ddf7a3d6"
        },
        "item": {
          "id": "3ae628bc-dcfe-4a34-b020-cd8c970f9c91",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9436daec-2aef-4792-b31b-88f2732cab04",
          "status": "Created",
          "code": 201,
          "responseTime": 2416,
          "responseSize": 985
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ec62c9-0017-4809-b06c-c6c52200f5e8",
        "cursor": {
          "ref": "35a66da2-3b6f-426a-a3b8-e56c6ddbbe6d",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0eff0651-d3c5-49a5-b65f-eba38f9b6427"
        },
        "item": {
          "id": "60ec62c9-0017-4809-b06c-c6c52200f5e8",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "675c6fc7-cc4d-4c9d-a9d9-5c8814acfb4a",
          "status": "Created",
          "code": 201,
          "responseTime": 2509,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f152924-d6c7-4359-a074-660dcca50b52",
        "cursor": {
          "ref": "c814d31e-c858-4d3d-893b-81d9bd39acbc",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "61b537fd-68b5-4e37-8c18-14e12a264735"
        },
        "item": {
          "id": "1f152924-d6c7-4359-a074-660dcca50b52",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d2110c96-fa99-4797-aab0-5bf30e5a3431",
          "status": "Created",
          "code": 201,
          "responseTime": 2603,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64e1792-b030-4972-aa75-c1a3a116947d",
        "cursor": {
          "ref": "9b0cdb6e-0d15-43d3-9e35-1d95706603d2",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3763e915-df03-4290-8a74-c2aab1b12982"
        },
        "item": {
          "id": "f64e1792-b030-4972-aa75-c1a3a116947d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "31ec2125-3868-412f-8f22-c133f68c3a6f",
          "status": "Created",
          "code": 201,
          "responseTime": 2370,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2023-07-13T00:49:38Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2023-07-13T00:49:38Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "d8d95976-f951-4d3f-9dfd-d2353fca0418",
        "cursor": {
          "ref": "bfac0dbf-0a6f-4897-8f2a-6474805aef08",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "37a690f1-dceb-4e6f-9415-f54f6a48390e"
        },
        "item": {
          "id": "d8d95976-f951-4d3f-9dfd-d2353fca0418",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d984da49-f294-4a09-ab85-b0bf877e1045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 164,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "403f7d7c-1ffe-41ed-972b-0b4532f5e735",
        "cursor": {
          "ref": "781f3e96-aa82-42f8-8719-a64f7485a891",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2e8ac0fb-fa2c-4dd1-a51b-5ee2af8e6dba"
        },
        "item": {
          "id": "403f7d7c-1ffe-41ed-972b-0b4532f5e735",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "233b4d99-f3ce-448c-b2ea-987d0db859fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95164762-9c91-4a82-aab7-47c8c380aeac",
        "cursor": {
          "ref": "849b23aa-e9ad-4e10-8540-a9880a24774a",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "43306b8e-bbcb-4590-a933-d880c0fafa7f"
        },
        "item": {
          "id": "95164762-9c91-4a82-aab7-47c8c380aeac",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "839bb706-e308-45ee-b974-76f31b8f36ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f921ccf7-808e-4f91-b50e-aa19ef5a5775",
        "cursor": {
          "ref": "b084b13f-bff4-460a-abb9-13acb5361731",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f14cb251-1d23-479d-817d-18938cbd37df"
        },
        "item": {
          "id": "f921ccf7-808e-4f91-b50e-aa19ef5a5775",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f1c83cf7-a2f5-40d1-a699-a6dae931f582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c874f4e-158b-48ef-a6ba-1f013680cd83",
        "cursor": {
          "ref": "5e40a51f-6e70-441f-9e81-f4319d8a03b5",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c16b9f80-68de-4d52-8f89-a3d8317b4fde"
        },
        "item": {
          "id": "3c874f4e-158b-48ef-a6ba-1f013680cd83",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6daec1af-9e9c-4f84-b006-ba432a803973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8913cfe7-7aea-4793-9b03-05d673564699",
        "cursor": {
          "ref": "4dfa6eb2-8b48-47bf-9e57-f82995777718",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e3f26622-cc78-4b6c-9ce5-cb9ab54a79a7"
        },
        "item": {
          "id": "8913cfe7-7aea-4793-9b03-05d673564699",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9ac83601-274d-4c29-bdb5-55d664d12507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5142dad7-230d-40ca-829b-e79133da92af",
        "cursor": {
          "ref": "70cc5d83-9197-4470-9671-c695dc27f4b2",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4add2842-3c00-49ef-a1f9-8f3537fbf67f"
        },
        "item": {
          "id": "5142dad7-230d-40ca-829b-e79133da92af",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6cbd69cf-1708-4809-a2f6-34d92262d8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 175,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb4f037-5cbb-4db3-8355-6e8628988fe8",
        "cursor": {
          "ref": "820c67e3-999e-4815-a712-999d95571ad2",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a75db14e-2afc-4ecc-95e7-725ef49094ec"
        },
        "item": {
          "id": "3eb4f037-5cbb-4db3-8355-6e8628988fe8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a6f22ffe-37e4-4158-91d6-3163f685b5f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfac9c6a-5ed4-4b59-9bd6-8dc96e329e52",
        "cursor": {
          "ref": "f42ca6d2-23c3-42e0-aee1-bb93d64ca05d",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "66e4cd4f-bc17-47f3-8df1-625d423e8fb7"
        },
        "item": {
          "id": "cfac9c6a-5ed4-4b59-9bd6-8dc96e329e52",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "955aeeae-f936-4642-8481-c13a3d84a731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9b0440-e77a-4219-a402-1d276c569d42",
        "cursor": {
          "ref": "69ff863a-1b0a-4e66-8532-e1b0ecbf9190",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "46255204-cadc-46ca-842d-68594796e2c9"
        },
        "item": {
          "id": "eb9b0440-e77a-4219-a402-1d276c569d42",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4e789151-b0a0-4037-8867-9d7270912ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d47ef86-79c6-438b-8b40-471755ff4549",
        "cursor": {
          "ref": "b2a576b5-522e-40cb-97b0-ae2d99631e3c",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a8b01591-c65c-41bd-95c3-a0911466a65d"
        },
        "item": {
          "id": "2d47ef86-79c6-438b-8b40-471755ff4549",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ec27b0d5-492e-43d2-ba86-2632b89de709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22a10f9-151f-44fd-91cc-932d88e514d2",
        "cursor": {
          "ref": "5e4378b1-98e8-4532-8b7b-1b7faea141bd",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8abd067f-ee5d-4712-9b17-07ab530725e9"
        },
        "item": {
          "id": "c22a10f9-151f-44fd-91cc-932d88e514d2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8de63918-cf71-4478-83e3-7150e58572ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 156,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3190757-93fc-4ee0-a020-d8153e738d01",
        "cursor": {
          "ref": "86c91466-65fe-4cc1-a02c-53722bcf7f9c",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "091742a5-f412-44b2-9505-64889044890d"
        },
        "item": {
          "id": "f3190757-93fc-4ee0-a020-d8153e738d01",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c500d8c2-5cf4-4528-9997-f82bd0712173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c129641e-7aee-4782-8d40-beb24504720e",
        "cursor": {
          "ref": "a31e13b8-129c-4275-ae9a-2f6786aba73f",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "df1ccadd-bcc1-46a8-b3a0-172916bb3b08"
        },
        "item": {
          "id": "c129641e-7aee-4782-8d40-beb24504720e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "069ce549-bc3c-48b0-8b21-73dea0973f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536ca362-0831-4e11-96ea-4d2fa03f3271",
        "cursor": {
          "ref": "edbba767-276b-4a63-8503-7033f2a2a732",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "383978c3-816c-4ebf-b2c7-05d9ba036587"
        },
        "item": {
          "id": "536ca362-0831-4e11-96ea-4d2fa03f3271",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "24dd0a65-09ff-44da-8563-442254e02eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 143,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe919465-1b4b-4c06-ac3a-7320cb394ed6",
        "cursor": {
          "ref": "476a05ee-5299-449f-8ece-bd2a3db67af9",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e2bd71e8-9330-45eb-93d3-78b679725fca"
        },
        "item": {
          "id": "fe919465-1b4b-4c06-ac3a-7320cb394ed6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5a84a864-c5ca-4dfd-8d1f-b72d45f95b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7662c3d4-b580-4951-813e-d132ab7d6a91",
        "cursor": {
          "ref": "2f76e465-be48-4d6d-9a0a-c81bffe39910",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "79f0d0f5-9fd8-4dac-88df-9ad645929199"
        },
        "item": {
          "id": "7662c3d4-b580-4951-813e-d132ab7d6a91",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0726b240-14ea-45a9-87ac-2862b032103b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692ea3e8-f71f-428c-8927-a87ca0c09a05",
        "cursor": {
          "ref": "720ef7b8-27be-491f-9bf4-fe9458f67e6b",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3c708385-fd63-4104-a99a-19de76a70adf"
        },
        "item": {
          "id": "692ea3e8-f71f-428c-8927-a87ca0c09a05",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d4ad52cc-524e-4199-a17b-e3819b0ba520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a838fca0-dc86-400d-875c-df021cd203ca",
        "cursor": {
          "ref": "ee1a8fe8-49e7-4c9c-a3ff-a87b3768fac6",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "558bb7de-78d9-48d4-8600-94d84e47b444"
        },
        "item": {
          "id": "a838fca0-dc86-400d-875c-df021cd203ca",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "67645fa4-e512-4ac5-bf94-31d78ee1793e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676998f6-fc9f-4a4d-98f9-0242ddd49b5b",
        "cursor": {
          "ref": "81c47637-a223-407f-9f14-c163f4b49b25",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c0cefdae-015c-48c2-ba65-f99ebf297845"
        },
        "item": {
          "id": "676998f6-fc9f-4a4d-98f9-0242ddd49b5b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b4fd14ef-63fe-4c0c-8c67-d11f1ed361d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321db035-0972-4b5e-9570-6f5708e50213",
        "cursor": {
          "ref": "f54f299d-b577-4c4d-81b5-c5d543a5e4d4",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b4e63817-c9ff-4753-b82a-226634c0a1aa"
        },
        "item": {
          "id": "321db035-0972-4b5e-9570-6f5708e50213",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "987884c4-561e-4aef-9599-e405cc21c16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149e28ca-1f7d-4994-939c-1e2bca9fe91c",
        "cursor": {
          "ref": "e0e42a34-8944-454e-867e-0bd70b2e861a",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d108f6f6-28c0-4edb-ba5f-f05ca64bc2ec"
        },
        "item": {
          "id": "149e28ca-1f7d-4994-939c-1e2bca9fe91c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b3d3b7e7-5e7b-4252-b7e3-4dbdd7593b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4b5ebc-0f25-4a22-8e8a-1c50c4aa415a",
        "cursor": {
          "ref": "e80ffd99-64f2-4ddf-9262-17763806bacf",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7b8c706b-a4df-4a42-8d26-e2aea073146b"
        },
        "item": {
          "id": "2a4b5ebc-0f25-4a22-8e8a-1c50c4aa415a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "37e1ef2e-291f-42de-9aed-ddb50f559933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c37e12-80c7-4418-bdd1-c029384ce93d",
        "cursor": {
          "ref": "a979d1ca-7bd4-4195-8a6f-588e14856323",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "dc6492b6-0f57-44f3-b21e-346acfaee4ea"
        },
        "item": {
          "id": "a2c37e12-80c7-4418-bdd1-c029384ce93d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cd4c3743-bbac-413d-bbab-facc15732b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8baadf5f-2891-47ac-8553-6cb117aec23d",
        "cursor": {
          "ref": "379184ea-9a00-4065-80c5-182ea0d42291",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3d923abd-d84c-4347-a09f-4dbdc7f90694"
        },
        "item": {
          "id": "8baadf5f-2891-47ac-8553-6cb117aec23d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "dd389b7c-f68b-4fda-9519-a0df14ebcf0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72be1c6-9999-4582-9270-3b678ac5e1ad",
        "cursor": {
          "ref": "fecb4359-1f48-4451-95b2-41600d4f2120",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "025aaf1b-a42f-4214-a9c5-fa474b3c9a06"
        },
        "item": {
          "id": "e72be1c6-9999-4582-9270-3b678ac5e1ad",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "835fd6ba-52a2-4083-b7cf-b1c7ca4da381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de28fa4f-bc38-4a2d-a931-ef88671ad416",
        "cursor": {
          "ref": "6dae9cfd-7e0a-444e-955e-dc0d583868ed",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a20fd772-27dc-411a-8553-ce24d1ac7f96"
        },
        "item": {
          "id": "de28fa4f-bc38-4a2d-a931-ef88671ad416",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c30f1897-607f-4193-9c9c-568df3703e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0ce5ae-7e9c-413d-b639-989501107cdd",
        "cursor": {
          "ref": "78931e34-fe07-4867-aa42-3b6de8da43bd",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f4b60d3e-3b0a-4942-b838-3fdcd495978a"
        },
        "item": {
          "id": "cc0ce5ae-7e9c-413d-b639-989501107cdd",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a1762a7b-428d-4dc2-aebf-8021c2d0e36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23873150-35ab-4bda-b686-6af70aeb6c38",
        "cursor": {
          "ref": "562f70ed-d08b-4d41-bbde-e17a896ee2fb",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ff2a1027-f15e-484e-927f-6a604003329d"
        },
        "item": {
          "id": "23873150-35ab-4bda-b686-6af70aeb6c38",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4f0b2587-60ec-43ef-8340-2dd0c1004bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156841ee-d68b-4483-85ea-6f418589d13e",
        "cursor": {
          "ref": "b034f38a-823d-4cce-89ff-f35a6d0a6ddc",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "441d5127-3028-4535-8c3c-a75c45336106"
        },
        "item": {
          "id": "156841ee-d68b-4483-85ea-6f418589d13e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9d90a7d9-9f53-429b-9769-724b782a5e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1afdc60-4eee-4b4b-9131-316637fd4f88",
        "cursor": {
          "ref": "6d97fb7a-744e-4d72-8414-5a5e4f29d868",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a76a81f7-ffec-4789-a194-37c654c9181d"
        },
        "item": {
          "id": "a1afdc60-4eee-4b4b-9131-316637fd4f88",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2d2988b1-7dbc-464f-8336-f7eddabf47cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf926b0-a51c-48b3-85ac-7ba0eb8d7449",
        "cursor": {
          "ref": "1d0dd166-27b5-4ad4-b379-c394b47cf68c",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f7607c8d-e548-42e5-83c9-6d571640ce34"
        },
        "item": {
          "id": "5cf926b0-a51c-48b3-85ac-7ba0eb8d7449",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "086d0edc-85e4-46b8-80bf-cee9b8c5f328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3b4a50-2ed0-4bdf-aa88-ddda62c87ae4",
        "cursor": {
          "ref": "7aa362fb-6789-47e2-806f-dbbbc5eec0f6",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d0d24eaa-1858-4ddf-9f53-f4a621b1a01c"
        },
        "item": {
          "id": "9d3b4a50-2ed0-4bdf-aa88-ddda62c87ae4",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "7edf684f-1ba2-4fef-bb70-b08d8572c983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a9cd93f-e48c-4dc1-a71a-09c04a36fb56",
        "cursor": {
          "ref": "3c4c633e-1381-4e31-8cf3-bb2b7a8b41b2",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4084ef64-013d-4018-9535-24160f78e5a7"
        },
        "item": {
          "id": "1a9cd93f-e48c-4dc1-a71a-09c04a36fb56",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "412e9c09-bc14-4fcd-9f19-3d2a9a49b39e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f579e78a-c590-4589-a037-b06940fdb77c",
        "cursor": {
          "ref": "7c845623-8b8d-4871-98ed-4dca0827f70d",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "94d89320-2ea8-4d73-8744-a5353de5b551"
        },
        "item": {
          "id": "f579e78a-c590-4589-a037-b06940fdb77c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e92e777a-5160-4452-82af-313128517749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c1a978-82a4-4a39-bcf8-efbd2cdcfc6d",
        "cursor": {
          "ref": "38f03f05-6608-426c-860c-523beecb0344",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "edcdf048-3b72-44f4-bcb9-9cd7d7ad65de"
        },
        "item": {
          "id": "20c1a978-82a4-4a39-bcf8-efbd2cdcfc6d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "facee9db-94f3-48a2-abb4-96c510079783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68f7042-129a-4e32-8f74-2cb1defd8b15",
        "cursor": {
          "ref": "4f619665-1f01-4bd6-8a1e-e177fdd1bedb",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c0c341d4-bef4-41e3-aea7-fa7d3ce7b11c"
        },
        "item": {
          "id": "f68f7042-129a-4e32-8f74-2cb1defd8b15",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d713b980-9286-4527-8856-880a1fd13eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a54905-f1ec-4fc7-8b81-62301162e7ba",
        "cursor": {
          "ref": "d22c5f03-417d-419a-8ba6-d72d1009c03f",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fae61a30-9ad2-47c9-9a2e-ecbf5453270e"
        },
        "item": {
          "id": "b6a54905-f1ec-4fc7-8b81-62301162e7ba",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "674d9c6d-8647-4907-a2ce-62660a394309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5551c7-2868-4843-b440-32d4bc1640ad",
        "cursor": {
          "ref": "fe1a70f3-713e-4809-b26a-9c31f053a6c8",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "71175368-b503-4a11-ab66-57ebeb49c1d4"
        },
        "item": {
          "id": "6e5551c7-2868-4843-b440-32d4bc1640ad",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3e7612b0-d077-4103-a879-fff487ca8b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12fb00cc-a680-428f-9f5d-b5905b542911",
        "cursor": {
          "ref": "2070ff3c-9927-41a2-ab98-84d0f6d9b987",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "df3be855-00ab-41a2-b6d1-468b69f48dfb"
        },
        "item": {
          "id": "12fb00cc-a680-428f-9f5d-b5905b542911",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ebf0956b-b869-4e19-9ea5-17d6b7af6f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36803e4e-d3e9-4365-a3a5-89e81fcd042a",
        "cursor": {
          "ref": "1ae8b1f8-6622-4631-89fd-e2262f73fd48",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8f5731f6-0499-472d-9a22-9b27b8635b40"
        },
        "item": {
          "id": "36803e4e-d3e9-4365-a3a5-89e81fcd042a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c2a4a26c-04cc-4066-a686-ffdbc712003d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3312ed5-4c68-4c8f-a3a7-20c2e6b40be2",
        "cursor": {
          "ref": "8fda725f-11bb-4032-af89-621758e377e3",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a9cb4731-a9d9-4671-b0af-6fe383a517af"
        },
        "item": {
          "id": "b3312ed5-4c68-4c8f-a3a7-20c2e6b40be2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "057f3add-5963-44d6-97b5-b472846c9b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 171,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ca939a-b033-44af-8fb0-11a5ab0446ab",
        "cursor": {
          "ref": "75c314b4-2921-4285-a1bd-05b91f70796d",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "79a536dc-ee34-4722-902f-8afa5c72ba51"
        },
        "item": {
          "id": "82ca939a-b033-44af-8fb0-11a5ab0446ab",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9e237e86-9c4e-43eb-a861-cc8d7753c707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529bb6a2-ba8b-405e-a1db-40579efa43cb",
        "cursor": {
          "ref": "bff344ff-2f3c-485e-a511-ca9862c18f8c",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6ee60ccb-7565-43e8-b908-051e7468e7d0"
        },
        "item": {
          "id": "529bb6a2-ba8b-405e-a1db-40579efa43cb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "28e94501-e253-4fb4-9928-2f348a70b3c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e936a2f-f332-4011-9316-93cfda1520f4",
        "cursor": {
          "ref": "bb26676f-5ce9-408c-bc35-2cd3ce4451cb",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9f9b252c-df4c-4ab7-95ff-009536846a92"
        },
        "item": {
          "id": "0e936a2f-f332-4011-9316-93cfda1520f4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "eff70e82-1403-44da-965a-9ba67c77dc40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf20d7f5-3f1c-48e0-bc79-22a6ab01519d",
        "cursor": {
          "ref": "b5899be3-93c7-4115-9f7b-61860dec2515",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fe320301-e457-41ba-a163-e75f4d36b0be"
        },
        "item": {
          "id": "bf20d7f5-3f1c-48e0-bc79-22a6ab01519d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "64b50dd5-5756-4acf-a65b-663bb39bcf6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0035d07e-59fb-4b5b-a7e3-359ceab19704",
        "cursor": {
          "ref": "9d92bcac-2d2e-4bb6-9515-219eace08755",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7fd0cc89-1449-49a6-b158-82b2006d456f"
        },
        "item": {
          "id": "0035d07e-59fb-4b5b-a7e3-359ceab19704",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4271f66a-7d66-4787-881b-914606308bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9030ad88-7d94-4505-8a12-5a2268db9306",
        "cursor": {
          "ref": "6265a1ed-2364-4cf5-b0af-97c9589b8a49",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "155b729a-e060-4ba6-88a6-033ed69f39e1"
        },
        "item": {
          "id": "9030ad88-7d94-4505-8a12-5a2268db9306",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3200b078-9804-4e75-bd41-4ecead2006cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90330b0-6b9c-4335-975e-2f05003da6f8",
        "cursor": {
          "ref": "252bcdc5-c9fb-433b-b772-ed2e8de204d0",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "36dc0db0-702c-430f-8e2d-cbdf2cfcea92"
        },
        "item": {
          "id": "d90330b0-6b9c-4335-975e-2f05003da6f8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "aaceca0e-c760-43b3-9fef-023cd623b963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230d798c-2043-47f3-9dac-aa740e4cfc56",
        "cursor": {
          "ref": "71d54074-0c45-44e7-b1d8-d06a530226ca",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8979539d-a6f9-49a0-a244-2f413848ebb7"
        },
        "item": {
          "id": "230d798c-2043-47f3-9dac-aa740e4cfc56",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e25131a8-06df-4701-a8c5-ab44742031e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48763ad3-dd6b-47f3-ac97-0759186e3ad8",
        "cursor": {
          "ref": "3dfcb9cd-3640-48a8-93e3-f0e2f6542458",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5f1e1291-b8b0-4153-8f8a-abea07a47eea"
        },
        "item": {
          "id": "48763ad3-dd6b-47f3-ac97-0759186e3ad8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d3a5adf0-c846-4cd8-8cac-e58fa656f136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4535b1fc-2b85-4901-8283-bb00af904814",
        "cursor": {
          "ref": "037df064-dbe1-4b65-96cd-a467bab08211",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5f282156-b858-4ce8-8474-97681730f9fe"
        },
        "item": {
          "id": "4535b1fc-2b85-4901-8283-bb00af904814",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "69c62b39-e773-4fa0-baa6-8ff1e62377b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc7d89f1-d0bc-45b8-a01e-551160787091",
        "cursor": {
          "ref": "07785fe7-5ca5-4ff0-8afa-e4f4aa09bea3",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "bf8e056a-c4af-482c-8e9b-f25336314a2f"
        },
        "item": {
          "id": "bc7d89f1-d0bc-45b8-a01e-551160787091",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "309f2137-852e-4e0f-b13f-13a26100c524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88073388-51e2-4e12-bb2c-0c9f6f7280cb",
        "cursor": {
          "ref": "e6f06b59-52e9-49c5-a92f-2b328e22935f",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "76a1d8ef-0c4a-4414-9ad2-74c8538fff52"
        },
        "item": {
          "id": "88073388-51e2-4e12-bb2c-0c9f6f7280cb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ff6de7f0-c1ee-4938-8fa5-ab0596e2c14f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0814ae2e-79a4-4940-8f9f-f4cb149d98d1",
        "cursor": {
          "ref": "ea8e4f57-436a-47c4-916f-2d5f1563e64c",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9754d9a2-2240-4343-afe8-ce5644f4bb2f"
        },
        "item": {
          "id": "0814ae2e-79a4-4940-8f9f-f4cb149d98d1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "163696ab-78df-4442-b163-f75508d67315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34739b3-0bb8-4efc-a98e-f41b046979f2",
        "cursor": {
          "ref": "12b85dc7-0597-4a67-96f2-42eda30f9fec",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5c6a3b5e-58fa-4f02-90c3-c12fc9c1d3a1"
        },
        "item": {
          "id": "f34739b3-0bb8-4efc-a98e-f41b046979f2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "68d7c2d0-9ce1-4d83-803a-137da015bc73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63763c3-89c9-4666-864d-a90985394b9c",
        "cursor": {
          "ref": "fe6e3478-cfa5-4474-b912-633a8dc3d688",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0d78edea-c7ab-448f-9a5a-694a3762b03a"
        },
        "item": {
          "id": "c63763c3-89c9-4666-864d-a90985394b9c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a3829b1f-747a-4d06-b593-3f1638c85e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ee9937-34ca-441d-96af-c31a56c21974",
        "cursor": {
          "ref": "af829427-d62d-431f-a24d-b3c85c9f8a9c",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "afef3fff-5bdc-489e-bda5-8ff937b20876"
        },
        "item": {
          "id": "b4ee9937-34ca-441d-96af-c31a56c21974",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "882e6cbf-2948-4154-9b1e-127a1103515f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18778b4f-1658-4656-84ca-a2f3658c7a53",
        "cursor": {
          "ref": "e3188ab4-77d1-41fe-ae43-7d27202083e9",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "fde01f0b-6abd-461f-b88a-429403a059b7"
        },
        "item": {
          "id": "18778b4f-1658-4656-84ca-a2f3658c7a53",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "963e23ab-15bc-4fd5-859c-e61dec171e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08e14e6-7041-46c6-adca-7ad6d60b2617",
        "cursor": {
          "ref": "b457fa21-e989-4c59-a6ba-8266f6fe6c9b",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "55719f1c-47a2-4720-9250-af8cde3c44ca"
        },
        "item": {
          "id": "d08e14e6-7041-46c6-adca-7ad6d60b2617",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "06c424d8-518a-4d31-b729-7f5633ad347a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f0ccf8-f19a-45d0-9ebd-6747884693b9",
        "cursor": {
          "ref": "69f232be-0b6f-417c-9d05-aa947c9ffaad",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8716d62d-a307-4885-b4fa-4e9c6c57a82f"
        },
        "item": {
          "id": "08f0ccf8-f19a-45d0-9ebd-6747884693b9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "73b1d54c-37d1-42c1-b44b-6f27ee63a0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c258a3d3-1329-4bb4-9881-e97595ca825e",
        "cursor": {
          "ref": "8d199e1a-6b9a-4728-a570-99553e6fa49f",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e1237a79-d3fb-4117-9039-b1fca22cb785"
        },
        "item": {
          "id": "c258a3d3-1329-4bb4-9881-e97595ca825e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d40f5068-04a1-48a4-ba4b-327efbfe6bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed438a0-c319-4f2b-9f51-44a671ae80fe",
        "cursor": {
          "ref": "18f48a2c-bb5b-4cdd-9460-f7923024874f",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "00b21627-e10a-4b00-9973-43ffe0b61291"
        },
        "item": {
          "id": "0ed438a0-c319-4f2b-9f51-44a671ae80fe",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f1f44aad-26d5-4d78-8c5d-bcf3205701b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ebd7170-50cf-4939-a090-93fa34494283",
        "cursor": {
          "ref": "46c80a7c-6b79-446c-9707-88eec53de92b",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "338766e9-88aa-4b93-86ba-efb258f4d20e"
        },
        "item": {
          "id": "7ebd7170-50cf-4939-a090-93fa34494283",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "549fd5f0-086f-42ce-8e56-0177b75e1df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4445f2b2-67cd-48e7-9029-31a68449380a",
        "cursor": {
          "ref": "13cfee40-e24f-4c97-812e-4816a7761588",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2debf3de-d2ff-4700-b8dd-134bd2f50c5a"
        },
        "item": {
          "id": "4445f2b2-67cd-48e7-9029-31a68449380a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2956d060-5f06-47ea-95df-22b57e2df0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f2d7f1-7142-416e-b32a-109ebf8b89cd",
        "cursor": {
          "ref": "e4af1bd3-c7bf-4d3f-8ff3-077dc21fb0a8",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "84276668-70cb-4267-9171-33a8420bac3b"
        },
        "item": {
          "id": "22f2d7f1-7142-416e-b32a-109ebf8b89cd",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "628d62a3-e9da-4c87-bb90-c6cf8b96a719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a5c3fe-ba46-49f0-beca-4e776ea4fb91",
        "cursor": {
          "ref": "ebd4fb83-9d45-43a0-a3f5-a4738a5f7b41",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8aa90338-76a7-433b-bfc5-1a7ebdaf9c7f"
        },
        "item": {
          "id": "f2a5c3fe-ba46-49f0-beca-4e776ea4fb91",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c2a8236c-ce61-48c2-8954-7097d950d48a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b43c4a-9d43-4f12-a44b-af77f75ec928",
        "cursor": {
          "ref": "48aa9279-3f2a-4fbe-88b2-427e5de3712f",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "90ceb125-fe3b-400a-a00b-08c0be6370d7"
        },
        "item": {
          "id": "d7b43c4a-9d43-4f12-a44b-af77f75ec928",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "508cd181-4cdb-4f6a-a51a-d65bb6576959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63cf14e-dc04-4b07-989c-eb3fb7c1525f",
        "cursor": {
          "ref": "cc5a9229-9bc3-4ff2-a17e-a9335c3d36ed",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f6e49b1c-1a9d-445f-ad37-7eef25fa8429"
        },
        "item": {
          "id": "d63cf14e-dc04-4b07-989c-eb3fb7c1525f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0db66b1c-9fd6-414b-9bfc-1ed88d02ce19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366c06c9-e170-47e1-887a-b180d5f2d936",
        "cursor": {
          "ref": "0f196003-ca7e-49a4-b10e-5fd55fbd9960",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0378e964-6990-4bdc-9032-bd42f1c06de9"
        },
        "item": {
          "id": "366c06c9-e170-47e1-887a-b180d5f2d936",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f3346299-0604-45e2-a1df-f4f49cf9f295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08bc1086-ce35-4fc6-82d1-8c8b92d07830",
        "cursor": {
          "ref": "119e1667-4784-470c-8df6-a482df65535e",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "57f19ade-5c75-4ab8-98dd-fb98273362a6"
        },
        "item": {
          "id": "08bc1086-ce35-4fc6-82d1-8c8b92d07830",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "356f8809-fecc-4827-a160-18dab980d0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa7ebf1-9ab3-45ac-989e-723ecdef6a79",
        "cursor": {
          "ref": "d83458d2-2c97-4d55-bc96-8bdc874d72e1",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "825b5c05-0afa-4dbe-a2eb-eb251c307fda"
        },
        "item": {
          "id": "6fa7ebf1-9ab3-45ac-989e-723ecdef6a79",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "909f2e63-2181-4929-b325-9b1d02d24c0a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6d9087-19e4-4400-8d61-7186591f9633",
        "cursor": {
          "ref": "26edfe42-534b-4ce2-97f3-33cf11a27ca0",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b687606b-7a3c-4f43-82e9-461fbb4ac259"
        },
        "item": {
          "id": "7d6d9087-19e4-4400-8d61-7186591f9633",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5a20e8fd-5921-49f7-a063-9befdfd9a6d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d2e552-0a64-4232-8d30-c7265c574b5c",
        "cursor": {
          "ref": "0492ba71-f51b-4ee5-94bb-bba161602bc1",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "48dc7921-a40d-4734-86e9-5c9b0c854d19"
        },
        "item": {
          "id": "d3d2e552-0a64-4232-8d30-c7265c574b5c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "7a1d7ccd-37ee-40e5-9552-d4490ff55033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8fa118-af1a-4089-89b1-fe53aa2a2af8",
        "cursor": {
          "ref": "d1bda6ed-8266-4fa0-a0e3-b9c640f79d48",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "81238d79-ae6b-4092-8290-10040d1bae67"
        },
        "item": {
          "id": "2c8fa118-af1a-4089-89b1-fe53aa2a2af8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d0a49384-a970-4b52-8bcc-a151765e5801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f41607-81b4-461b-96cf-53d3e1a9518b",
        "cursor": {
          "ref": "9dd247ea-9583-46f6-aef4-bdb49e604fb0",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9f5f70aa-f656-4a00-95d8-4cf9b4459577"
        },
        "item": {
          "id": "46f41607-81b4-461b-96cf-53d3e1a9518b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f32bcd3d-2adb-434b-9d80-df56ebacee5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3577cae6-50df-404a-abc7-68dda36ec942",
        "cursor": {
          "ref": "0be291f8-e2de-4cb0-8933-d91144fa3d3f",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7e19ca6f-c06d-4ebc-af48-1223e7aa4bbf"
        },
        "item": {
          "id": "3577cae6-50df-404a-abc7-68dda36ec942",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "fbd0f205-e63c-4abf-8f84-d93bd1f722f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5971bca5-8a95-4695-af5c-890f58a6f807",
        "cursor": {
          "ref": "28868e07-6322-4141-8df2-8f8fbd478f04",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a9416845-6bcc-4498-aa6b-a5428bf35a76"
        },
        "item": {
          "id": "5971bca5-8a95-4695-af5c-890f58a6f807",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f4371dce-54ff-4fa0-95f8-b7af870b00fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63205fc9-5355-411f-9bde-924bd646f215",
        "cursor": {
          "ref": "0039556b-f37d-4b58-9e14-47c89c814c39",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a6beffc6-4618-41f5-b0d1-d0a2c05c9bf2"
        },
        "item": {
          "id": "63205fc9-5355-411f-9bde-924bd646f215",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ab000351-69e0-47d6-9ee0-0cf9cce0ef8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8f03b6-ac61-4095-8135-35b257662434",
        "cursor": {
          "ref": "92886983-3959-47f0-b424-3e5b2d65860c",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0e74f985-c35b-4a9c-8203-3623115c8228"
        },
        "item": {
          "id": "2d8f03b6-ac61-4095-8135-35b257662434",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e3e12194-fec6-4ce3-bfcc-446676877759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47d4678-58ea-4d88-902f-cce1fe7fd0a5",
        "cursor": {
          "ref": "bbef7c4e-3bbd-4dcd-9195-bbbdfc80d646",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "bb1e16ef-2e6a-4585-9ba5-3c5a986c8394"
        },
        "item": {
          "id": "b47d4678-58ea-4d88-902f-cce1fe7fd0a5",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8ec46708-7f8c-45ef-8089-5e785fcad1f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e03c6c-a06a-4fdb-b77e-e86e978ba4cb",
        "cursor": {
          "ref": "747da40f-017f-4d21-977c-642741c38ff9",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "90793a31-8c75-4e1d-a09e-2a4318ff4c28"
        },
        "item": {
          "id": "a4e03c6c-a06a-4fdb-b77e-e86e978ba4cb",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7950b29c-abb0-4a70-8f29-e233a32a1479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6cce9a9-f747-46d3-9ea4-c8d493ce6735",
        "cursor": {
          "ref": "71e77ad1-064f-4bfe-b880-1c6532fbd56e",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "eb39e6f0-b5b6-4b2e-b29d-c66fb7f80207"
        },
        "item": {
          "id": "e6cce9a9-f747-46d3-9ea4-c8d493ce6735",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0b687cea-04b7-4f1c-87c7-d05e1ecc92ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de266990-3d60-43fe-88f9-659df4efc46d",
        "cursor": {
          "ref": "6a638c11-a638-429f-bd34-3645a3741d4d",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a1e8544b-26f6-4871-9c60-8f86ac8b7a4c"
        },
        "item": {
          "id": "de266990-3d60-43fe-88f9-659df4efc46d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "fd8ed69c-9dfd-4487-8277-03d18084816d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638476ef-cf63-4794-afb1-f87975af35a6",
        "cursor": {
          "ref": "2518b573-fdb5-46fd-8ebe-c520a0bbcdc5",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a5da7da2-18c6-4b0b-a978-79262805b788"
        },
        "item": {
          "id": "638476ef-cf63-4794-afb1-f87975af35a6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2701cc25-215d-4e6c-8cde-47e88ef7409d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7506a11b-e749-4992-8a2f-1af24bdb6b88",
        "cursor": {
          "ref": "6dba3ef8-18e7-4ad0-9ee8-0f1e58cff428",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b0312133-774e-4dbd-bf1b-e5a601bf7fba"
        },
        "item": {
          "id": "7506a11b-e749-4992-8a2f-1af24bdb6b88",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "8541ca8c-ffae-474b-a45f-e163782b38f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cea7c61-7953-419e-9a32-44f48fc730ee",
        "cursor": {
          "ref": "7498c361-887e-42f2-9e25-7f7625f642a6",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7719da7b-21ae-440c-9b76-ffc0313f856e"
        },
        "item": {
          "id": "8cea7c61-7953-419e-9a32-44f48fc730ee",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8b8267f1-e359-4543-aca3-bd7a1579e0b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7450c328-7668-4ed4-b025-92feff4f6ec5",
        "cursor": {
          "ref": "da7fb13c-fda4-44f3-90c8-71c8daef06e6",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "88869887-f644-43ea-9eb5-6ec5f7d489b0"
        },
        "item": {
          "id": "7450c328-7668-4ed4-b025-92feff4f6ec5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3b663c49-c2ed-4571-a85b-f749f61f0e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6384661-7d0c-4a30-81a4-12e734d94346",
        "cursor": {
          "ref": "e24d6570-7d43-4410-bb0d-054063e36b09",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "94e04d7e-e161-48f5-a918-a21c48df8079"
        },
        "item": {
          "id": "e6384661-7d0c-4a30-81a4-12e734d94346",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "89888423-89d5-4224-8f36-6c985d0e56db",
          "status": "OK",
          "code": 200,
          "responseTime": 319,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "1274f950-94ea-44a5-a88c-2cc859c8674c",
        "cursor": {
          "ref": "d6727801-0b66-4d33-aa53-342622d6e5ae",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "bb48703d-de8d-4752-84df-d0784dbafa86"
        },
        "item": {
          "id": "1274f950-94ea-44a5-a88c-2cc859c8674c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "31238a8b-8f5e-4476-93ba-6edb2cf0a786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6edf76c2-dec3-41a5-9ce9-70d0533cd268",
        "cursor": {
          "ref": "64d34a44-3a78-4975-8250-a59021332ab0",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "86577af1-630b-4680-b6bf-1e4bb8f86d46"
        },
        "item": {
          "id": "6edf76c2-dec3-41a5-9ce9-70d0533cd268",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "30dd7e38-619e-4e8c-926e-2f4c891a40ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dfe0fff-1859-417a-94c1-b234af48665f",
        "cursor": {
          "ref": "ad2d9559-8ba2-4b3e-8ee3-7e87efab3ec6",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "77024626-a8c1-4b75-a942-e71e01587c83"
        },
        "item": {
          "id": "2dfe0fff-1859-417a-94c1-b234af48665f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "81a25e32-46df-4b5b-8c7a-f5e8859786d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880b27fc-41dc-4efc-8219-b22f9bd1294d",
        "cursor": {
          "ref": "0baf8126-98a4-4c05-a5e4-618b1e9ec9d4",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3c9bada0-2e7e-4339-a12e-630ea217b01c"
        },
        "item": {
          "id": "880b27fc-41dc-4efc-8219-b22f9bd1294d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6ee8eca7-4a23-4693-904b-99a21efbe129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e195ce-606d-4710-a0f5-93f3936e2839",
        "cursor": {
          "ref": "e0810891-8bcc-49bd-943f-2e62e0af4702",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e291e298-61c9-45f4-bd0e-262b97c82497"
        },
        "item": {
          "id": "92e195ce-606d-4710-a0f5-93f3936e2839",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f09c3cb7-6f88-4171-a435-4ffc6e75fb29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84c629b-ce5f-48ff-9525-74485daf4d90",
        "cursor": {
          "ref": "6c6d57f3-5d77-47f0-b6fc-f19a537ad98f",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b8adb4a4-9ccd-4bd2-88d5-2e43ce248a62"
        },
        "item": {
          "id": "f84c629b-ce5f-48ff-9525-74485daf4d90",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7fde48e8-e7a9-4da8-8df0-852f2aaf38fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88fabb8a-47b4-433a-a275-3693c030a043",
        "cursor": {
          "ref": "b9fe9fc0-b678-44a4-8655-c27c7e944a89",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4777f38a-397d-4276-a644-26363d301303"
        },
        "item": {
          "id": "88fabb8a-47b4-433a-a275-3693c030a043",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "59c970ac-eab8-4c14-ad06-b9c387009b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0113b847-d2f5-4d34-a811-ebe69364fdfa",
        "cursor": {
          "ref": "0e9fecd6-208d-4025-9ca8-5940404adfb8",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9552c20d-af14-42e3-8521-75a42e3f58d6"
        },
        "item": {
          "id": "0113b847-d2f5-4d34-a811-ebe69364fdfa",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0072ae52-1000-49f2-94f4-3b2d3dd8cc48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8bf82e-ad3c-45d8-8f18-0abaecd7b536",
        "cursor": {
          "ref": "55d868e7-dbc5-4a30-bbba-869b9603015c",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f1795ebf-ff92-40ec-bf94-8e07d923d45c"
        },
        "item": {
          "id": "ce8bf82e-ad3c-45d8-8f18-0abaecd7b536",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a7cae0b9-2edb-4a46-94de-9e31dca5cd3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5052249-ca3d-4c4e-a11e-9ade37fa63bc",
        "cursor": {
          "ref": "fcf59ce5-4ef4-4cdb-80a7-4ffdbe99e647",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "313ff488-0039-4509-a829-7b9ddde3283f"
        },
        "item": {
          "id": "d5052249-ca3d-4c4e-a11e-9ade37fa63bc",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e2bb02e0-e767-472e-9eab-cf6ed5c164b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97049e07-1ec0-4397-a937-b538ed33771e",
        "cursor": {
          "ref": "749806c3-529f-4985-8517-f66b6e4d8195",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1ca2765d-6918-46dc-905f-e83c458048a0"
        },
        "item": {
          "id": "97049e07-1ec0-4397-a937-b538ed33771e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0b011959-b8f9-48e4-b5e8-d3a27e50f11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d17c6ea-e944-4cb3-8303-fbe7847860b5",
        "cursor": {
          "ref": "4fff5ae1-fa36-44f9-b08d-1f61c4a22aba",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0f357ce5-2f92-41e2-a988-d8aedf71b950"
        },
        "item": {
          "id": "0d17c6ea-e944-4cb3-8303-fbe7847860b5",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a505cfc8-e512-4102-99e5-fd218a7da544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869d5ba5-90c7-4ef1-b16f-fd15fc19e249",
        "cursor": {
          "ref": "d58756fa-8be5-429e-893b-1e2423c7967b",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b7933fb9-e926-477d-87d3-2cef19e43f83"
        },
        "item": {
          "id": "869d5ba5-90c7-4ef1-b16f-fd15fc19e249",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "fa61176a-eb83-4c3a-8eed-da1dbada7df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46fadae-2cf2-4235-9285-4f3d65967a03",
        "cursor": {
          "ref": "69664f04-1c68-481b-8887-ded6d05d2d65",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "56f8e992-5a13-4c18-9ecc-b102fbe58611"
        },
        "item": {
          "id": "d46fadae-2cf2-4235-9285-4f3d65967a03",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3060bfa9-6cfe-4573-b158-1de52424491e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42b6622-17d7-4279-a3aa-31b945ce235d",
        "cursor": {
          "ref": "af861b9d-674e-47db-8527-f619a2bfa193",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "99e6be85-d216-4a75-a1b4-33328b46cb65"
        },
        "item": {
          "id": "b42b6622-17d7-4279-a3aa-31b945ce235d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "18834c3e-4b32-4ff9-afe1-2212223674cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7825743-ca53-423c-8465-1b634cca5f89",
        "cursor": {
          "ref": "6a42cfd2-0096-40e4-bea5-d2d2854d494d",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3fa683bc-4f2a-4dda-8dfb-1232e258c9a1"
        },
        "item": {
          "id": "a7825743-ca53-423c-8465-1b634cca5f89",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "4cc9f680-9298-46c0-aef5-3f96365474da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8663c7af-83a1-454a-9d38-0d9bb3799e74",
        "cursor": {
          "ref": "e5e842dc-6fc3-4119-bb33-2b4d0dcf2206",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a33e267b-6f52-4c75-b963-e6fa5b056e63"
        },
        "item": {
          "id": "8663c7af-83a1-454a-9d38-0d9bb3799e74",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "87140b88-093a-4791-83af-4e753e751df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473d9d8b-ec5f-447c-a34c-adf4b5a78ced",
        "cursor": {
          "ref": "5a9a5fbf-e45c-46e0-8b40-6b2ab0195f33",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1c4f46f5-f65b-4f92-9d90-baad664eb914"
        },
        "item": {
          "id": "473d9d8b-ec5f-447c-a34c-adf4b5a78ced",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5b1137a6-0d24-41a2-97d7-fe33358e42e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97b999a-40ff-49f4-8083-f11f50bf0c37",
        "cursor": {
          "ref": "7501e31e-c374-4af7-a112-8ff2ccc8133a",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f66e17ee-4409-424e-845a-3ba74743c205"
        },
        "item": {
          "id": "b97b999a-40ff-49f4-8083-f11f50bf0c37",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ceab396d-b000-4f77-a1f5-d38ab0055e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afac824e-73e5-4693-a6b4-5f78da05ba36",
        "cursor": {
          "ref": "571e4745-230d-4ee7-86a1-bc3103c327ab",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7653f749-aecb-4d24-8cbf-69a124869538"
        },
        "item": {
          "id": "afac824e-73e5-4693-a6b4-5f78da05ba36",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "36752af7-8995-400a-8f4b-fc112a0367f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6089edcb-1178-4e96-9220-873a3cdfb390",
        "cursor": {
          "ref": "337478ad-f579-4017-a271-58e077847e99",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "856e58f5-bff0-456a-a57c-67338b806eaa"
        },
        "item": {
          "id": "6089edcb-1178-4e96-9220-873a3cdfb390",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "22c926db-48e6-4288-8543-1331f9b38797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ddb81ea-37a9-463d-88c5-e743617b443e",
        "cursor": {
          "ref": "04b80312-75c6-4587-938f-f38f241c841f",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1e2d2f7b-c87f-4a82-b98e-916e8be78ab1"
        },
        "item": {
          "id": "8ddb81ea-37a9-463d-88c5-e743617b443e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "625cba29-aae2-4b91-ae17-e6b9713248dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def8cca6-7382-4728-98f5-b121034b9cbe",
        "cursor": {
          "ref": "0c3e69f6-d5f0-4d26-aa5b-2474f5d67770",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "eea932f3-962d-47ad-b582-0223bd6f650a"
        },
        "item": {
          "id": "def8cca6-7382-4728-98f5-b121034b9cbe",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7bfe02f0-06f1-4c82-8408-f7ba0063600f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7cb7c0-81bf-4c70-a0ca-2913b2b00278",
        "cursor": {
          "ref": "df9009a8-0b27-4b19-87b9-43c19d000f98",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "03153251-5b2d-4fa5-b649-6b148e7568ce"
        },
        "item": {
          "id": "ed7cb7c0-81bf-4c70-a0ca-2913b2b00278",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "94fd0940-60ca-4a07-9cfe-2a8eb142c70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84db7e9-20bc-48d2-b2a2-1ebef2852ea1",
        "cursor": {
          "ref": "3b4a2a12-afcd-4b55-ba37-f789803408e8",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e475634a-a00a-473a-9480-d03e7d809fb5"
        },
        "item": {
          "id": "d84db7e9-20bc-48d2-b2a2-1ebef2852ea1",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "05304b29-c4b9-4c57-a172-a32b4a6cb403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9ea853-a6a9-472a-bbd1-f04ea548b31a",
        "cursor": {
          "ref": "f4e280ab-59ae-4e26-bfac-d09be820ab6f",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b21d65b8-2509-42a3-a76c-b622784c8e53"
        },
        "item": {
          "id": "fa9ea853-a6a9-472a-bbd1-f04ea548b31a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7988e7f3-13f7-4394-bd10-8bf21c2c3123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b75033-7d41-48fc-b732-3fe52968e280",
        "cursor": {
          "ref": "9e512162-1a6c-4a89-8681-89700cf70ba5",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c450e553-2b2a-4503-ab9f-0a97415ca5fa"
        },
        "item": {
          "id": "47b75033-7d41-48fc-b732-3fe52968e280",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "695a518c-87df-425a-bfff-75ceb0ca1b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567655b4-b593-4cff-9fbf-5386747df3ec",
        "cursor": {
          "ref": "51df2f3a-0e8a-4814-ad86-79800f77db13",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "887514da-28d2-4ee9-9a7a-031bb4c90588"
        },
        "item": {
          "id": "567655b4-b593-4cff-9fbf-5386747df3ec",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "752b780e-3054-4d23-8497-cbec212848b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cec865b-6098-4732-96c9-29dcc1d04fa3",
        "cursor": {
          "ref": "7bf4f9a4-5221-4870-96af-6c725393cd7b",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "115543da-1c3c-433e-819f-7a02cb88313e"
        },
        "item": {
          "id": "7cec865b-6098-4732-96c9-29dcc1d04fa3",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b148c75c-08a6-42d1-b12c-49e1ee4d89c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24288fc-dc67-4361-a202-4931c26fcaa5",
        "cursor": {
          "ref": "c0a98ad0-f801-403b-a671-20fc6f0f0d13",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "727fde98-49ab-4872-8036-d3069e10dce1"
        },
        "item": {
          "id": "e24288fc-dc67-4361-a202-4931c26fcaa5",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9bacf50e-2850-4366-b880-51758d424b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a145e1-07a4-4629-82e2-1db37a9308ad",
        "cursor": {
          "ref": "1e61cb2d-9d18-4381-bb1d-a37e3f7d7370",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f3b88730-4436-4a79-81a2-50f880e311a7"
        },
        "item": {
          "id": "f9a145e1-07a4-4629-82e2-1db37a9308ad",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "53d59522-deac-4d19-aceb-246e5326c684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6237bce2-1336-4d43-8cb5-7208c321de3a",
        "cursor": {
          "ref": "d4c08bb2-d767-4c85-8511-74564b784c6e",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7f9f7c02-09b8-4cb3-9912-35ec54fe6707"
        },
        "item": {
          "id": "6237bce2-1336-4d43-8cb5-7208c321de3a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a9a05709-f9a1-4d08-ab55-4cc4e7a109aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcea00b0-d90a-445d-aad1-d8c00ef594a5",
        "cursor": {
          "ref": "0a78a2b5-c9a7-4cf8-88fd-d0b229d2e217",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "af971b5a-dae1-41e7-9327-37340a2907d3"
        },
        "item": {
          "id": "dcea00b0-d90a-445d-aad1-d8c00ef594a5",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9fdd3cbc-20a7-4e84-94e4-084bb4e86dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f39d52-7e82-4d6d-861f-29ab0f773eb0",
        "cursor": {
          "ref": "bf0e78e9-f0e6-48a9-92da-7493595be355",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e0031c37-b865-4840-8101-c0c45ea1b161"
        },
        "item": {
          "id": "f0f39d52-7e82-4d6d-861f-29ab0f773eb0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8777783f-cc3c-4a0c-8c4b-9da2bd9f62e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a4687d-1b7a-424b-bf4c-c5c419261c5c",
        "cursor": {
          "ref": "98a8f902-ca42-4a3e-a002-588e5eec2d4a",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "957a24f8-6b9e-4fce-922d-be0ef95b1f38"
        },
        "item": {
          "id": "00a4687d-1b7a-424b-bf4c-c5c419261c5c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4aa2af1a-8cc6-4372-8dd3-640741764ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ec3eb2-8497-4671-b81b-d1994c75e91e",
        "cursor": {
          "ref": "53a70795-db02-4286-9810-c1c8defb46a5",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "02bbbe8d-fa47-4d86-a9f7-0fbfdf92a03e"
        },
        "item": {
          "id": "57ec3eb2-8497-4671-b81b-d1994c75e91e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "228aed5c-227d-4819-9630-95f92a1da051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c310ee-1303-45a3-be3c-34c57a06f4a3",
        "cursor": {
          "ref": "117de35d-dede-4e95-b286-00b659b1c6c7",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ccfd7908-3b2c-4f8f-a072-767353041d7d"
        },
        "item": {
          "id": "a0c310ee-1303-45a3-be3c-34c57a06f4a3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ea1cc395-fdc0-437c-8c99-1c1c3863af93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2af4a9d-4a1c-4d5f-8881-dd555bf6ad84",
        "cursor": {
          "ref": "96a9234e-94a0-4615-92b2-d275e390c015",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "aacb5662-9aff-4e0d-a1ed-6c4c335621d4"
        },
        "item": {
          "id": "e2af4a9d-4a1c-4d5f-8881-dd555bf6ad84",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d4a5445e-343c-45d9-89b5-c18ef197f239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e42c4ff-a176-4cda-8110-95b0f09ff486",
        "cursor": {
          "ref": "4a5c0aa3-afb9-413b-a27b-7e9dbda98acb",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "14e81cb3-7796-4c28-9833-fa9bf109f34f"
        },
        "item": {
          "id": "7e42c4ff-a176-4cda-8110-95b0f09ff486",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "6529fda7-2a2e-4f1a-82ec-fdc99b975ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c65903-1929-4db1-8ec8-b622fffc1828",
        "cursor": {
          "ref": "02d79f87-7129-40e9-bef0-8b875cd8f350",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "bc924e3d-73e4-4099-b099-557cdcb9c162"
        },
        "item": {
          "id": "c7c65903-1929-4db1-8ec8-b622fffc1828",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "56f924c7-5c8c-4634-ad92-b7a6e9521cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18a8ff5-1d99-4b93-aa1d-b7213df4e80a",
        "cursor": {
          "ref": "c88c3c53-cf3f-451c-84e8-9de4e5da3b50",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "99b78d57-961e-40e6-b41d-7e144fd94068"
        },
        "item": {
          "id": "e18a8ff5-1d99-4b93-aa1d-b7213df4e80a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "681d7d6c-a775-4f88-8ee2-cd157e1a1f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319b1fba-0189-481b-9a98-72df68f0dfb1",
        "cursor": {
          "ref": "b855ab25-7103-4ffb-990e-307eced27535",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a2865f41-834d-4cc8-bf15-e91bdaf39f2c"
        },
        "item": {
          "id": "319b1fba-0189-481b-9a98-72df68f0dfb1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a78daffe-9bbc-4622-bdae-885110c8aec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "322fd109-5df6-414f-92d5-0c5c939d514b",
        "cursor": {
          "ref": "f36c1fef-f2e6-4a07-a47d-882f30373816",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9288d0d5-7e8f-49f3-826a-04d78441646f"
        },
        "item": {
          "id": "322fd109-5df6-414f-92d5-0c5c939d514b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6f9380e6-87ee-4a09-8735-2a4467d1680f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e1b6c2-ddfb-4f3c-afe2-661356d3b689",
        "cursor": {
          "ref": "bbd69b08-fc95-403e-abdd-82756066f0c7",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "dc22075d-00fa-4213-8b74-55497622ad92"
        },
        "item": {
          "id": "a7e1b6c2-ddfb-4f3c-afe2-661356d3b689",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f13cb7c9-71d7-44cd-b52a-fc4c4de7dcfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc47619-46d3-41ab-ac7a-6ea34aa26dae",
        "cursor": {
          "ref": "cfe43637-43ff-4107-9030-b00f7c0cff75",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "51029c6a-2ef1-44c6-b471-69831b217132"
        },
        "item": {
          "id": "4fc47619-46d3-41ab-ac7a-6ea34aa26dae",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5fafea22-97fa-4555-9439-08bc17686154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ececdb73-5dae-4dc2-bdbc-a1f129fd4c23",
        "cursor": {
          "ref": "f3601b79-b2d4-4775-ad56-61429da80b5e",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f4a717ab-c81e-405d-9a47-501d19c049b6"
        },
        "item": {
          "id": "ececdb73-5dae-4dc2-bdbc-a1f129fd4c23",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4c63c1c1-3a41-4bae-8c0c-737bb986c0f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9b8f66-9a09-4f66-9a34-3199c387c2d7",
        "cursor": {
          "ref": "ce2e79da-cfd1-4395-bad6-b40db06742fd",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "969e0f0c-20f5-44e3-b2c3-005e532a1558"
        },
        "item": {
          "id": "8c9b8f66-9a09-4f66-9a34-3199c387c2d7",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a2921086-d0d9-404b-bac7-aa6c19726aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5acfa0ca-d1f7-4f18-9554-d0a7224c2635",
        "cursor": {
          "ref": "82c09c99-2372-4862-a1d2-2471fde33119",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0daf7822-6152-4949-a3bf-baa0ffa154e1"
        },
        "item": {
          "id": "5acfa0ca-d1f7-4f18-9554-d0a7224c2635",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "cae929c0-401f-4e51-b7f6-4f43b62ab2c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c90cdfc-7b36-444a-a856-d301507b48d4",
        "cursor": {
          "ref": "0d487e1e-fdf3-4335-aee5-8d1f6d7a93ec",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d5033727-b961-4271-9128-1e204e2d2efc"
        },
        "item": {
          "id": "0c90cdfc-7b36-444a-a856-d301507b48d4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "90bc0680-159a-4790-9b12-a8e194d74573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c440170e-b96d-4970-92a4-0d61d8155ed7",
        "cursor": {
          "ref": "771ad612-6332-42a1-af44-c1e0242e2c58",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d5b05415-a72f-487e-9adf-e9a336048522"
        },
        "item": {
          "id": "c440170e-b96d-4970-92a4-0d61d8155ed7",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a51393d6-d71d-404f-a798-608ebc80a51c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6442af-929f-4bb2-ada8-3083eb8160d4",
        "cursor": {
          "ref": "2c187a1d-6f38-4db1-937f-2720136ee1da",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "13c45eeb-035e-4b43-89c8-a6ab2e220943"
        },
        "item": {
          "id": "4b6442af-929f-4bb2-ada8-3083eb8160d4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "dada47f6-649c-45be-9ad0-5dfe37a52d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7aea4bf-fcdb-43d1-b4a9-027b1cfc1444",
        "cursor": {
          "ref": "525f77d2-22ad-41cf-b05b-46dd1e91f3cc",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "302727b2-1da4-4753-9ac8-100d4ca3455a"
        },
        "item": {
          "id": "d7aea4bf-fcdb-43d1-b4a9-027b1cfc1444",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1243874e-a9e6-46fd-92f7-d607c456a3b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f97a7a-537d-4165-8ef3-60cd41721519",
        "cursor": {
          "ref": "56220eca-fc5b-4128-911c-0e4629db9ca2",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "049862ea-cbcd-469c-acf4-411427a0ac52"
        },
        "item": {
          "id": "c6f97a7a-537d-4165-8ef3-60cd41721519",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4abd7921-85ae-4f8a-97f0-966d1dd5c7c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dfa8d65-682a-4208-9b52-0cc24fced7d6",
        "cursor": {
          "ref": "bca67a35-7e36-4911-85a1-15cf34cf0b56",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "5f2123bc-92df-42b2-92ef-d2690c9948b2"
        },
        "item": {
          "id": "3dfa8d65-682a-4208-9b52-0cc24fced7d6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "df3c797f-9d26-40f4-8af2-3c200f466185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bafadd6-728e-4214-855f-c62de78261f5",
        "cursor": {
          "ref": "d54b48cc-c7d7-4a78-a91b-5eb683ddf75d",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9e83d38e-6636-418a-81a5-7704d68ce2e2"
        },
        "item": {
          "id": "3bafadd6-728e-4214-855f-c62de78261f5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6946c3c8-7eb4-4f26-ae51-44282790cf60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef02d5ae-0ef4-431e-8edd-510ea96e790a",
        "cursor": {
          "ref": "2fac496b-dc6c-496a-8f93-547b97ee20f0",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "96bed9ed-7c22-471a-b754-7317fd7e5b96"
        },
        "item": {
          "id": "ef02d5ae-0ef4-431e-8edd-510ea96e790a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "249e78b4-ab49-41cd-be56-adecda2e13c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6331e322-1b0f-4218-ac9b-12d9e447d332",
        "cursor": {
          "ref": "f5fc7775-7530-4c92-9519-7c3cca498e43",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "ddbc0090-181a-4436-b6c6-ecbf95fb17b4"
        },
        "item": {
          "id": "6331e322-1b0f-4218-ac9b-12d9e447d332",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "77871802-7b1f-476b-8656-13ef1ce8ac07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1c022d-3ef2-4fed-86f6-12c5a8650458",
        "cursor": {
          "ref": "ffa65fdc-7746-4b9f-adac-5f45176b16e4",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "a4b33390-a928-432a-a887-d41173ff5c7a"
        },
        "item": {
          "id": "ed1c022d-3ef2-4fed-86f6-12c5a8650458",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "dc149b1d-df70-470f-aa62-56877f9d6d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89e2a80-43da-4c44-a30e-a0cdec1f8f67",
        "cursor": {
          "ref": "ff97d3c1-ab5e-4955-a9fa-b2873190c4e4",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "7c6ec930-9b1d-4cc0-af53-8b8c5027cf5b"
        },
        "item": {
          "id": "a89e2a80-43da-4c44-a30e-a0cdec1f8f67",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "686016f0-0d23-46d1-af0d-50d437403cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8df58ca-2072-4a61-b36a-f8a67e100a16",
        "cursor": {
          "ref": "07b723f2-5a4b-4c28-8145-e91629b5782f",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "b42aca54-b2ce-4373-bfb9-e2636530c994"
        },
        "item": {
          "id": "c8df58ca-2072-4a61-b36a-f8a67e100a16",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "03ab5c52-a0e7-4811-bfcf-34171538f29f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256632ed-858a-4a7e-98cc-76b0698093b2",
        "cursor": {
          "ref": "2978c4eb-e731-4475-a252-7758fd941416",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "34ba0a5c-2d8f-47f8-ada0-cf9d25d68849"
        },
        "item": {
          "id": "256632ed-858a-4a7e-98cc-76b0698093b2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bc5ed247-4d17-4ada-8eca-d14977474bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af29a5b-0272-4113-b658-7d4a66f9d8cd",
        "cursor": {
          "ref": "c09015b3-0cb0-4350-9092-94787ede9e21",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "de108fb4-c5ab-409d-8c72-c54d9df511cd"
        },
        "item": {
          "id": "7af29a5b-0272-4113-b658-7d4a66f9d8cd",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e7f9545d-84c9-4a2e-802e-b37b5ed090f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc24355-e0a8-4010-82ab-27fe725e2a50",
        "cursor": {
          "ref": "dc06a7db-c3ca-4526-9d3b-1648bb76549a",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "a1282ba7-bdec-4c91-8737-ce21136038de"
        },
        "item": {
          "id": "8bc24355-e0a8-4010-82ab-27fe725e2a50",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4f843023-1774-4888-9b29-86c06783d41c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d525ea-43e0-4efd-b43e-86b2f0127d72",
        "cursor": {
          "ref": "6f1268bc-9ee5-4376-993d-95f01f49131d",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "d7c16798-94b7-47e3-a232-db7b1ba4a216"
        },
        "item": {
          "id": "54d525ea-43e0-4efd-b43e-86b2f0127d72",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d3758f9a-c61b-4ccd-af92-de3c272605af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070eb768-43d3-4cdf-991a-ef34933722d4",
        "cursor": {
          "ref": "5955525e-8b51-47ed-b406-8a0c970fee07",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "ffe991b3-b157-4d83-a4ef-76d3be7ab256"
        },
        "item": {
          "id": "070eb768-43d3-4cdf-991a-ef34933722d4",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2987f5b1-71ed-47c7-8d95-42c8859fc4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81994a9a-8559-4f21-b458-efdd45ad6ea0",
        "cursor": {
          "ref": "659628a1-168f-4061-aa8e-02098787a395",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "b57d8c32-0fa6-4cbc-8051-e279e037616b"
        },
        "item": {
          "id": "81994a9a-8559-4f21-b458-efdd45ad6ea0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c5fd2454-50c3-4ab4-8a79-90d4cb114e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c253e41-dec5-4078-9913-e21b8b649557",
        "cursor": {
          "ref": "23e77295-a7e0-46e9-8d49-7cc476954f12",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "6975b82b-7cd0-44be-82ca-7ca46d54ed74"
        },
        "item": {
          "id": "5c253e41-dec5-4078-9913-e21b8b649557",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e71e2033-4e01-43bc-9d31-5dcf0cb35c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ab3a53-0e06-4dc7-b19f-dcc72472b92d",
        "cursor": {
          "ref": "58e7735a-1d40-4491-89fa-020371221bd2",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e9ff8a4e-d494-49c0-b415-1637abe34d64"
        },
        "item": {
          "id": "b0ab3a53-0e06-4dc7-b19f-dcc72472b92d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2f728975-8bdb-49d8-a675-c782e7b45504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5643c1-9693-46d4-a585-ee51949f2a45",
        "cursor": {
          "ref": "63bb4f77-5147-473d-be79-0dd0f7012e29",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "0e911ac5-e6f3-4c83-a7bf-b69e2c004d14"
        },
        "item": {
          "id": "3e5643c1-9693-46d4-a585-ee51949f2a45",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0e7b0642-71c8-4e10-8a91-0ff84400e73f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399ec6bd-a494-4bf4-b76c-f25c16246d68",
        "cursor": {
          "ref": "e536d713-4b55-4f99-a0aa-2ac2ee8273bb",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "fcc86022-5445-4408-8b38-bbf65fba7ec5"
        },
        "item": {
          "id": "399ec6bd-a494-4bf4-b76c-f25c16246d68",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "508263b0-aec5-4174-a0fc-f8c6c0e42176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e10782a-97ba-45b4-acd7-1121e8613f27",
        "cursor": {
          "ref": "147e2e79-fabe-4583-9873-a5b84dc699e1",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "7508290b-a35c-466a-8ef6-50170aa88b15"
        },
        "item": {
          "id": "9e10782a-97ba-45b4-acd7-1121e8613f27",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "17b889ae-9946-4a64-a161-5471cf44058e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea3a9c7-45be-495f-ad59-0178c4de6287",
        "cursor": {
          "ref": "383cc7f4-a258-4e58-9558-9559bc9e1055",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "750554f1-ce8e-42c3-87a5-22d3e8e45d0a"
        },
        "item": {
          "id": "eea3a9c7-45be-495f-ad59-0178c4de6287",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "cd9748e9-ce00-4a69-a9cc-8513d558c264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace57be6-1205-4577-a4e3-31f545e3aa53",
        "cursor": {
          "ref": "9d751509-cca2-48ab-bc9a-6a86e1619abe",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "0cb9eee7-8acb-42bf-a32b-7e4e6af1e29a"
        },
        "item": {
          "id": "ace57be6-1205-4577-a4e3-31f545e3aa53",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "797819db-0228-4d13-afc7-7535532fc788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1432fefb-7a67-43e3-b163-5f2bbfd1e705",
        "cursor": {
          "ref": "80aa26ac-9a12-4fc4-bc16-05ee8262579f",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "0cb4b566-f828-44d9-aa42-e2b109beaa1d"
        },
        "item": {
          "id": "1432fefb-7a67-43e3-b163-5f2bbfd1e705",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e7ec1f59-f578-44bc-87ad-6db8447e13f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 206,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf895cdb-65f5-42f5-9870-5fe173be579e",
        "cursor": {
          "ref": "772eee1a-3aee-44d5-a37f-b4e727bce181",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "d69e7843-84e2-41b4-be35-c814312e4e3a"
        },
        "item": {
          "id": "cf895cdb-65f5-42f5-9870-5fe173be579e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "36618b03-fcee-4f69-9c80-b36e8bcd337c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347264e6-2b4c-4bb9-a055-b5a1522de305",
        "cursor": {
          "ref": "a7eb8aef-05bc-4bb9-9e3f-501e553acb24",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "f126482c-d04d-433f-914d-10a995eb18c0"
        },
        "item": {
          "id": "347264e6-2b4c-4bb9-a055-b5a1522de305",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "889b236e-f443-414d-af56-204ff6b86e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6b7596-9e51-414c-8934-943aae5ced7d",
        "cursor": {
          "ref": "9615d662-3a5a-4d4a-bda5-8b4976ac0d41",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "9089cdaa-ab1a-4edf-8198-ac042ed89289"
        },
        "item": {
          "id": "5a6b7596-9e51-414c-8934-943aae5ced7d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "371a7ef8-3cf5-4e1f-9ccc-9417675f8462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390486e7-5058-4af2-baa7-4023b27b7df9",
        "cursor": {
          "ref": "5abea704-2a53-4c95-974c-f33e5060255b",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ba342f41-2b94-46f7-b0e7-ad01920f6d08"
        },
        "item": {
          "id": "390486e7-5058-4af2-baa7-4023b27b7df9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c68b14ce-3a14-464c-9f95-bce70166c4a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4fe676-cdd7-4629-925a-f1b315e77a32",
        "cursor": {
          "ref": "7930197e-38ec-491a-9c65-c6a51bd646b3",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "fd251565-f598-483b-966e-5a274d2b23d1"
        },
        "item": {
          "id": "2b4fe676-cdd7-4629-925a-f1b315e77a32",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b37fde80-9446-4626-83af-e3a8f04fc9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1129ab-cd77-4413-989b-0ed4c9d9baf8",
        "cursor": {
          "ref": "634c7063-6c36-4754-99d5-a833e5a130a6",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "17611b6f-291b-408f-bd33-7bb1fed34438"
        },
        "item": {
          "id": "ba1129ab-cd77-4413-989b-0ed4c9d9baf8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1f5eb5c2-bdfa-4019-9da2-1f3f8e769075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de490bf-34bc-415e-9bb7-e21c02595515",
        "cursor": {
          "ref": "3afe7831-50f9-4712-8163-acb794d9375e",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "cb0b2b3d-b4fc-431f-b386-8f6b3f22bc95"
        },
        "item": {
          "id": "1de490bf-34bc-415e-9bb7-e21c02595515",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b937628e-826e-4ed0-912d-28b807ec467c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfeb07cd-bf6a-4112-a50d-5c73f152dec1",
        "cursor": {
          "ref": "a2ee1864-8eac-45d7-abe9-a695ac3060da",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "2eb5a1a0-1761-4143-aba8-266705ca5a20"
        },
        "item": {
          "id": "bfeb07cd-bf6a-4112-a50d-5c73f152dec1",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5e279e5c-d1d4-42c5-8f1a-9ecf2025829e",
          "status": "OK",
          "code": 200,
          "responseTime": 292,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86356ac-e87f-4225-ba2f-827618d2aa1b",
        "cursor": {
          "ref": "94729145-efd9-45da-86af-34ee0d9c0232",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "7bc86b64-000e-4485-8897-3f9ea6b43545"
        },
        "item": {
          "id": "c86356ac-e87f-4225-ba2f-827618d2aa1b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3d5c68ff-5dc9-426f-b84b-c26d93b8c388",
          "status": "OK",
          "code": 200,
          "responseTime": 3095,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df73b07-8bca-443b-be8e-2b29b76246a1",
        "cursor": {
          "ref": "cce78d41-8c38-43eb-8baa-6ce0dffe6e4e",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "ef5cc838-13e0-40d5-91d3-db40bd569186"
        },
        "item": {
          "id": "5df73b07-8bca-443b-be8e-2b29b76246a1",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "925bebe3-e31a-4d51-84a7-4dba95203b65",
          "status": "OK",
          "code": 200,
          "responseTime": 2379,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "695d8c13-94f0-433a-9502-2e5ba1417b1b",
        "cursor": {
          "ref": "4657e012-f15c-4b3f-a722-2983288bacb4",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0aee4ed8-1ecb-49a9-bda8-7932f220a462"
        },
        "item": {
          "id": "695d8c13-94f0-433a-9502-2e5ba1417b1b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a386a31e-8748-407d-bf75-504f39a7cddd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695d8c13-94f0-433a-9502-2e5ba1417b1b",
        "cursor": {
          "ref": "4657e012-f15c-4b3f-a722-2983288bacb4",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0aee4ed8-1ecb-49a9-bda8-7932f220a462"
        },
        "item": {
          "id": "695d8c13-94f0-433a-9502-2e5ba1417b1b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a386a31e-8748-407d-bf75-504f39a7cddd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267630dd-d8b5-480c-9caa-f4e3529c4f52",
        "cursor": {
          "ref": "f7025ab3-82c8-4a9c-ab51-23914348f930",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "483c7f72-ee08-4316-939b-76be89f87b1a"
        },
        "item": {
          "id": "267630dd-d8b5-480c-9caa-f4e3529c4f52",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a141ba4f-ea74-4304-a376-d85034873d8f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "411cacbc-5f0a-4155-8f33-3d4100e6141a",
        "cursor": {
          "ref": "b0b3da85-510d-4172-aee0-6ddd2d3cb075",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "4a5498cf-8b2e-4157-9608-d9bd6a471525"
        },
        "item": {
          "id": "411cacbc-5f0a-4155-8f33-3d4100e6141a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "01614088-a4f5-45c1-82b6-095a96d1742a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}