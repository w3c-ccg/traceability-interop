{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1bd62bac-462c-4e01-b219-3cc302c5ec14",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2919881d-5bb9-47e3-b0fe-064c4251bb74",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6a29f52b-fce8-4a40-95b8-a25d7bb7b574",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cb566888-a4fc-42d0-be65-9af9087f2097"
                }
              }
            ]
          },
          {
            "id": "050ca1a1-a00a-460a-94a3-69fb33b6e699",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8769b490-32c2-4456-892a-53aaec123aa3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6b57fd91-a503-4ab5-8e53-e651ac964a20"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "04939b3f-bb14-4b09-a6fe-c6da344d58e3",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "115419d7-4825-461a-884b-20ea265940f8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "122ef557-72de-4bd1-b89b-bcd6818ebdfa",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "357985c4-c549-45f7-adef-ea93a560a599",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "be17bb1f-78aa-4097-9fe5-1c7c5b36d33e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fdd55b0f-a722-4d1b-8a99-5a72bc4dfa0b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "afa21c40-54c3-4439-a247-ef367817355b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "83316a95-4fa9-4709-9df5-ba69fc9642f0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3c62b4e2-15cb-45ba-87d4-16b35d169d53"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bc3ac177-c265-4e3b-9e19-9a81f7c01fad",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "50c485fc-f7c7-42c9-a34d-b4cc116663f9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8faafe94-7df8-4b40-965a-fdb6d3e5506b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a503d1cc-1170-4863-9b9b-ede9a8823020"
            }
          }
        ]
      },
      {
        "id": "dd1df9eb-dc9d-459f-a20f-e0485e5ede8a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "dc21fadb-7de3-4422-b5b8-cf74c78fa3ba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8be3b04f-3323-41f1-a85d-b6abd40c68e3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "eb6ace53-508e-4f06-92b4-f0b1bf2f761b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7fc454-cb53-4fe0-aac0-06dcdff3374c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d118e56d-d55b-4cc2-bd53-c93682372f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e240336-410a-484d-affd-da83fc0c0f14",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb17fd8d-8443-4c6d-93f8-0245294e20da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6480734-e366-40e1-84d5-aa3ca364d53e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73db98a1-d828-4983-b10c-ec640c5132a6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e76ae1d-269a-4e50-80eb-e5fb8e0ebb65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff52b31a-75e4-4e50-af6a-532976b62fe7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e897db0c-9f93-46e4-9b63-bbaa2f4cbb99",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0c1f55bf-80a5-48ed-a5bb-e65469decb0c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f13053-1515-486b-843a-c1d1262890e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "daf5eee9-de0d-4a14-bb00-bb08f5d3b234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ecd7bae-0a59-4313-892b-ee52f1871c9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a6b4058-6eee-448a-ae14-ebc1f4bd1277"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "44c662e8-669f-4cb4-a848-a852955ef8ff",
            "name": "Positive Testing",
            "item": [
              {
                "id": "489e145a-7aca-44bb-bcdc-2a5728e2546b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f82d0f86-4acd-408c-8df7-47055752d89f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "408ca78f-7ded-4d3a-8bb9-578cabe02d61"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "059c546b-0399-4c29-b33c-e7c6ebce7202",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d07882d1-0b74-4ecb-a164-ec6f24ce281e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "41dd0347-a740-4777-a0e8-5afae66319f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4e3488a6-ddb8-4f28-b133-5008b22a0051"
            }
          }
        ]
      },
      {
        "id": "b574dbf2-6c21-4508-9bb9-3205d2295893",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c9a53cc9-81fe-45e7-b350-38272b6f1ac7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "735a8c5a-e8d1-400a-9610-5b897ccb480d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0cd0e377-a57d-4b55-bc68-1dfd1fd8124b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f66b8d-ed9c-4f6f-9fb4-e67b93b5ef9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2a73ec7-0500-407e-9742-e7699f28f241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b699aee8-9ac3-4fee-bf3d-98bcd88b5d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14ee7f62-b4fa-47b2-8819-4e0fe3f4e231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7483c917-ba04-40e9-94b7-d5a1ba77f27e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7faa6b1b-88ad-4858-9ec3-a93a43494101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a7a8ff-f2b8-4b3f-a691-2855c582f275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "123b4b45-eab0-4dfd-970d-f51fe6a9c0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fcc46052-e980-4dcd-8a5f-c3fda7ca5d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ac6139-2b0b-4210-8446-6a64a03280fa",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "821d6c0e-cc24-42db-8cda-10502ef4a615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f3d3d9-77fe-49a9-9174-d888fc5688c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c85cd8-0185-46dd-968b-8555d7afb691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "881d79e5-056b-43d2-ad02-903a70028f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11667c76-bd4d-4157-b3d0-35cf7a265891",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66db0c6-c30c-4f99-98f9-e770a470b0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be076b2-60bf-4c4f-9139-f3b8735f6a24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48aa0077-c168-4b8a-b92e-c4f38e559125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1b475e3-996b-4c01-84aa-d263ad1bc0ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c34e745-2217-4bc0-a3ce-191faffff548",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9bc578-92df-4592-a2f9-dc3e8b8d05a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6631381-b17b-4b11-a9c6-acf4fd00edaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81884fdb-b25f-4f67-9add-3b9717da7158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a771407-7e3c-4b5a-af76-d16eaaa0d632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1610b47-67ae-48a3-b5b4-8ce4341e360a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b54b05a-65d4-4592-a799-d07bccca7cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a97326c0-b168-4a63-84ed-c4f9463039ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d117342-f914-413f-8a1c-e55beed0569a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62dd12cd-8ee5-4ee2-94a8-3d5828b987d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f38b68-d12e-4aab-9036-a4af95f9b986",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "126aa5d8-1b9d-4f0f-bdbc-2a3f4f476da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f74477a-d669-4c10-9e88-e34601744837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23aa7c1e-a5eb-45a9-a50e-1addac7e01d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a2cd13d-6192-4cfa-8590-c6f086624f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b14bba-070e-44b3-be5e-ab1602d84984",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b50a014-56f2-4cf8-bb10-918991fa1306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "814c8556-38b8-49f3-87b8-ab4dad3b9647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54bdf79f-2608-4c41-be7e-112478857f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca34990a-d7e2-4ba8-aba8-6fd1a40fa11a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c070a819-a356-486e-b929-e957692febb4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e80b3a7-ba11-4624-82bf-80f681f9df38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d86960e-26e0-4376-ac32-a332fcca1ae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d75d3f-aa9c-47cd-8766-037e0caff09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67cc54c5-5520-4cea-9bfb-55381199b72d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd7a426-2d04-4809-9750-c53827fb19a6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb0f59d-855f-4f67-9a0f-beae6893616f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "429dedff-fe9e-440a-8dee-31c825f83f8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb40551-2c54-4eb8-86d2-0da6cfd7cfc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4f9f902-58a1-483d-a1c5-c970b2aa8815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a7335e-a9c6-4733-8974-89642f7dd093",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02365890-6bad-470d-a851-3532cbbe3560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f4575b5-4692-4a1e-b4b2-431c6b5e51a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e2b8b1e-c09d-49fc-a468-b9610b9e143d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e03bc33f-a556-4ba9-8eba-a3bd87d5d26c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf7ec90-955e-435e-b8cb-8600bd457d35",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95ddf73-5b6c-43d7-8f2c-7ffcc80bf84f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71db4d0c-2c65-4590-b1de-cb6496504d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aab9a4c-6178-46d2-bbc6-5dfc44955004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d53401a-c374-4618-9f6c-df0469fae5ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc78e8b8-1a29-448d-93dc-6cc4671a1858",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee97159-cea1-45fd-89a9-acf8a279e235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02fdd7f4-a9b6-407c-86b4-1de056640ab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a8504f-f510-4776-ab7f-b84ac54a251e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5dd35b0a-0d9b-4922-99b2-fee636f99638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d079c48-175c-4f65-83e4-45a2fd8cdf60",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba00cddd-7ab2-48f3-bb37-1a23b6ea06c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36cd4b6b-cbc1-4c6c-8402-3f0d391cf5ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad24f98-8e27-4aa6-afe7-110e04c07ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "370c4b21-1b21-4d59-ac54-ee40c38d5d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b52085-b36a-47df-b423-72c350490b36",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be0cd9c-7632-4d29-9bf4-302b71ae4b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c81aeea-0eef-4a88-bcf8-d946a2e821a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dcbe57f-8c52-40c7-98d6-aac1e4d278a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b8a72a6-8ac4-40b4-ba9a-4e4429c511ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1faa55-e6d3-441d-b47d-4bbb0f5808a7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "686d8604-dfed-4f53-af16-a384b252ba1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e465ce68-97f2-4ac9-902a-348cc5fe1b69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf11e455-e9f8-4a91-8278-da602ebcbc44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1675937a-29fb-4ea6-87dc-33bfdb4d85de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78157068-94a8-4c78-ae41-b1b0184aa431",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "918d0708-9cb2-43f9-94f8-f91a77bae05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee33a38-3514-4abb-b621-f47bfb6a67e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c5595c-9dbf-42b0-ad3c-6ce2651b53b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9bb2d6d-a6fd-4a27-b76f-9eaf1354c82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23070dac-8dfe-4e84-9ab1-e41229d2e1af",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d90fab-2fad-4170-834e-2eaee401d7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30c6ddc7-8988-44f8-b963-8fb99b94f040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06f99ff-8503-42fb-adbf-144f2b114578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "30467bb3-1004-4967-be7e-8463e57f20a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1fe9d5-157b-4304-bb68-1abbccad950b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0cc8147-4eca-4f73-9e1c-247f224c120b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "946f281c-9160-429c-9b00-f4177406850c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797e1584-c633-482a-9e8c-1556da3db5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40ae38c1-b091-41b5-aaa3-2a9b15ba5464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bcb9f17-ae6d-460b-acb1-301a43d5ef8e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d82907-abf5-46f1-a033-eb53080b8b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19a0aa5a-488f-4e0a-8a31-2faaad58b205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61889413-92fb-434d-affd-8a830a25ba53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9d4bb92-5431-4b6c-833e-d13566670207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb635377-3f9e-4e96-a756-9ff3b99c9613",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05afd55-af6c-48bb-9a48-2bb8f020727f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "690637bf-a346-400b-8629-0af55d108e2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65f63e8-f4e6-454e-bf6a-d06d2b02b8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "21d3e204-3e02-4c60-8001-0c8ef668b068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3db0d4-6331-46a1-a381-8a9a5cb55ca5",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37a1992-ab2d-4fa4-a1ff-c3e7affbbad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bff313b4-60e3-4ad7-a813-885585123ba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee28dc12-2bc7-47ea-a757-ca2bcfc390b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "36f8c8a3-7272-4c83-8167-3c5ba2584816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f315eb70-1268-478e-9f7f-3e1283ebd883",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87f77eb-91ba-44ad-bcd6-b51b665d6298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f10861e6-581c-4925-a3a2-acff0478ff91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dfe84c3-afc4-4734-a8db-579bb1ecc08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0dcbe030-f74b-4857-a0e8-3d30b0dd4a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48146ae0-b49a-4f25-a230-44d7b98243dc",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b869bf8-4115-4a3e-a7a5-76dff0ee7f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd4d12d8-4669-4eb4-8b92-f624f8d97c46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb25379-7de4-4b5c-8e23-0252fe42475a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a0dd75f-5765-4936-85a7-13648c1e3bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc1abe4-a88a-43c8-914d-f83899f4d76f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c84d803-842a-470c-9075-c90cf8242d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a00e78-aa1a-45bd-bc9c-57f6d5dd8034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4514cd15-d2bc-474a-8f2e-64c38a5bbe8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce1b1a65-30aa-42b7-b6a8-3cb1e12de3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33634eeb-b161-4dad-b516-800116b3c42d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfaf3a15-06fa-4627-90d8-6d9c50f8411c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61eabb2c-794d-4264-939f-971a85e384d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53b8376-38ac-4891-aa75-7b3ade31380d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7156d790-6eac-47d1-abcd-e9d50acbf863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f33144-48bf-413e-b1ca-88ab3f1c02e8",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73facbee-8396-4c1c-b3e6-d7da94f01358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8846c6e-b547-427a-9dd2-c74632b6ad9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd333172-1859-4976-8355-5963432b0cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4caa6491-a5f7-42a1-a661-a53a23595e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "221cd3c1-2254-4c23-bf5e-b9ba0b9a6a4c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0cd4c5-5718-45f1-b42c-d5d46ee6a5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6a71a32-af18-4fa8-a4f7-84e27af74a22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf62e42-1c40-4fff-ab56-fb7e62b4e924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "60324e0c-40d6-4405-b140-6fdfb375299d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f716268-a145-4fe5-bd94-f553569a577c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab9c7dd-3e05-4e4a-90db-b7c49f313a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ba1d78-b1c9-47ab-bf3c-81b236289902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f32d70-11e3-4f7f-a1b4-598a94b72d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c65191e1-9ef3-47bd-92c4-0f2021db8676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3878b3e-2eec-4694-b34a-d20213892fde",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a860263e-ebcb-42e3-ab66-40254d2eb18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9393b13-5398-49d4-bb92-4601007e48e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77dc9384-a582-4d7e-bfb0-cd57c153e983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa77c5b-8e86-4a95-be05-7d277565bb5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1a10cc-7d7d-4425-bff1-df3f5bc29782",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb4ec42-a04c-41a9-a713-94944ae5aeb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb3da3ef-610d-4e52-a3cc-34426cbadfff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7968414-78ad-4ca6-87f1-a40a1c889317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a7d9998-2631-4da6-9284-2bafc9445b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb125c31-f0af-43ac-8c67-96bcee8b6c70",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9bb8c93-cebf-4ffe-9191-1475a084a4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4958cdd-9918-41ee-aeba-a960f0cadeb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b33439-9d82-45c5-a7be-fb08bcd5fd07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "662e6867-378a-42bb-8593-ac32cef49e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d736655-4441-4d7a-beb4-66faaeb63b20",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62b9004-edbe-4a2a-b68c-62fd3a7b2c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35a4d144-256f-43b6-94f5-a40d478c1fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c4dffc-2313-4e9d-bfcb-c7de95b27273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "46fbca2f-4271-41de-a745-c196f9d6caf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7862b319-ce2f-4985-a627-9365d53215ac",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fbe4f16-dbad-42c0-8718-7870f7b1aa03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "547fc1a7-f336-4991-b600-c34d5710c524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f8d422-e505-445a-ad4b-9e4ae9b6a3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da724bd0-aaf3-47a8-aac8-d6e5782bb688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2091cbdb-3fdf-4129-99b8-a39d66c77e74",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84cc3c70-9e35-4b8d-a789-4600619567a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeea334f-0c3f-4f11-8f3f-0869b50b584e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9efe58-5203-455d-bedd-88fa4e1353c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "10c34a8f-2ffb-4942-8fd8-135272216726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125d878e-75af-475d-9bed-fff481f965e0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce8b7b7c-107c-46bf-8b19-e21a98138cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ae3df95-7d7c-4c2f-b487-4d7c3996ae66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615020cf-2a78-41c7-b269-afae752af175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d3811a6b-ab7f-418a-8ee0-04706172c588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b308012-38c4-4c37-978a-a7f5ee4bcaf9",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13caa919-7087-4d39-aebb-f45d14a8bcbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13b80c7d-f5c6-49df-b77a-aa3e659171fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76de17a7-c00f-4f81-82d8-6a912dd04cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9681131c-0d5b-4e17-a765-0db4fa2fc916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665ceb77-8fbe-4b35-bc51-25a6a1c9c135",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a889d51-23c0-4687-b746-e60a2cf04459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "757a24e9-b844-484e-874f-4967aebe4e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ada145-32c1-4eb8-8cac-e530cd56d5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe65fae-09c7-4c69-85b0-53ca7381d832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23295010-6457-421c-823d-734677142a0a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dbf1b44-2fc9-4668-9ad3-ddd7f212f4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5423dbd-9b42-434a-a146-45b2881eba36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517356ac-8be7-46f5-99b0-7f73a8ac33c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0d03acb-f555-4bef-bc0a-c2d5ec929c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4216159b-efc0-4262-9aa3-def2497dbdc9",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da73fe94-5811-4655-a253-6e1bd2f381b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4247799f-87fe-4654-9f1a-9600e3086d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d50673-a93f-49f8-a483-0ee5a2748c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a333e152-ee5e-46ae-b14c-0d4b3f6d80c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "645bb0ec-f205-452a-95a5-f94ff7b04b4a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be69990e-5f52-4c63-9edc-ad5adcf2355b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42871d95-d8f8-4c82-a85f-610f8c15e83f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bee831b-cd3c-41c3-b86d-84eb09d2a922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8936e16d-d668-453c-87b2-939af467352e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d270f7-cd94-4c16-a395-225ea07656ca",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc9f52f-5198-435d-bba2-e2f9e0929621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76fad91-2ad2-49eb-90f3-c6a578fe50b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b319d2bc-c084-4362-8c4a-a98f133d894e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "95857984-ad13-4b73-b75d-eea7d724ef50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8790e7-a75d-425c-8c32-0a3a29751dc0",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86bbc4f7-53e8-4f77-847b-606aa2ecd794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17d4dcd0-83e2-4380-81d9-d42db2d0de65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73bd012-da66-47a0-bef7-cb417fb10579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbbc6b7c-1c8d-4265-a335-b1531e65d9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163bc42f-61f1-453c-a70b-2cc24d4637d6",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16367cbf-928b-4d27-8e8d-8c888256cd01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66aa7f91-4cc9-4815-a769-e5e3b2b2f347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93e44d3-6497-4b93-857e-7c5e454f9f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c903bf1a-eb32-4011-8dad-1a40b9a55fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fee2446-c5f4-4965-b878-2c56110e2464",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a69fbb-76d3-49c2-8dc7-954e0018387b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51f6a77f-a112-4972-9f27-fb7e5809914b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05585dc8-091c-44de-af23-33d56a08f906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0ba027d-cc02-4576-a296-95cac55d7775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23176593-1153-4e05-9a3f-9b6cdc17eebb",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b128b3e1-2023-4623-a1cc-e75ca13878b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3a06694-80de-4c02-9543-1f3162aba743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95cd255-0b9c-405c-b00e-919ee6fa6045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "35ee6b92-9abe-4a2d-934d-dce17693e49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c6cf006-4880-4c75-9cea-2f4b0746290d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e3fee9-a2ac-4c06-80e2-33d5977ca6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad008afc-123e-4aab-b3dc-cb1ed2d12a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e1cae8-0737-4c84-a278-b51291ef9281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "faa41737-5127-4fdc-915d-8cc193412396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34445d9-83ef-437c-b4c7-6ee59b57fcff",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f162d14b-ef9a-416b-93c1-f1116f086d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fb19a4c-8998-45eb-b7da-a56fc8182e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8d5ad7-a5b5-44ec-9a6c-419a8b9578a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "869e20c1-bd81-48bc-be23-46c7b169521a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27d1ead-2a9e-4eae-b708-2297eeb5d8ca",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "731245f4-e67b-400f-9d9c-f36e0884b797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe9f896-16ef-414e-bd1d-67d1ad3a854d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "addfd8d4-f80f-4188-962c-4023c9d09917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7616db2f-baf2-4148-ae45-92712a298f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40cc69cf-63ce-44a2-9ceb-c5a08e6fd0ad",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cac2c57-6bb8-4f85-845d-b311c8c58462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de3a931c-0b8b-4837-8432-d41438f6ea2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b84ee4c-fe2d-45f1-a38a-7d721a38c6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5681f141-0f20-4d1d-9368-82dac5b09cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a159c0d2-b1fc-46d0-be91-307b961e9df6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b3fe8a-0e94-477b-b3fa-52a66a809399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d9616e5-504e-4f41-9e76-01ebd142c735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca82ba5-f253-4b6d-a9d6-0b34b73a054c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a62fb5d-151b-49b1-bfbc-a16204adcd4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92079fd5-e5dd-47bd-a5a6-2d817f90b534",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4864c99c-8633-41e6-a512-5b2a3c980b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e4aec02-84c1-43c3-9e42-91d9f39884e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5418019a-625e-4177-a73b-3ee09439b001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b1d410e-26f5-4d34-bf9d-29212f2bdc11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9eb4b11-815b-4dba-a5ac-8659b01b5280",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd984521-6272-4f94-8b24-201db77ed6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deb82b07-61e7-44c1-86fd-634ac2200631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d3322e-5608-4379-a202-beb7ea0ad65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a61b2cae-c881-4e8a-9df1-ca021cdf8fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3cdadfe-43a2-4032-8c51-f2522a21fe25",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ea4a26-4c90-405f-a383-20dc93de98e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b10a3d50-0555-4b1b-9191-1e8c26c242bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec37c93e-158e-4102-a904-e071ae64eb90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e888fa8-ec16-4087-acf0-128707d3bccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6152b552-40a5-4ae4-89bf-b02a0fba3354",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c15b94e-1838-4719-a663-26b380803e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a7e03be-a922-470a-b304-4076a443ba84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5334a03f-1791-4a5f-8758-b8abbfefe611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "92045838-427e-4e61-b337-f9e0cfd572c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5324c02b-a6fe-4991-93df-cbb4ca2872ab",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3528d0d-18f8-4f55-bb7b-776c94f0b197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e40a1b7-a81f-402a-917e-84b0c98781c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91dcba26-ba35-4188-abf4-b4286f7df5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3dcc4b65-46ad-41e2-8c30-ee035eed32ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9a144d-13ee-4dc6-9317-9c47752d43c8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03ac8cb-84e6-4510-8742-da79633465f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b860f583-410f-4541-8a09-e88d750f00f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aac56b1-8a84-4a45-8068-3361da89c461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "af97067e-17c2-4938-8aa3-45b8500875ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9f2ff3-0540-4e10-84f5-019158f942f3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d348283-f06f-4d19-8495-4ed0ffad8510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "160cb841-8a0c-4ba6-9eb1-a7b42a8cf54a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52dfe145-8724-46b6-936e-c56838d88082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "394dd490-1262-47a3-9ec6-ae1d0205e6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d6a8af-58cc-42bf-ba84-bf0ff1f7aaf4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee87def-0554-4cb8-b57d-0c43e7676eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae3aa2c6-f29b-4f55-b293-b061e1212000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b1d121-6e64-4ad4-becb-790bf9125f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b91e65b-cdaf-4dc0-b06e-91e66c74b6e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18859541-5b32-48e4-89cb-12191729b90d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42af537-bea0-440d-aa26-03fdf55ddf99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1388873a-39b5-4cdb-8ace-b019d007a55e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5afb812-9095-48bb-bdcc-8138562335d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "aed7497b-a2c1-4cb8-81fb-3e6ed186a6d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4ea082-c28a-42d7-b839-7e2ee5b5d147",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86059e29-11f7-49cd-96be-9321cfd5bd11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfec6a6a-f2ce-4535-bee7-6d6b1783a531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d02cb27-d03d-4f76-a28f-901568ece201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e751ceb2-e479-4b90-965a-b25c8f41bf52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b51a8b-4319-4364-8097-2deb01fd7645",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c76f4f-917a-499c-bcbc-617a9ce98ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab2733c-efd8-4eb4-886a-cb34830c0e70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbfd0eb3-aa2b-4ada-9aea-1fc67e4200ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4127f1fd-2e55-4c67-8401-11fd92a2c9d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1409f8dc-977b-417e-9b7e-d74c4dc4bf6b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66962065-b132-4d39-a9f0-aae81b98bf07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "715341c9-5f85-4e3c-bc57-2f4a8eeed8ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60846639-f386-4ea8-bceb-d47c36f32f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba27c728-df90-4702-bf20-4bdc26b9a0bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bec64c8-b734-4f63-a11d-152fed58c87a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248edc0b-6757-4541-8699-46e2a5c33e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68323439-5b69-45f1-90c6-956de64c476c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e2f20f-1584-46a7-a974-2f9523c90c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bba77f3c-aeac-4a02-98b3-7a2dfe248a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3645912-76db-4f34-89e8-545e519873b4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25da92d-7c54-40ef-8f0b-bd2d3957e58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43ac994f-feb8-405b-8ddf-2ffa51ef39b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b424fb-530f-4721-9868-368fb80b4de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2ccbf25-c779-4645-b57e-a44cbfba00aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90dab7ff-26e1-4fa2-b31d-b6405cbbfab1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa9b154-f96a-4362-8fb0-a4959160aec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b07d0d1-9218-4f90-8529-c822ce2eb4c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c96cee-ea2e-47e9-8589-0734b7d7ba88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d18275b-0a54-41c0-b53a-4f8655913bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a80d2c9-f63a-4e53-9b26-46b85acd8da6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e157db-96db-4d77-b8db-ed595954b0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d0271c8-7f6d-4c1a-a8c3-cf5d04f41fef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f65155b-b1ad-4aa8-9d97-19fca11569d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8a13bfd-28ac-45c5-9a53-55efb81b26fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dcb6318-ca87-4af5-9dce-43af15e168cd",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db459595-bd37-4d95-8be6-19f9779524ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddb0e934-fa08-4fd6-9447-c89a475f01e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f9f463-41eb-47f7-9e42-c1f1ad6dafeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "475bc050-09f2-476d-958c-05d64ef42c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292d30f2-2d83-4932-bec4-9e7a555fd415",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07894d6-005b-44d7-97d3-1eb06ad22d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15048003-c1d1-4b70-8b73-a4197a7793a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aecd2b67-85ba-4576-ab24-8f84f831147f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdd05bd4-0a36-48ac-91d3-f533a4790d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9f227a-7a90-4a24-b178-c0d8c6cc316b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8380a0-a40c-4164-9306-01d344c8c983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2dc6bae-207e-4158-a8a8-95ee6d34a98e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2bedd6-4abc-44d7-8182-ad98ecf1914b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1941832d-4869-40fb-952e-0115a904f982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f0168d-65fc-4410-8245-05259ca44b12",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74bc5936-e030-4943-ac5d-9f5bfefde49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76f7a03c-38a2-4ce2-8587-9c9962090ba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be135e00-84b2-42df-a10b-e742c6c899c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f330dd89-3e03-4165-855f-3bb68258562c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e359fc-5aec-47a4-b1a1-63b8548a97d4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a54182e2-7c58-41d7-961f-51e5cf761396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e02c87b2-b952-49c7-b847-77a57b1e24bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9574a0b5-8841-46bd-b5c0-f1e7b53d5ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4db56029-eb38-4a9d-b2ee-336ce7d69634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d54b973-287c-4259-aa8a-e91300efdc69",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a418367d-6b37-4b5e-b82a-161341481b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0d469c1-2a24-4bae-8018-45b6e0d08723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904cd762-1a92-4d68-9dd2-5ad7b73eaf54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa3a0cf2-0c34-4c6d-876b-fdea857c99ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3353bdd1-2605-467a-8dc0-81fdb92e6593",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9e6a89-1cf6-4242-b3fe-9b4b77a5274b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d7dac0-39e7-4308-8acd-985380e0acac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ed66c8-ec5b-40b3-8f70-dabbaff5909a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "80c39bad-b7f7-4fb3-a32f-477095aa5cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5206f8dd-c18b-41e5-b2eb-f370e2c9531f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1450d36c-9576-43dd-a207-e9a34a57354d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5971c741-5337-4d66-b873-4933e4d0c825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee822ade-598e-4c57-a2a9-080567e03084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc27a52-766d-46bd-b809-0d001eb62737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d5c189b-c2e7-4253-b1c5-efc7e1e7f960",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9399bded-3808-41ae-adb3-8c37b944b831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b679055-76ae-4a33-98aa-3e663d3c817b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b6cdd1-ff95-4230-a4e2-a28208492505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a210e156-58e3-4d8e-b177-760cc0cbdafa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68845a2-000d-4965-9efc-cc9e4eb497dd",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3026ac21-96c4-4f6a-a30f-bf0fd35bce1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "691340f9-0bd9-46a8-bacf-0062c235d8ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea31c1d-a7ae-4ba8-b1c2-740c9a00b928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5021cf2f-a7dc-4013-bf56-8b6fbbb9369c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d07688-8a29-4d51-884e-9e99632337ab",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "552b253b-a70e-4442-947d-57c268d67637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe302702-e6cb-48fd-9c5f-dc14dd1d3d0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c5f7fb-2593-4116-9b4e-a0c1daa42811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6401b194-12d0-4937-b352-e99b5ef6c816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e359468c-109d-4d1e-ad87-f8379e7772bc",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a89dcd-69b2-4c40-9fb1-62ca2a330160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7beb3db1-fd4b-480d-98d9-6c1b93a533fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e2590c-4065-4a30-946b-c36b1330ba46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "852d6ee5-df7b-4b24-b712-aaead6ad0e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320be3a9-4bc3-4f7a-9e00-c097d1ecef42",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd45b5d9-b478-4934-beb5-179bda9eddfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d213f2f-274a-464d-abb1-ada41c125579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8874bdf6-6fb8-4389-afa7-81dfda7ce29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "68a9d4c9-ce70-492b-914f-74b93221d4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43856ad-1c3f-4119-8586-1bb89ecced96",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc51b883-6a78-4d06-b771-2434cf6c6554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76e8ea1b-c103-47ca-95e0-1498ad7ad7b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be335e2-259e-42c6-9736-bac3b9f5c658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "73762662-7060-4dc9-81c4-67808d834e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b660b9-4806-4908-bf88-e27801d64977",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac1dc28-603e-4710-8318-be03607a56d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f37a5035-6b06-460e-a1d6-2b4de4717f59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d057e6f-a711-4957-8c0c-ff7fd1dc21e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b506f7ee-6f62-4a4e-8016-b5f6fc582479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca76e370-e887-479d-91da-d22ebbb2d394",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf64147-fa48-48eb-a812-b113a6df1a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "388cd34b-3ad3-4fcb-9606-9152cbb0dbe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab45bc2-96ac-4c1d-9eee-561e499a693f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ba1311a-cccf-4679-baad-99ddd91a7ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f871966d-ad50-4cec-b633-f52fc6f2f45d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "402d09c1-7cc3-4092-b3e2-e6bb19296180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88523cb3-5975-46a2-ac5f-f218747ac8ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05be020f-c0fb-4384-8bc0-9007910ca135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "81f770ea-8cbb-4cd0-82d6-52feb29344b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048c3201-0522-437c-9615-a2a3c08eceda",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83dc20e7-f73d-430c-a71f-9ae383cdfe61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8de30e7a-6846-400a-90f7-efe32d261768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd163e24-e013-40d9-86fa-c104d0c53d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e6c04228-aa58-480b-8b55-3057de0b1456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7574f9c0-2355-4206-a320-142b6378e6c5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "185780bf-8d8a-4296-9c8f-afd07d2ffe43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "017c1ca9-6598-4634-b813-3b1b7fb7ef90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2c9459-d714-459f-b0b2-5bb5047cf356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e7324f1-c1ce-4447-b276-7da62fe11e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db31d26-6e9e-489e-b949-c92bc4543266",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "800ed35e-5c81-47f6-88b0-8bc3d7d58255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a97ad813-8962-4341-878b-9200c219ae47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d1e5e20-99ca-4bc7-91c6-a21051aa94ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "39a2ce1b-b6e0-4063-b968-2ea50db442c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e5402d-ca7b-4d8a-9252-8a4db87b4233",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "127bbfb5-acc8-4ef2-a4c1-758a7edbe677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb82e02-5682-427d-a7c2-c02c2348ef0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2f10af-8c5e-4d39-9699-d0b5f37f8ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "83f1b0c5-e375-4136-a2eb-156507989753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "510adc58-4832-4e4f-8c6b-b3a606679021",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "469385eb-fb47-4153-a088-4a61a8db875e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb50e80-a4b9-4ef1-b7fb-0728414c3cc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e051b77b-7a99-4841-9a57-991b98621300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a42352c-c7d7-4b31-954c-fb011959dc7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66fa4507-869b-4934-8f1c-6a890999c124",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5df8062-3152-4948-8791-5d04d0883a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf4791e4-fe20-406a-a677-c89e3c17d6be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d45be0-f47c-4b9a-9654-8016344337f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf3a711c-a88d-431f-9adf-906c55755dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb599d9-d220-4d99-8d62-98698d620b33",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2cee69-c59f-48ba-952c-ba174b0c629f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a84a018b-3483-401e-a66f-e29d028e9cfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2faf1dfe-a480-4ad8-a555-e9e8c8d80a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7634a68e-abe6-48ea-99d5-ea225a44912e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f891468b-fa1e-49c1-acc5-26f4a231ecae",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f58b5f-121c-4e58-8b7b-03cbf14bb9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b6359fb4-4855-414a-9e4f-0a59b170e411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31af46b-ac34-46cb-a95c-5c6587e34555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8589bab1-0cfc-4d8a-9e64-c416b7f3868a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c21aeeb5-e540-4250-bd49-3f6743abc77e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ff90c7b-2085-45e8-a86c-477c83ed487b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d824ba3-80ae-45d5-91e7-343f8afaf1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03507d1d-e3b2-4446-9d04-2a47560b7f36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f727a2-687b-4e4f-9816-50df29698538",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09e069a5-5eae-4422-9737-9813c9b7562c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab704620-d41a-4faa-80aa-f68676bbdf81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "845b741b-35e3-45e8-8623-9dde782a6fe4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ecef0fab-50e8-4882-a0fa-2af75b4867f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cfc90331-6ec9-4f58-b3a2-a40a8d44d5d6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "13591deb-5a66-41d7-b89d-22e84c12e4de",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "953f5383-2666-46cf-a297-d0f0e1d4d317"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a88961eb-5087-413d-9fd8-edd907f5072f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0d808ef9-0a72-40dc-8691-757ba99051fa"
                }
              }
            ]
          },
          {
            "id": "6a2f4d61-4d95-46c0-9757-37b06ce7be1e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d27515fd-a52a-459a-b864-b1ab0571a000",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "63de662b-4b07-4b33-aec5-bb237c9838ec",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2db6758-5ff4-4f49-820a-3907abe2c5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "35826f85-58d2-40bb-b1fc-3df5f123e57e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe52205a-abf0-4f42-85cb-e2a2713ebc80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87efdece-172b-4edc-98b2-d44f95052064"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d6719941-7595-4a27-81e9-875b2db05b75",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb11c19c-7f60-4633-9aca-0daa7e560e33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e3fcd040-6d9b-4d41-821b-8390bf955054"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "715cf807-27e4-4438-9b40-e23f62c4a963",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fdbd2591-3cdd-44c8-9f09-111171581be6"
                    }
                  }
                ]
              },
              {
                "id": "56b30e1a-69af-4c60-92e5-826cbd8c9042",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bd73bef-338c-4347-ad7e-f25a971f05d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e6bfaa9-baed-48d8-a7f5-7fa63e27a21c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e610b99e-bc88-49f4-8db4-a7c7dbeaa735",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1a0e4e89-d056-43a1-a71e-119c613f1fca"
                    }
                  }
                ]
              },
              {
                "id": "55ed8d07-ca41-468c-9f33-1fe46129705d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de95a980-d1a1-432c-9df1-871fa95181cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6dbd4b06-ae10-40f9-b8d5-bea6f9ae0cf8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4b99a89-1333-476f-ada8-499cdd19a9ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e38340f7-1d2e-4d6f-a9a4-3fa38a672f40"
                    }
                  }
                ]
              },
              {
                "id": "2acbab96-f319-4ae6-b9cd-fcbe5bb83439",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6c5b545-d374-4118-bc8a-287f902ceb33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed4dc2b5-124e-4c17-9be3-95cb78273896"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3783ec77-e2fe-45a6-a98c-2f43a6785762",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b1dcc2fe-fa7c-43e0-aeab-9246c52d8889"
                    }
                  }
                ]
              },
              {
                "id": "689ccbcb-4102-4b05-a0d8-4f2fc006f3ee",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b60e2ecb-bcc6-4607-a721-6241607f4c00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3efa7a8f-b6a0-49d2-988f-30bb5f10d5b0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c409dba-d57d-47cf-9d9a-a82adee39280",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "bc75c934-5300-46ce-81fd-e34b9c6f146f"
                    }
                  }
                ]
              },
              {
                "id": "8bf52438-72f7-46f6-8234-3b509de962c1",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "47cf0e90-24b3-4290-b408-3ef95115eb60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3336401b-b8fa-4e6e-8bb2-d07e6dbef51b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34f36ec6-72f1-4399-aaf5-9d45b4fd417b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "864b0b0e-25d7-46e4-887e-422a15a3020d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "534cf65c-52e4-4cb5-ba0d-730dac7c367e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "64513737-e186-4c9d-a84a-a1252dd202b6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ef51e237-bda7-48cc-9a06-0f5967f0d5ff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d8ff7492-7465-4449-b1fe-f4476f061d64"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f7b57186-6e2c-442d-bae2-082f16f5f95c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "809f7a9c-d9a2-4dd4-87ac-af43b488622d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bfb27748-fe4e-43d5-b8aa-6c8bc507c87e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d165b99e-36bc-4183-a72f-2da858e4d2d9"
            }
          }
        ]
      },
      {
        "id": "ad225a38-d1fb-45c2-a173-c8d9f653f563",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a9ef646e-95db-4896-9545-c991cbfbf029",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f58af64e-4269-4120-b521-3eb88d9e4612",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3c6efa3d-c462-4399-9cac-09d0b5f3d9cc",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2de0b92-8267-4f43-b375-c1768f465b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab68dac-1505-4323-bf51-86d684771b29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce64859-827d-4463-adcb-4f02bfcd9565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ece0a06-ad62-42f5-99dd-d7047809cf08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff8ee08-80aa-4cd0-af53-46c3e2b22993",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "132ac331-b5b8-4a90-a5ad-b564e8916a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "408cd915-dd07-4e8c-a88b-4c5c293a2431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2021246-3391-4c4c-82a1-911e3e155560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dec6132-a5a6-4b93-8ad3-5bdcddfc9487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b050ca7-5644-43aa-b90d-80ad76fa8c01",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78eb4ec2-8ae6-4084-8d3f-2803119890a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60ad0ca4-2bf3-4b51-93ab-9214d9ca4cdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26fe2bc3-3300-4ae7-8bc8-1e82b8636420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da3e9d4c-7ae3-4acd-8f6d-f354d73e5ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "facbc0e2-b2d9-4f8c-ab17-833af574c4ae",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22175420-4eb5-461a-925d-e8d58ad46c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f85086f4-115f-4b2b-8bf1-8da2c8f335e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae8a535-7881-4817-b2db-df8dd657b505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b643613b-b7b2-47b7-852a-8e9dd88774a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ace1952-3e37-4729-b399-ecfdbe121776",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb5a119-a1a5-4113-a4c2-01a48458db05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dad9700-ba46-4e18-b8b5-ba308dd28aa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5894ef4c-9d4c-4cb0-8f82-baa71589956b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93761930-f408-4a24-a935-22c514338bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f62724-476c-47b8-98be-ef83b5d96604",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9813d2b-59d4-4f85-b1aa-d14023f0e259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4498c6b-1481-4e0c-8a4a-652d1405254e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31ef2f0-e7a2-4afd-b4b8-2c947b7fa4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "baddf4d9-aae4-4718-8d26-d5e4392b2e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "893ae58f-7239-485d-8b9d-995ab781265d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ae66cf-216f-4703-b75a-35f56ca4b2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a07d222-c458-4cf9-ae24-64c53468640c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a38ae74-b414-4308-8f5e-f34e70b9c7d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee933491-fada-436c-a0e3-5b591c246104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b628626f-9744-48a8-9584-9a8b5915ba99",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67ea2d8-1032-4ac0-bc2d-bd40c123dfad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90423b81-7c30-47b4-9614-11b5bef9df5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f31a8e29-7447-45be-9a9f-35a91a7ea23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "941aa2df-00ff-4efc-bb42-d06654e3f8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9db0586-ecaa-4881-abd8-b8b425394646",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8b48af-eb32-4f52-962a-096f4243a83c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64ed40c5-6590-4fb7-a09d-4e8c91984679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d005e648-5233-4fd3-bc33-bbdee8c526ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a797c79a-99c4-41eb-8761-afc89d1d790b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54908b2a-32a5-40bc-be99-2f81a5a51311",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5979c6dc-08d2-451c-b583-e64796443e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e28a6faf-a2ea-4dd1-8711-c85c3154cda1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8368148c-f0b5-4696-a8f6-84614e14282e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd10bcf-3c7a-4e53-aa8f-2e0df7f230ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b108a0-fa98-4953-9cee-1be3d643c7f8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b861a72-7a4d-48a3-882b-a85813d88e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9dc3f48-0c00-40b1-b3c1-9e7a48918def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc99cdc0-b66b-4e81-b01d-8935c14d695c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cf9b4eb0-95d9-480a-b42a-4a2041634054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84cd0bcc-613e-409b-be43-7bf2f2d39ae7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58440098-e413-41fa-a5d9-3cf6c2828908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b73bfbb-3280-4b3d-8207-dfa0cbe05ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e0ffb6-c640-4961-87d4-81114a02c247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7f70396f-9348-4615-8723-39db54755d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e2a893-dd75-4dab-817c-d9db2ad30832",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0e2138-47f0-4b5e-a254-a085b37cc023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db584aea-9fe7-48c7-bb56-e14a93384e8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36ea83b-537b-4ca8-b617-fedee8aa2c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f126bdf2-bd2c-4ad3-b6bb-41b35bd41d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc23b08f-a529-40a0-8e02-a9e3d85a80ee",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4084fc73-317a-4a98-8e7b-7b52aaf91301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b01214e-e5fc-4499-9bbb-9d2a865a9cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e18ba9ba-35f4-461e-a42c-5749d4e68e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c172d730-2cb4-4199-be98-822feabd0a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1e3def-24e5-415c-ad9e-4992993c9a1a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5a3ae2-bcc8-4b36-a865-5273a91fb73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d44499-69a4-4b22-8c80-0955826d8740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79343bab-3cfd-410a-83c9-0b92645a72c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3994e176-3acc-4c8b-80fb-7ca69cd6a6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706afa43-c77f-497d-8e36-aae33d50fb0b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a38274e-f7e7-4212-8f91-f796f96dfda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8709dc4e-968a-44ea-a8aa-7c8b9eb7cfd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd28d2b-4827-435d-949d-8a71b930efe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "33a0e9fd-fb20-438d-98d3-b90bd1b23761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6287bc6c-c33a-41a8-a1b3-eeedf4546e56",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac34fcb-9ac2-4e37-83b0-ed5ebedfc43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af7802cb-b79a-4e93-8b11-98d8b1715267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfbcc813-3fbe-432c-b737-a81f09f29db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc2b07ef-82dc-4c42-b852-7c0dcdab135d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b662dc02-8745-48cb-ad54-af14b577c606",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11369ae1-7c06-49db-9f95-e7b75922a912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c41b707d-1047-4541-95d2-cb41015e00d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72ed976-6285-449e-981d-362f99e9c0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f292640a-a934-496c-8d8d-8e29e98dc5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf10c1f3-c4cc-464d-aed2-77fb45b4e784",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e732a78-d476-4a22-a5e0-91477e694610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a13bc08e-a28f-417c-b04d-242f4d1fb0cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c34354-da30-415f-a980-18e969fbeebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc35b1f0-0a75-433d-8c7b-092837a3dddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89938735-fe67-447b-a38b-962478c5ceaf",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a83ff06-a204-4041-a850-7a8d79f40aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e527021a-2f4c-4d07-9390-c94ca570da6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9fe6580-bfd3-4021-b017-8b879523d251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76400d12-a2b5-4e80-a394-aa20142a26bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a92717d-9d80-40ea-bd96-f66bb99939ad",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "138782c3-7e07-44d4-a8dc-da9ddf1b3566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec7ffad1-7277-4082-b486-33b38f0e8c91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1781ce-6fe6-48db-8616-1da345f3a035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6b0ebb0-3071-46b7-855e-57b2171487cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04bc1858-740f-42cf-966f-a82d402162a3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0cfdb9-fdb9-4cef-a866-4585a842e094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a93ff5-921c-46cb-a4ba-a9bce8e821d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aabb4cde-e9ac-4a39-91e4-933a7a0d23dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4362d814-a290-4018-a4cd-7a8818683ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e773f393-8b7e-4c44-af3e-2303cf0c1b35",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db7ff120-33d9-4366-9228-dba8df1c81f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "000f1cf8-786f-4374-a6b3-52f25aa46def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da677b3-8c04-4327-a352-40f5d512de2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "147fcd5e-8e51-47ca-be8e-e5e6107cca5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53101d5-484e-4aa3-b8d8-fa0779f7e1ab",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ced95d2-2b06-42f5-a698-dad9366e48e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e139e093-e158-46cc-bd75-8e59f68fb4ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7827eb78-2ccd-4215-a3f4-4d1135698913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46ae7a91-46cb-4163-addf-1d9b819367de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633a165f-17a1-40ed-8ee2-cc6a2243e0f3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec20d47-f719-466f-a7f9-da7e035b9812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "141232a2-c366-41eb-9d3f-af45dbbbdf87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2c37ad-5fef-46c6-b8f0-f4a124dc66d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "338d9546-ff9f-4054-bbb7-e99c2f62d2e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7e5fa7-e764-4685-8683-4ca0bd652cbe",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d561717-3770-41e0-b55e-4f214163e4a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58bfba73-ee0b-4dda-8895-9ba0bd473189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48679159-ee02-44a5-9588-ecdc4355faec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "040546d8-316c-41fb-9d17-4970375ebb59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2502691-1a4f-4012-b64a-2ffd5828b73f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2cf8d06-4930-4215-81cb-d1824c61baf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "192d070f-6af4-41df-812f-608e79bcc2f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c73b793-48c3-4e08-96c9-514b3ef17bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e139d4f-7cc1-4093-aa56-fc7725d478b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c519e1a7-23c1-477b-b5f8-308071bcddd7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c09439-3c04-437a-bb91-b6eb969700ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db160cfe-c107-4746-bce8-73b1cbd25431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f971a6-f26d-4440-8420-900ab548932c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4157d53f-7a07-4507-b0c9-527d5074099e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9429f0-36f4-4b68-a53f-5100ac02760a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62815ba6-1a0e-4158-8309-6f5c06f2be5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6617176e-64fa-4686-982a-0d254c834183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e432984-354b-44e9-9e0c-789b6afa4872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89216caa-fffd-404a-a1a3-ef3c23fe0b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f686bc-33aa-42df-82c2-586d6b0d3bfe",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "569f1264-c742-4704-81c4-5b96c3149a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2370a6e2-a3c3-4fc5-87fc-c19a4cddd908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8b8441-c5b2-4fb9-97d0-f0504303dcdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "696dfbf4-4b4b-4a67-954a-85b8c1b090dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d755b550-8d7e-4ca7-9cd9-0d3f1a6ee29f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c99ac0-74e3-4a2e-ac86-b0de20186727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76919bdd-2cef-44f1-8ba9-43c4980db726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ceac108-b211-4e9a-a551-bf9239297843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7de3fc3-d715-4aa1-813c-5caaf6316c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efac2789-ba58-43d5-82ae-06b893794d94",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f997473-9958-4ee9-bb9d-bc012bf73830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7127fb74-49de-4dce-8f65-8a17fc4647a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc56265-bdc3-4e91-be4e-f1b073af1cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89c94f08-0a98-4ad4-b6a1-58fe9871da19"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5e1f43a1-692f-4248-a272-f302349cd6b5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "361e5afd-0b26-4ce3-adac-3def69c0aeed",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8fe6f48-4cf9-48f3-ae02-447d6bbcd92c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6a3221b6-036b-45a8-b5d0-54a976baa2cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c66e734-baa8-474e-91df-73155e3b8ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba43b087-d12f-4633-916b-50ca6455a059"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e166e955-b14d-4117-8d4f-01d96a01afdd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9853ce8-4467-4d04-a39c-83bab9f30e94"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8719471a-0203-46aa-a2bb-2c12a30302bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "432dceac-0d6b-4df5-9e8f-163491f530a6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d303c83-ab94-42c9-a70b-e1ab9d0eab5b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "57e6a8e1-ea62-42ab-a5aa-1d2169c4bb17"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "346d31e4-14eb-412c-a1e6-a4cfca3afd04",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "71a4a532-8b01-4b13-bf3f-81cfc746e8ae"
            }
          }
        ]
      },
      {
        "id": "ea38ca61-0a99-409b-a3ec-7ad71054f758",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "4855d6eb-ceb9-44d9-95d8-b93c0673c350",
            "name": "Negative Testing",
            "item": [
              {
                "id": "72778059-38d4-48ed-8e21-62fa07aaea04",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "42328b52-037a-4015-b754-14803738fe2f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d03be260-16e0-4d7c-96d3-1abf51734f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e10ada0-a2c8-4072-9655-c085ac106391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b968a6f3-7f88-40f3-a801-c3dbfd75be01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e943282f-a254-4034-bb25-f058bd7e7153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a248ec9e-7634-4bdd-8c71-a6a0cfe904d6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcdf461e-e662-4f88-9cdb-2cd855bf5bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9134be41-f2c4-4ac1-a39d-6bfcea215636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac5d8dcf-a431-44d1-abdf-9f81fc8483cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "615a1a86-49de-454a-b7aa-60916885cab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe499132-a7e5-49d0-93a7-6609d90a2cff",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb31ec15-e48d-4f17-b3b2-38238a16f33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9130565-e9b0-43d1-a15d-79fbbf962422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2cb480-7adb-4eed-809f-8544777830dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7326c08-af37-401f-9884-20300b969d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aadce21b-bdf0-4441-9aa1-8fd7752e2be4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac38749e-bb80-42ff-a478-d85405e55665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8198e0a4-e78e-4c50-937a-4fccabb2952a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485ba513-33ef-421b-91a9-79dff0924195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30096bc0-0b76-42da-ac19-ddc47e322cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f40d91e-75eb-4f5d-95fd-f5999bd87878",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13648282-007a-4e3f-9ffe-49aa39ea85e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8bdd7cd-c0e1-435d-b5d0-217fbf6ac3f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d88bfa6-38e8-41de-a3fa-fbcfbdb73d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d36285d-0aeb-4a3b-9da2-862790ba39be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c249fe2-e6d0-46da-831d-88d572a9862d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21ac395-04b7-41d4-b84a-a1787da4db1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b479b8ad-3138-40a4-b5f2-01f365eed34a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814d06a1-4eab-487f-a31e-dfc0668432c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef072440-b655-4db2-be8c-1fc5bcf836a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2e6e37-d6e5-4f5a-980d-42ccf0127337",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18c385f-c608-4745-ba96-24fb37416716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "961776d2-54bd-4f81-9fe1-4577c3efa50d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f851da69-8672-4531-a559-4adf8c28005c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "60628063-7b5e-4be1-b1f5-a40f36341009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "987346f6-bc78-4c30-b90a-7d971c888d19",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b86b71d-fd36-4a7f-bec4-ace2e3552713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc68568b-9bd1-4007-918b-84830aa71c84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26106ac-b6f3-4ad6-9ce0-5cbf13ad6d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5a7894b-5f9a-4802-9406-51f83ee9f1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dffbf55-67af-40fb-9272-5f9771676172",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ecc3a3b-5133-4752-a559-16d3140c94da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58b612d7-6644-4fea-8aa2-deffd2e49ee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff405fe6-9732-4e18-b5d6-bf91cc6ab910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd222f3b-e712-498b-adc2-b1556f44e178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eaf4cb7-28c2-4efe-841c-20898170fa3e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63130b1c-3a96-4d25-9842-39984540162f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49767a2d-e6ee-4697-8f2e-440e56886f79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445f9e22-d128-469a-9b66-9459c2b4627d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7051ac60-cf2c-45df-ac62-6c07fba696fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8021980-d6a1-4436-83a9-ddd2388543d9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6860dc71-304f-4080-99c2-428499380ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c89135f0-f6eb-4db3-b004-c4cdd398e1fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dbea753-fef2-4f89-abab-4f15ceb68cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1b7f4cf8-b838-44f1-a8cd-bc304b703f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4ad10b-0f9c-4d06-b741-46271511b3d8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f282880-9c80-4af9-965e-c86e1d2f0fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e874263-f5e1-4932-9509-f12f892b6265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3cdaa7c-8859-40eb-a047-3be83864b36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c40d352-0bbe-4469-8d50-dee986b3b454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668d6280-21c5-438d-b516-982b0aa9ff93",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "969dc5b3-882e-4567-94ab-bb2217ca26f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ba52cc-f87d-428e-9b46-6ae0167ed315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14254c3-a945-4fac-a90b-2190ac084216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0bba09f-5a1c-4e56-9258-b32842e0f630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75923d82-165b-4556-85ed-e779ea93f2a1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2acea274-ef8b-4d15-9617-f0f2d55d7d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbbfb2e0-6ff5-4d12-8e00-39a3b2952dac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed5fe1d-5699-4c7b-b905-f010a5ad4d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4888086-1c97-4bb7-a4af-42f49f600c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2393d14b-d4e8-4ada-b8d5-8cbf013bfbad",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ece5602-71bc-4131-942a-ef461e5804fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ba608c-e62e-48e6-a6d8-c6945f812d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086ebb5e-9e1b-4a97-a232-96e49ccaaeee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9318e4bb-0100-417a-9300-ba129c4abbd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd54f4ad-4284-4175-aea7-1774acd39f8a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e56ebe-8cd4-4f80-967b-ab6d598dbf81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e055d189-93f6-4b7e-8c29-1ff6233a81dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3983be15-6049-4a5f-86d5-6cef1cbfa101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4633fb7a-1d8e-4cb8-803e-7e624f606f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "393fd03f-be72-4c1e-b92d-fb7aa25cafb4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca4b970-3c11-4dfb-b8b3-6ab85cc733f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd4c404b-a246-4899-bc63-32ea5211fec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34dc91e2-dae4-46d2-bb55-d63399a5d761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "20c7cc20-822e-4e93-a4cf-da3b1035d3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "becec33e-e16d-4f40-b79d-bf765d158234",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0435263-37b6-4273-a053-1f5f22baf2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "108dab64-2147-43de-8fd6-db6d6d0bb6f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34340c84-8921-4999-9da6-36abbb28c799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "63e869bc-d2b3-4bbd-b093-d17b8a1b671d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a197d4b9-3a21-49a9-bd90-2bc8faf7fb41",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32029502-6089-471b-8426-bd1ac5fea81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "725feb8a-f9b7-412d-ba16-6cddeccd6030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7160984-ae48-4f35-b04e-c03d6fdba6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36b9c92f-573b-486e-8ac7-851a31e72ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18605109-0b78-44fe-84f4-089882f1eedc",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd475ce3-1738-4de8-9a89-11272fcbc0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db1e0d0-0885-4252-8a51-f3297e856b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4bbe95f-1d00-4d4d-b366-d35c989906e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b83c8793-520f-4fe5-9c58-3efe7dce857d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf80cf26-4a12-4684-b521-e169e0b591f9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3fbfc86-2a0b-4517-b70b-11e717f775f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e9ce51f-c2a5-4c02-818d-d3aafd9053eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a3d20c-3264-45f5-a19e-68517349a5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50841be8-5920-411f-9e62-e4df691ae51e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4314a7f9-87cb-4b52-91ad-1383df9c986e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ee8125-1216-4dcd-86d4-b7ec100c6399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3924ec45-178e-42bd-b9f2-d9dd614e736b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3dc055c-a660-4045-b0e1-c372161c75d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6039a8f2-d9ea-4696-a84b-d1e6e7b51933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f96af38-f814-4198-8206-c3ba51fc56df",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae195f0f-ee99-4b3b-888f-0c7a4531ed4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32b6e41f-896a-41c3-a9d6-cc201051ab4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af332be6-13d3-46ee-bc73-d38812982500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39484952-ca60-4fcd-a094-c5f6e3a2403d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e10c0a4-d874-48c6-9b9a-b3125db3c263",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea9cb5a2-defe-4c20-b5fd-21f628d12e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b1fe5e7-40d9-49d4-80d4-712b6e9e44f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce01ae7-37d5-4e40-bcb7-a0df86258f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a45d989-5d66-412e-9a43-e10a076a724c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d8252f-2aef-445c-a591-3aa89e23053e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3fe8e13-b35f-476a-9b31-b07ede1e7d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebcf9f29-be51-4d82-a7a8-ef78ccb48797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd1a212-c250-4d4a-a0aa-2f8128d2ec75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd3fce22-5dcd-4cde-b8a4-3fc24cbe24ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a5d830-b7ab-4a96-a049-0da29771be75",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e983acbc-efa3-41b1-bc61-e36b222e36a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a33324-9fc7-4be6-a015-0cda60b07328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a882f2ed-9069-4925-aa96-91c3f7d2a356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64f9fee3-9622-4c4d-8581-080bcceb485f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d8a260-ca1d-4807-936c-4b1b487b0317",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d7da0c-16f4-4587-9fc6-bef2b5bcc57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09cd62ef-47a3-40e3-8207-6df9c1316900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890d9ebe-40b9-4031-a4c3-d7537ba0ee21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb02c19a-c0cc-48ec-aa43-f04e5d65ae4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9229732-5347-4b2d-aa9f-d217d5c14d85",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c5cbbe-b4ad-496d-97ed-cc0e740f23c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40dcefd4-c022-4cef-be7f-28ab8d837c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b57ab53-314e-4dcc-ac50-533079460d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a12466b9-0d97-48b1-9c8b-5ce2a2c41106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d7375e-c679-412a-a984-939d331d83e4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d08739-2247-4d90-affe-d429e598c955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f1c916-5cc3-4bf8-b7ca-b0fb5df8042b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ddda72-c319-4625-b390-74992089f693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1206d4d5-89ce-4003-bc2f-290cfa481203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf361e71-fb3d-4a1c-bcd3-8e5249a38fe2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22daed56-12e4-4197-b45b-746267c56880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "253ae966-b440-4664-bc50-2cbe997aab23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c2d1d3a-0233-4363-8667-743f965d7140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f508ebd-4a0a-41f3-ba25-32798f5a7d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c57363-a7b2-439d-8707-71fbf67dfff1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd926da-5628-4707-9929-661da058ab62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6da06f6e-3efe-4f77-a162-601300224303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a78f0e-ab69-450c-811c-28350049faaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ca6d5d6-2f59-4e1c-9d87-ee61d454494b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d2a56d-4c3d-4dac-9fca-004329aeb463",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd73c44b-80c8-4c3c-9bec-1f708c0165b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cb67a40-4ea4-4d7c-8f66-a6716b5e31af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c21d1d-6a29-4fe9-ba6d-ef2b60daef72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "841a35f4-8c4a-4aa5-a0d6-974f11ae78ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c03e37a-c608-4b0e-ae14-ad7b8700aedc",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "585c34ef-ba57-4849-bc6d-c7e0eed27bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "706287ac-0af1-4cd7-ab7f-ff86259c07d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5eb9543-dc47-4125-a21d-ab154c1748c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8e865cc-d7b0-4a16-8d21-acfa0fc68118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dff2101-3dc1-4937-8b6d-daf4b901b0f6",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2748a736-1e58-47ad-b825-a0338df8e35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a512310-a1f3-42f6-aeee-aabc47c35a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14edabdd-414e-4b04-a387-c4d1d355a1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2725201f-a8ac-43cb-b287-8075dae91f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f3ed1b3-db5b-4a43-bcbc-b47ddf06d21c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3a4f5a-c8d2-41dc-983d-2923b6073e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c7c1be9-3d93-4d2e-862d-5abb8daacccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a92ce07c-1dff-46a3-a20f-025b31cd4c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dfda69c-cdf7-406d-934a-2c42af40934a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4dc06a-5b3c-4c18-802a-0518d674af1a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79e7192-f369-4fbb-82f6-9f09bd1cf236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef6aeb0f-5400-46f3-8d33-2436868eea15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3cbd85d-47ed-494b-a853-9bbb555742b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95041202-014b-43f5-8d09-0ed8afb0191b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a2a5d3-6b50-400b-a5e4-0afcc4027c1c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba28ea4f-d62e-4356-86be-1b16cea5b088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96bd97ef-46f2-46aa-ad77-1840c47caf5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f2e0c5-dec5-4296-a470-7e173f49cbb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b0ee9be-a246-4332-b622-44d5a58e990f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9fdd4274-f061-4912-9876-093322ff5629",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bbbfd49a-5907-47af-b217-b599922ef20f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ced826-922a-4d47-8475-c5c7dcbbc463",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "149bbd9e-12cc-4f65-a05e-97b91b657581"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee8c15a-2bca-473d-b731-79bee0270827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "308266d9-9ab6-49ad-a8d8-f7138643c37f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17178368-708a-4006-8325-103f1e0fad47",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "afe38d15-677b-4dd9-ae04-c9066d738828"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca2edec4-04a0-4390-b1a4-0f427351986f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1217b698-3974-47fb-b59d-2ad25187d770"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c801b1d-7ab4-4e8d-bbbc-e7a028ed7317",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8ba8ba37-2be1-4e9b-a16f-ecc151936e10"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f8a9fcb-9b94-424b-9886-f1398c888c5a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2718b885-6ebd-411c-9a2d-24001900383d"
            }
          }
        ]
      },
      {
        "id": "4ee6c8fe-ef32-47d0-8ed4-5498313742c3",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7adfb558-03dd-45e1-8056-c514b0970926",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b891d99c-849b-4c68-b99a-2a3ce57afb88",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a61b8af5-a193-4f71-bf1a-c2f762c11fd0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05faa277-5d88-49ad-a6b4-f49e396e82b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a324287c-93ff-4d21-be32-c4ffdf3ae652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7803c5-8067-44eb-9ff2-34c55abb82ff",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c31691-7256-46c9-bd9f-c812931f71bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7116a86-c0a8-4856-b09d-0666065b087d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37416db-e8ab-49bc-afc0-ba4beb719597",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51fbad99-c136-4c55-81a8-16242aca7f7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4887ea61-7899-49c0-ac1f-8800c703c276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878110ae-87ab-4fd2-939c-96f79abebc74",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96351d80-916c-47eb-955b-6c894462339b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db782c72-10c3-498f-89ef-a0efb0876945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7581fd3b-3f27-44e2-8256-f21fbcbd12a0",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6921c8c-f323-4b7e-84de-d39a54bfe0af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "204f481d-a339-47d3-a91c-d5990f2f2f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5d479a-b77f-4438-9f7b-b217749921e2",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "227a0585-fc2b-4c5d-b0b5-45cfc4cfb3f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f17685-b008-446c-a401-487ae34c268f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a137d1f2-b4c9-411e-a7e5-2e933b4ee556",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9abc5f0-6b4d-449e-9ef5-8a0dba812051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20dbb5c3-6b4b-48cb-a6bb-402975036ed1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab28270b-81a7-46bd-a649-0e4dada90b2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "712a6466-e789-4fe4-ad22-50883fe0bb37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a059d747-4a47-4d73-85f6-8dd557289795",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91dac57b-c7c8-4fde-88c1-256844e6e9c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abcfe946-d3c9-4df0-84bc-a40f0ad84276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c558cedb-4a74-4378-a359-8fe087aec38a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50b7b7b4-653b-41c3-97dd-3c030c50d59f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c23dcc-4060-4408-9f40-440ed753334c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08a5b31-d3b7-49a9-989c-5cb9fb5249fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52bd754b-fcb0-45b4-b553-6f41f611c5b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e072ba-fe9f-48b4-810a-e01cdab1c4fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82a8ea43-5774-420d-a83b-c7771f531c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258a8ad1-152f-451c-99cc-8e130db77e46",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b24e2c0a-1e96-435d-b628-bdabca96aa1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb275dc6-0e08-4575-a5ce-d7c4cac630c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0af233-3023-4eda-affb-518e43367df9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d284f63-628f-4a12-b958-7205883d1353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034f63a8-6a10-48db-a251-f2ead17b63d9",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6576a03e-e973-4dc5-9f01-40eec098fc64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbdc909c-2bf0-4602-b141-0950e234a9e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbff345-e7cf-46ae-a80a-671edaebfafe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f49514af-eaf7-4ce3-a159-7ec54b60a2ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33ebeda-a9e1-4a61-a7ad-be133d1c8740",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebbf5da7-7708-45e3-9b24-0810474efa45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe4575a-9a31-421f-b6e8-6579875936ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ad59b2-3140-4783-bc57-d9b6aeabf62c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f58bb023-3bf0-4174-b5b9-b820875abcda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "745610b3-4073-467a-a881-02ecfaf740ca",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ea5f79-1179-4614-bdf5-165ead71c484",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00b389c5-aa28-44ac-b13a-1533c12a0b34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8b94f4-2122-4345-9dc9-5921178c9957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36c48c88-5422-4498-adc2-af9baf317587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea3c3ae-7b14-4cde-b523-1ba92d3a77f9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f6f1f4-98f2-49c2-8b35-f293a33e0b1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b3f18b6-83e6-411b-909a-e09bfffdc900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cf08a3-fc12-420f-80e1-fba998a06097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "961a4e72-d858-43b0-a1df-d98c7a31f990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c41ed2-7973-45f6-a20b-754d8d4c64d5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de12a34d-77bd-4811-a3eb-9d6b40fce958",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ae2b282-b2c0-454c-9761-28353151899c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11608ef6-db2c-4cdd-b16e-0e38636222d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69ec6224-a526-4773-898a-5b4bdec665e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01c573e-fb1d-4735-abbe-8d970200aeed",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a00d9a-1bed-4eb8-9441-4e88c1adda2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70822d5b-2223-45fb-a8a3-e8c46f3c2558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1dfc77-9fe9-4ede-878d-4d7c5fa631e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ff0ba6-de7f-45a0-b775-041c05506ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c8e52d-d675-41fe-8899-28ffd4fbfa03",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae6d091-951f-49b6-a1cc-5f79e3b4b5e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee3ebe4d-5803-445f-9639-224ad591faa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "692feb7f-71fc-4b40-909f-ba441f48645f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eee649e-c96d-4b12-804c-09a967d80564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa57474b-9a06-410e-9000-d3ddb991629a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7521dbf-0840-4c66-83ce-792a4c79e60b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b77a7e49-a5ef-49bb-8740-dad82d9f96a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e30b22c-e47a-466e-854e-802c48994a59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7790a5-dc41-44eb-b570-f0137d1a0d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f01fa1de-ae16-4277-bd6d-10181b1a020f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fdc8be0-b28c-49da-9978-982c17080e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5083f373-7a21-40cf-a5e3-1f303a208d0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e3ba4b-c797-4cea-87f4-7f886afd85ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7873988d-83a8-4636-9278-00bff93146f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf80cd9-419b-4071-aec8-f10b2684d111",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "965839c3-3e99-4fef-9c7a-4099f6dc5d87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fae68117-d6f7-431e-a288-b442f37521d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f68e54-b350-4bd5-93ab-7c871e5335c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f6072f4-eb29-4eaa-b190-f4730250a883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2417dbc0-8f30-41b0-bb27-20925a36b282",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15954f89-f8ff-4f6b-bcd6-c309fa241f59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a539fab2-10c6-43c5-95e1-2a2a9866199e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e733d4f-a486-4327-863e-7e1c5101fa0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e8308a6-85f9-4b9a-b7cf-62c5c86f7fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9fc0ccb-c855-497c-9c68-47eebef35a9f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174e75fb-fe24-48a3-bcf6-d5e2bd640fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "162dbd24-51ef-49c0-b2cc-7af5d5a2ff40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "580f124e-04a0-499c-91db-c9feb5022f59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b2f6390-bd74-4c54-8469-2fbbc5d526e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3959161a-3610-4c9b-97f1-25e973a21fee",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996eb08b-356d-48de-b730-6bbbf6e50264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8129ae73-ecf3-4f6f-a705-b8c875bb97fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8374578f-106a-42e3-a18f-023be4d4ddac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eebe206-c237-47a5-bd5e-0f2b048ec9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780f277b-cb98-4342-a50a-2c349008a317",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bae2ef0-8761-4565-ae8b-13bb048bce3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f15ef70-9d35-4ccd-9f7a-3cee7f914bd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54ff768-ef63-46ce-a9a7-782bcb1cc448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f93dbc2-2c12-4341-abd3-7489a610b3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892e8a58-f00e-44ba-8030-4f2a4d981e53",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3dbc0c-3498-4c0e-80a5-7c4f594a202c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "373ce5ea-e1f7-46df-9dbf-3219014ba261"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "465206bb-f1a4-47b2-97e5-8a26c6671290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ef7835c-a1c0-43bd-b36f-8eea64c359f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e2a1b8-3efd-4e68-9276-445f29c48f5f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3573736b-9d9d-49bc-a380-49c8e498eb04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01f3b29b-0047-4d25-ba7a-50c6d6bbdfa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb22420-c2ed-4409-87af-66fa90765e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44c352a8-9b74-43ad-a7c0-559c5dd0cf3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4b22f3-6233-49e3-b6cd-0324ced81d96",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b6c67b-5175-403a-a62f-6ec8aaac479f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cb08986-462c-4cdc-a4f8-bbfb5127634e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92313217-191b-4f5e-96c5-bc2a429bd18c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c324d95-eaa6-4629-8c8e-28743176b748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28fa937d-1f1a-4f46-8984-fdab6eecac7a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa14b021-d30f-4b64-9465-c07c505e2d9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeb8789a-c477-49e1-b4f7-7f87107dfa12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8089e31-af8b-4891-8bbd-3900355b3a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52d561ef-72fd-4cfe-b818-4e14567c612a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bffab1e-fede-4f87-bd6f-b61b9e4cd096",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d34ba85-da1b-4e1d-bfe4-f6c54ef980f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "018fd129-2075-429a-8dc9-808346e06cf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30581a27-eee7-4cf2-9797-0bd9762ff7da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef3db41-9f31-4670-83ed-64bcb1fe5620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591dcf6e-3690-45c5-852c-dd6538655e08",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c63a9c-5aee-49f9-b02b-a5426ec53d37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4cd7e8c-e23a-45cd-a123-67e0aefb78b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "416e4611-85f9-4494-af12-a0b82497f1b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b8eb8e2-c2c2-4ea6-b1a8-9fa72a917f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91fb8cd3-b2ef-415b-81a7-eb1d57986954",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b91a97b-c37a-454f-aed0-12b0941ce679",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e780379e-6085-4857-a7c2-d447982f4258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc46f4ee-06f3-47fe-a9fa-1f1dc0013be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec0d358-e8cc-4f5c-a151-d97ee3496a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92adf08d-bc4d-4fec-b4ef-362803e81461",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c26068-c488-4d9a-b8d4-0b98f913760b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc4bd35e-814e-49a9-877e-4e920707adb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2709a1e-8422-4c88-aad8-44a5a5cd6331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d742e6c7-08af-4bed-b8a6-4272c28218bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e37e36-05a2-4d70-ac8a-1391548ffb5e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74cf3932-57eb-448d-a899-195a707dd980",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c07de174-33b2-446f-9802-ab566b02113c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0f69e0-81a7-439c-bddf-a96c61d7a4da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa5739a3-ee26-474f-b3a9-98f1fe0bbdf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897fae57-d0dd-4bf5-8631-67a4dcb0a827",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13df482a-ce9b-4e87-afde-9e510da35032",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54e30449-f440-44f8-b909-ae47bfa289d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45303ff2-48af-41c6-bdb9-62a99191d1d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fecca50-726f-498d-a77a-6c69eb05442d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b054b695-d0e9-49c8-9247-c8667ce82d52",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3059f707-f572-4f70-af5d-f668b4995dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9438ad8b-3964-4089-b943-bc5c64fab3dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cdf4243-6ee5-447f-8f37-483672b1d3a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec227915-f5a7-4f9a-a763-1f1f764cfb6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdcc1583-ae52-4e81-a237-cde33f47c704",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f251bd-d78c-4459-9ea3-094c210f0c0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45b6a161-06c5-4003-a9b7-1ce4baac0064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7339b8c4-cd4d-46a1-8ada-8e0ac3ce1f04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95c83e93-9d50-412d-885b-77e32e2b4555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb899844-d452-4bdb-9960-b3bcc8a4118b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56fcb056-764d-492b-94da-286b4d46f13f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75abf12b-5bc6-4b1b-a29e-e867b6d30882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1034022d-4545-4ef8-b21e-13942e71a031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79a8beda-693e-4451-8048-4e84c89a5476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c15a11-9de8-4825-80b4-e148f04bd0c1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5b63c1-6a54-4d0d-9ca4-296ff1a9a163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc9d4e1-732c-4205-a766-efb4977918e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "368b421e-67f1-4fe4-b186-8c8ccf764435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f8cb5f-2be1-4374-82b3-4376ed7b6562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39d3cb5-3a82-4649-96cf-a31445da6317",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e55eec-7dd2-4013-9bc4-6e369092ae80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bd21171-70ee-4a7e-af5f-58dc5dcb753e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7758a6ea-af76-4907-a2a8-a6f76e0e8e18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0d0f065-93f2-4d5e-88f6-21488b6c3dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d7de5e-1f24-4255-9f81-782e3482ad57",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8b80f1-5e91-43a3-83a7-72ea8d838d6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "050da75d-6516-4a92-a6e7-f5a1b8bd890f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec0a66d-091c-4788-b1b7-6453f0985735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3880efe-8a5d-4f86-8fcc-90d8e53b2a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42f20b8-f7b3-4919-bb79-5defbf12c656",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8d1284-8992-48a1-8976-8681bd376894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97aec613-9428-4b58-bf4a-af82ac602451"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e534a7a4-cbd5-4df0-98c4-c19c2daf553b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2160ed87-e3de-4044-9d57-32d1dfc2ec02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6296204d-c28f-46a7-92cd-969de003e580",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20704f6-bd72-424f-b730-c6c3faf7aacc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a6fdd0-c6ef-4830-b442-8b5ed05ec53e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1cf4d4c-6b9e-4e95-b0de-5cd005d154d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ada98f35-d0f5-495a-86a2-e537f1ea8d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd84bc7-a584-4a65-964a-7118372bd00e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d49bf3-9c45-4c41-8160-eb65dca4c1d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f260bef8-4298-4d56-9a80-7817d98c4de7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d8869d1-c977-480b-96ff-afbcbdf7690f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "142e15e0-2de8-47dd-873f-545d67cf7469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5b4360-7f26-4a0f-b8af-6a6c62de5b3e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a432b103-4548-4f6e-8cba-111b00fb8556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac47eb7-a403-4dd4-92d6-4e0281a1c085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8485feec-3ae0-4b80-9b5f-286586b7a0bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3c82209-2617-40cf-a937-4caad7eec37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298da64a-58c6-4b0c-aa46-ad1774aac2fc",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f86245b-01e6-4ac6-8952-5846baa2c809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ba15750-75a4-4e53-977b-0ce66e3155eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "564e535d-83ca-4c67-9c93-3f42957d4606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66681b83-39ad-4573-9291-7361dc451e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce78b0a-ba65-4691-80e8-22fc47a977fc",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620f1eb2-f7f4-4797-a182-64e6a4c76685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96e139cf-8adb-44ff-8fc9-048b6c333c88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d365cb-8691-43ee-91d1-3c8b98b26d12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90b21d07-2dc9-4ffc-85db-34054e26cdae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e4dc11-5b70-4453-bfdc-e1cc807ba596",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761059ef-15c7-4b47-a594-ca603c8b02cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dac8712-66bc-4439-968d-ddfcd33219fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e996ba-cbbd-4061-a816-52994fc77f12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0026b212-7cfb-40f3-a94e-cc53ad933663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a334e725-97b7-4292-8596-58e13418704e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1aaff1-9364-4d72-bee7-5734c4190fe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66c3b676-34ef-4875-b8ce-8e6ee23f628d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c797620-a463-449a-b023-57d6443ba4ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f2c4b47-bd2a-44b7-8deb-f290035143e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d7c235-18cb-40f7-8518-4333189f05cb",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66554e9d-5036-4519-a9f7-f271b7275b28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3592368b-05a6-4924-9ab4-31533de8f42b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38cc07a3-09fe-4400-8c19-bbcfc2e78cb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d3d25b3-94af-4a68-83e5-48ac720c17d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1189ee-63da-42f4-abbf-ab3d52d1db9d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a86c687-3e49-49ff-8b9d-1d53ca1a8645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d81b9da-7e52-4ad3-b445-81bb6655749e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed78e668-90cd-4c34-8b60-51de988575d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fbfebeb-adcb-4de7-a20e-3c4830f87ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f53850-bd4a-42cf-aa32-4358f71d72f5",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "702c16dd-9685-4248-9e44-d14d172227a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6faa650-1fbd-4f45-b3f1-f5173806a976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ae81d9-9daf-475e-939d-aaa9622d4ec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "565d9a7f-a668-4739-8899-7178836e934a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "335a7996-149e-4c9b-8cdd-577dc9fc1abb",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7025f11-e99e-4d75-a405-b54763487c25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5a3e454-db2a-4150-8f93-c030090988c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85fb8153-6a87-4ee4-8725-b7cab95bbbc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f6e8e11-79f7-4552-ad0c-a8a3effebe93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8054d0b5-5360-464b-987a-208305697f8a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786bba9e-2287-4dc0-8683-245a02e66777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fa49780-fab0-4f23-ac80-498a2fbae644"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e3ae8a-127a-486c-b048-069ce3bf7d0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e7756df-10c4-44b4-af45-2ae316f7dc9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ed562d-d9f6-47d6-b283-67dea8641527",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447c0db0-ba46-4281-beac-a54d36be3f1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae81566b-463d-4c71-bea3-b1bc7f9bd022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21bf05f7-ab9b-46d8-8442-8f50e1dbb4de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8752cdd2-498e-4e7d-a047-bb7f9a53ef24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb9030f-5ef6-4107-bd00-577fc9ccc9ba",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc24fb3-cf65-4f6b-8c7c-23e78eb6045a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d59d22f6-bd64-493e-963a-109dc7244e87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7e04b0-700b-4178-a739-6aac7e127707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "738697c3-716f-4868-9051-cd92bf04bcf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb93c3ff-52e1-43bb-b3f1-22b8d4b57afe",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec46d6c-b44f-40a6-9938-495ac7b79df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b9101e3-72dd-487a-b4bb-c5363d29ea89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "397d697c-add8-4cc0-8072-4938bf0048ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce201090-e54c-438b-b17e-8310b495e559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3841429f-05bd-4b8f-b4e6-bb0bf11c635b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18bcdee-87bb-4476-b68d-773a6e94130d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc66f4f9-3d08-4bca-a072-a8ae8de5fb75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d9ab56-3c6a-40b1-aa8c-0c94a4f149d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ce78adc-f070-4c27-bde6-6edd4d619d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b8c38a-0982-4e6f-b8fc-72dc95607c5c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3fac4f-2aeb-4241-b4c0-795e3338058e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d3d4079-7c4b-4768-aa83-ff5b1941e67e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a92afc-be4c-4d55-befa-be9cf819697e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d8a0f89-91c7-42a1-8745-849cb800bc00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85449269-8ac1-4df0-8847-d09eed6c18ff",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c80ef4-bb27-462e-a016-223897b03a6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "225a629b-187b-4cd2-8fd1-3600aac80345"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc6d808-daf3-4aa2-a2fd-57e0efcce8fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f744a28-4609-4072-9605-a6d074586772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c104e2d2-dfcc-44d6-86fc-1ae490b7082e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef47d610-57de-4bae-96c9-888822141757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c686d3-2894-4b50-854a-88a3e47c2fa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62f6ebb-461d-4de4-be8b-b7449743b89c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "563f1421-89d0-4eb0-883d-6035dd413471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3989afd5-328d-45a7-9c00-7cf8f10ed6a4",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86190db2-d428-499c-87a8-5ebbc6c74053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "031fe23d-5f64-45c4-b1cf-f4d4fe374e35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a33499cd-ddac-4d0a-a294-df519e42d2cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04bd192c-e283-478b-9e70-1584b65c6bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85264474-562b-49ed-adc3-750af63faa9d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d38c346e-6eba-4264-a411-e8f204c14613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbd37ae5-f6dd-494d-96b5-fdb2d923b3f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "952a20f4-2ddc-408d-83f6-fa106c43d462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "038710d6-e0e0-49c4-ae8f-242f3fec4082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c990f14b-ad15-495c-b327-209d64c8a0b4",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a28f3a2-f538-49b1-9616-e0765d9b5a34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bf9c1af-1702-49b4-bba5-498f7e6a2abe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5562ae-079b-4de5-bc03-bb9e1b58e3c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea9454f1-39ca-4d8f-8002-23abd12cb166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e2f72a-26d4-4617-b060-72ec32d129d7",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9141162-dcb5-4b85-a468-412ca2001932",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29b7a3be-c5b9-4dcd-a352-47821c9982eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00f241c-c17e-4c6a-afd6-d234b34051b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c2ce7d8-db6f-4483-80ff-d4cbabf188f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353fad62-585a-444a-872e-4ddaa3737892",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e976724-04a5-4bac-b074-ba3f98d7ee32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d9bfa37-4fc9-4a54-9083-adc761d154e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d76926c-eebf-45b1-914d-84c8025f3ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "640786ed-d991-4fa1-8365-ee88c3c18284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b6a4ab-9756-4350-aef4-b741320f4cfa",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0e57cf-b154-455f-ac13-2490df8ece96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03b18526-2fd9-40d2-b8dc-c542ed175ea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47199636-6403-4f05-a5f7-2ce9a2011cfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05810427-ec53-4487-8008-5ce11b23e82f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070d9ea4-5209-423c-9278-c70b2d116824",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ea32a7-5534-4c30-8f4f-2e160b872145",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b8fed38-be5f-4bc6-9ac7-ea404473d598"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ed8e72-32bb-4249-a530-713e8eaf5502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab6eded0-3ed0-4729-abbc-fd31a578f710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be0604b-e455-4ff1-97c3-d672c73984c7",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c22dab8d-6a77-4c6b-bd7a-d63fd53c9bf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f607515c-e8fb-4311-b9ed-f42900aea6b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e563e310-c51e-4efd-8e5c-287155234178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93af87f8-6540-47d4-b65f-806f22b11cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854354a8-56a6-4c98-8c01-b7f1cbf78e07",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dafe3f5b-5531-401c-8faf-3d24ed98b7bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15c47a47-e025-4902-be1e-002d0bef6101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f903f6f4-6ea2-4111-b680-b3d8db53a2d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d14de275-b2e3-458b-a6e9-635ef8cd0715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac1579b-a61e-4d0b-859c-d45e8ac44164",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61e724d-c0bc-47d0-b69b-de0d33d453a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6e2be4e-6675-4470-91d3-784cc4b669e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8758abb-4a41-4e67-8ede-02ec5ef8d51c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9c7255a-8561-4e57-a956-e94bd04ec55d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b345be80-9a32-488f-82f0-8202012319d7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fea7866-d54f-4221-a32d-09fdeb496e5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc673882-bf19-49e0-9956-88c2f6932052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38727027-e9fd-44f8-aa83-4094ded83aa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df8c3267-1262-4455-82c6-40032c6f47a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79fd8be0-dc02-4add-9d5c-cbf1a4e6373a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d25638-13ea-43cd-b8bd-bb35839b4f37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39407b0b-9eab-4920-8878-8b617ad84a48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3dfe22-fe90-4f15-92c2-4efd508aeb54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcff9ad8-0be1-45f6-bee5-c31f13d660ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321f92ac-8180-42f7-b5d3-cae68cdff63b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a64b2317-cd43-4623-8966-a50196ece989",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2db26ca-2016-452a-a1fb-858d20ae2b38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8399e6ee-c0de-4b52-8223-052ffa31242a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba6b34fd-9ed9-4884-a0f7-abe44a40a0b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6d69e7-8eed-4ca5-8317-7c2842e5189c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53add808-9718-4bd0-a9db-47037818aeb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21b7fc0f-badb-4b60-9ddd-655945eb6346"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf51db5-6933-477a-822f-071d2fa9ca94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec8dda2f-744b-4483-85fe-f8b3394e6b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad433edc-5c69-46ad-8df6-d754b4d650ef",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9777f9a8-6735-45e6-8b7e-75b7df41b93c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87e3a289-ace6-46dd-ba65-917e9ba955f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "006e0c74-a268-4cdc-9b7d-4649baab7a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20d79c44-0539-414b-9db3-12018f1618c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87663dbd-2b2d-4205-a832-26632ac6d24d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e42295-a3d0-47db-85a2-52bd9fecaeb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "653e9cd7-9e3e-46e5-95a5-50490f5d3161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56d9232-e526-4b85-81bc-2d660301001d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97b13c0b-1f44-4125-af22-cfef236e7288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3ff497-0a3f-47c7-8eac-fe5f56cbe582",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236c1b76-cb44-45b6-8760-a54d1944ecb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "800f1866-7c9d-410e-bac7-9cee4c28e6a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1442df8a-ea97-4108-9443-b3a02eb9cf51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b5ded7f-33bd-430e-82cd-f89bea284d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba8b598-320b-47d1-a413-8867653ec51f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f7e781-a462-4dfd-b10b-96d9d539d46d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cf617ca-62f5-4a8b-87d4-dfbf553a2067"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1ed23c-6c5c-4360-846e-1c2ab934d740",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e88990a-0a1c-4f05-b9a8-08787d13b03a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67995d5d-f55c-4322-bae2-fc1340de13e2",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6395b4e8-b413-41f5-8c6d-6b01efcdb6db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf04f587-06e8-4e23-b22c-7201ff62d8e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a77133b-728f-406a-b692-fc781c1813ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d257ce8-a72e-4638-94b0-6068440bef17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a18d5c-183d-4b47-abea-9fe19659ebce",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6d256f-db4e-4a61-b375-5c2405eb9368",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7364807a-bf6b-4490-b746-426e23e852b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "687bf60f-fa9a-423b-a2aa-234a7d73c353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46de64be-9d91-4b83-85d6-9846ac1e6444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8831e33e-4385-4d36-9ff8-fd7d98b32497",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da7efb3-d4bc-4a8a-b5cb-e99a09cf3a68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f10c6ee9-331d-4208-852f-4d5ae5cf43c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "581c3023-cc0d-4599-bf76-288d29087d49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4916cf8a-ad15-4b57-a1b8-9609fab527a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a1ccbd5-ee82-4c20-bf93-ae7996720334",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d8518d-381d-4d1b-a572-c90da7085306",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7046fbc0-39a7-4c27-8e27-425997af8f3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b0c39e-2ac3-480e-879f-27a1d03c2f6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d11ac5e-f604-419d-a680-77310a55b541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41791033-3cad-4340-a95f-6554e25eb1a5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9108e26f-c992-4bfe-bb72-99bc43a55dde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2b7614f-4183-4f45-a9a2-fcd20c583251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33384888-c275-4b8a-b218-362af70fb560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "614f3d14-61f9-487d-bbde-d1a6cbd50416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67288e9-91c3-4132-a781-0b0f9bb5a84b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d1e6897-666c-4a0d-8def-f25457cdebb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db795a73-2e20-436b-bb98-8b6a369d3b3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb2d7ec-a1f5-442e-88ea-40c16fcb622f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f0308d5-d6bf-46ef-9015-21b20e88acd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ecd7e42-dcf2-4a58-a006-a493e20a25eb",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742c91e6-cc3e-4268-8ef3-555ad2e7ead2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e0839db-f6b1-47cd-ac0d-0acff0560976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6742dff5-1c99-4032-b7b6-7470ae184159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6425d6de-0153-4f65-8b96-a452e8901e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8aaa0fc-1e0a-4c27-b6ec-9447881c4372",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59aca5de-dedd-4725-9ce0-f18273412d08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc392775-3593-47cc-a4a7-4171aaaf8ff6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8fa13a-5f5d-4649-b84f-06af5c21f50d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5ec7490-6fb7-4586-900d-98c28ff3da6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1691f4f-9e34-40c7-bdea-a4e56b4b565b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6326c5c7-fd67-450f-b026-218eab1d2f72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bacc113b-bf1b-4b9b-92ef-8e59a9872fcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "772affdf-69a6-4067-9176-75a259be04eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c192ff00-51ce-46c9-a422-a38c683695e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d493228e-43bd-4ef6-8d06-f3511ac21ead",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32b82e3-c7e4-48ab-b6a8-0569d1bdbefb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41297130-a305-4c73-b0ef-b3596e549c0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7770c43-78ea-4058-ae6d-4bc50d253500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83cd147e-3d4e-401f-9aa9-0116ebbf6396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d4ecd6-7e31-414e-9f19-86487f866461",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e39e46c-7ab8-4761-8ca1-a33c761ad924",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6006d86e-2e9a-4484-98ff-3e1c93110863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "129aa788-9e0e-464d-9867-ee806322199d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0838b573-f819-4c25-a8d9-1a03b0ff572e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56bd1e26-2a73-4896-bd0c-8df6dd17f508",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b700529-b41e-4a65-aa21-65244e2f90eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad2378fd-09a1-4d7e-b879-98f15a87312a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68c4969-fad4-4a98-a9a3-82caf31b3d8d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c371c1d5-6f8a-4207-9b98-30a032648ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af0abdcc-63e1-4387-a8e2-c9da6736e5ef",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5215b58e-8176-42c7-8aa2-39c9c571b157",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7286adcf-97b2-4adc-83b4-71d121e2da4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c76db9-71fc-446c-80e3-ec194e9ac67c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79a16b3a-61ca-4348-8e43-ca0a8ad9e6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a5d578-cbc0-44ac-89b4-81d6511e7c1f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f6ceff-34a9-4380-9600-5845f212be4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13967c25-a572-49ea-9f51-9b367fc6a122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90399147-db51-40f5-bc81-4362ac723ddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77cee7f4-ca85-457a-8ad8-20c9b46f81d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b30023e-bac0-41bd-ad3b-17b5ea097826",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d43d0d-314b-43f3-994a-16986345236f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "571da5cb-9d2b-433b-ba5a-b53951b36ead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67efcb83-a084-4d94-bdfa-b76856d812ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26a9d8da-be72-479f-befc-1412cc98294e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "279b9d42-78a7-4493-859a-91c84a6d99e4",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49858484-1167-410a-a123-e38fc8214c39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0eff762-36bf-449f-9c8b-f9e5bad63893"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eaa957c-cd3c-494a-94f4-8fd8a6a937f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a1e8527-f7b9-4ea5-ae0b-06f8c63e9173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713eec3f-e16d-4321-b7ac-03e766acc9d1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f67789-e0b4-41ca-bb72-eab58853467b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00916e47-2723-4c7d-a66f-4c4a69ac68d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5222ba2d-1fc2-4243-8c2c-28f55fee921c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e4063b-5b2f-4fae-b851-d95c7ea9622a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b53288a-e0ca-423a-b8c2-0a5dce39da37",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d3e8adc-eb2b-4373-b778-24265f3a6282",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bce7bffa-7fb9-472c-884d-dd8971cbe9d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29dfee2b-a880-4cb6-bb20-c9521f052d43",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad5b2ae5-2dd9-4f99-8456-d49447585559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4983fd47-f01d-4d6f-93f6-bc82a1a1dc48",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e6a507c-3c65-40f2-8923-40a8bd77ee7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13ad6067-e27f-4bdc-9d3f-20bbd2987639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d46ac9-c2d9-49b5-a6e0-c710211babc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee3c50a2-70c6-4b45-97dc-40c9119cfa56"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80a80900-c07a-4289-a525-747a03af9764",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee0d6506-9ebd-40bb-9a1c-7ede0e3141c3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9537c0b1-3944-4845-a0ee-0e091f963c83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c5d0a236-7112-4c29-b8b7-8aad246fe034"
                    }
                  }
                ]
              },
              {
                "id": "b667b66f-5110-4bf7-911f-ff9aa3283b7a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "222803bf-0a99-4201-9543-b5451674a9cf",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7fbe15-85f2-4536-8671-8a639c0670e3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a283ec48-1a11-47d5-bf1a-a1731ea9342e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "429e6264-7989-4081-9fd1-519400f17e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0dfe84c-7558-4755-a870-c8d8ef20ef7a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69af9b85-deff-4970-a5cd-7d3caef1cf58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b493b73e-1e32-468e-8129-7a5c08392afd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0eb2ea98-8ef1-407b-a7e8-3cdc3198680b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8cfa46d-8b0b-49c6-8e07-b70399694c36"
                    }
                  }
                ]
              },
              {
                "id": "2a23cec2-24ef-49ce-8cb2-a47077da319d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b416fabd-86ba-4248-ad79-97ce59f5d79a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8914d43-cb7b-4aa7-9295-87b8ff6cd4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7bae428e-97ba-4a5a-b734-34bd00f6e9d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840ed14e-f0ce-40f8-aebd-190d0ce12638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c848ec9-c0cb-4c67-a9ad-222235685b98"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b9c9c9d6-c800-415c-902f-e973f5021ef7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c905c3d4-1f66-40e7-919d-0e60973b3dbf",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7bcdccc0-6641-4d0d-a0df-baae7bef31cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c7b2704e-87c5-447d-abef-4f690553ab21"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31b8fab7-f209-4e66-a61d-4adcdc868d95",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "618233e8-c704-457b-8858-a42e09fdaa4f"
                    }
                  }
                ]
              },
              {
                "id": "78d76bd1-65d0-4ddd-97d8-bcb99ecd2095",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93683793-04b5-4801-b166-af52ff0bd7e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b94e50b3-ae9b-446e-83d4-b3589dff786a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35bded64-6737-45b1-bd6b-81c4cc5650d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc4b4039-070b-4e8a-b4c2-99b63e86c154"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca01dc81-6ab3-4dd1-86f7-4a0e6ef71dd4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b1f57287-867a-43d2-93f3-b4361eadac8f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e921aac-9ea1-4de5-9a37-206093fd8fd2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de21857d-b276-45ab-8d75-20afd049e3a7"
            }
          }
        ]
      },
      {
        "id": "33017ae9-05de-49f1-a644-2c80c3d034e0",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "696db0dc-192f-4522-bf96-143d9a4d74d6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "76f47552-5ca9-4d1a-951e-29851beda5fd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4d017923-1a1b-4a52-a857-db937c5b66cb",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701d9016-19b5-4697-8d7c-f4ae5dc971b6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bb94430c-0c97-40d9-b948-72e1f1366a2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05553ae7-a90e-4325-8a1f-6add77ad9da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d29b1ef-c8dc-4136-8542-31ea85bbaf0c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d71174f5-4621-4e48-857f-070660415d8c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91d5bce7-5265-40af-9079-75900a1f9661"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c310561-78a4-4b68-9753-cc3afac7fab6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b57e49fa-1a52-4050-a65f-f651e6f92834"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9697da9f-1d8f-436c-9753-0f09df6f4af2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a4b8be79-9627-4e80-9a80-1d17adae5ffe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "523c6bab-95d1-43e9-bc26-3c5dfac9b2c1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de6dd22c-5ee0-46c5-9935-ba27f0bafb6a"
            }
          }
        ]
      },
      {
        "id": "9abea985-3e85-4f5f-961e-0bc35d3dbf34",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "706bd3b9-3e30-479a-aeee-2cf9160a3941",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d62053cb-8542-44e0-b34c-f7117e5375fe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f18822f6-6c11-4023-872e-fd7780e809aa",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86eb9cf-dd0e-4fc2-a73c-c106d226b4cc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d36ddd03-8708-410d-b39a-d40954820248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82c6505-3217-4778-a86f-7fff0ff93362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7e9c57e5-638a-44ed-a539-a7413a18a8ec"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b1916e4-fb39-4ca5-b3ea-fc2ba35f88b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79bf5356-1bde-4147-b31c-33e74fc88f3a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "49015ca2-ec20-42a1-9cb8-29ecb8288399",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6af57520-e831-4989-b085-af85d7c22c3a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f98d9e4-cd61-4685-abb2-573dccb29ced",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "84cf06e2-eb2a-4f0f-91f0-bfa3a55696dd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8c7282b2-8312-46d1-ab23-8110105ada39",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f6ef20d-13b1-47b0-ada9-ae2381639ce3"
            }
          }
        ]
      },
      {
        "id": "db276c84-9392-4416-a74d-623d0e469002",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ac55bafa-e440-404e-b113-ea096ac322f7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "53272ccd-177a-435a-9b64-6dc3f8da5a07",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f8301576-d456-41f6-b30f-776904b92ab6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98b5c62-e3dd-464e-8c8f-cde362255cac",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a776b80-2fc9-4ca4-a4e8-ed7c38c5a812"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf57c05-8cb0-401f-b183-87c849bb1dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5936a3f4-a118-42e0-a0eb-f74582890e6b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "480a61b4-2212-466a-8db0-a0fbf8b79204",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57cbf8ad-b0d9-442d-9020-cdc478272fb4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7fac67c2-5a40-4a21-9db4-516ae407b1db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a078009-d0c9-40ec-adca-119843af96eb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a7131eb1-da14-4696-bc2e-9221410c8fc5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5a5d4fa3-75e6-4284-8960-22a5cb4440fc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "042eeabb-0973-4d2b-aca3-554f9ed25978",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d38269ff-9d4a-4e7c-b018-510fdcd7f830"
            }
          }
        ]
      },
      {
        "id": "4460b7a6-925b-4737-b7c1-a49bb4c55d8d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3efa7a56-eecf-4a5f-82ea-38672bfb87e9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "05eafc8f-4b4a-4d45-9776-1aa999e87bea",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4d8e3078-2b20-4011-8d63-91eb3c448159",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9e37d749-ce6b-41c0-b9b1-22beb55d96cf",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "75b36ade-81da-4d69-bd70-ed9c9c9b44b9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 141.2070175438597,
      "responseMin": 20,
      "responseMax": 8234,
      "responseSd": 621.091226415011,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1710808451713,
      "completed": 1710808501025
    },
    "executions": [
      {
        "id": "2919881d-5bb9-47e3-b0fe-064c4251bb74",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "cd557c79-ddf6-4165-acf6-574395da3b74",
          "httpRequestId": "19659783-5d46-4e3f-a418-cfc3765b686b"
        },
        "item": {
          "id": "2919881d-5bb9-47e3-b0fe-064c4251bb74",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "dd2fec29-42b3-4157-9b2e-990c19344f37",
          "status": "OK",
          "code": 200,
          "responseTime": 88,
          "responseSize": 0
        }
      },
      {
        "id": "050ca1a1-a00a-460a-94a3-69fb33b6e699",
        "cursor": {
          "ref": "1c8198e0-3f19-486e-9476-6e660c6a98a3",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a3d70ac5-be3a-4f5a-af2f-7fd95fb9bbd6"
        },
        "item": {
          "id": "050ca1a1-a00a-460a-94a3-69fb33b6e699",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "364d11d5-6bac-4fcf-a6bc-6814ed7b2ab1",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "122ef557-72de-4bd1-b89b-bcd6818ebdfa",
        "cursor": {
          "ref": "f16349b3-6f15-49f9-af46-98ad02daab2b",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7840a405-68ed-40f9-9601-e09969debcdd"
        },
        "item": {
          "id": "122ef557-72de-4bd1-b89b-bcd6818ebdfa",
          "name": "did_json"
        },
        "response": {
          "id": "e8c76e50-2ce6-44c0-bb22-2329f5891004",
          "status": "OK",
          "code": 200,
          "responseTime": 483,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6ace53-508e-4f06-92b4-f0b1bf2f761b",
        "cursor": {
          "ref": "a0f36068-49eb-446c-bf8e-e25fa1a38675",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fd33efaa-2bdc-47f0-96ec-b9c3266a7604"
        },
        "item": {
          "id": "eb6ace53-508e-4f06-92b4-f0b1bf2f761b",
          "name": "did:invalid"
        },
        "response": {
          "id": "2ae2b95f-0b08-446d-b293-014e59990216",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2178,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6ace53-508e-4f06-92b4-f0b1bf2f761b",
        "cursor": {
          "ref": "a0f36068-49eb-446c-bf8e-e25fa1a38675",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fd33efaa-2bdc-47f0-96ec-b9c3266a7604"
        },
        "item": {
          "id": "eb6ace53-508e-4f06-92b4-f0b1bf2f761b",
          "name": "did:invalid"
        },
        "response": {
          "id": "2ae2b95f-0b08-446d-b293-014e59990216",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2178,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e240336-410a-484d-affd-da83fc0c0f14",
        "cursor": {
          "ref": "697a108d-fb23-4932-8af0-699dd45f7cb0",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f8998fbb-4458-4e5d-a896-840b9cc9d6df"
        },
        "item": {
          "id": "5e240336-410a-484d-affd-da83fc0c0f14",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fea09f64-d705-46d9-8b90-80331d5d6c9a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73db98a1-d828-4983-b10c-ec640c5132a6",
        "cursor": {
          "ref": "c8b8b1ec-8d90-40d8-bf71-4ebb5337db0f",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "20e685c2-c4db-456f-b3a8-c9d8846d3b2a"
        },
        "item": {
          "id": "73db98a1-d828-4983-b10c-ec640c5132a6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e6090c38-5782-41d8-a99b-6190a6b6b1f6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 83,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1f55bf-80a5-48ed-a5bb-e65469decb0c",
        "cursor": {
          "ref": "3608bd3d-1042-45ca-94b9-a305d022854f",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8a3fc2fe-79e3-432c-aaf6-e75ceb919f87"
        },
        "item": {
          "id": "0c1f55bf-80a5-48ed-a5bb-e65469decb0c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7a3e2654-279e-46c1-92fd-5f99ca9962b2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489e145a-7aca-44bb-bcdc-2a5728e2546b",
        "cursor": {
          "ref": "f3cc8a87-69c7-48f6-9dde-09acba07c55a",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bfdd8803-33bf-4193-bfc9-0834cc256609"
        },
        "item": {
          "id": "489e145a-7aca-44bb-bcdc-2a5728e2546b",
          "name": "identifiers"
        },
        "response": {
          "id": "120b1221-03ce-491d-b5e4-4ebba90d6ba2",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd0e377-a57d-4b55-bc68-1dfd1fd8124b",
        "cursor": {
          "ref": "b5dad9c8-4106-4fab-ab64-ddf51e9d4115",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ebfe1382-d428-4755-9de8-fcb36799b63a"
        },
        "item": {
          "id": "0cd0e377-a57d-4b55-bc68-1dfd1fd8124b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ab16538b-f8b7-4f07-9015-021b2e62f2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7483c917-ba04-40e9-94b7-d5a1ba77f27e",
        "cursor": {
          "ref": "252edeeb-8215-4a1c-bc03-789e93cf1c7f",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f3f37980-299f-49bc-b1f6-c7df771fd2f1"
        },
        "item": {
          "id": "7483c917-ba04-40e9-94b7-d5a1ba77f27e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "47661547-91a8-43bb-afe5-c38cbf9c8e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ac6139-2b0b-4210-8446-6a64a03280fa",
        "cursor": {
          "ref": "faac7f8a-1d04-4be5-bed0-4c3900d5fea7",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "5990103a-57fb-451e-bb23-0cf2fb7deddb"
        },
        "item": {
          "id": "21ac6139-2b0b-4210-8446-6a64a03280fa",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f625fd2b-cc2b-4fd4-83c6-88e32f27dc2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11667c76-bd4d-4157-b3d0-35cf7a265891",
        "cursor": {
          "ref": "a386a706-3263-4ad8-802c-b32f60c76ce1",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "41bd8b8d-660c-4e76-b096-42a98e713194"
        },
        "item": {
          "id": "11667c76-bd4d-4157-b3d0-35cf7a265891",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "eb28d2f1-e4ed-4230-9ba4-52d6e06927c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c34e745-2217-4bc0-a3ce-191faffff548",
        "cursor": {
          "ref": "ac19d2e6-abac-4251-a8e6-9cac4dc9ec6a",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4ac9ef43-2754-4270-99cf-04dfc9c2a91a"
        },
        "item": {
          "id": "9c34e745-2217-4bc0-a3ce-191faffff548",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8622e8f1-6f6f-411f-8390-663aeeb11e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1610b47-67ae-48a3-b5b4-8ce4341e360a",
        "cursor": {
          "ref": "84ff6a08-765f-483a-a4dd-a6fab24d293f",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b3943eb3-e43c-4a6e-bcf7-e2813a70b324"
        },
        "item": {
          "id": "f1610b47-67ae-48a3-b5b4-8ce4341e360a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "840d6bdb-db3c-43ce-b898-93d3ea017a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f38b68-d12e-4aab-9036-a4af95f9b986",
        "cursor": {
          "ref": "30dcfe8a-443a-456f-b347-7a6165de8046",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "70d9389e-879c-4b90-8f05-c82386f3ec8e"
        },
        "item": {
          "id": "e8f38b68-d12e-4aab-9036-a4af95f9b986",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6d793a49-3b95-4e7f-a24c-9c489de7647a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b14bba-070e-44b3-be5e-ab1602d84984",
        "cursor": {
          "ref": "d470d739-ef44-4ec5-9542-80c89b9cb73f",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e0b2e315-9eb9-4ed9-ab96-12a76694361d"
        },
        "item": {
          "id": "79b14bba-070e-44b3-be5e-ab1602d84984",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "656dfbe7-17f7-4bc6-87bd-bdaf503624b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c070a819-a356-486e-b929-e957692febb4",
        "cursor": {
          "ref": "58ae4487-86ae-4d0f-b530-9c1b28f4b410",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "64dcd7f3-253b-4bf1-a0bc-bc7242adc439"
        },
        "item": {
          "id": "c070a819-a356-486e-b929-e957692febb4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ceeef5ef-35d3-4ac8-a1df-03346177cfaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd7a426-2d04-4809-9750-c53827fb19a6",
        "cursor": {
          "ref": "99666296-9ffb-4fbf-ba0d-0bd25fabb465",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "630c05d9-ba3d-48d4-b88c-6f22e5fbebeb"
        },
        "item": {
          "id": "3fd7a426-2d04-4809-9750-c53827fb19a6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "96119355-86d8-40ea-a026-a11987db3474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a7335e-a9c6-4733-8974-89642f7dd093",
        "cursor": {
          "ref": "b416cbd9-2160-4b8e-b597-707c9d3407f6",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a77cb33e-54d9-4a5f-9e93-91dbe0b7e50d"
        },
        "item": {
          "id": "f0a7335e-a9c6-4733-8974-89642f7dd093",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "88c1b244-bb6d-4224-9542-54406d4399bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf7ec90-955e-435e-b8cb-8600bd457d35",
        "cursor": {
          "ref": "291a2a70-d4e2-47c6-94c3-6ba5e70d90fc",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f137cb53-52d0-4ed5-aaa7-07d6e264eecc"
        },
        "item": {
          "id": "8bf7ec90-955e-435e-b8cb-8600bd457d35",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5195eb74-77c2-4c9d-8ada-7f89ddbf1ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc78e8b8-1a29-448d-93dc-6cc4671a1858",
        "cursor": {
          "ref": "b80830b4-d0b3-4f2f-857a-cbb14647b0a9",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "aac4c34e-25f0-4bb6-9df2-565c406ad048"
        },
        "item": {
          "id": "dc78e8b8-1a29-448d-93dc-6cc4671a1858",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "25cb5472-5b57-466e-b6f1-cc85c45c3c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d079c48-175c-4f65-83e4-45a2fd8cdf60",
        "cursor": {
          "ref": "4d3d83e3-79f4-4a31-8eec-498f20844ceb",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9161c92e-31e6-4fcc-b24b-943b8af4b086"
        },
        "item": {
          "id": "9d079c48-175c-4f65-83e4-45a2fd8cdf60",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "aa4da4c5-8460-4485-9382-eda620768448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b52085-b36a-47df-b423-72c350490b36",
        "cursor": {
          "ref": "5c0ebb7c-6d96-4fb2-ba64-43f0f8e90c47",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "42aff634-6cd1-4cef-9726-6c0a28387b57"
        },
        "item": {
          "id": "b4b52085-b36a-47df-b423-72c350490b36",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "cdecf2d3-af02-4f4e-9755-8c66cf7ccab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1faa55-e6d3-441d-b47d-4bbb0f5808a7",
        "cursor": {
          "ref": "6b9368ec-3e19-4844-9fa9-82a2db932033",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a9176a81-b864-4b63-a4db-fbaaa0313b2c"
        },
        "item": {
          "id": "2a1faa55-e6d3-441d-b47d-4bbb0f5808a7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9fc43c89-a5a9-429f-959d-906d16057592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78157068-94a8-4c78-ae41-b1b0184aa431",
        "cursor": {
          "ref": "b16c9d27-f3fe-444c-b3c0-bb9fa459dd1f",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ebc289cd-d676-40d4-aa69-455629502708"
        },
        "item": {
          "id": "78157068-94a8-4c78-ae41-b1b0184aa431",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "056957e4-231e-41be-aa0d-71b4b91ac19b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23070dac-8dfe-4e84-9ab1-e41229d2e1af",
        "cursor": {
          "ref": "59c6f8ef-ab70-4733-a17c-c6a7d4425a56",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d9c7e42f-fd85-489d-bb7b-21ab8ee3c664"
        },
        "item": {
          "id": "23070dac-8dfe-4e84-9ab1-e41229d2e1af",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "453e1527-23a0-4ae4-858a-4daa9737fe8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1fe9d5-157b-4304-bb68-1abbccad950b",
        "cursor": {
          "ref": "b1cff369-d416-4794-83c7-afb6f56f86ef",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "91131dec-459b-41d4-aec8-7140a809b5f2"
        },
        "item": {
          "id": "3c1fe9d5-157b-4304-bb68-1abbccad950b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6acb5321-ad91-46b3-a6c1-ce17499fd087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bcb9f17-ae6d-460b-acb1-301a43d5ef8e",
        "cursor": {
          "ref": "ca872973-87da-4aae-ac02-6ba072095976",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "72e7992d-07de-4986-b471-ba832fad696b"
        },
        "item": {
          "id": "8bcb9f17-ae6d-460b-acb1-301a43d5ef8e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b81d2f11-6083-424b-a753-5c0a31c744ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb635377-3f9e-4e96-a756-9ff3b99c9613",
        "cursor": {
          "ref": "01cfd205-8ec6-4cdf-a6d1-afa6b3de8e32",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "43271a1a-ce91-49cd-9af8-4463f910d1a3"
        },
        "item": {
          "id": "fb635377-3f9e-4e96-a756-9ff3b99c9613",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a99ca50f-5eb4-4150-904c-b9c8ce59d32f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3db0d4-6331-46a1-a381-8a9a5cb55ca5",
        "cursor": {
          "ref": "5f8a3a32-5d18-4b83-af3b-cc1cb0e29d69",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1942d2d6-524d-4414-a720-b1b7b81d726b"
        },
        "item": {
          "id": "8d3db0d4-6331-46a1-a381-8a9a5cb55ca5",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6d9fd4db-a2f9-49aa-aa3d-2f9d7e1ed732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f315eb70-1268-478e-9f7f-3e1283ebd883",
        "cursor": {
          "ref": "fa3fe7b2-de42-4d8a-b4fa-62acdd48459c",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "17fe5e54-75cf-47ad-b77f-297976b97d23"
        },
        "item": {
          "id": "f315eb70-1268-478e-9f7f-3e1283ebd883",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2fcc8830-5717-4bab-be04-900c536d88ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48146ae0-b49a-4f25-a230-44d7b98243dc",
        "cursor": {
          "ref": "0da53036-bf53-4d7e-8953-b753e14090c5",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e603b0d2-1c82-40dc-be0c-04c8ebfdb479"
        },
        "item": {
          "id": "48146ae0-b49a-4f25-a230-44d7b98243dc",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "842ef89a-0ad6-4259-9fa9-ce83cc71d973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc1abe4-a88a-43c8-914d-f83899f4d76f",
        "cursor": {
          "ref": "ca59a7cc-6029-46d1-93e3-10565558d97a",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "fc4fb6cb-e0b7-4587-b22f-72f0d1e24de8"
        },
        "item": {
          "id": "1fc1abe4-a88a-43c8-914d-f83899f4d76f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "32327acc-8b8d-4c0d-8b4c-a4d14a3f7ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33634eeb-b161-4dad-b516-800116b3c42d",
        "cursor": {
          "ref": "b1d8158b-66b5-4c06-8ebe-d7d3e8725dd0",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4bdeb7af-9594-4b8e-91bb-98c065a88914"
        },
        "item": {
          "id": "33634eeb-b161-4dad-b516-800116b3c42d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5b56d08f-d7f9-475a-b378-a921d1bcf11c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f33144-48bf-413e-b1ca-88ab3f1c02e8",
        "cursor": {
          "ref": "b35e87b2-4f60-40ea-96b3-315e6d3df688",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5f2887e1-1702-401b-af9a-2ec054991e3e"
        },
        "item": {
          "id": "58f33144-48bf-413e-b1ca-88ab3f1c02e8",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "548f6633-abaa-443e-a177-fa6bf0fce9fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "221cd3c1-2254-4c23-bf5e-b9ba0b9a6a4c",
        "cursor": {
          "ref": "7f8a5b63-540a-4dcf-a8e1-33d9717919c7",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "654aba49-62f9-459a-82b0-c4b3d710aa69"
        },
        "item": {
          "id": "221cd3c1-2254-4c23-bf5e-b9ba0b9a6a4c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "bdc0adbf-57f1-4b22-9b82-1afbb960e440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f716268-a145-4fe5-bd94-f553569a577c",
        "cursor": {
          "ref": "83d01007-8dd6-4582-9235-f5d766339f84",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7542526f-a638-46e3-90d6-c9b8b68ab88f"
        },
        "item": {
          "id": "0f716268-a145-4fe5-bd94-f553569a577c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "bf0808cf-ef1d-4ce8-bb38-4cdc16e9e2f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3878b3e-2eec-4694-b34a-d20213892fde",
        "cursor": {
          "ref": "c74dadd0-97a8-4e8e-bb4d-6e6096b6fc03",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "16b69643-45a2-4593-884a-e659a2c45f51"
        },
        "item": {
          "id": "c3878b3e-2eec-4694-b34a-d20213892fde",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0089bd6a-23f2-4754-bddd-c5d5e61df12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1a10cc-7d7d-4425-bff1-df3f5bc29782",
        "cursor": {
          "ref": "caf20c8f-77e7-4e87-8ca1-cee0cdb2ff73",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9ade695a-6d1a-466c-973e-9135b0b54ebb"
        },
        "item": {
          "id": "7d1a10cc-7d7d-4425-bff1-df3f5bc29782",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1bd26058-c9cd-4e9b-b890-1d21d0fd944a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb125c31-f0af-43ac-8c67-96bcee8b6c70",
        "cursor": {
          "ref": "ddba99fa-548b-40ff-9422-54cf918f8634",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8d6672e1-249b-46e1-ad5e-dc2ca156223c"
        },
        "item": {
          "id": "cb125c31-f0af-43ac-8c67-96bcee8b6c70",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f5b23e5d-ef5e-41d8-a30f-32d14613667e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d736655-4441-4d7a-beb4-66faaeb63b20",
        "cursor": {
          "ref": "159c27f8-ab1f-4566-bd8c-35e23b4a11cd",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d5ad94cc-ad2b-42b2-9749-cc7be5df6b3f"
        },
        "item": {
          "id": "7d736655-4441-4d7a-beb4-66faaeb63b20",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3d0c3fff-9834-4bb8-aefa-2f0397e0ea79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7862b319-ce2f-4985-a627-9365d53215ac",
        "cursor": {
          "ref": "8ac26653-9b68-43ca-b18f-c82ed16e43b7",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6a2f2535-11e2-4420-9cc3-c75797411d9a"
        },
        "item": {
          "id": "7862b319-ce2f-4985-a627-9365d53215ac",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ad97c23a-0c80-44a1-9886-ad3aca2236db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2091cbdb-3fdf-4129-99b8-a39d66c77e74",
        "cursor": {
          "ref": "75b3b87d-dc83-4a25-9d20-4c926ffddd7f",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5a2589e8-77b2-4a9f-99b4-41227d56ba44"
        },
        "item": {
          "id": "2091cbdb-3fdf-4129-99b8-a39d66c77e74",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "368a47eb-7f68-4899-849b-a8b1d6c0a779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125d878e-75af-475d-9bed-fff481f965e0",
        "cursor": {
          "ref": "27db65f6-a6f7-4824-8471-9fde71f35699",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "23c2dbb8-97bd-4959-a806-fddb4e1dda56"
        },
        "item": {
          "id": "125d878e-75af-475d-9bed-fff481f965e0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "92edfeb8-c32b-49b8-9de5-62aaea0876c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b308012-38c4-4c37-978a-a7f5ee4bcaf9",
        "cursor": {
          "ref": "31819fb9-bf8e-4ee2-b723-bb311bd2cae7",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0d7ef69c-853d-485d-988e-de73637c5ffd"
        },
        "item": {
          "id": "5b308012-38c4-4c37-978a-a7f5ee4bcaf9",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "95201593-eab4-4144-a414-676010b14d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665ceb77-8fbe-4b35-bc51-25a6a1c9c135",
        "cursor": {
          "ref": "81fb7416-995f-4333-b714-d89ca15f63f3",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a5808c03-2fca-48b7-891a-313b78546072"
        },
        "item": {
          "id": "665ceb77-8fbe-4b35-bc51-25a6a1c9c135",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c583e15c-e943-4eff-8328-792df499434c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23295010-6457-421c-823d-734677142a0a",
        "cursor": {
          "ref": "35585da3-1ef4-4956-9f18-90b4a402168f",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d9fbd31d-f5e1-4e33-9cf5-c3452529c413"
        },
        "item": {
          "id": "23295010-6457-421c-823d-734677142a0a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "0f8c70bf-3cf0-4620-a142-ba0cc9ef47f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4216159b-efc0-4262-9aa3-def2497dbdc9",
        "cursor": {
          "ref": "cf42e4c1-4a41-4446-a2dc-23e5fcc6ffd6",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d5facba4-4724-4bbc-b4d4-1a28f689e363"
        },
        "item": {
          "id": "4216159b-efc0-4262-9aa3-def2497dbdc9",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c8b9ddea-3e77-4b2a-950b-38a3b7dccbf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645bb0ec-f205-452a-95a5-f94ff7b04b4a",
        "cursor": {
          "ref": "9049702b-5a74-4a08-aca4-7c9e8b881cda",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2676d9fe-5f7f-4408-9fb2-065044f54bf3"
        },
        "item": {
          "id": "645bb0ec-f205-452a-95a5-f94ff7b04b4a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "69cf0e04-dba4-4f37-b7d6-b6690ec9c72d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d270f7-cd94-4c16-a395-225ea07656ca",
        "cursor": {
          "ref": "f24e3adb-f766-44a9-9885-4661b08ca92b",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "903aeaea-eb5c-4fee-92f2-13d1e3ad2413"
        },
        "item": {
          "id": "44d270f7-cd94-4c16-a395-225ea07656ca",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2c91c96f-c0ff-442f-8aa1-d954150f7709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8790e7-a75d-425c-8c32-0a3a29751dc0",
        "cursor": {
          "ref": "9cdbf7d5-71ae-4329-b054-565da90a2e28",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6c88a21e-1c6f-4287-bb18-fe58cc468234"
        },
        "item": {
          "id": "7b8790e7-a75d-425c-8c32-0a3a29751dc0",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f6c05a47-e569-40d6-8c1e-8ee25f188459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163bc42f-61f1-453c-a70b-2cc24d4637d6",
        "cursor": {
          "ref": "837541e1-5b6c-4632-9c91-f21b0b8a8e24",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "30374d8b-a831-475b-9b40-5162fb29e135"
        },
        "item": {
          "id": "163bc42f-61f1-453c-a70b-2cc24d4637d6",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9170086d-43a3-4b5b-8dd8-d8b9924c98f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fee2446-c5f4-4965-b878-2c56110e2464",
        "cursor": {
          "ref": "aca1c8d5-2ed0-40c2-8c92-d46c435bc815",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "650f1f25-151d-4426-ae3b-3101128f1e93"
        },
        "item": {
          "id": "2fee2446-c5f4-4965-b878-2c56110e2464",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "dff3b141-859b-404a-a750-3f9c6324752f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23176593-1153-4e05-9a3f-9b6cdc17eebb",
        "cursor": {
          "ref": "83bbdee8-e238-48b9-9dbd-4bd3a61586cf",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3e88c04e-a30f-4d86-a344-138f6851b9f8"
        },
        "item": {
          "id": "23176593-1153-4e05-9a3f-9b6cdc17eebb",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d8044140-b5b3-47df-952b-39aba83049fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6cf006-4880-4c75-9cea-2f4b0746290d",
        "cursor": {
          "ref": "e4344cf9-ac24-48be-8902-0b0e7eefe271",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2527139e-86b5-42b2-9ad2-5f058447d8e0"
        },
        "item": {
          "id": "9c6cf006-4880-4c75-9cea-2f4b0746290d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "84620767-0891-4c79-98de-c1b9af4f972c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34445d9-83ef-437c-b4c7-6ee59b57fcff",
        "cursor": {
          "ref": "383d8620-7402-4638-b1a6-3950644e2b3d",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "421eda3e-79f1-44b2-a72e-abb0bdd16422"
        },
        "item": {
          "id": "a34445d9-83ef-437c-b4c7-6ee59b57fcff",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ed1ed43a-1ebd-4336-9b22-2c9beac5bbbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27d1ead-2a9e-4eae-b708-2297eeb5d8ca",
        "cursor": {
          "ref": "bf7a32ad-d111-4da3-a520-ff8a562fc3c6",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a7702f33-d369-4864-9249-f59c759a9310"
        },
        "item": {
          "id": "d27d1ead-2a9e-4eae-b708-2297eeb5d8ca",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5fbe3bd8-3771-42fc-b5d4-e5da3ea27b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40cc69cf-63ce-44a2-9ceb-c5a08e6fd0ad",
        "cursor": {
          "ref": "13ddef3e-2723-41c5-95bc-37e29dbdab02",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2539c335-b4ed-4052-bb2d-6cf3537bb6f0"
        },
        "item": {
          "id": "40cc69cf-63ce-44a2-9ceb-c5a08e6fd0ad",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "07af6fef-a7e0-4512-bc63-ecd40cddd0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a159c0d2-b1fc-46d0-be91-307b961e9df6",
        "cursor": {
          "ref": "220df6bd-bdc8-4f31-a217-9bf701b5b17c",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4ec31972-fff1-411f-95ff-d26d7055bb5c"
        },
        "item": {
          "id": "a159c0d2-b1fc-46d0-be91-307b961e9df6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "465f60ba-4557-4257-883b-9e99213fa982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92079fd5-e5dd-47bd-a5a6-2d817f90b534",
        "cursor": {
          "ref": "de923a71-71bd-438b-ae44-98ce32882e09",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b161326b-7b57-45c7-8067-27bc5f068451"
        },
        "item": {
          "id": "92079fd5-e5dd-47bd-a5a6-2d817f90b534",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b3a7f1f6-8d81-4ae8-b8fd-7128b1dac44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9eb4b11-815b-4dba-a5ac-8659b01b5280",
        "cursor": {
          "ref": "188a7ed6-a895-4ad5-a906-cc1fc54a7963",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9b9beeb1-b01e-44ed-b2c5-3a099df22e6a"
        },
        "item": {
          "id": "b9eb4b11-815b-4dba-a5ac-8659b01b5280",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "901adba5-5a2f-42df-8aaf-35fe58777af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3cdadfe-43a2-4032-8c51-f2522a21fe25",
        "cursor": {
          "ref": "7817a768-455f-48f2-b19f-b042e2957d18",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "049742d6-fd98-448b-b5e8-09b327f2ad7b"
        },
        "item": {
          "id": "f3cdadfe-43a2-4032-8c51-f2522a21fe25",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d2f604de-fa12-4cc2-8b38-f074432f7346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6152b552-40a5-4ae4-89bf-b02a0fba3354",
        "cursor": {
          "ref": "12b9bdc2-1e82-47b8-ba15-6583654421b3",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "be547db9-3a51-4b34-8d5b-e4fa730f07e4"
        },
        "item": {
          "id": "6152b552-40a5-4ae4-89bf-b02a0fba3354",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7120288f-ab56-4851-b7b8-478261f6f1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5324c02b-a6fe-4991-93df-cbb4ca2872ab",
        "cursor": {
          "ref": "8bb4d9a6-d928-4ac2-8d75-7f28d74ac5c9",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7dcee0a4-debe-4eb3-a34a-57b3f80557ca"
        },
        "item": {
          "id": "5324c02b-a6fe-4991-93df-cbb4ca2872ab",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8e064adf-8442-4701-96ed-0cd417706b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9a144d-13ee-4dc6-9317-9c47752d43c8",
        "cursor": {
          "ref": "93ec90f0-c40b-4e38-b9cd-c41494904370",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ddd468a2-e462-427a-9d15-bc6cded44869"
        },
        "item": {
          "id": "0e9a144d-13ee-4dc6-9317-9c47752d43c8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "af1faa53-fcb9-4e77-90ca-88dde356f100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9f2ff3-0540-4e10-84f5-019158f942f3",
        "cursor": {
          "ref": "e2e997a1-59d7-4bee-8ec2-33d051c872d0",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "62fd15bf-dfaf-48a1-b370-60c5ea6b44ae"
        },
        "item": {
          "id": "2b9f2ff3-0540-4e10-84f5-019158f942f3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "13a73c41-c67a-4be6-a497-9d2b21b7a5b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d6a8af-58cc-42bf-ba84-bf0ff1f7aaf4",
        "cursor": {
          "ref": "0e89748d-7ede-4f47-84bf-012905e59248",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ba4d0061-6d20-485c-beb2-33c3a1579088"
        },
        "item": {
          "id": "08d6a8af-58cc-42bf-ba84-bf0ff1f7aaf4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c6fe3056-ce6b-4f9e-aefc-2ccca7c59c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18859541-5b32-48e4-89cb-12191729b90d",
        "cursor": {
          "ref": "b3b882c8-cdb0-4234-b68a-05558f5dd06c",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c28b9718-3333-4541-90ee-edaadcfca836"
        },
        "item": {
          "id": "18859541-5b32-48e4-89cb-12191729b90d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ab65766d-6be0-4e13-81b8-61ddd3ed423c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4ea082-c28a-42d7-b839-7e2ee5b5d147",
        "cursor": {
          "ref": "505d873c-8abb-4dcd-9574-c11afe671796",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0dc150a2-a677-42f2-82ba-3819c7213d36"
        },
        "item": {
          "id": "2f4ea082-c28a-42d7-b839-7e2ee5b5d147",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d964dfd4-65f3-40d7-8473-4b0ddee9cae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b51a8b-4319-4364-8097-2deb01fd7645",
        "cursor": {
          "ref": "4c5c51f4-e6f5-467e-b8d4-76cd5beca2f2",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1075e7cd-bda4-4df8-a621-359cc19eeb47"
        },
        "item": {
          "id": "76b51a8b-4319-4364-8097-2deb01fd7645",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e7611f1c-0111-4fb0-82de-4184d0c852ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1409f8dc-977b-417e-9b7e-d74c4dc4bf6b",
        "cursor": {
          "ref": "301f3b50-eeb1-43e2-9871-61b3a05bcc06",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "190b8e2a-9507-4247-841c-a3dbcca933e8"
        },
        "item": {
          "id": "1409f8dc-977b-417e-9b7e-d74c4dc4bf6b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0e3a78bf-ca5b-4af4-be13-58057d3ae3ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bec64c8-b734-4f63-a11d-152fed58c87a",
        "cursor": {
          "ref": "bea31f0a-54a9-4c10-b2d4-f998f9a6f999",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a6c0da89-fec8-41a3-b738-7642342d5178"
        },
        "item": {
          "id": "5bec64c8-b734-4f63-a11d-152fed58c87a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "cb86a6e9-a9c8-4208-8a75-bb039bdc959d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3645912-76db-4f34-89e8-545e519873b4",
        "cursor": {
          "ref": "a37a4890-aa0f-4b85-a96a-fb2a2041e7af",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2b5976d5-037e-4544-accb-d6ab3b6a3297"
        },
        "item": {
          "id": "b3645912-76db-4f34-89e8-545e519873b4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2cbc7286-aefd-4010-b096-ee6e5a9d33d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90dab7ff-26e1-4fa2-b31d-b6405cbbfab1",
        "cursor": {
          "ref": "f15401aa-83b2-4633-bb7b-1cf438d8ed9f",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9090b08e-3e84-4980-ade2-d14c2f875ef9"
        },
        "item": {
          "id": "90dab7ff-26e1-4fa2-b31d-b6405cbbfab1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9b579855-42cf-4ac7-90c9-d2bba5e3a2e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a80d2c9-f63a-4e53-9b26-46b85acd8da6",
        "cursor": {
          "ref": "8a64a6c7-f64f-4b28-99ec-078e7f5e4d97",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7037b436-ef7c-499c-8550-ffbf4d409d18"
        },
        "item": {
          "id": "5a80d2c9-f63a-4e53-9b26-46b85acd8da6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d7b83880-56cd-4bed-a2ca-870c0c282f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dcb6318-ca87-4af5-9dce-43af15e168cd",
        "cursor": {
          "ref": "27163762-0cee-4591-95ca-1018720bb2a7",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "771f0e09-1cc9-4616-b190-2f705e101072"
        },
        "item": {
          "id": "6dcb6318-ca87-4af5-9dce-43af15e168cd",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "dc214a2f-06fd-40c1-bcf9-5cbb2b852fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292d30f2-2d83-4932-bec4-9e7a555fd415",
        "cursor": {
          "ref": "4edd7cce-4cd7-47e0-80ff-974ec7cf6135",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "026c57ae-bc3e-4428-be89-bb30a9ada4d1"
        },
        "item": {
          "id": "292d30f2-2d83-4932-bec4-9e7a555fd415",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c705a00b-dedf-48b9-84fc-99dcdcad8469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9f227a-7a90-4a24-b178-c0d8c6cc316b",
        "cursor": {
          "ref": "c4bac7af-074f-4ebb-aea6-d1471224d77a",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "2f312e52-db21-4c7b-9b2a-ca84ae393344"
        },
        "item": {
          "id": "ec9f227a-7a90-4a24-b178-c0d8c6cc316b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a50cc8b2-9960-4c8d-8e36-a1ba15f7bfec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f0168d-65fc-4410-8245-05259ca44b12",
        "cursor": {
          "ref": "e4e298b2-155c-4229-8ac7-9c937e3b54cd",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6de394a3-d3ed-46bd-b920-9f7fe6d6d4a0"
        },
        "item": {
          "id": "90f0168d-65fc-4410-8245-05259ca44b12",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "da0b705c-d86d-4a61-8b72-6c894905f5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e359fc-5aec-47a4-b1a1-63b8548a97d4",
        "cursor": {
          "ref": "fe611e98-86a6-4da4-aa98-23a3a8218d34",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "cab1e14c-fc13-42bc-b2b7-54c9ac6ac104"
        },
        "item": {
          "id": "92e359fc-5aec-47a4-b1a1-63b8548a97d4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9c050580-5f45-4629-b011-03fc21d110ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d54b973-287c-4259-aa8a-e91300efdc69",
        "cursor": {
          "ref": "88798462-7ba9-45da-89d7-f3dacff866e5",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "865dee97-ce42-4e9c-9e44-bc0caea841d0"
        },
        "item": {
          "id": "0d54b973-287c-4259-aa8a-e91300efdc69",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e6c30bcc-6100-470d-81d4-9ae03c7518d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3353bdd1-2605-467a-8dc0-81fdb92e6593",
        "cursor": {
          "ref": "4fa5652d-6798-466e-90ae-29c714b66575",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "89f3459b-0c83-4bb1-bdb0-abd006adc444"
        },
        "item": {
          "id": "3353bdd1-2605-467a-8dc0-81fdb92e6593",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b4fd8f05-bc29-4778-aa3f-985ca57737f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5206f8dd-c18b-41e5-b2eb-f370e2c9531f",
        "cursor": {
          "ref": "5cabfeac-34bb-49cd-8462-caed7554f59f",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f291cf87-5333-433e-b389-1a470808d8e9"
        },
        "item": {
          "id": "5206f8dd-c18b-41e5-b2eb-f370e2c9531f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "79ce53fe-1e1d-462f-a4b1-1630e2b86689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5c189b-c2e7-4253-b1c5-efc7e1e7f960",
        "cursor": {
          "ref": "b9c0e837-912c-4674-b8af-6636322d56e8",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "494d29ba-a02f-4ddf-9145-734ec1eda2d9"
        },
        "item": {
          "id": "6d5c189b-c2e7-4253-b1c5-efc7e1e7f960",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c1276ff7-5fb7-4863-8adc-744d1adc1770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68845a2-000d-4965-9efc-cc9e4eb497dd",
        "cursor": {
          "ref": "5d61ff4f-40b0-4ff1-8460-45802f463f03",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4bd5e6d7-8aee-46f3-a5c9-894481dcbec2"
        },
        "item": {
          "id": "d68845a2-000d-4965-9efc-cc9e4eb497dd",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8344dafe-dc93-4be9-a1b5-5a854b8c40ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d07688-8a29-4d51-884e-9e99632337ab",
        "cursor": {
          "ref": "6de7ecf0-5cda-40d1-b7ff-33292227d718",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8123c6c8-3c88-414e-ba01-81e447a63ab2"
        },
        "item": {
          "id": "a7d07688-8a29-4d51-884e-9e99632337ab",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "57db928d-d9fb-487f-85c5-ff96284fd5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e359468c-109d-4d1e-ad87-f8379e7772bc",
        "cursor": {
          "ref": "a157a903-6053-4c51-bbf9-4419bcc12aa2",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "52b0eb0f-c320-4425-941c-c7e2a7624ebd"
        },
        "item": {
          "id": "e359468c-109d-4d1e-ad87-f8379e7772bc",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ab6e3fe7-ae17-4730-a057-aea19c54cfc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320be3a9-4bc3-4f7a-9e00-c097d1ecef42",
        "cursor": {
          "ref": "14761de3-d15f-4ace-971d-9c4a35161004",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4a77fc1c-2980-4866-ac11-7cdbd0c4391f"
        },
        "item": {
          "id": "320be3a9-4bc3-4f7a-9e00-c097d1ecef42",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e282e0f9-3b4c-435c-bb8c-6a2c5d6a617e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43856ad-1c3f-4119-8586-1bb89ecced96",
        "cursor": {
          "ref": "ec3a85e5-734a-4113-8140-10eb9d32ef61",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4efc45fb-b4b3-4c16-9333-fd322b81493f"
        },
        "item": {
          "id": "e43856ad-1c3f-4119-8586-1bb89ecced96",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "8c7dd836-e023-4029-8166-86feb2fef345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b660b9-4806-4908-bf88-e27801d64977",
        "cursor": {
          "ref": "5fa327a4-870d-4f8f-81e4-d2b04dbcbb92",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4d1944bd-e311-484e-a32d-1252a17cf4f1"
        },
        "item": {
          "id": "46b660b9-4806-4908-bf88-e27801d64977",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "faf845f3-7026-4acc-97a3-6fd7ebeedb84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca76e370-e887-479d-91da-d22ebbb2d394",
        "cursor": {
          "ref": "2a87db81-03ec-46a1-851a-2b49295b35ff",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "890641f9-61f4-4541-9980-22245d71185a"
        },
        "item": {
          "id": "ca76e370-e887-479d-91da-d22ebbb2d394",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "60f7deff-a8f6-424a-8c99-8b6488857bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f871966d-ad50-4cec-b633-f52fc6f2f45d",
        "cursor": {
          "ref": "2d328474-64cd-4708-bc24-f370af1465f4",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e94b118e-52e3-4e27-ad46-bf7251d4f85f"
        },
        "item": {
          "id": "f871966d-ad50-4cec-b633-f52fc6f2f45d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "06923d03-2f7a-445b-a4ee-4999ee9f3b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048c3201-0522-437c-9615-a2a3c08eceda",
        "cursor": {
          "ref": "b4011ffa-7aa4-48f0-9359-4bf2ef20bb26",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5949795a-3777-47a1-a237-3f28aa8dcec2"
        },
        "item": {
          "id": "048c3201-0522-437c-9615-a2a3c08eceda",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7bc64de5-fcec-4acd-92b5-1ea6988b09c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7574f9c0-2355-4206-a320-142b6378e6c5",
        "cursor": {
          "ref": "81a83543-e4a8-4949-9446-673d7fd34729",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "465edd54-6d30-445b-8406-d25342fa0fb8"
        },
        "item": {
          "id": "7574f9c0-2355-4206-a320-142b6378e6c5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f3749b9d-a458-4af8-a9a9-e3b6a9c092b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db31d26-6e9e-489e-b949-c92bc4543266",
        "cursor": {
          "ref": "aaf2528d-6ffe-4907-ad75-9fa0f2dc56a0",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "75c8d71d-0b27-44a3-a3cf-a06a8c875ce6"
        },
        "item": {
          "id": "3db31d26-6e9e-489e-b949-c92bc4543266",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8909eea9-13be-4e8d-a03a-9b5f2056c3ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e5402d-ca7b-4d8a-9252-8a4db87b4233",
        "cursor": {
          "ref": "e83a62dd-bae0-47ca-8d76-398fc256fd47",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "eb8fb1c2-d5af-4ad2-bf03-b651c1424930"
        },
        "item": {
          "id": "12e5402d-ca7b-4d8a-9252-8a4db87b4233",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "89a191c7-c622-4c63-9c90-7b8ec847074b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "510adc58-4832-4e4f-8c6b-b3a606679021",
        "cursor": {
          "ref": "5d84ddeb-dad2-4b20-8192-0efd4153c8d0",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7cf33227-c508-4e86-bb42-eb639fcc4e65"
        },
        "item": {
          "id": "510adc58-4832-4e4f-8c6b-b3a606679021",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "451a492e-3135-41a1-bfa0-bb09dde7cf2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66fa4507-869b-4934-8f1c-6a890999c124",
        "cursor": {
          "ref": "0b15c2c7-0bfb-4b48-b7e8-d7bb8d072a04",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1caf4ae9-88ee-447e-a6d1-9d18a4b25ab8"
        },
        "item": {
          "id": "66fa4507-869b-4934-8f1c-6a890999c124",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "994a4ba4-1560-4b5a-9b78-dbd1c8ae9cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb599d9-d220-4d99-8d62-98698d620b33",
        "cursor": {
          "ref": "d3ee90d7-dff8-4468-acf9-f729f82df01c",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "401a564a-f6d4-448d-9136-0037aed01088"
        },
        "item": {
          "id": "ceb599d9-d220-4d99-8d62-98698d620b33",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e6318e9f-732d-40bb-9d4e-ab2510ec0530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f891468b-fa1e-49c1-acc5-26f4a231ecae",
        "cursor": {
          "ref": "81b745a6-8fa7-41a3-a37e-9197aef4bfd8",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2ec1f6c2-9f7b-4c49-848a-be819fb08e5f"
        },
        "item": {
          "id": "f891468b-fa1e-49c1-acc5-26f4a231ecae",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "91731650-7d5c-4317-93df-971340234947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff90c7b-2085-45e8-a86c-477c83ed487b",
        "cursor": {
          "ref": "fc284f3c-f8e0-4063-abf2-c382ad4d07bc",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "28093cd9-3c33-4d80-aadc-a40d80c5eac2"
        },
        "item": {
          "id": "7ff90c7b-2085-45e8-a86c-477c83ed487b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7b4192bd-24f8-4bf1-b677-bd44ad3d7a33",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63de662b-4b07-4b33-aec5-bb237c9838ec",
        "cursor": {
          "ref": "7eae97a3-cf8f-4bfa-9dad-e6befe70a268",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "01a882ff-d1a8-4d9f-8930-838cecb9b730"
        },
        "item": {
          "id": "63de662b-4b07-4b33-aec5-bb237c9838ec",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "ccf31e81-7be4-4ae3-b332-6de9b515f9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "d6719941-7595-4a27-81e9-875b2db05b75",
        "cursor": {
          "ref": "12aca4b1-e2e4-4508-a6dc-9dc094162123",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f83e4742-a4e6-4f8a-a3b2-97be953e531e"
        },
        "item": {
          "id": "d6719941-7595-4a27-81e9-875b2db05b75",
          "name": "credentials_issue"
        },
        "response": {
          "id": "217a9f9e-4e23-4eb8-b665-8192d50aa786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "56b30e1a-69af-4c60-92e5-826cbd8c9042",
        "cursor": {
          "ref": "d8cb8ad1-cf5f-4d94-be29-6dc4b3b5ced5",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e4fa3a20-20f2-4df8-8d40-6a2c225df46a"
        },
        "item": {
          "id": "56b30e1a-69af-4c60-92e5-826cbd8c9042",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "bb4dbb36-4c8d-46ef-a0e4-78ebf9e9a4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 167,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "55ed8d07-ca41-468c-9f33-1fe46129705d",
        "cursor": {
          "ref": "5c58b304-d58c-4dd0-a45d-4028e726b331",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a9e43411-3fc3-494c-99bc-70ccea33595c"
        },
        "item": {
          "id": "55ed8d07-ca41-468c-9f33-1fe46129705d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d95854e3-ac2f-413e-8bf3-d294a92592ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "2acbab96-f319-4ae6-b9cd-fcbe5bb83439",
        "cursor": {
          "ref": "08730e28-94b0-4024-b6e1-530a5160914e",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b295f36c-e223-43ae-a782-e8e1b475bea9"
        },
        "item": {
          "id": "2acbab96-f319-4ae6-b9cd-fcbe5bb83439",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f1632dfc-c584-458d-a886-61df292d7c02",
          "status": "Created",
          "code": 201,
          "responseTime": 8234,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "689ccbcb-4102-4b05-a0d8-4f2fc006f3ee",
        "cursor": {
          "ref": "fa79530f-3714-42ec-ab65-f9235d599864",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e499a02b-8337-4cbc-b0c9-a84ddc97a890"
        },
        "item": {
          "id": "689ccbcb-4102-4b05-a0d8-4f2fc006f3ee",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4b3c463f-9140-461f-8c9c-5c791c4a1142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "8bf52438-72f7-46f6-8234-3b509de962c1",
        "cursor": {
          "ref": "2cb5b01e-0cca-49c5-b4f7-b8fc81c233f8",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "887e64ee-f5f0-4f10-aa19-e6a6975e1082"
        },
        "item": {
          "id": "8bf52438-72f7-46f6-8234-3b509de962c1",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6075cc85-ddad-4aa7-8e07-5c01cc1e0510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "3c6efa3d-c462-4399-9cac-09d0b5f3d9cc",
        "cursor": {
          "ref": "c3ea04d6-c199-42c1-8e52-9849dee94cf8",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "024ccc59-1acb-47e0-9f12-12ceb9ea87b4"
        },
        "item": {
          "id": "3c6efa3d-c462-4399-9cac-09d0b5f3d9cc",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f5a55ae1-9bf8-4340-b49a-e24cdc17a8a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff8ee08-80aa-4cd0-af53-46c3e2b22993",
        "cursor": {
          "ref": "7e076c10-5274-4164-8dab-42a682579b9a",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "86438e04-b044-4be6-98f3-f6cb5f049875"
        },
        "item": {
          "id": "aff8ee08-80aa-4cd0-af53-46c3e2b22993",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9d3167e4-ee48-46a8-bc43-b0b5603b1615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b050ca7-5644-43aa-b90d-80ad76fa8c01",
        "cursor": {
          "ref": "db79611c-3c06-489e-a4d7-3d136c84516b",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "86192e24-4879-4099-aeef-467ea63247ee"
        },
        "item": {
          "id": "1b050ca7-5644-43aa-b90d-80ad76fa8c01",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ba2b2242-3eb5-43fa-b2d7-12edef902906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "facbc0e2-b2d9-4f8c-ab17-833af574c4ae",
        "cursor": {
          "ref": "4e880aa8-62a2-459a-bef1-baf6aa5ddc0d",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2ee1978f-534b-4771-ac59-361dbc14ad7d"
        },
        "item": {
          "id": "facbc0e2-b2d9-4f8c-ab17-833af574c4ae",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6a2a39ae-c02d-4104-84d1-c6f4ddd4e681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ace1952-3e37-4729-b399-ecfdbe121776",
        "cursor": {
          "ref": "00889404-3a3a-49e7-9c5a-eb8152db3166",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "332e0b3a-d997-4330-b63b-becf529ab2df"
        },
        "item": {
          "id": "7ace1952-3e37-4729-b399-ecfdbe121776",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "13d13949-f3f2-4ccd-947c-834168ea850e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f62724-476c-47b8-98be-ef83b5d96604",
        "cursor": {
          "ref": "aea16cb5-9cfb-4eff-94c7-9a6d908fe15c",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5f08f330-99d8-41a6-9f92-81dacf339964"
        },
        "item": {
          "id": "19f62724-476c-47b8-98be-ef83b5d96604",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fa7e65e3-3e81-42ea-b409-3b518b2e5928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893ae58f-7239-485d-8b9d-995ab781265d",
        "cursor": {
          "ref": "8e9d4afb-1a1a-429f-ad18-740859396825",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "75548d77-f854-456c-896e-dfcebf35b056"
        },
        "item": {
          "id": "893ae58f-7239-485d-8b9d-995ab781265d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fb1d824a-6c60-49a4-be92-cfe6d21b6f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b628626f-9744-48a8-9584-9a8b5915ba99",
        "cursor": {
          "ref": "ffa6e232-9d04-4168-94f9-8072e9db08d4",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2d8316bb-0915-4456-868f-645a32d2b39d"
        },
        "item": {
          "id": "b628626f-9744-48a8-9584-9a8b5915ba99",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "72c9e9f3-f496-40fb-bcaf-78700036d687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9db0586-ecaa-4881-abd8-b8b425394646",
        "cursor": {
          "ref": "2d61827a-3a28-4796-a5c0-41b88635abc7",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3f13f1b1-fd2c-4f2c-a17e-0b8e1ce2d369"
        },
        "item": {
          "id": "a9db0586-ecaa-4881-abd8-b8b425394646",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a4787277-d9e5-4d44-a8fb-b6947f7398ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54908b2a-32a5-40bc-be99-2f81a5a51311",
        "cursor": {
          "ref": "c06405da-fab0-485a-9ca8-940fb7b2b854",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e184ab55-ab8a-4f33-8774-1e1d596284ab"
        },
        "item": {
          "id": "54908b2a-32a5-40bc-be99-2f81a5a51311",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "11391c9c-bd91-4287-9561-47239f8ec1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b108a0-fa98-4953-9cee-1be3d643c7f8",
        "cursor": {
          "ref": "e451ee83-474d-4e32-9fa8-6841069892c4",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c651e5e5-b650-4850-ac1c-ea10c2f3a2b6"
        },
        "item": {
          "id": "a0b108a0-fa98-4953-9cee-1be3d643c7f8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fe794b23-d46c-43d3-88c5-1f1a32eadbb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84cd0bcc-613e-409b-be43-7bf2f2d39ae7",
        "cursor": {
          "ref": "8d8e0d33-f43b-4eb6-88ad-e009e7228300",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "883f359d-fa90-4218-b91b-23f3c7ccfb63"
        },
        "item": {
          "id": "84cd0bcc-613e-409b-be43-7bf2f2d39ae7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7eaa9d88-c44d-4076-88ed-7c2f370c9297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e2a893-dd75-4dab-817c-d9db2ad30832",
        "cursor": {
          "ref": "7c05a002-4e3e-4b89-a7ea-fe168c54bf84",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "567813b8-90fe-4787-ad69-bf83eef13fb9"
        },
        "item": {
          "id": "e0e2a893-dd75-4dab-817c-d9db2ad30832",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e7ccb234-5e1e-402d-a546-15e6c9a59f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc23b08f-a529-40a0-8e02-a9e3d85a80ee",
        "cursor": {
          "ref": "1cc28d69-7a1e-456f-9a74-918a3db7cffa",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "74300c76-eef1-4737-9211-a359ff39add6"
        },
        "item": {
          "id": "dc23b08f-a529-40a0-8e02-a9e3d85a80ee",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "72e85d46-0086-44f1-8f2f-3c5da8144d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1e3def-24e5-415c-ad9e-4992993c9a1a",
        "cursor": {
          "ref": "0f4d0ef0-1784-4bb0-a40b-fade16c45c9a",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c7c62d80-1cda-42db-8425-51cbaecfdaa2"
        },
        "item": {
          "id": "ff1e3def-24e5-415c-ad9e-4992993c9a1a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5e5ea097-8504-4001-89a3-3cd752dcbc84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706afa43-c77f-497d-8e36-aae33d50fb0b",
        "cursor": {
          "ref": "d18b61cd-d420-4162-8c09-e0b42e2aacf2",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "07a3f6cf-f491-404c-a114-48b7ea6a985a"
        },
        "item": {
          "id": "706afa43-c77f-497d-8e36-aae33d50fb0b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "429380e3-29e2-4db5-a402-68582633dc33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6287bc6c-c33a-41a8-a1b3-eeedf4546e56",
        "cursor": {
          "ref": "75d63479-69a1-4d1e-b351-06dddec913be",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4faf96f9-7dc7-4c5a-8eef-fb3fa28cc569"
        },
        "item": {
          "id": "6287bc6c-c33a-41a8-a1b3-eeedf4546e56",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7e9c0f49-8cf7-4412-8c5d-71d04e56cbbc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 71,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "b662dc02-8745-48cb-ad54-af14b577c606",
        "cursor": {
          "ref": "3ac157cb-a407-40ec-af9f-4e4ca134a8b1",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "373239a6-711b-4261-97bf-9ab61ad3c2ce"
        },
        "item": {
          "id": "b662dc02-8745-48cb-ad54-af14b577c606",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "218616f5-e923-4465-aa7e-c0dae7a6787a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf10c1f3-c4cc-464d-aed2-77fb45b4e784",
        "cursor": {
          "ref": "070010ac-00ee-4fbe-8058-209eb2404727",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ff233f0f-bb6d-432d-b566-100a509be666"
        },
        "item": {
          "id": "cf10c1f3-c4cc-464d-aed2-77fb45b4e784",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "538575cd-7384-4687-82ba-13ad9591ba06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89938735-fe67-447b-a38b-962478c5ceaf",
        "cursor": {
          "ref": "926c10cd-53f9-4533-b8c9-2996c3bfa975",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3d416200-a2dc-4b33-a25e-da7ad8f4aaa0"
        },
        "item": {
          "id": "89938735-fe67-447b-a38b-962478c5ceaf",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "15a18b12-35eb-4817-8f27-c835452b03bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a92717d-9d80-40ea-bd96-f66bb99939ad",
        "cursor": {
          "ref": "2d5f0264-13cb-4b98-9b85-7d60a1c9d523",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d98d7f7f-ec48-4461-87d9-4ef77d208388"
        },
        "item": {
          "id": "7a92717d-9d80-40ea-bd96-f66bb99939ad",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7f0c4c5c-67f3-4852-9d33-0a09ca9db033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04bc1858-740f-42cf-966f-a82d402162a3",
        "cursor": {
          "ref": "d3e1dade-94fe-43f6-abea-385e7c8e2cc9",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1309f315-e1fb-4161-961a-b55c0b58ec85"
        },
        "item": {
          "id": "04bc1858-740f-42cf-966f-a82d402162a3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "68de9d0f-153a-4c0f-a59e-822613399da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e773f393-8b7e-4c44-af3e-2303cf0c1b35",
        "cursor": {
          "ref": "203aad54-1163-4fde-addf-e1322cd6d5d2",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a04c7947-6e3b-4e0b-a4a1-6b6ca187e294"
        },
        "item": {
          "id": "e773f393-8b7e-4c44-af3e-2303cf0c1b35",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4b45fa98-18df-4aff-9fc2-302c9a57a969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53101d5-484e-4aa3-b8d8-fa0779f7e1ab",
        "cursor": {
          "ref": "7f356b04-2a05-4ee5-a6cf-061921f9c367",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "97dc1d4c-4f8e-44fb-8d2b-4c3ecf0e568b"
        },
        "item": {
          "id": "b53101d5-484e-4aa3-b8d8-fa0779f7e1ab",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f08f8846-baf2-4ebc-80b2-412a39120730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633a165f-17a1-40ed-8ee2-cc6a2243e0f3",
        "cursor": {
          "ref": "108feee7-15b7-42e6-9a7f-0bfc7dfd56eb",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "278e9933-71ff-4377-ab14-899fb764db34"
        },
        "item": {
          "id": "633a165f-17a1-40ed-8ee2-cc6a2243e0f3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3a6baa9e-0628-4ac8-8f87-8fa33638b7c0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "2d7e5fa7-e764-4685-8683-4ca0bd652cbe",
        "cursor": {
          "ref": "42c1751a-dce5-40b9-b6b3-ca36e5d42eef",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "38257def-7157-48f1-999f-1c270439764c"
        },
        "item": {
          "id": "2d7e5fa7-e764-4685-8683-4ca0bd652cbe",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4679869f-86f4-4af2-805a-73a08837ca2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2502691-1a4f-4012-b64a-2ffd5828b73f",
        "cursor": {
          "ref": "bc46f6f0-7925-4c7b-8659-847b7c25689a",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a99cd711-5606-4499-b291-070471482840"
        },
        "item": {
          "id": "f2502691-1a4f-4012-b64a-2ffd5828b73f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "aa2b9191-9245-423d-819a-c43b803bee6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c519e1a7-23c1-477b-b5f8-308071bcddd7",
        "cursor": {
          "ref": "26038f01-d462-46e1-8aa2-2aea9a5c228f",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6b263fda-c76f-4da9-9e1b-53b06000eb0f"
        },
        "item": {
          "id": "c519e1a7-23c1-477b-b5f8-308071bcddd7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1d945dd3-2b42-4f69-b9ec-7246a23820c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9429f0-36f4-4b68-a53f-5100ac02760a",
        "cursor": {
          "ref": "be2038bc-7179-4812-834e-fe27dc8a7d7a",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "95246dee-b1b3-434a-8dc8-607cb625961f"
        },
        "item": {
          "id": "2e9429f0-36f4-4b68-a53f-5100ac02760a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f662cf65-9043-4caa-bb6e-96578883964c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f686bc-33aa-42df-82c2-586d6b0d3bfe",
        "cursor": {
          "ref": "cdd6a6fb-82c5-4edc-8dc2-5818e4db28dc",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a4341157-3c12-4fc9-ae61-d9fcf7ddb7aa"
        },
        "item": {
          "id": "25f686bc-33aa-42df-82c2-586d6b0d3bfe",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0cb27948-8400-4272-92d2-cd9284ef2c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d755b550-8d7e-4ca7-9cd9-0d3f1a6ee29f",
        "cursor": {
          "ref": "92ee3a5d-26cf-4233-b822-ecd0f2598298",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "240612e8-e09f-40d1-b562-616ae5bd6dc0"
        },
        "item": {
          "id": "d755b550-8d7e-4ca7-9cd9-0d3f1a6ee29f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f0da2a8f-03c9-4cf6-83c6-b65731f89114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efac2789-ba58-43d5-82ae-06b893794d94",
        "cursor": {
          "ref": "081d6c07-9f33-4feb-9040-c5ded364593a",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5d37e95a-5ecb-49c2-8943-9ba148270ddf"
        },
        "item": {
          "id": "efac2789-ba58-43d5-82ae-06b893794d94",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "91816674-a2b3-4c66-bcb2-687d5b793b5d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 130,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "361e5afd-0b26-4ce3-adac-3def69c0aeed",
        "cursor": {
          "ref": "df1d25ce-b264-4b83-a611-1c395e0fd116",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "25423db3-e91f-4e06-8770-b1b71ff69f2c"
        },
        "item": {
          "id": "361e5afd-0b26-4ce3-adac-3def69c0aeed",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cd6734f7-0444-4278-be3f-5804d6f05c0a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42328b52-037a-4015-b754-14803738fe2f",
        "cursor": {
          "ref": "62fb9543-98ec-49f3-8694-53046f876807",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b931fc3a-8b0a-428b-aeb6-ca491d256cef"
        },
        "item": {
          "id": "42328b52-037a-4015-b754-14803738fe2f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "17c528b7-ce25-4cab-a172-1d62a249a280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a248ec9e-7634-4bdd-8c71-a6a0cfe904d6",
        "cursor": {
          "ref": "9b18abc2-9e89-4b94-9d8e-fcdab7729446",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "92765429-c2e1-40a9-825a-d8e13f867749"
        },
        "item": {
          "id": "a248ec9e-7634-4bdd-8c71-a6a0cfe904d6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c3eda609-41f1-46f9-a721-aa3934343e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe499132-a7e5-49d0-93a7-6609d90a2cff",
        "cursor": {
          "ref": "b46d1aea-cd53-47a8-ab1b-4fdc4d203807",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "69babed7-0c18-422b-b7f1-95c41c8126e1"
        },
        "item": {
          "id": "fe499132-a7e5-49d0-93a7-6609d90a2cff",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b64105b3-8220-4ce5-84db-909d214dfc0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aadce21b-bdf0-4441-9aa1-8fd7752e2be4",
        "cursor": {
          "ref": "f43dfdd3-0c64-4e18-95b3-d2f54f11d109",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7d1426ca-aa68-4767-8906-d829035562a1"
        },
        "item": {
          "id": "aadce21b-bdf0-4441-9aa1-8fd7752e2be4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "686bbb19-b355-40e8-9663-1a744e3d7963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f40d91e-75eb-4f5d-95fd-f5999bd87878",
        "cursor": {
          "ref": "519da7f4-2501-49ef-a6a1-45ae5e3ce7c0",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5c33a4bf-577c-4d75-9732-786d3959862a"
        },
        "item": {
          "id": "0f40d91e-75eb-4f5d-95fd-f5999bd87878",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9fd80b5c-f686-4eec-899f-75cf8b055a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c249fe2-e6d0-46da-831d-88d572a9862d",
        "cursor": {
          "ref": "420152bc-a623-41eb-9dd6-2f02b9374ac2",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1eb74328-d592-4fb1-9e45-056fba57f44e"
        },
        "item": {
          "id": "3c249fe2-e6d0-46da-831d-88d572a9862d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "97ffca2c-4a4e-49a9-bcfe-5e386a4a4be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2e6e37-d6e5-4f5a-980d-42ccf0127337",
        "cursor": {
          "ref": "90496c68-d642-4d20-9244-44930fb276b2",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "db95b4d3-cb07-4439-b1bb-a74ff36b31db"
        },
        "item": {
          "id": "6e2e6e37-d6e5-4f5a-980d-42ccf0127337",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6146cfea-ba8f-4334-9423-cf203a4db4c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987346f6-bc78-4c30-b90a-7d971c888d19",
        "cursor": {
          "ref": "b0bffbd9-b000-4aa4-9761-409f8f061638",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c8077ef4-7d07-4ff1-b4b1-e21f956d9955"
        },
        "item": {
          "id": "987346f6-bc78-4c30-b90a-7d971c888d19",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e0ff4efd-bd05-483e-af99-5a0dce1f0e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dffbf55-67af-40fb-9272-5f9771676172",
        "cursor": {
          "ref": "82aac04c-a915-47aa-abcb-0426b4e0b93d",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "cf071952-6c0e-4339-ad30-fc8e46d618cb"
        },
        "item": {
          "id": "2dffbf55-67af-40fb-9272-5f9771676172",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "770329c1-c1e0-43ab-a9b1-2682e2299b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eaf4cb7-28c2-4efe-841c-20898170fa3e",
        "cursor": {
          "ref": "c51e7f62-f574-4b90-b52f-368dd6390e14",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a6e24931-4039-4f5a-8eb8-5c61828c350e"
        },
        "item": {
          "id": "2eaf4cb7-28c2-4efe-841c-20898170fa3e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "22fac806-6e70-4ee6-826d-45929d725e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8021980-d6a1-4436-83a9-ddd2388543d9",
        "cursor": {
          "ref": "777b386e-8977-4529-8c15-7e709fbff1ad",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "99b0d8d8-fc4b-4f16-aa02-dfbc267730eb"
        },
        "item": {
          "id": "a8021980-d6a1-4436-83a9-ddd2388543d9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b549f2be-6728-4527-98e9-8057a6e42adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4ad10b-0f9c-4d06-b741-46271511b3d8",
        "cursor": {
          "ref": "a6987edd-3667-42ec-8f1f-0fc597310893",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d14afb37-5b64-4d1d-80a6-479bc59d106b"
        },
        "item": {
          "id": "7f4ad10b-0f9c-4d06-b741-46271511b3d8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e4d53601-3afc-4d18-86cd-623b9e5d255e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668d6280-21c5-438d-b516-982b0aa9ff93",
        "cursor": {
          "ref": "4f8c2710-54f2-49de-947a-72aa3a22483e",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "de402108-d9bf-496a-9937-47760fb09ee2"
        },
        "item": {
          "id": "668d6280-21c5-438d-b516-982b0aa9ff93",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c25c8875-aa17-4304-8914-a38b9413e6d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75923d82-165b-4556-85ed-e779ea93f2a1",
        "cursor": {
          "ref": "ab588c0e-8e85-4e38-a4c5-2bd5ec7ab53c",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "aa921b59-7446-453a-a5b2-24bab7a9775d"
        },
        "item": {
          "id": "75923d82-165b-4556-85ed-e779ea93f2a1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2254c383-2c26-4903-a2af-1b233b63ff72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2393d14b-d4e8-4ada-b8d5-8cbf013bfbad",
        "cursor": {
          "ref": "1ac08490-feff-4a2e-b969-c836019e13d1",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e1660a16-be8d-4e12-b3a8-0808ef993e8a"
        },
        "item": {
          "id": "2393d14b-d4e8-4ada-b8d5-8cbf013bfbad",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2df19ef9-369e-4919-93c2-bf36025274ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd54f4ad-4284-4175-aea7-1774acd39f8a",
        "cursor": {
          "ref": "550d1456-ccb1-4cec-b1fb-5f3ed73b10de",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6f1ead95-edf6-415e-8a8a-38b43f0ae4b2"
        },
        "item": {
          "id": "dd54f4ad-4284-4175-aea7-1774acd39f8a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1d9b9154-27a0-4fef-909f-cc91fb392f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "393fd03f-be72-4c1e-b92d-fb7aa25cafb4",
        "cursor": {
          "ref": "31f60630-0e8d-43eb-a955-6d91f7041167",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e38a4811-f1a8-4223-94bf-d46f921d5643"
        },
        "item": {
          "id": "393fd03f-be72-4c1e-b92d-fb7aa25cafb4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2573a72c-9b04-4ab1-bce2-539bb4183c95",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "becec33e-e16d-4f40-b79d-bf765d158234",
        "cursor": {
          "ref": "4e22626e-cd47-4ed3-9658-ae11688cc3af",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6621e303-8f05-4a7c-b489-dabc23926d1f"
        },
        "item": {
          "id": "becec33e-e16d-4f40-b79d-bf765d158234",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "762e0418-ce00-408a-bce9-8796e60c0378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a197d4b9-3a21-49a9-bd90-2bc8faf7fb41",
        "cursor": {
          "ref": "5c1ce547-2489-456f-8abd-54951caaadb6",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "269071d6-1dbf-431b-89b4-748473ebd3a0"
        },
        "item": {
          "id": "a197d4b9-3a21-49a9-bd90-2bc8faf7fb41",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "68d38280-11dd-4e8c-95ce-9c83154726ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18605109-0b78-44fe-84f4-089882f1eedc",
        "cursor": {
          "ref": "ecb9a92a-5c23-4c04-9a97-80917c84bd39",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "bc357284-15db-42c5-8a67-3dd08a6bc692"
        },
        "item": {
          "id": "18605109-0b78-44fe-84f4-089882f1eedc",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "40ccb629-7d30-4bc2-84d8-b758273c7a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf80cf26-4a12-4684-b521-e169e0b591f9",
        "cursor": {
          "ref": "fe4f23d2-10f1-4957-ba5a-3aa2cd6977a3",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8973622e-be08-4b6b-a026-8eaaaff03c9e"
        },
        "item": {
          "id": "cf80cf26-4a12-4684-b521-e169e0b591f9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "775c6f8e-afa5-4869-a5d4-751564144374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4314a7f9-87cb-4b52-91ad-1383df9c986e",
        "cursor": {
          "ref": "64b4045f-a632-438b-bddc-39dfd652b9bb",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "64674847-b7bd-447b-85cd-43ee4ba0806f"
        },
        "item": {
          "id": "4314a7f9-87cb-4b52-91ad-1383df9c986e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3b67e497-54f8-4518-a7eb-ffb8bfb1d212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f96af38-f814-4198-8206-c3ba51fc56df",
        "cursor": {
          "ref": "e06a8bd1-12d6-4e6c-8b8c-784a9a170878",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "267c05bf-0d24-41df-9635-4610d778b5e5"
        },
        "item": {
          "id": "6f96af38-f814-4198-8206-c3ba51fc56df",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "deb8a659-093d-475a-b514-1f934855993b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e10c0a4-d874-48c6-9b9a-b3125db3c263",
        "cursor": {
          "ref": "633f7731-06d3-4ff4-9660-a9d21c9379a6",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9d833d04-bcca-47fb-a4e2-9772a31ca906"
        },
        "item": {
          "id": "4e10c0a4-d874-48c6-9b9a-b3125db3c263",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fedb96b1-489d-4f3f-82b6-012f3d9676a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d8252f-2aef-445c-a591-3aa89e23053e",
        "cursor": {
          "ref": "9767116e-08f2-402a-a189-f46131bf46e9",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1e491ab7-d4c5-4f49-a037-278c7e7d87f9"
        },
        "item": {
          "id": "14d8252f-2aef-445c-a591-3aa89e23053e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0ca6755b-b08c-4479-9fdc-09f06c8e67fc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "25a5d830-b7ab-4a96-a049-0da29771be75",
        "cursor": {
          "ref": "92fbb1e6-9a44-4b8e-ad6a-324ab6a2bc47",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d7e78da8-eb11-4bd0-9a94-2428f03d2153"
        },
        "item": {
          "id": "25a5d830-b7ab-4a96-a049-0da29771be75",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5719b49b-ad42-4c5a-8bcc-3c871530db50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d8a260-ca1d-4807-936c-4b1b487b0317",
        "cursor": {
          "ref": "1c0a689c-0226-49b7-8eab-44f6467de379",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a6cf4a39-2bf9-45b9-af8e-3cb4188d9569"
        },
        "item": {
          "id": "d6d8a260-ca1d-4807-936c-4b1b487b0317",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "15735423-c202-46d2-949e-4786894a1d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9229732-5347-4b2d-aa9f-d217d5c14d85",
        "cursor": {
          "ref": "4cd4d4c7-2eb2-4d52-999f-6a8562c88357",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8c126006-e8b0-42ab-8e5b-0772bdcc8437"
        },
        "item": {
          "id": "b9229732-5347-4b2d-aa9f-d217d5c14d85",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "dd1b41d1-dcd8-465c-914a-e643cfd90f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d7375e-c679-412a-a984-939d331d83e4",
        "cursor": {
          "ref": "5617959e-f8ed-4a6b-ae2c-3ddc66e16bbe",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "aa842bc4-7bd6-4621-aec0-bb41cc09fdfa"
        },
        "item": {
          "id": "38d7375e-c679-412a-a984-939d331d83e4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "66f02783-c4c6-4907-9a8b-120d70b73a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf361e71-fb3d-4a1c-bcd3-8e5249a38fe2",
        "cursor": {
          "ref": "2c18048d-ecb7-4186-a60e-88dd5243e88e",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "11826375-7d61-4c7a-b715-27f1165caba3"
        },
        "item": {
          "id": "bf361e71-fb3d-4a1c-bcd3-8e5249a38fe2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ba20c9c5-9f88-450b-b885-a8ae36586644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c57363-a7b2-439d-8707-71fbf67dfff1",
        "cursor": {
          "ref": "dc57e7f8-c335-40b4-bbb2-0ce0159a3b02",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "210d8d75-51a7-4ed5-a801-be5b81632d7f"
        },
        "item": {
          "id": "35c57363-a7b2-439d-8707-71fbf67dfff1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0f6abe4d-3e6b-4e0d-b090-57266d269424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d2a56d-4c3d-4dac-9fca-004329aeb463",
        "cursor": {
          "ref": "50ee3d71-b650-4c4d-b78a-27b98630fddf",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f99ee46a-cccb-449d-ac73-57258cfaafe2"
        },
        "item": {
          "id": "88d2a56d-4c3d-4dac-9fca-004329aeb463",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f3a6755d-4f22-4f6f-a976-19908ff15763",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 84,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "7c03e37a-c608-4b0e-ae14-ad7b8700aedc",
        "cursor": {
          "ref": "e0704cae-e13f-4c52-bbf9-8f34a19d0ce8",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "cc2d4feb-96c5-44c4-80f1-2d5fe295d50b"
        },
        "item": {
          "id": "7c03e37a-c608-4b0e-ae14-ad7b8700aedc",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "cb3260f2-1798-4e33-a042-7a67384171a2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 76,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "6dff2101-3dc1-4937-8b6d-daf4b901b0f6",
        "cursor": {
          "ref": "143b8154-d39e-4f46-ae80-9062e0710009",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ee052bc8-0b3c-40cb-bcbb-dfc08752624a"
        },
        "item": {
          "id": "6dff2101-3dc1-4937-8b6d-daf4b901b0f6",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4939c9d1-a66a-4506-a60d-7c2c9c4e3bf0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "5f3ed1b3-db5b-4a43-bcbc-b47ddf06d21c",
        "cursor": {
          "ref": "792aabcc-43e2-4fe6-8e73-9ff1dde7d6ad",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b50a6220-80a0-4ef2-b201-f4b0ff1d5d89"
        },
        "item": {
          "id": "5f3ed1b3-db5b-4a43-bcbc-b47ddf06d21c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9c9a66d4-1a47-4c2c-8d6f-998ce689734a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "8e4dc06a-5b3c-4c18-802a-0518d674af1a",
        "cursor": {
          "ref": "2a84d7ac-d514-46dd-bfe1-8dd5c8dbbf34",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4dd247e3-0d05-492a-af48-7c682a286f63"
        },
        "item": {
          "id": "8e4dc06a-5b3c-4c18-802a-0518d674af1a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "8a848877-3f52-4ac7-9e61-8fd5b768b2e1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "a8a2a5d3-6b50-400b-a5e4-0afcc4027c1c",
        "cursor": {
          "ref": "6648ba49-eb4b-4ab7-a803-b621742aea5c",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6551ae26-10d9-482f-b748-22d3d47ed565"
        },
        "item": {
          "id": "a8a2a5d3-6b50-400b-a5e4-0afcc4027c1c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "523e8f10-e426-4261-b902-3e8261fa2152",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "bbbfd49a-5907-47af-b217-b599922ef20f",
        "cursor": {
          "ref": "6ee79760-6751-4edc-8a09-3dfe657be933",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "90a5a7be-8b71-4013-9621-e321e899b80d"
        },
        "item": {
          "id": "bbbfd49a-5907-47af-b217-b599922ef20f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5ae8e8f4-0e58-4ef0-ba5c-a2a6680f52fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 117,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61b8af5-a193-4f71-bf1a-c2f762c11fd0",
        "cursor": {
          "ref": "9c4e9465-6b0e-4c85-b9f8-6d6e61389b8b",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5394f49d-13db-44d3-8cae-8a76e79a8fab"
        },
        "item": {
          "id": "a61b8af5-a193-4f71-bf1a-c2f762c11fd0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0a9b9439-cc38-4b08-9760-198eb407c8ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7803c5-8067-44eb-9ff2-34c55abb82ff",
        "cursor": {
          "ref": "ad8d6ec2-7e91-4113-b4e5-fac0cf2e28db",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7242a548-7390-454a-bb2b-6046cf266f4d"
        },
        "item": {
          "id": "be7803c5-8067-44eb-9ff2-34c55abb82ff",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "42dcfa28-1a47-4844-90fa-e94bcce31479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37416db-e8ab-49bc-afc0-ba4beb719597",
        "cursor": {
          "ref": "7cf8cdd9-9e7f-4427-9f68-34477aaabe97",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e03c7d50-2b93-4965-857b-082eddea48b8"
        },
        "item": {
          "id": "d37416db-e8ab-49bc-afc0-ba4beb719597",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "660d1a51-d30b-4bc6-a905-d5e23e19cefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878110ae-87ab-4fd2-939c-96f79abebc74",
        "cursor": {
          "ref": "14ac2c37-222d-43e1-abdf-95da92b406fe",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1c76665f-6b32-41b6-8e73-cffae74d4cc3"
        },
        "item": {
          "id": "878110ae-87ab-4fd2-939c-96f79abebc74",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8775dd25-5be9-400e-bec3-36df98216849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7581fd3b-3f27-44e2-8256-f21fbcbd12a0",
        "cursor": {
          "ref": "d39350c9-f8d7-44e3-9860-d00d8db69cec",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "32b805de-1999-4ffb-91d0-9ca1ea152476"
        },
        "item": {
          "id": "7581fd3b-3f27-44e2-8256-f21fbcbd12a0",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2e11a81d-4d9a-4a74-b1b6-7dd654c7d669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5d479a-b77f-4438-9f7b-b217749921e2",
        "cursor": {
          "ref": "6f29469e-e1cf-4242-a828-20a26bb6b88b",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "47f73c1c-d4a5-4be9-b2d6-19a7b4da56cb"
        },
        "item": {
          "id": "4a5d479a-b77f-4438-9f7b-b217749921e2",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "50915b77-a270-4d34-aff9-1dbb04a0f7f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a137d1f2-b4c9-411e-a7e5-2e933b4ee556",
        "cursor": {
          "ref": "df65b6c9-5432-4b6d-9680-34b0090b61cc",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b1201ecf-44e2-465f-b394-20c8a7ffa5a0"
        },
        "item": {
          "id": "a137d1f2-b4c9-411e-a7e5-2e933b4ee556",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c553a089-7301-460c-8d5d-a33121ba5449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a059d747-4a47-4d73-85f6-8dd557289795",
        "cursor": {
          "ref": "ae9ab148-5c4f-4171-bb2e-156a4f8287a3",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3700a2fa-e9da-476e-9990-f95e640ff9fc"
        },
        "item": {
          "id": "a059d747-4a47-4d73-85f6-8dd557289795",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "366ab038-7d85-475d-81ed-3cb80849c0b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c23dcc-4060-4408-9f40-440ed753334c",
        "cursor": {
          "ref": "823cb7ae-8902-48f8-9ead-6ab0819e5479",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7b93ec18-788a-4deb-b6a5-dadb70bf6f83"
        },
        "item": {
          "id": "f6c23dcc-4060-4408-9f40-440ed753334c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a51c4ce2-0858-4ec0-aac6-d57cc2e5c0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258a8ad1-152f-451c-99cc-8e130db77e46",
        "cursor": {
          "ref": "c73958cd-9aad-4280-a3cb-261ca5d3c612",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8b676d29-b644-4934-b767-32fdb9ba83a7"
        },
        "item": {
          "id": "258a8ad1-152f-451c-99cc-8e130db77e46",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a70ef860-c1ae-41d7-a9e1-0145aa3557d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034f63a8-6a10-48db-a251-f2ead17b63d9",
        "cursor": {
          "ref": "04eaa39f-57e1-4c1b-a7d6-d2e96d6ec89a",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0e0ca677-07e9-4f6e-a3e0-a2c78cffa933"
        },
        "item": {
          "id": "034f63a8-6a10-48db-a251-f2ead17b63d9",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "82780c1f-72e6-498d-98ee-e6b64d4315e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33ebeda-a9e1-4a61-a7ad-be133d1c8740",
        "cursor": {
          "ref": "9b9a2a2d-3490-45db-ba58-1dab33206cf9",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6103566b-7cd8-4089-8a3b-ce86bba3322c"
        },
        "item": {
          "id": "d33ebeda-a9e1-4a61-a7ad-be133d1c8740",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7f751d6f-978d-42a2-aff9-8e900cd68882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745610b3-4073-467a-a881-02ecfaf740ca",
        "cursor": {
          "ref": "aeb05274-36eb-44bc-b05e-de7e7b8c6768",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "480bda47-61e3-42dd-b959-22181b2fbfba"
        },
        "item": {
          "id": "745610b3-4073-467a-a881-02ecfaf740ca",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "5988716c-19f4-470e-bfc4-2584d20e94a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea3c3ae-7b14-4cde-b523-1ba92d3a77f9",
        "cursor": {
          "ref": "9ba466bc-f3f7-45ac-a985-9391f79dea1b",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c72e996c-5153-4cd6-9275-085a13df3cd7"
        },
        "item": {
          "id": "3ea3c3ae-7b14-4cde-b523-1ba92d3a77f9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1308bad1-b9bf-4db3-a1e6-5941a7fc1a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c41ed2-7973-45f6-a20b-754d8d4c64d5",
        "cursor": {
          "ref": "a9aac7e7-5007-46b1-8e2b-30a13f14665b",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c3150774-5609-4112-aa54-6e770a20e956"
        },
        "item": {
          "id": "63c41ed2-7973-45f6-a20b-754d8d4c64d5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4667ca27-1aa1-4c4e-a656-3c36ea37810f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01c573e-fb1d-4735-abbe-8d970200aeed",
        "cursor": {
          "ref": "16102b0c-9810-4631-9ef6-46327d2c2f1e",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "073fe51f-49ee-49a8-8a6d-751d8e2f6324"
        },
        "item": {
          "id": "b01c573e-fb1d-4735-abbe-8d970200aeed",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a98a4ee0-548c-4ee5-b76f-438a0ae6b595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c8e52d-d675-41fe-8899-28ffd4fbfa03",
        "cursor": {
          "ref": "6b0e026e-496f-4274-b118-21e89b52d00d",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "82c079b9-c9d5-4f74-9e47-2de45fae5f2b"
        },
        "item": {
          "id": "f5c8e52d-d675-41fe-8899-28ffd4fbfa03",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e7fa3526-4687-4f6e-8b5d-999b9ff3111c",
          "status": "OK",
          "code": 200,
          "responseTime": 168,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "aa57474b-9a06-410e-9000-d3ddb991629a",
        "cursor": {
          "ref": "53595d2e-96c2-485d-ae9f-002d4a3a420b",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "bfe9940a-1528-4814-aa09-2c9fec33b653"
        },
        "item": {
          "id": "aa57474b-9a06-410e-9000-d3ddb991629a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "df46d8d9-941b-454d-a760-e98919d616b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01fa1de-ae16-4277-bd6d-10181b1a020f",
        "cursor": {
          "ref": "c40ef2cc-f27d-4ce9-ab71-914b78f82cec",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "39a3dbe4-880e-4a61-beed-56e7293204ea"
        },
        "item": {
          "id": "f01fa1de-ae16-4277-bd6d-10181b1a020f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "130b9362-ea8d-4669-93da-38c0dd65c1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf80cd9-419b-4071-aec8-f10b2684d111",
        "cursor": {
          "ref": "adda4a09-988a-4944-9d3a-8c1848181c6b",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "86a46169-71fa-4a80-af86-3a99b22a18d8"
        },
        "item": {
          "id": "faf80cd9-419b-4071-aec8-f10b2684d111",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7c0b236f-476c-420b-aebf-4ac1bbd68de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2417dbc0-8f30-41b0-bb27-20925a36b282",
        "cursor": {
          "ref": "d94fc9ae-2218-4428-8572-30f0e53e7060",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2e6b2e12-da34-485a-8a25-346bbfc1e733"
        },
        "item": {
          "id": "2417dbc0-8f30-41b0-bb27-20925a36b282",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "56b9317a-8ed8-4178-8720-695ea4a07a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9fc0ccb-c855-497c-9c68-47eebef35a9f",
        "cursor": {
          "ref": "a701c91b-5893-44a0-8eeb-421a06fef569",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e16320b0-4778-4799-acb6-77e7dc558cb0"
        },
        "item": {
          "id": "c9fc0ccb-c855-497c-9c68-47eebef35a9f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ee020d08-ee17-47fd-94f8-55456cfd177c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3959161a-3610-4c9b-97f1-25e973a21fee",
        "cursor": {
          "ref": "955ab571-a1b8-42e4-9255-a1291e693d12",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f582ccf8-c180-47a6-bdb5-c60e65afe5c0"
        },
        "item": {
          "id": "3959161a-3610-4c9b-97f1-25e973a21fee",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "17fe8f50-566a-452c-bd46-294110f41289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780f277b-cb98-4342-a50a-2c349008a317",
        "cursor": {
          "ref": "9399e1e2-2273-473b-9d8b-de38f5f85409",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "083f6329-bc74-41b3-bafb-64d6e34f6b29"
        },
        "item": {
          "id": "780f277b-cb98-4342-a50a-2c349008a317",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "369bd29e-65c8-4ecb-bef7-31d37ba1249c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892e8a58-f00e-44ba-8030-4f2a4d981e53",
        "cursor": {
          "ref": "8d214b10-7d79-4704-b7d3-d5a40517f63d",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6b7d770d-2804-4968-afef-236cce0aaeb7"
        },
        "item": {
          "id": "892e8a58-f00e-44ba-8030-4f2a4d981e53",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "000bfd7c-95fa-4aaf-a258-800db842cc41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e2a1b8-3efd-4e68-9276-445f29c48f5f",
        "cursor": {
          "ref": "2266de58-86d6-4c99-9e9c-9779b1030756",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0e199115-f46f-4418-b270-4cbe5fa747e6"
        },
        "item": {
          "id": "67e2a1b8-3efd-4e68-9276-445f29c48f5f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c85b9b54-ed66-4de0-bf79-bf8b2a727fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4b22f3-6233-49e3-b6cd-0324ced81d96",
        "cursor": {
          "ref": "04ae5b90-b86b-4787-b9be-cb754e47b051",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a3403c5d-6ac1-4830-b8a9-4987de3e84e4"
        },
        "item": {
          "id": "ed4b22f3-6233-49e3-b6cd-0324ced81d96",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "01935b5f-c1db-426b-b9c6-57e204c1b050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28fa937d-1f1a-4f46-8984-fdab6eecac7a",
        "cursor": {
          "ref": "82c48408-fbaf-456b-abea-5cbccbaa08fa",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "92198d2d-1d05-47df-8b60-12e4d14983f8"
        },
        "item": {
          "id": "28fa937d-1f1a-4f46-8984-fdab6eecac7a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5e3a9ccc-84dc-4982-ad16-b837e284e0c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bffab1e-fede-4f87-bd6f-b61b9e4cd096",
        "cursor": {
          "ref": "eb1ad1c0-6fe7-4b82-91d7-1e8bfb7529d9",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f8cc3e81-4f98-4634-a777-8cca567d0225"
        },
        "item": {
          "id": "7bffab1e-fede-4f87-bd6f-b61b9e4cd096",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6611dd8f-3855-47bc-8cae-b0d2f25f186d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591dcf6e-3690-45c5-852c-dd6538655e08",
        "cursor": {
          "ref": "54ab54f9-3145-42ea-a56d-ecb9501d975c",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e76f9ca1-0315-49ea-8441-5ec64182b1b6"
        },
        "item": {
          "id": "591dcf6e-3690-45c5-852c-dd6538655e08",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6193d59f-f4a9-4364-bce0-34c4009d453b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91fb8cd3-b2ef-415b-81a7-eb1d57986954",
        "cursor": {
          "ref": "b656ea9e-8311-4732-b469-3a635f515030",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1641a348-7635-4058-ba41-ba2c6ad76703"
        },
        "item": {
          "id": "91fb8cd3-b2ef-415b-81a7-eb1d57986954",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "19634542-ca69-43e7-8942-0652d23f4e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92adf08d-bc4d-4fec-b4ef-362803e81461",
        "cursor": {
          "ref": "079e09c3-9c6e-4d54-af9e-5a019af21b8b",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1a681bed-a0b3-4a49-9927-95f246b95f9b"
        },
        "item": {
          "id": "92adf08d-bc4d-4fec-b4ef-362803e81461",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7b1c9592-16ec-4e40-a5d0-e6d4116b1b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e37e36-05a2-4d70-ac8a-1391548ffb5e",
        "cursor": {
          "ref": "2e3ddb8d-3a8e-4799-9c92-7f5697585f25",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "08bee9bc-83ff-4583-89ac-d89ae5adfe04"
        },
        "item": {
          "id": "e2e37e36-05a2-4d70-ac8a-1391548ffb5e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7d9b0975-e95b-491a-9c65-e35c8a63c472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897fae57-d0dd-4bf5-8631-67a4dcb0a827",
        "cursor": {
          "ref": "de5c3300-6af7-4c97-ac96-3fb6fb53062e",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9fe0a541-e085-407e-977b-d24b7c71e713"
        },
        "item": {
          "id": "897fae57-d0dd-4bf5-8631-67a4dcb0a827",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "161fba7b-e4e1-446d-a12a-343c33036db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b054b695-d0e9-49c8-9247-c8667ce82d52",
        "cursor": {
          "ref": "8a4f8dc1-b59f-46da-b50b-5759a5248998",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ccc71b73-9432-42ee-8fb3-a542ad330590"
        },
        "item": {
          "id": "b054b695-d0e9-49c8-9247-c8667ce82d52",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "07ca1159-ed3f-496e-868e-f40ff6a0133f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdcc1583-ae52-4e81-a237-cde33f47c704",
        "cursor": {
          "ref": "2cd33c21-45e0-4a36-b5d7-13829cd12f7e",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5c36e827-85c6-4db6-8c2d-6873f6260b19"
        },
        "item": {
          "id": "cdcc1583-ae52-4e81-a237-cde33f47c704",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b760f48b-8581-4b7e-a923-344b3bc55796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb899844-d452-4bdb-9960-b3bcc8a4118b",
        "cursor": {
          "ref": "0fe10b5d-f2e0-4792-afbf-76ebc7379b42",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1c313e41-f699-447d-b96c-b1e8d1e06416"
        },
        "item": {
          "id": "cb899844-d452-4bdb-9960-b3bcc8a4118b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7292d0c6-8f20-4a30-81a4-3137202cc548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c15a11-9de8-4825-80b4-e148f04bd0c1",
        "cursor": {
          "ref": "1489665c-3b8b-40d3-a754-750c620dd889",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2ce8587b-2741-450c-896e-a898e4d74a44"
        },
        "item": {
          "id": "c4c15a11-9de8-4825-80b4-e148f04bd0c1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5c0f7442-b1b5-4562-8305-95d906ed47a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39d3cb5-3a82-4649-96cf-a31445da6317",
        "cursor": {
          "ref": "fc483e4b-6711-42b9-ba0d-9bf5d772df40",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "473bfebb-1837-4aaf-b570-305364bbb9a6"
        },
        "item": {
          "id": "e39d3cb5-3a82-4649-96cf-a31445da6317",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "46bc6628-07c3-48ce-9323-daf75078403d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d7de5e-1f24-4255-9f81-782e3482ad57",
        "cursor": {
          "ref": "af4d4bae-396c-4329-8dce-f78f7ccff0d3",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "777ce39b-7760-4c26-b4a8-d494d45e2f6c"
        },
        "item": {
          "id": "22d7de5e-1f24-4255-9f81-782e3482ad57",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "15df0c0a-f80f-465c-b7f5-4edbe4be897c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42f20b8-f7b3-4919-bb79-5defbf12c656",
        "cursor": {
          "ref": "6b629dee-1f95-4bbb-b4be-6167d4b2b429",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6cfc1253-d9ea-4079-9aad-9a514b7e70e6"
        },
        "item": {
          "id": "b42f20b8-f7b3-4919-bb79-5defbf12c656",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1e61141f-73e9-450d-a876-73c80de0c9e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6296204d-c28f-46a7-92cd-969de003e580",
        "cursor": {
          "ref": "2d996185-eb07-401c-adf8-4d61b1ef9f8d",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "fa5be30f-e34f-40ee-a0d4-08e4e98a8f63"
        },
        "item": {
          "id": "6296204d-c28f-46a7-92cd-969de003e580",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "650ab166-1d6c-4853-a688-3339cda70bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd84bc7-a584-4a65-964a-7118372bd00e",
        "cursor": {
          "ref": "4a08fd2b-5bf9-44e1-923f-05ec63848146",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "29168841-b9f9-49f2-aca1-63e9d81e1092"
        },
        "item": {
          "id": "5fd84bc7-a584-4a65-964a-7118372bd00e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "18603e9c-261b-4909-a4a6-d996ec52d332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5b4360-7f26-4a0f-b8af-6a6c62de5b3e",
        "cursor": {
          "ref": "2df15984-b693-4263-9d93-5457c3ed386c",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "72f0a406-9234-49f8-be23-01595622214e"
        },
        "item": {
          "id": "1c5b4360-7f26-4a0f-b8af-6a6c62de5b3e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "31ac21ba-6939-4c1a-a14c-02a8d8b6c6cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298da64a-58c6-4b0c-aa46-ad1774aac2fc",
        "cursor": {
          "ref": "af93d89e-c9eb-42ef-b881-487687f04c5f",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "10c600f8-bd67-4c0b-a1fe-dee5bf2606f7"
        },
        "item": {
          "id": "298da64a-58c6-4b0c-aa46-ad1774aac2fc",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a192bf98-3007-4738-8e1a-8b8b8daed3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce78b0a-ba65-4691-80e8-22fc47a977fc",
        "cursor": {
          "ref": "5c40e174-1489-4f90-a8de-5498778822cb",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "435058ff-1951-4981-8f77-cb47b0d164d4"
        },
        "item": {
          "id": "fce78b0a-ba65-4691-80e8-22fc47a977fc",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9f4ae62c-d26e-47f7-b3ab-ca02d4aed5d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e4dc11-5b70-4453-bfdc-e1cc807ba596",
        "cursor": {
          "ref": "2e5afd62-7e4d-4beb-8cec-2b317eae314e",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6d4f3245-8c1b-43c1-a10f-3e3b4eb73864"
        },
        "item": {
          "id": "b5e4dc11-5b70-4453-bfdc-e1cc807ba596",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2431687a-0c8a-4c31-b85a-6ef816aa9af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a334e725-97b7-4292-8596-58e13418704e",
        "cursor": {
          "ref": "5f0d1a9f-60fc-4960-9943-9369d9fa6792",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "73c2df48-2cb4-43bc-b932-a70e44a676aa"
        },
        "item": {
          "id": "a334e725-97b7-4292-8596-58e13418704e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "67284f37-a709-494b-8fd1-8c7b1a32bb0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d7c235-18cb-40f7-8518-4333189f05cb",
        "cursor": {
          "ref": "bae9d929-79b5-446e-b00c-683f067753f3",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "514939f7-3ff9-453b-ba74-85b86c0acb49"
        },
        "item": {
          "id": "15d7c235-18cb-40f7-8518-4333189f05cb",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "4130194b-7b4a-4ffd-8250-b80328c059ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1189ee-63da-42f4-abbf-ab3d52d1db9d",
        "cursor": {
          "ref": "84398e0c-dd2e-4a8b-8d71-7293205ce52d",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8c9107cb-f479-40c9-a2b6-9cef5a963b2f"
        },
        "item": {
          "id": "dc1189ee-63da-42f4-abbf-ab3d52d1db9d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a53d2864-3fe7-4188-a577-d08ae350c9f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f53850-bd4a-42cf-aa32-4358f71d72f5",
        "cursor": {
          "ref": "38ace664-1a5a-41be-b62d-d7ab675adb44",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2797b70a-00dd-43e7-84eb-080530185ace"
        },
        "item": {
          "id": "97f53850-bd4a-42cf-aa32-4358f71d72f5",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d14f077e-a417-44e4-831c-487f516a1185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335a7996-149e-4c9b-8cdd-577dc9fc1abb",
        "cursor": {
          "ref": "8241034c-397b-44f7-ad8f-b3daa399a3f2",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "bcfc0277-b190-47ea-a46d-6c7b1b88b995"
        },
        "item": {
          "id": "335a7996-149e-4c9b-8cdd-577dc9fc1abb",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4d182bec-529d-4349-a582-b81b659c139d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8054d0b5-5360-464b-987a-208305697f8a",
        "cursor": {
          "ref": "a26a88a3-de9c-4f39-b1fe-4679d63896e3",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "91fbbc61-8ccf-46a6-aa03-8a391238d52b"
        },
        "item": {
          "id": "8054d0b5-5360-464b-987a-208305697f8a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "7e738a14-bea7-4aee-aca8-4acd8cf7284a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ed562d-d9f6-47d6-b283-67dea8641527",
        "cursor": {
          "ref": "2392d4e7-6c89-4bac-9d41-29bd7acca830",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b35837c3-aa9d-42cf-875f-9ffb631c02ec"
        },
        "item": {
          "id": "e8ed562d-d9f6-47d6-b283-67dea8641527",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "00314102-4747-4f03-a392-8a484e334983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb9030f-5ef6-4107-bd00-577fc9ccc9ba",
        "cursor": {
          "ref": "a63119e3-71c0-4e00-99ee-da8a63ec3d7a",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1ccf68af-a745-40ef-8149-bee01b8f3486"
        },
        "item": {
          "id": "5cb9030f-5ef6-4107-bd00-577fc9ccc9ba",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1ef03d23-43fd-48f3-8cc1-e28ca39c9cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb93c3ff-52e1-43bb-b3f1-22b8d4b57afe",
        "cursor": {
          "ref": "a1cbd5d6-502d-4e4f-830e-ff4652905485",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "072a66ca-91bd-4e19-adad-735db1ba2098"
        },
        "item": {
          "id": "fb93c3ff-52e1-43bb-b3f1-22b8d4b57afe",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "cc412f12-7cb7-44ca-934c-9c0c22e28d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3841429f-05bd-4b8f-b4e6-bb0bf11c635b",
        "cursor": {
          "ref": "24334608-dc41-4040-aea0-0ed00b2396c3",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1522e345-f326-4e98-abf4-8cd3be93cd98"
        },
        "item": {
          "id": "3841429f-05bd-4b8f-b4e6-bb0bf11c635b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1cfd41fd-e601-4260-ae4e-c6cb2ede3890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b8c38a-0982-4e6f-b8fc-72dc95607c5c",
        "cursor": {
          "ref": "6bdde356-2cf3-4c58-b8c0-8ce034b298c7",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ab0c23c3-5942-44c4-a610-2ea116153f5e"
        },
        "item": {
          "id": "b9b8c38a-0982-4e6f-b8fc-72dc95607c5c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "947744dc-a4eb-4bfc-be4c-ef0fd54f7391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85449269-8ac1-4df0-8847-d09eed6c18ff",
        "cursor": {
          "ref": "57cd1b22-36b2-4242-9ff2-0562dcacb128",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9640b17f-fa99-4bb1-93ea-7972b62d0ef2"
        },
        "item": {
          "id": "85449269-8ac1-4df0-8847-d09eed6c18ff",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "53d5c1c4-208f-4e18-a456-ac0de85d7557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c104e2d2-dfcc-44d6-86fc-1ae490b7082e",
        "cursor": {
          "ref": "7a968cea-ee40-46c1-8940-373aea492219",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8805e8df-07f3-4780-a312-fc8db7c58068"
        },
        "item": {
          "id": "c104e2d2-dfcc-44d6-86fc-1ae490b7082e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2cc2e741-9fe3-4f71-9976-6beb4eb6287d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3989afd5-328d-45a7-9c00-7cf8f10ed6a4",
        "cursor": {
          "ref": "20f50564-13a8-465a-a430-99cad1bbf65b",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "743e7f4c-4fa1-4cea-9614-c3957587c1e9"
        },
        "item": {
          "id": "3989afd5-328d-45a7-9c00-7cf8f10ed6a4",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d0c6d280-77dd-45b2-aea5-c29e848a2a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85264474-562b-49ed-adc3-750af63faa9d",
        "cursor": {
          "ref": "0fab8624-0dce-4fdb-acd5-eaac86688a89",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "19c09239-384b-44a3-80fe-e9b34a4373d4"
        },
        "item": {
          "id": "85264474-562b-49ed-adc3-750af63faa9d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c420eb08-24d2-4333-a1dc-625e65696425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c990f14b-ad15-495c-b327-209d64c8a0b4",
        "cursor": {
          "ref": "c33a2025-4b55-4b24-b404-5deaf9ab8133",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d246e85b-d75a-4040-bbf2-a30cfbdafc3e"
        },
        "item": {
          "id": "c990f14b-ad15-495c-b327-209d64c8a0b4",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "eec9572c-13c7-4d4a-bc0b-0c22d1416f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e2f72a-26d4-4617-b060-72ec32d129d7",
        "cursor": {
          "ref": "72eba44e-b757-49a4-b5d4-1c1a3a7ed352",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ff4bbc7e-6988-4b50-be8f-89e74ec2d80d"
        },
        "item": {
          "id": "a3e2f72a-26d4-4617-b060-72ec32d129d7",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7e3b59e4-fad2-442d-9c63-e00a1c73202c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353fad62-585a-444a-872e-4ddaa3737892",
        "cursor": {
          "ref": "72cf0174-6c89-4017-a4a8-b31b7e5fc601",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8ee8d976-fbdd-4aa5-ab91-aad7d87a1542"
        },
        "item": {
          "id": "353fad62-585a-444a-872e-4ddaa3737892",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0cd092d1-1227-4755-8fb2-002de2b1e82b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b6a4ab-9756-4350-aef4-b741320f4cfa",
        "cursor": {
          "ref": "d7ac0cbb-ec61-4a58-81b6-25c833fd2cad",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9324e5b4-44a2-4dd2-befe-663ffe55b00f"
        },
        "item": {
          "id": "d6b6a4ab-9756-4350-aef4-b741320f4cfa",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8297c2a4-0509-425e-b461-fea1285c0f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070d9ea4-5209-423c-9278-c70b2d116824",
        "cursor": {
          "ref": "9fa12004-ce58-4cd2-850a-3ee08222eda0",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "af16f27a-3a72-4db1-9af8-8c5c7b38eed2"
        },
        "item": {
          "id": "070d9ea4-5209-423c-9278-c70b2d116824",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "4a7fe427-dd05-46e0-87f8-d742e591bc71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be0604b-e455-4ff1-97c3-d672c73984c7",
        "cursor": {
          "ref": "a18d43ca-8a46-4d78-98a4-6db5a13af09f",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4233c137-3778-4ae5-ad1d-4ce74599a602"
        },
        "item": {
          "id": "6be0604b-e455-4ff1-97c3-d672c73984c7",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "11410a13-a2d7-4622-ab88-5385748c3f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854354a8-56a6-4c98-8c01-b7f1cbf78e07",
        "cursor": {
          "ref": "49934c34-7fe6-4170-9f42-0636a3cacbe5",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e37a5ab2-915f-4249-91d5-2bb62f430daa"
        },
        "item": {
          "id": "854354a8-56a6-4c98-8c01-b7f1cbf78e07",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5350e858-54f0-4ffa-a77a-769c64e607bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac1579b-a61e-4d0b-859c-d45e8ac44164",
        "cursor": {
          "ref": "4f2b054a-d6ea-40bc-9e51-80c6df6a7e2c",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "135f77de-3c86-4c44-ab41-71f958583a0b"
        },
        "item": {
          "id": "9ac1579b-a61e-4d0b-859c-d45e8ac44164",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e132ec40-05d3-4a44-aa60-e98d1d620ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b345be80-9a32-488f-82f0-8202012319d7",
        "cursor": {
          "ref": "d2ff107c-1f5b-4df1-b542-cc5a89f7923e",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e68dac8c-ae4d-4fce-9b24-48f0afec242a"
        },
        "item": {
          "id": "b345be80-9a32-488f-82f0-8202012319d7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "02c0544d-72d0-4f12-b57d-ede3fef852ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79fd8be0-dc02-4add-9d5c-cbf1a4e6373a",
        "cursor": {
          "ref": "2bab5bb3-b6e7-4ed4-ae80-a97cccd55a61",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d5215844-d9a3-4086-a853-2bfce42a4b72"
        },
        "item": {
          "id": "79fd8be0-dc02-4add-9d5c-cbf1a4e6373a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "157b1d86-ca1a-4934-ab1a-e1a23c966203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321f92ac-8180-42f7-b5d3-cae68cdff63b",
        "cursor": {
          "ref": "e1562eb5-9ff2-404f-a1d0-2e5f0eaa70e7",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "6c44dc10-38da-4424-be7f-b2088f4f154f"
        },
        "item": {
          "id": "321f92ac-8180-42f7-b5d3-cae68cdff63b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6e1bc742-15d2-4398-87cf-21e2483ec089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6d69e7-8eed-4ca5-8317-7c2842e5189c",
        "cursor": {
          "ref": "6325217c-29ef-4711-98e0-93b1f3a54803",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "0024d92f-3574-4a81-a90c-a192ca8b64ee"
        },
        "item": {
          "id": "5e6d69e7-8eed-4ca5-8317-7c2842e5189c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b4f367da-5dbe-4d16-870b-215a89f2329b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad433edc-5c69-46ad-8df6-d754b4d650ef",
        "cursor": {
          "ref": "e2a06bf6-7abc-4eda-9f27-4d1f837939f4",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "961c29ae-b232-434d-992c-86130963f99d"
        },
        "item": {
          "id": "ad433edc-5c69-46ad-8df6-d754b4d650ef",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c4d56110-cffb-44b8-9a75-6d6bab34e9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87663dbd-2b2d-4205-a832-26632ac6d24d",
        "cursor": {
          "ref": "aeb23fd9-cf8f-4db6-b568-731d03cd475d",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "baea1fc5-0f25-4f55-b8fa-2f6268529717"
        },
        "item": {
          "id": "87663dbd-2b2d-4205-a832-26632ac6d24d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b2eb282d-5616-4149-8358-6839859b1414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3ff497-0a3f-47c7-8eac-fe5f56cbe582",
        "cursor": {
          "ref": "49f5b784-dd43-48f9-a378-25f0bc8258cb",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "8bd43d43-fba6-4833-84d7-9e08fefe7685"
        },
        "item": {
          "id": "0d3ff497-0a3f-47c7-8eac-fe5f56cbe582",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d517b754-3a97-4483-8b6d-852f7c2f8a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba8b598-320b-47d1-a413-8867653ec51f",
        "cursor": {
          "ref": "e6063e08-457f-4164-9942-8d4bb1b703e7",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "49a717c6-c75c-406f-b81e-95f5822bbab3"
        },
        "item": {
          "id": "aba8b598-320b-47d1-a413-8867653ec51f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "76cd9928-480e-46d5-9e43-cc61f0e2ea38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67995d5d-f55c-4322-bae2-fc1340de13e2",
        "cursor": {
          "ref": "c86a41a6-3b78-4668-a203-be2080594d22",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "b5fda855-eff5-4855-b20a-21cad7aea01e"
        },
        "item": {
          "id": "67995d5d-f55c-4322-bae2-fc1340de13e2",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "794fdecf-0e90-4edc-ad84-f4f144e8aaca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a18d5c-183d-4b47-abea-9fe19659ebce",
        "cursor": {
          "ref": "6f7c3bf9-1269-4792-b6ea-5aeb604b2588",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "470d38c9-2065-443f-a01b-41510edc5228"
        },
        "item": {
          "id": "96a18d5c-183d-4b47-abea-9fe19659ebce",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3146bb4f-fb4e-48ce-bf45-3bf4a902a40f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8831e33e-4385-4d36-9ff8-fd7d98b32497",
        "cursor": {
          "ref": "fa26f41f-61a6-43ff-9354-1eb19c9d88fb",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "e364160a-c07d-4bda-b42d-d9a091f73d29"
        },
        "item": {
          "id": "8831e33e-4385-4d36-9ff8-fd7d98b32497",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6d0777fe-e168-4624-8512-6c2e460c1985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a1ccbd5-ee82-4c20-bf93-ae7996720334",
        "cursor": {
          "ref": "2b22b8c1-d131-435b-b59c-ce8cbe2c3f10",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "6e72ec7d-9131-491a-8850-bc511610cb4c"
        },
        "item": {
          "id": "3a1ccbd5-ee82-4c20-bf93-ae7996720334",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "28560a7b-54e1-47ed-8155-5a7c2a61fd97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41791033-3cad-4340-a95f-6554e25eb1a5",
        "cursor": {
          "ref": "533c2773-3eed-4e8e-a24f-b909ecde59ea",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "49e15b26-f586-4b03-8f70-5fc343e23098"
        },
        "item": {
          "id": "41791033-3cad-4340-a95f-6554e25eb1a5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f2b5adb3-8f25-4e0e-b6ec-7feaf320f4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67288e9-91c3-4132-a781-0b0f9bb5a84b",
        "cursor": {
          "ref": "f6742e6c-047b-461b-ba4e-5dcdb6997d54",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "f2e25d89-c31c-4f69-b956-83ec286dec30"
        },
        "item": {
          "id": "f67288e9-91c3-4132-a781-0b0f9bb5a84b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2251075e-a7e1-42be-b31f-606e81a7e74b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ecd7e42-dcf2-4a58-a006-a493e20a25eb",
        "cursor": {
          "ref": "b6cea07b-d1ac-4671-849f-21ff1eaa1c95",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "bd2cb249-49e2-4d9e-807a-ee54907f3c50"
        },
        "item": {
          "id": "3ecd7e42-dcf2-4a58-a006-a493e20a25eb",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "083ec9bd-b39f-464a-bf18-ac0c9ff25c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8aaa0fc-1e0a-4c27-b6ec-9447881c4372",
        "cursor": {
          "ref": "b33ba718-dfae-4fc1-b1b1-610f3140a9d0",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "62763396-1619-4065-b679-e4403adfa749"
        },
        "item": {
          "id": "a8aaa0fc-1e0a-4c27-b6ec-9447881c4372",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5f5f5196-a375-4df4-b810-fb3aadab55e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1691f4f-9e34-40c7-bdea-a4e56b4b565b",
        "cursor": {
          "ref": "31f7e70b-f2ba-4b95-a92b-d163c45c7d49",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "12752d64-4e14-49f4-b64c-f184173914de"
        },
        "item": {
          "id": "d1691f4f-9e34-40c7-bdea-a4e56b4b565b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "033de470-bdf1-4beb-8ec3-9c0e9cce466a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d493228e-43bd-4ef6-8d06-f3511ac21ead",
        "cursor": {
          "ref": "73e15b69-05be-4590-92eb-8b675f20185a",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "e68ab275-4287-44a8-bb9b-c38354e2be1f"
        },
        "item": {
          "id": "d493228e-43bd-4ef6-8d06-f3511ac21ead",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ad5259a5-f18f-4060-973d-b05b98c24524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d4ecd6-7e31-414e-9f19-86487f866461",
        "cursor": {
          "ref": "de6aee67-968c-41ce-b97b-b0087cd14d6a",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "1904c392-d0cd-4fa8-beac-ed23f56c0d1f"
        },
        "item": {
          "id": "d1d4ecd6-7e31-414e-9f19-86487f866461",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "847cf1d5-c527-48c7-8bcf-f88909b58c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56bd1e26-2a73-4896-bd0c-8df6dd17f508",
        "cursor": {
          "ref": "37fd18a6-ccac-4a3f-97e3-c223aa6db0af",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "05f51212-cfb2-4ed2-bdcd-644fa979994d"
        },
        "item": {
          "id": "56bd1e26-2a73-4896-bd0c-8df6dd17f508",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3c51202f-fc80-4312-9227-2e26cd089a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af0abdcc-63e1-4387-a8e2-c9da6736e5ef",
        "cursor": {
          "ref": "aab7a96a-0f7e-4a99-8adc-3bc3121872ac",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "3157aee8-d1b7-4e36-9ac1-d0c2bdc9d438"
        },
        "item": {
          "id": "af0abdcc-63e1-4387-a8e2-c9da6736e5ef",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "407fd345-fa88-414b-a3d0-933d0a3f4d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a5d578-cbc0-44ac-89b4-81d6511e7c1f",
        "cursor": {
          "ref": "21be333b-e4e4-423d-8ecf-426075947cc6",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "8e26853f-87d1-4a49-a7e4-88b44046de25"
        },
        "item": {
          "id": "f4a5d578-cbc0-44ac-89b4-81d6511e7c1f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9b60e706-6d86-4e0d-a961-bf18352733c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b30023e-bac0-41bd-ad3b-17b5ea097826",
        "cursor": {
          "ref": "a3f8b4db-956a-4374-8dec-ae9dbc500fbd",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "1254c830-197c-4743-a2a5-9702120a78d8"
        },
        "item": {
          "id": "9b30023e-bac0-41bd-ad3b-17b5ea097826",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8835078a-622f-485c-8e17-28f620dabc3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "279b9d42-78a7-4493-859a-91c84a6d99e4",
        "cursor": {
          "ref": "16c95a62-4d1d-48d9-a7de-bbf9d602c803",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "b990096e-7820-4fdc-9e3c-41695a3e34bb"
        },
        "item": {
          "id": "279b9d42-78a7-4493-859a-91c84a6d99e4",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "eae44578-4e8f-4add-a80e-f8a6852af1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713eec3f-e16d-4321-b7ac-03e766acc9d1",
        "cursor": {
          "ref": "e68d110f-7741-4f82-bdee-c59472c61692",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "79fab2cd-71b7-4725-b673-1bd37d4ec354"
        },
        "item": {
          "id": "713eec3f-e16d-4321-b7ac-03e766acc9d1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4bfa2b47-e9da-4597-8dcd-cfdddc199385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b53288a-e0ca-423a-b8c2-0a5dce39da37",
        "cursor": {
          "ref": "3bdefe55-8092-4654-8ed6-c1570b5fb668",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "89be5043-b608-4f7b-bc8f-73c9ae15190b"
        },
        "item": {
          "id": "8b53288a-e0ca-423a-b8c2-0a5dce39da37",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5740e711-9e79-4676-a93a-24be62d3bae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4983fd47-f01d-4d6f-93f6-bc82a1a1dc48",
        "cursor": {
          "ref": "a7d8b7a7-bc73-453b-89f6-abfa5f7fa89a",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "6eded64c-ae66-403d-b4a8-ac92035623bd"
        },
        "item": {
          "id": "4983fd47-f01d-4d6f-93f6-bc82a1a1dc48",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "32fc825f-ded1-43b3-84c9-d9aedf71113d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222803bf-0a99-4201-9543-b5451674a9cf",
        "cursor": {
          "ref": "65002b54-b585-4e2e-8a2f-51cdf8c154e2",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "0420c167-24f2-4db3-a70e-7033f28ab4c5"
        },
        "item": {
          "id": "222803bf-0a99-4201-9543-b5451674a9cf",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d75c77b2-166c-4c30-a54c-f32503d521a0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 60,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b416fabd-86ba-4248-ad79-97ce59f5d79a",
        "cursor": {
          "ref": "9f9df2d4-6c90-489f-ab0b-004feb13fad9",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "00f033e4-afd1-44f0-bfdb-294913083359"
        },
        "item": {
          "id": "b416fabd-86ba-4248-ad79-97ce59f5d79a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "968357c4-445d-4768-bdfe-d782fe97cc4b",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c905c3d4-1f66-40e7-919d-0e60973b3dbf",
        "cursor": {
          "ref": "6c5fc618-d4b8-4b49-958b-39f778133917",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "29e31b01-0712-4fef-8e34-b5d8c50176e3"
        },
        "item": {
          "id": "c905c3d4-1f66-40e7-919d-0e60973b3dbf",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1ac8ac14-2af5-4eb3-9a43-3b2c14777a96",
          "status": "OK",
          "code": 200,
          "responseTime": 2441,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d76bd1-65d0-4ddd-97d8-bcb99ecd2095",
        "cursor": {
          "ref": "61e501a0-5f4a-4239-a6cd-88112ed594fb",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "59fefa5a-722e-4677-9328-ed24a957a236"
        },
        "item": {
          "id": "78d76bd1-65d0-4ddd-97d8-bcb99ecd2095",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "fa22cea3-8540-42b9-aaa2-5bc48e21f014",
          "status": "OK",
          "code": 200,
          "responseTime": 5538,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d017923-1a1b-4a52-a857-db937c5b66cb",
        "cursor": {
          "ref": "e13ff0ec-3df4-462c-849f-a45b1f720128",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2b09bcc9-e347-43bc-bfea-53b41919f7c8"
        },
        "item": {
          "id": "4d017923-1a1b-4a52-a857-db937c5b66cb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ac80ccbc-88c9-4b86-a638-fb46adb8d522",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d017923-1a1b-4a52-a857-db937c5b66cb",
        "cursor": {
          "ref": "e13ff0ec-3df4-462c-849f-a45b1f720128",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2b09bcc9-e347-43bc-bfea-53b41919f7c8"
        },
        "item": {
          "id": "4d017923-1a1b-4a52-a857-db937c5b66cb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ac80ccbc-88c9-4b86-a638-fb46adb8d522",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18822f6-6c11-4023-872e-fd7780e809aa",
        "cursor": {
          "ref": "22775d56-cdff-43a9-8499-2c4c2f65874d",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "a8a4f207-da5e-43f8-a199-702405fe8e20"
        },
        "item": {
          "id": "f18822f6-6c11-4023-872e-fd7780e809aa",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6e92f513-36f7-4e42-80a2-ff97eae67599",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8301576-d456-41f6-b30f-776904b92ab6",
        "cursor": {
          "ref": "c98464db-92aa-43f6-a46c-19f7e97ea493",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "85700b45-eced-450e-a628-d0b9762d079d"
        },
        "item": {
          "id": "f8301576-d456-41f6-b30f-776904b92ab6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "fe59af71-1b33-47ea-a0c5-c3b5c61de0ea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}