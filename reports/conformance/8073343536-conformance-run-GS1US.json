{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0bd7d5cb-0988-4f3b-a1ff-6d9b0f87ad65",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a520e99f-6800-4c32-bbbc-33d7085162eb",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6951f289-fdfe-45ba-b947-927f0e386b52",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fa955bfb-70aa-46ba-91c2-a6b6adde3c25"
                }
              }
            ]
          },
          {
            "id": "fe6504a2-d0a1-449c-8ade-56dc113051c5",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "30a21647-0c54-4789-8d2b-af7c262d956d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9a757f2c-6a7f-4257-8b9a-1b9436486dc8"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d21601c8-2836-4800-8757-8e4b7ebafc18",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d68f6cc2-3cbf-4afc-8ba0-7ec883234686",
            "name": "Positive Testing",
            "item": [
              {
                "id": "aa6beaf5-2f9f-4b14-a7f9-1bf60878184f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "958c0488-b402-4ab4-9d4b-6262a9fff5d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5600d737-3f4a-4aae-aef9-1b6d105ff6cb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5c7dc63f-2a75-47f6-9b89-01b2948353db",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f189ad06-7639-4694-b72c-11d492667de9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "437317ac-09dd-4355-b39a-4ee405d18d96",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9ce8d012-3f50-4bf6-baec-4b1fb134d7ab"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33c349cd-cfaa-41dd-9182-c4bd5de9a3b2",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4a4220c6-aff8-47a2-9eee-e808f336ff1e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "36b88d55-f7f1-4d5d-b49c-10a05659ca8b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cdeedf0a-7e54-451b-b764-a9c0251f8182"
            }
          }
        ]
      },
      {
        "id": "57f0dcd2-901a-4ce1-a2f3-ef463e1bafeb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1ecac7ef-ac09-4aae-9e3b-fbb6b5c38491",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c399f78a-b426-4262-97bc-5cd9fe8c4e0c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "336a4ff5-3a6b-423f-b4e6-03a60834844c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5e9180-2d9e-4fc2-846a-9d4e4b3c57b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a7a39314-a519-4ef6-930d-e677c6113dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb470f0-b635-438d-89ef-234c5aeb85a2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2833b8b4-f822-482a-bee4-46f52c65741d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2608951-0b89-4c7e-831a-2d2cbd121626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1b9469-08ff-48d6-a7f0-3b87ec4cc101",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38edf7ab-03b0-4220-9c24-c92ffdd3d7a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "912600cc-e599-4e15-aed8-ef868448d2ab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "22cc110e-b15e-46bf-92a3-2c559d01121e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "700c965b-3045-4cc8-a700-8dd7b469f118",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ec6f09-daac-45d8-8a8f-37b59335cfe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9aa0118d-ae36-4cf9-b2b5-f8c23adfc824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a70d08b-650e-4747-b719-cd39a87cc073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f01f75e6-55bf-4d64-a57b-61c1ac9c0c5b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e9ba222c-4e49-4e8e-862c-828ffbbe7635",
            "name": "Positive Testing",
            "item": [
              {
                "id": "287fbe80-017c-457f-94f6-2ef55ebb5b67",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "647386ca-5644-49cd-be2f-44c241a08122",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f3602b92-d819-4829-8355-8c6673d771e3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "24092d01-d2d9-429b-87d5-33c855bb9764",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e4b4b545-2035-421e-a2ab-319ce0e9d83b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f8425fd-0b34-43db-bdeb-8a8aa7fb7889",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f2b67e13-4cda-418b-86ae-a612c49fc409"
            }
          }
        ]
      },
      {
        "id": "d016c79d-4443-4d63-b03d-5c56161961a9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "68afe3b2-7f88-4c7e-ae69-fb36f89ef8be",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6a54568c-768b-4e42-b159-2f2597426072",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d6819a7f-ce2e-423a-9a7b-e4080a3f4bf9",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3be20b-37a5-4162-8269-4f87ea17c7eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11b56db8-1cb6-4d75-aefc-a3c6075cac4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8b8409-fa5d-469b-959a-c797e125fa13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5a8bc9b-4d42-415f-8ca6-beeee74ec198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2c6807-4a79-4edb-919b-b1947badcf5c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc23d3b-1691-4d5e-942c-664176a4e923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "209385da-96a7-4f5d-91a7-a52ac0621982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160a4fd6-89cd-4695-a20b-05d78f80ca17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "308ab53d-19a4-48db-8140-2b6d5b87aff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "938f15f3-3091-4b92-858b-f0949b214e60",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba53a6e-29fd-4748-b99e-7328724014d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f651701-07ba-437b-918d-9d8e8d515c1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82f02f2-d59e-4e9a-936f-a7b3747c508b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5cf3d6e-0d9d-4fa3-ba69-a6578e576b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70469eb8-bad0-433c-a3a5-46b5e576e1de",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "398565ba-fe57-4c9c-b6d6-883bc677719d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fb6e5a8-9924-4c11-ae4d-2c00ebed7223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61460815-d3be-4b1b-a9d3-298db0252fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1aa9ac66-1685-40ba-b5b2-a36a8a1068f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11f7798-981d-499b-be95-5baf83dc7029",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5fc1cf9-d807-4ec6-9e4e-ccf748369fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92bfb734-0b1e-4496-8ea2-c34f07a3fb55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e64339-7120-45be-98df-5d11aa4aea3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f920c9c6-0529-41b3-9833-9dfd112a6a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e4e995-25ac-4b82-8f47-a66a336632fe",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4da941-e51c-447e-a3b2-0e6d4f7daa49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbeb9978-6925-49b6-a26e-861c7ddd615e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9fe430-f509-411e-a6b8-cd947a70469b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "057e127e-95ed-461e-b337-9dcfcdd657d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0705ba91-c7c2-455b-97b6-f4e2d0d90d42",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32115ca-9c91-485f-a632-8369f7b0ed3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b6a57d-648f-442d-a30e-e39f9fcca5b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27643802-015d-4cba-9740-eaff174a3da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44c70d62-9a4e-4c7b-89cc-0f08890c11f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "913661dd-036c-4899-9d43-cebfc42048e9",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef9a395-a8e1-4220-ad8d-80c1c07063ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07e89939-9dd2-490a-86f7-4ec807878505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec39e43d-5092-489e-b417-fefac62c6e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2680a929-33cf-4dbe-9389-73929cde429b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295e4480-1107-4468-af88-a4d6edd69912",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda888aa-b5c9-4bde-9457-6c519eb09b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43518af7-eeed-46b4-b02e-d974637fc7d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5cce316-0981-4f4f-b2c0-4291f5e36075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02ace8da-36f7-4e30-880a-039997323bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037a5e65-a5f3-491f-a30e-705aab90fd9e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d9c6a50-c2ca-46d3-b0bd-6c91c1b46d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a14bed-79ac-4bd5-b8b9-a43ef577371e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e93bdc3b-6a75-4c45-a231-de171f0e40c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08143cc4-e901-437f-8109-2a2834da2e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba08614e-f449-4cf5-bcac-637ecfb9aedf",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef75060-6d6a-4bcc-80f3-7324e3c086d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edc8f2b6-4872-4ef0-838c-4be9971721e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e8b743-8ea2-40de-8e69-ea9a86c1285f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02224b21-a1b4-4eea-a0d1-df2739996078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d39432-a69f-464e-a3aa-935d8c0c1c7b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7d3c41-2247-4df5-924a-390adea16613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2869b7da-3f43-4217-b43d-1bd719b41859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e6cc46-463c-48bb-b81d-cb7f47a29b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04a3d61c-aa21-40d8-90fc-6b1ad4fad559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f992e2-7090-499a-b395-7817a547d20d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24b8702-8117-4dbd-926c-12c26d0490b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5873cc6-77ea-4a2f-a8f1-417691e8dfe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8422550-bd50-45b5-9215-81953a2cf99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f9a644c-0c1a-4386-8289-965eb7eab802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06ea5eb-2ca0-4ef5-914b-52e7a7f5f6a5",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64fa132-a832-470f-a0aa-507e10d2c6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e78ff2b4-7228-45af-bcaa-1abd2697f7f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ccec8d6-8606-4e59-9bdd-5095808ac5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f419e7ff-245c-4fe7-a8ff-cfa26d3029c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ddc11af-81c4-4fac-917d-bff9cd9e02c4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b11cef-8a85-4883-93a9-12b1e9fb7723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6128a44-5f8a-463a-a14a-50e06f5b1cc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee4901d-a87c-4ed5-baa9-484d238b8c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "820deaf5-67fe-42c4-a7fa-3923ae025a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7696af35-3e66-4f7e-a885-414848df4634",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01395450-ca58-48e0-9afe-b70e21602ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6069f858-31c0-41ab-9f5d-fafdf3615418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f5e8e7-eb63-46a7-aa9b-a487060ab575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2018507b-33c7-4458-b32e-d0ac4ed9b971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "757b7a7d-c9aa-46d1-b6c3-d54e376b8bcd",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d05c41b-4a54-4126-8bdb-860ff1af701b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "413be0d9-64b0-4e32-8a46-d848ae0fd63c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c380430-5481-4563-acc8-ef48f5fee61e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d7822bf-6f73-4281-9812-fc4d6a5d460d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea686fd-34ce-4d16-a9da-0a0c1ecc6b8e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5870b255-62e8-4163-a6ad-4bccf6f9a40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d8d11d-864c-42b8-a276-176dd320d1ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e791ad-870b-4957-8fe7-6b84667db6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "544760f1-9aeb-4166-88fc-8b12718e9478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d8233c-6bd2-4890-a6ec-adb08a537879",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4eb2c1-a93c-4998-bf51-f912b263e07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb654e1a-3899-4f60-a914-dad8dc7bd54c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1472f9-2954-4de7-9335-ecc24efc5b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b69f014-4429-4d92-9e01-bb9df83cee5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9678aa4-292f-4d45-ac92-4a94ee6554fd",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe3b3d1-21bd-4cd8-b3ba-f6febf36c4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ccac361-6f90-4fc6-8db5-d0304798d678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9bb6416-6911-48fd-8225-bd16da76014c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cc3ca02-6abe-4f5c-9be7-1d369ed5ce8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c88c05-3009-4b0d-b0a4-ee13d7c75909",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9062418-5cf2-46c1-8bb0-0c16c668541c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "165e730c-f9ba-4414-9024-b3490621929b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6541b326-8f66-48ed-a7e1-b608dd229b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8db19191-3698-4257-9524-1e1a98b874f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c721ff-6413-45e7-81f3-2c19c2b79e93",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "438b594b-e639-41d4-a4be-238b1a350e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e62dfe-008b-4d46-9784-9842e121269a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b4472c-02f9-4bda-86ac-49524cc18712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "95ca34a0-6987-416e-bcb1-6f2e2587b51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f4e403-2e23-4c7a-9892-751a584b03b5",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "134b7f97-0f4b-42f9-a5f5-5fc3410722f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a3d792-773e-4bc7-8071-54fc9017a9af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76bfee6-3a44-4d2b-93b5-62dfc49e424e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3c746845-40e9-475a-9b09-fbd62e3ae0cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8bdc75d-33d4-4705-a5c0-430afbe08a35",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc83c407-9c3e-4731-a36d-0a9b4d98eee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e14984-b42c-4a90-864d-36ebd6e64cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560ec726-0142-41de-8803-2aef343c9387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5546031b-be7c-4dd5-bfe4-6d55a828c060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a63c470-6c92-47b9-a1c9-19cc85ecaab3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "685e27e0-9d91-44c2-8ea9-3189e32541d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3857ae7-76b1-458d-aa37-9246aeaec890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780b938b-ec02-4517-82f2-869953f49aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ef21b35-5104-4ac7-b11c-d85a69b66da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42dbb53-c683-4f16-b284-e87fe3867a18",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "867756d0-7764-48be-a4ed-aae9282ec790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfc74a62-96cd-4cbd-bd2a-efe6bd781079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0ff37f-83e9-4dc8-9f1e-e6d8a125bb01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6f28e8f-e41a-4f30-8cd2-bfb2d46e0a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd847c77-bcc8-444e-a687-bc36a445617c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12360de0-7014-4274-8a1c-e68755229afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb2d983-721f-4b89-8d93-4d31003907aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480690d5-902c-4ef2-ae94-6431d6dcaec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c7c631f-e633-4c8d-a07d-851048b2d55a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb375af-8559-4416-93e1-43fc091bbf85",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d6d54b-af59-4573-8d93-07f43ae7dbcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f91445-4538-4e0e-a6d3-a7367a421146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b35863-f358-428c-ae00-f450124e5051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "39bc1367-5ce1-4ce8-9f5c-81010ea01130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b1aa505-d810-41e5-bbdc-68cfd244400e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5892849e-2f90-4f15-9c51-59e4e9498315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9008d04c-d5f3-44c0-92de-22afd673d1fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c434fa93-5bd2-49b5-8fc6-4b05d8031335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec91e8c4-18c8-42ff-9cd7-4d089df9078b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e492d5-f70b-408a-95a4-6304ab1e8b3b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c695c9f-7a8d-40d7-8e0b-6ca8b691f5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75fe4764-b084-4bb6-b0a2-072807ea74aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f88dc42-5610-4423-accc-e5a597d1e4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0c7d0ba-8b9d-441c-9ce6-daa5971eccf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f5e39b-396a-485e-95d0-096a609765f7",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac6a8e8-68f0-492e-817e-3baf665a30c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b637ed-0ed6-4968-8de2-ec9f03908fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527f8baf-5d10-4729-95e3-9273a41931dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a122eace-ea50-4fc8-9188-b51b3eb1f137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43a6ab8-5b50-4f86-9676-0eeddbbf2a96",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6faaaf0-49c1-4bc0-9c42-ddda579e06e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bc8a918-6f6a-4a8e-b8a9-7dacee146594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d2769b-8172-4f1b-819b-63c50fd3a501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed62e7b-16ef-4559-b18e-7eba3d28d188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a406af11-df03-4d78-9fa5-6d827420b972",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd529568-ea32-4aee-b3b4-7c30e19db3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c290dcd-f97e-47df-8b75-95cc3fce2075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2962ea33-a5d7-4371-8820-40158c5d6fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "579eb65c-e2fd-4f2d-a6ef-9f5882cfb63e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17270241-c6bc-4420-8962-e99f20b31daa",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec1e1d0-5cfb-46da-9e72-0385ecad555d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93ca3a66-4f57-49a7-b628-219861a56603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb8468c-12b9-40f7-ad39-bf43f0fe14fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "799663c3-6001-47d8-a718-419169f14f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d9e7f9-7604-4cac-a9bb-1d7a6ff596c1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e2816e-d25a-43d8-8209-acd578c7e2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3741dd04-32b8-4983-8d0e-7e8dd7d1fb7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7fab27-dbb0-4e52-928a-7a733d611fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "773a883c-015f-40c4-89cb-dea4c03df2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cfac28e-0782-4dcf-a4b1-21f3f780bbfe",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "555e91a3-45f1-4f40-8367-892dbab8a4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7910c808-d8a3-4c6e-9001-acf0650de052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d236c100-2856-4eac-bd39-f6cbe1623d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f37dba6f-682a-4d32-a466-f47884d83e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1030000-044a-41f2-9d4c-2d466a6c8aa2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22ed0d7-4933-4ad2-9fd2-96ce1da8f09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63e60fce-11f3-42f2-a969-cbf31a0115b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f728cc2c-2229-488e-8a86-11ad3bdcdd41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "23d371f3-17d8-4eaf-85ce-7131c79d3915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b461be7-baa9-4b6a-a092-df5f1d11b0a1",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6834bda-86d2-4fa1-854f-ce4b2fa7193e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a13a76f-168b-4c35-9b4f-7d1a4d71fcce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac9a306-70ab-4c48-85e0-4e0736942553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c385bd8f-e99c-4fdc-b8c7-b41b44fd2c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5087aa-2bce-4a7b-9bac-f892c92d74eb",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5748e2-0375-4fe5-a029-7fbd4716ff22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac5c6515-c1a2-456d-8a7c-5ee185faa96d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565f76cc-e1f5-46fd-a806-98e535ad8640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6001c146-d582-43ed-a396-936edb78e07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac730484-6de3-42cc-8015-64bf222f4a7c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b4127e-a7ad-47e2-9408-3a1e31e78eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2ec1d1d-8402-4d13-848d-3264f96b6f2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3004d3-4923-4ea3-8201-41529c89c6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8047b9ae-7730-4be7-b1e1-f14d3b874e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2c3e4c-d9a7-4e30-a60d-c6cda41e577e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4395e56-2725-4c5f-9d20-e23b1a545767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd673777-87bb-426f-a53e-784335a48a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0e5ba6-a995-47ff-8a53-190c50d2dded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7436ee2a-a359-40f4-ab27-4ee9babd03e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae5fb22-0e18-45b8-b7ed-a0037316c6e4",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825793da-329b-451b-bef7-3ed46913a73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc5e0b0-f515-42c6-a437-4c65d0a13a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d878a5-8a97-4dae-8e86-71d89999765c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e706e753-274f-4c09-8d51-62f9fcd4ffbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3fb6060-c297-496f-b5c2-504beffdb3fc",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f579a83-0ffd-424d-bb77-38695da9b8bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a8ce98-d34c-439c-b131-290923b02744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370df041-9aa7-4020-8c37-9f6735100356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3ce7c4f-0367-4ee9-bdb9-d07d5c263365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca93655-e4d3-4ccd-9c97-2cc83bb27b33",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2805fc-a952-4e29-b7ae-a70b8dacaa95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a295f58-274e-4804-bff0-01c9ef33c8c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c0e60a-b490-49d4-8fbf-f4b30f5c3936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "631a192a-0e0c-4033-821b-7ea64c57fcb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2987e9e5-1d27-4c83-b8ff-9ee20ca3ba17",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "040a86fe-9aee-42aa-82b3-3abefa6d8333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7309f379-5159-4ad2-8b1e-99840849a225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448a6fc3-c113-420a-a4ad-61999533cae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "60aff1d9-8bc4-498e-a62d-f693afcb8185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4273f5a-1eda-4850-897f-d21185f3f849",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a01af40-2275-4082-899e-50c5dcd0ed2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42c13185-0a1c-4c68-ac74-a9442fb4144d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ee4774-9aec-4586-872c-5733c0ae4680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd20b74e-5b8d-4b2b-9f8a-4dd920d9fd81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c60a53-0506-465f-852e-b6ae54e79a92",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf329941-996f-44dc-8264-c51ad54ae8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efa97eaa-64db-41fa-96f4-329bf7246310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3af34a4-bad5-4c21-9af8-d877cd414cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a225bd4-ba75-4471-bd6f-c41191043233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3169edfd-3987-4d98-a183-d217485b22e5",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "405547db-ad01-4a34-ac28-bd3c7bc47414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "978592d8-b27b-448f-b173-2416c6278055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b030d7a5-fa2e-463d-9ea9-d7c40d356b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd241299-ad01-40f8-8970-7babcce11e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b12c1e-9a8d-439b-88ab-382a8d496640",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9defe7c9-813d-4a65-8ed2-bfd33e13efd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beaed192-ee58-488b-a02d-ac3250249bf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06ed0df-d19e-43ee-bb88-1ac63b830e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ab10b1-4cf7-490c-9f8c-4011940d1eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8e615e-0640-439d-a7c4-926182298d65",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46816488-054c-49ab-bcc5-d007dd04fe0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "210d7336-763c-4c86-8f7a-a0f63f6f5c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1c5198-fec9-486e-877b-ef3a42e8058d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b05afd1-21ab-4474-a1a6-ef16b26ba52b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb1ea1e-50b7-4944-a6e1-c417aadd980a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78980bfd-c0b0-4f91-a39a-bde9bb95d4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "443fb563-d746-43b2-93a8-4ea102538c95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61930a65-ec28-4f3f-89ea-db98f7b0a14a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "73a55083-99ee-4751-851f-317d36df6f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3574dbfe-b197-4f79-916c-fa27c92eef9f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "280768e6-5998-4ab9-9e10-5111a15360b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbd990ee-c9c7-4271-967b-0d760d7eaa34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1579806-3ee4-4dc0-a309-d7189b4048a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "47356786-f03a-413d-9ad3-4f7801f71df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff56498-8356-4037-8352-e228b2d04c40",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc8bf72-597a-42fb-b1eb-a0a88278b062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d75ef324-1f14-41dc-be4c-32bdd5057b77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31331300-4ce9-416e-8c9d-6db2709a7dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ecde15b-d688-4317-8081-6bb4b2f1f06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "904d8cd2-17f9-473f-a88a-66506535999f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11fb78d2-4e91-4c29-a344-55163ac27b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d62ac41-1d11-4ae4-b5c2-adbae9e46c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a06782b-225b-4864-83e7-75cf9eef6849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f4b2b25-e127-4a9f-aa2f-aeeb334b798d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23aa8175-546a-490b-bae1-d5be87bbdba2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2961b964-a962-4a85-8b45-23b4e02f4eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6dd136f-206b-4a3d-a8de-2e1a021f42c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907b2ba9-5953-4fc0-8531-cc8a12979e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "510dab56-c5a2-4241-a724-97231f8b7ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48216e13-bb7f-444e-b725-68cd184eb91a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d47da5-b618-4feb-adac-da5e04b49bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26b70331-4d4e-4ea5-a524-654771d38a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00642f7-416b-4bda-baae-66b4b1262a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "11078a12-9069-4acd-ae64-5c35500ae9d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c51a9b3-2c54-465b-92af-68f34ae1eced",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3f789a-e57c-4326-aa0f-4058bfbd7edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fec11d2-6b86-453d-b0c7-d759dcef843d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b231bcec-2bd7-4ca5-a770-da312ce2fbe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d118609-3173-42a9-ace5-4e32d667fddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b340351-7d36-4085-9f14-1e96722b1561",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8d7015-4eef-46d4-b001-1df162f940bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "050e9741-af5d-4209-8811-f4c6fa1ab721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76cacfcb-19e6-438d-8fbb-61c340554083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "161c2ce3-96bc-4f6e-b5c1-3d6ad37a8782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab84fd0-3a44-4ab8-aa8e-8c61af209d27",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b3d569-0a98-4e44-9ec9-3bb531275114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a530719-f83e-45e8-a0f9-fce28110aaf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34e8feb-147e-465e-8ae0-513665413dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2028b99f-3925-404b-a396-d594cee8de80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162d07bb-368f-42c0-baa9-0796f5bd9e7f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d009f81-fa71-41a4-9884-488a7640a1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "923beffa-5093-4f03-8a8a-0775f06a3483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd6160c-c71f-4a05-9cae-ddccc2e6b389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "185210c1-2e92-4e7c-b60f-7af46c1f1fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0c84f4-69ae-4cf4-8267-5f792ae6d53b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fc18d6-12d8-42e7-9d91-f2d416f44fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0de8b5e-363b-4892-955e-254f76250a45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40fe0110-b173-4e40-89f5-5e04031212f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f7353c6-9962-4b8f-8b48-584f8ee0182c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fd7ba6-13c7-4c1a-8ad8-d54482aa9b31",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa693753-b0a0-4ca7-a36d-a9456b9fa6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "809b8488-13c3-47f2-b7d0-f560caf7810c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8390263-5c76-4249-a0ef-35f73ab60cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e5868a1-0b1a-4379-8bf0-fcb40e57ebf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3122132f-5590-47d0-b586-ea8640b1b5cb",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "639f0720-8c0f-4dd3-9c4a-50caef31d947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5412e483-4c32-4403-89df-cd91b4704f70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641455d5-bcf7-4bae-b4ec-22f168b0686c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d31eb87-3e1e-428d-9de0-c1954db25d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7881475b-9dec-4dec-9c60-439bb1bb415a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90352fce-697b-46aa-9100-fb710b413b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d38160b-a048-4f07-80f8-319927361cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039e0123-114d-4d08-8016-6111202bf1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d51fc986-9ccb-476a-9aa6-9f86d00ee47d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610f8263-4d63-458f-99d1-61c7f5d4fc58",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "667fc088-1ff4-4ae6-a86c-990fd3e1039d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da26c21f-9af2-4ebe-8783-73304faa751c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33587a2-3cd4-4f57-8053-24c526f77916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "22313bb3-fb48-420c-a89f-553c83e16371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07137cf0-d557-4b68-89da-995c9cc999a6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e2711a-c258-4cf9-9d3b-b8aadea5c40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0931388e-00da-4cd3-971c-063a14fc12f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e47149-20af-4666-8516-7621754ed087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fa2e1d8-13da-4b77-a357-d381d47f3cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d026fd-5cc4-44f8-848a-442aecb5ece2",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc803d8-8076-4dd6-8a59-55570cdd6411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c689bf0-a84b-49ec-9ba4-807024164b5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d670d19-2ccd-42a9-be1d-d42204c6cf15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1c9ed178-7b40-49d5-8bbd-59d91560f1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b9a5be-f912-4b99-8ed0-9528a24aad70",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a0dc8b-28fd-4de6-8b6c-35106fdc6e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c58a4678-64ab-48d4-a766-f158692bf6bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b51ad3-61a9-46c4-a2ef-30143533e378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9cef011-04ad-4569-b369-9d6adbc4a6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be549372-debb-4bbd-a7e8-84ccbcf2bf4c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9fc0cb-7c92-402e-aa00-cfc41633c248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbc4bff6-8d47-419d-9419-8752d5815ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f42882-d68f-4f3c-b50b-4fe283145f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "98e2bd73-4fb9-4a9a-b5da-d9a2c4280c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297ffbfa-6aba-4c82-8a4f-a7c9b1cdfde4",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65cffddb-3e2c-4a3e-b448-c420c06eef68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d753eaf-5484-420e-b42b-fd83901b1269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46193c93-7a2a-4872-9105-7db59a36ff85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e12c3127-3f79-4c22-97cc-e6217dd5e791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842096a7-fe1f-48af-aed0-57f95d8e5991",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c81cb4-ea02-47e8-b7aa-e226d353fb53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e9f0d05-de35-4af7-90e4-4c1b816f3628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d27adf15-404f-4c25-8393-40bfedcf2725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ab8f9f6-9dd6-42e6-9c3e-f10008787c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d31c583-4672-400c-889c-ce84d30bfa47",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2549ea-9658-4b97-8a7f-5a6563a9293f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c468fdfa-a2c5-47a8-a158-0b0d76833db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1095d367-02a4-46b4-ac49-eb33fbe10425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "473aa319-afd1-4971-b399-2f9e5fef15fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd88a87b-7702-43ba-b7af-b60709fbaeea",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0331294a-9d50-4d83-86d1-2dbe134236bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "337e7433-89c1-40d2-ac6e-4c0f72e679f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c555e3d0-b47f-4933-9a90-25c22a1c15b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c03c8b1-44b6-4cbe-bf04-f759e3df87a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec8ad081-7544-409d-9c71-4009336b546c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd461c0-8e15-4b9d-ac17-6d8c5124f5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fd48a42-0adb-4a4c-95c0-eef253b5682e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18db72d3-4fe0-4103-bb4d-be0085d83bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a816d057-7462-42fc-a9d3-0299c0e7a101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee255b57-da06-43b8-a29a-a44fe8da5cc9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95824ca9-fb17-4db2-95a9-78cc4903c652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfd1da57-3879-4262-a487-e09d166d385d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a81026a8-b6fd-457f-8149-4683f9fa1655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfcd296a-7e0f-4407-9f7f-a4b53deb0766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbdd920-31cb-473b-b4b2-c076ac0cfc76",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3481a26e-bfd1-46d4-9093-2af57c66950c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a57e5e81-6839-4673-b3d5-b210165913ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b053e26c-9f8e-49d7-b6e1-18f6b957bb9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "06355735-9ca0-44fe-8eb1-bbc3d786386b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "701703fb-72cf-45d4-a56c-8a606272693f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d1f8b1-4f81-4e34-8f7d-cf5e5939c28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f13268eb-373b-41c3-ac6a-144ec3470231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a45276-5f65-4c0c-a4ec-4cd3bfced570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "66c3b1ee-69a9-4aae-a67b-b0509cd5705e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa07f74-c5c3-4be1-9964-f51617dc260e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9545d7-d35a-427f-8eca-0bd6074ebecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd935544-c508-4856-b5f1-9d7a02f32c08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6fa1ae1-95d2-477d-8d06-683e2c611df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d813f8c-9953-40bb-8e49-614405f0739e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633cbdb1-4bb2-4a3b-812f-2ab05514c720",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9c7b2f-42f4-45d7-99a0-80a3a7cbc060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22dca624-b018-4885-9a36-08d64d0b47bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15114739-64e2-490e-806a-d2da60f2c25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1642d09a-cd54-4eb0-8851-3edd502dc677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c344c62-735a-47cb-a325-2ff62553ff31",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58bc4e48-001a-4b88-a917-08608e9f4e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa03632e-f9f6-4ab2-8cd8-6c4852e64ede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33b3fe1-b244-4cdd-a587-27c47c98e8c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "81d976fa-ee3b-415e-a968-c37c752fd9b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f334b6e1-21d5-4786-a97b-4db008bf1d5b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f281b726-e2cf-4a56-98f5-02e9c80c349c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e66469d8-e315-47b6-8345-fa34b348097a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5559fb-a2ec-430d-9172-fe1fc3a4b4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1aab4fbe-e18c-4880-b149-e5b7c30c201d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847e5d5b-ebac-4bda-92f1-9ac7ff27fc24",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7710b147-4fec-4cfa-b3a0-25471957a8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8976ac98-1602-4f80-90ab-6ddb15b08a28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc0d491-3639-4302-8d11-d171a552d656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "877d7c22-2280-49dd-9481-d0e7f66c8c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b6f812-1a0b-4e75-b3d7-ce17f6c55c34",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36365781-3d24-4e23-aed7-c8b4855dee9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5052144-9c4e-40a6-893c-0963226bcee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee973ae1-8de4-413f-b445-d6fc1a51d8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "11890c7d-81ce-417b-9351-2fd8d10e3ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3556ab66-cf42-49d6-921e-22137e68ed65",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6224e7-c0ac-456c-bd3f-122a5e4adaf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8086f048-1592-407b-aa76-d039053c7796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac8c8406-8ed2-4f88-bd9a-2de95f51b40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ac80173-1438-4668-8258-f1c062b7dbfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c21600c-5b6a-44ae-a6cc-0f76727ee16e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3261ee-5096-423a-bb44-641bf8300283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6d17f56-8e50-4aac-b79e-6071b5555ed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a62a8e3-f40a-4d84-8a1e-c9d7133ed7c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2bf0f86f-0060-44d2-9d9c-b10aad9b7bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c01da816-d41e-45fb-bdb0-b9f6da42429e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eccacfb-dc4a-4579-bbf5-50859be7dabf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c55f3f7e-4cc5-453d-bdcf-9ce07cae7907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "915a1a48-2481-49cd-9ca6-cd250b78dfe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "69b40752-3a56-4bd9-96e3-61085d8bceff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d11422e-2c64-4beb-af3e-b33f504f6e65",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc05793e-c796-4edc-9cb9-515ed6d45e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a11a8397-135e-4c0d-a27a-220609c5a856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b394fcc-c3f5-46ab-9430-9f120d1b442c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6688e217-f991-4a37-bde8-8ec91c801e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0bb5560-0cd0-4fb8-8800-3f315db57359",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b815401c-a6c2-4d7f-82e1-10cff2cbd5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "319b60e6-b74f-4c19-a03c-8cc0c877a3b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81df9e1e-d2c0-4ace-8265-9b24f9af174e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "06ba4d65-1162-4d71-98dd-b8daf4e12581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b11e217-422b-4db4-9602-e91038ba1d2a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c6abf4-94d3-45f2-9d7e-6b70301272b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "068ac94a-0c06-471a-95d2-07f0fca45f13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20f74b2-270f-4f8d-8302-0a96c89da9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6aa394cb-d810-477c-88a9-93d96c6b6d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1231fd3c-ad4a-4fbf-8300-c4d8f5770f4f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef92eeb8-9ac5-4051-b048-4dd2f09ad6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc4e1de-9f71-457e-b7a9-3d3b1f9f4c29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22525e06-5787-451e-931f-9954b886ab84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "13e8e50e-d27c-48c5-88bd-6f5fd1db5987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba2e3d9-c148-46d4-afdd-aab79e02b299",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf59495b-3666-41f9-9e21-163f54545dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38ec570d-10a9-431c-b90e-04cb7ef13781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80aa192c-85b2-4479-a7b7-b163388913c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0217c07-6738-4e47-9a27-ae8730851210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06afe74e-9800-4da6-a652-d4a18cfd8797",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6514dd-daf4-4fb3-ab27-c8fba31cb577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b3160e1b-3b50-4a34-a9b7-9ccdb3cebda4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41cba76-56d6-4d2a-90fc-ebb6b72b0b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5dcdbbd-91ca-417e-bfe0-0f932394bfb6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "92c063be-a9eb-4be5-b091-e340786a7298",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7d4532e6-aae8-4995-b2a5-8455d1226899",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8965c0-513d-4dff-9fdf-a2aac4472de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d5eb6df-3bb4-44c2-b866-b3a5bbe7639b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad53072-2f06-48b1-9781-d0a34b8c8812",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b9b3752-be24-4f0a-bbb3-c533c4c7713b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0fcaa343-de2d-45d9-bf95-427934dfd343",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c742cca7-a245-4346-93b5-60fca204ad93"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a828bf32-4de8-4474-be56-9fa81e0536c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97356263-2704-4081-ae4c-02203c218075"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cbb1c72e-c8c8-4ead-b65e-bd2c23fef839",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ebd7d76f-7a90-4e8b-80a0-79e91d988958"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "629c7641-9fe9-4585-aeff-7652558bac2e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4f6ffc66-237c-4f7c-bd07-0df1fc3a0b3e"
                }
              }
            ]
          },
          {
            "id": "27308662-0dcf-41d9-b52b-cca637f47c61",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e7f85e33-7f1c-4d9e-bd08-299a04e119b0",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "2c10cc5d-edfd-4e5f-8b0b-5a46ac47f633",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8540b9a-3453-41e7-b220-5ab56e3e6a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "38ade6f1-311a-43fb-81b8-ef11bd435cde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab7bbf9-49ed-49d1-bb40-0c8228f4ca53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ff013be-cadb-4829-b138-b108500808ca"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c419249a-33a6-450a-87b0-277e46dc06d1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ead967bf-8d07-430b-9ee6-b4c8dcdeb750",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2dcaf08c-c4f7-4cef-be7c-7c10e18d31b5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ede74466-8a73-4160-9006-bdf3a8306654",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "153e9ea0-743d-4bae-8396-c5d7b53f8ca9"
                    }
                  }
                ]
              },
              {
                "id": "047e8246-d33f-4899-8461-19eb5c780c75",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe266bb2-ca0a-4f94-8336-baf981238e8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b6bef4a0-873b-470e-868b-bc07d3300a7e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c97c330-c94c-42fe-a8a8-fdcdb906fc71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9964537b-94a8-435e-a79f-d8cad502d017"
                    }
                  }
                ]
              },
              {
                "id": "c3eff014-ec97-4b3e-a536-2799af7bee6e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "768f2139-8c81-407d-993d-a48bd4ac9cc8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c6522b75-cbb9-4ec8-b414-0b1513a170d7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81afcafe-a199-4dc9-b180-3c72e9e4db8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "130aa0f1-24b6-4631-9e98-15f89527f09f"
                    }
                  }
                ]
              },
              {
                "id": "3c12bc43-15f8-432e-b03f-e2015033f4a0",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e82aa42-57bc-44d6-8b6d-a0e58c2a8f9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed5fc1c2-da8b-4584-a30d-d947e91c7e6c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f4c04b6-7832-4cdd-8389-a20028f5e9bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1f566422-b683-4d5c-88ce-1323b7e817ec"
                    }
                  }
                ]
              },
              {
                "id": "02fd87c9-21a0-4509-8f58-f6b4730d9d68",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "094ee5cc-744a-4c76-955e-ce4a45a626f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fa72f314-49bb-4a97-8f48-fa4598d6e306"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5459baf2-35a3-408d-890a-7d3a36430fee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d8e87a94-1e81-47fa-8ee8-6dbe3fe0b6ac"
                    }
                  }
                ]
              },
              {
                "id": "a5cf4a88-1d04-41d9-bb06-280ce526d801",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1bfee093-bc7b-497b-b48f-c4db10ce7844",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8bb4b82d-8c78-490c-bf66-b930ead3360a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f121112d-c910-4588-8c46-f1013a92d824",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "792d2ada-849b-429f-a015-bbd3739fb43f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "034ca536-f190-4ae0-9106-952669900440",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9802fa35-a11f-4ee5-a174-f1b0767bb255"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b28c3806-c408-42ce-b428-b0f22bf8b5bc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3445f03b-a74a-4090-91ae-a9cb6edc1eb0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "982cd2a9-89e9-4731-ac4d-0b798f127c4c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "57131bf5-9363-4566-a846-d47328c61952"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ca3e2f7-209f-4077-ae82-508c47f2bc7c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c2145d10-fce0-4dcb-9517-817a7bf2f274"
            }
          }
        ]
      },
      {
        "id": "2921a06c-41cd-400a-af7c-c67525a99d49",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2b47fdac-1635-4574-8827-e7939ba79ab6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0ecf5c57-1945-4b97-b2df-f7846882c741",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "12560941-18a3-4b6e-a785-1df17b802f28",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0406811d-a14a-475a-856b-e0bbc19edf1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0da4987c-3f2b-4cd6-a7a8-6de6e7ce2c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ecbe2b5-cdef-4812-bd6a-260ff3a2c1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "56cb823a-e039-4b56-adff-c0eb109db0f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da092465-fb21-4fa0-9d03-76f71bf3657e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df726bcd-aed6-4480-9713-67ee98b95715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc49c98e-cb70-43d6-9517-103d4d937269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744a652e-008f-481f-84e1-c61803ba18de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e787a04b-9abf-4b6b-a381-b83c9ea7cf64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b442d109-b6e5-4963-a98d-49f7690b859b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04388781-3cf6-4816-93a6-d7f7ba20e51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d412f78-adb2-4568-ad3d-555e9618bc72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164d6079-f387-43db-86c7-47fb7a03a290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b04579a-3e0c-4a15-ae67-6b04a587f566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d76dc22-bb07-4903-8b17-1b894a16596c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b500e2f4-2758-4cd7-a792-05188d55704a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca7f6a3-135f-448d-b152-1ad3303e54a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969fd95d-cf2c-4d64-96ab-9895a51c0158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad35d32d-2b63-46b1-ad4f-1aaf8939cebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23fc2d0-f1f8-431a-a550-5594ecc56a47",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c01bef3-4265-45f0-a942-f00c82d5c7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "718320a0-57ee-430d-9700-43fe50b30c7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7936fc1-c153-48e8-822e-ddbb22a326e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bd56658-b916-4d6d-9f1e-ec808f86c33f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39966bdd-a337-42be-881c-d689f553a627",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff28bc4-5b46-402b-bdc0-967f83b31403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f746c6-5de2-4c67-9b36-08be2c5dcb0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd909c4-620a-4677-a448-8a268f0ef648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c69a0769-78f0-4046-a1da-187800a3e8b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4cf32cf-efb6-4df4-af2d-50163a4ae1bf",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15f373a-2bf4-4cd2-9724-51417b5537c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af65bd5d-bd5d-41cc-aba8-4dd300f5258c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0fa3d25-e8e7-42b7-83d6-4cef89421b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "12eca237-8604-46f4-b72d-7a5c4055d60c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c5e6bc-fcf8-4693-8cfc-d73873fac524",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c6117af-69b3-4471-ae04-00406a1092bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d78adab-e22c-402a-8dfc-14466cc7efa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92050f3b-939d-4e1f-9fd9-e13ccc016f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "27e7752f-b3f6-41b8-bab5-de4d240e4e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250546c4-4ded-419a-a3ac-89889c27551f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ac415a-2b59-4618-885b-887cfd434bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32102e60-80b6-42cb-bc5e-9b18770bd04a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d4ff9ec-d017-4f54-b262-a2691df9037c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba32c556-0180-4ee7-8ec3-730a8ffec6d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3143100a-d0ed-44dd-bb5b-c79b2c09729c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5933e9e-54ef-48dd-9ec3-520bf144d78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db164178-d47d-4aaf-8282-5a02fb58d3b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04831e4-f024-4c49-90d1-ef0db1b2cbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5793b417-24e0-42cf-bd5b-7f57e2abeb6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce0db78-ff1d-4d57-9490-819df0a4c7c3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14bb781-9b28-439a-9cbe-d42f77f1d0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa8237fd-5358-488d-9aaa-9bf7176ef94b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43101979-c08c-469b-a6f4-31843f24c068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "aa8b0fcc-cc98-423b-90e0-70b262ec1af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18a78de-7dd0-40d5-9f36-343360b53187",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "830a456b-fb33-4287-ad2b-28e4bfc2ed16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "735ae586-d91b-4130-a05f-5b51ae86448c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e64579-7846-447e-b40d-70708a44a810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "60a0b6b6-82bb-4b14-82da-f48432635934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9edab68-3d7e-4299-875e-6f23fe4bbb2a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed984caf-6a44-45d8-85d9-d809c822b995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe5df5c6-1b11-4629-bc87-aa3727f6987b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee3f8e72-507a-43b7-8b4a-15ae1551d87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cb21767-d0cc-4275-a3ad-748e962aad50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20421963-3d3d-4e9a-90dd-658d3f712096",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02c2f0f-ea73-45af-bd29-3668bbf9e1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ba50696-025f-41ea-a033-26f68fd69f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898415b3-fee8-404f-a8ca-2ec60c6a7d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f689caa7-8731-4cc9-891b-cf9c7844065d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbede3ad-e1c5-48a3-b4c9-3e390c18afad",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c44d48a-4ddb-4888-98b6-32268589f9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b7dbecc-74eb-4187-bc7e-268feb228eb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6bad78-203b-4ee3-8cac-e4e7cc9458e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "541cb8ef-d0ea-4223-a449-266763703180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1bb84c8-f359-48b4-b29b-322cf0460729",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90de7fe1-c7e7-41f6-ab8f-574e7f4f124d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e31e45-408c-4dd7-8140-9f8a67d154cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ced80e-d371-4e5f-87dc-cee0be771c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ead5789-c4f9-481c-946b-da4b5fd11c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e81b30-2c0c-46c3-b48d-852e809fe495",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "136a0f54-6ba6-46b9-9a1f-460cd1870394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58938ca1-c0fc-4bbc-8d31-ae31831cfe50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8840daab-7834-4011-a30f-a0d4fe015059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5de0deba-60f4-446e-8c80-3311caaabf27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee0f5a1-d96a-40b6-a0fe-0313f940a3ec",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d29c29-41a2-4089-a07a-4d19b5def659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d234c3c-8de2-434e-a97c-0acb44971866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a61abe-2133-40fa-a225-fa5cafe5cd99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "056ef699-9f0e-4037-8384-8ef71d3a866d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1634367e-fefa-4810-9916-887a0f654983",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "404535d6-367a-4c56-9969-b305a14b6cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a7e7b71-5155-4816-bc4e-1b4538199153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e88af86-16ff-4322-a3c8-185ed5be1018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dcd12bd-2896-42a6-9671-179724dbcdc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "645d120f-95a8-473b-bf9f-772a8ed77d77",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba349b0-e341-482d-bf1d-95bdbae82793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46b5a87e-e6b3-4dc8-a4ff-23ef187704bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d9d88d-0335-4cfd-bfcb-7455ae81abc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6430b79c-8856-4eb2-8e6e-797d0e6dd476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21748680-6236-4355-8ad8-107c9cf524d7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a369664-e562-4abe-9c37-adf16c3ddaae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43dfee7d-12db-4bc4-bd6f-ed6d6575cc0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "352095d7-c53f-4df6-8d0f-82b3706b04f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "708e4f98-fcb6-431a-97af-b148b303f2f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aaadb3f-12bc-446f-a8de-f2bb3d0a44b8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b391c4-8064-4cdc-8d2b-cd1df556038c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c372799b-8cc2-428e-96bb-22f1da040bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4cf9af7-cfa3-4f75-a718-5f8ec8834d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66bb93a6-58eb-410f-89aa-99d53b3a1999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d210f5-654c-4218-8498-cbfcc11bb283",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "377e10d7-e949-420b-a4be-244a6ef32c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcc33c4d-2985-4c82-9c3a-3cfc3bbec721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0d0ee1-1d2d-4a9d-a0dc-ddcf2078d68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a659a2dc-f9f9-424c-9975-b922954b7360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efaa7d29-e948-4d4d-8abe-d4bb62cb8572",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "126c7d76-ecb6-45f9-8393-c611ad3e390b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc318b40-4ec5-4863-b7db-794a90b111bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0f445e-6b90-4fd5-938f-5fc49adec228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7df48b95-7e78-475f-95aa-9f1b716b8171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d2ebbe-a02f-47f7-a07a-334c716ac10d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52ae67e-bebb-4d21-9125-8f309e6ae62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f30fede-d479-40c0-b742-1400550ac30d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1f0af6-b2ef-4f08-8ac4-19dad4d78c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dd35fe3-e57a-4e0d-9777-9f860be28b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1968a3f4-f9d7-4162-a2e7-b68d2eb99d2f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af9af9f-f7c8-45f6-9ffa-3fb31d08ca37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ff6722-4075-4f6c-bdc1-9135db72e99d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61c03af-602d-4cc0-91d7-66bddba8b55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9299a771-8248-44f2-9460-a38ee6213986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc409ae-3d97-4313-aa68-e2ab10e37dce",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2cc7fd-9d8b-4f5c-8fa8-b84d152f9d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8521ffe1-a6f0-4e9b-971d-3ff729788fa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a295c3-51a4-4623-a482-c002fdb6f045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0476d218-d372-444b-af69-c639b8f0e111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f934fe98-b40c-4749-bce0-cdd4355980d8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4bbb77e-e6da-4dcd-b0ab-3841d7c49e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60b26f80-7c92-438c-b614-b6578b2c5596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3cd9c5a-0e5f-49a8-8972-c7e435142596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5727c86-3a67-41fa-baf4-17b0e2e64e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a037d36-40fd-4418-85e2-17d04ccabe5f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "766a851a-a0e8-4d7b-b9b4-3146a3d01f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac576f46-51d7-44d1-94eb-08dcdc9d4e8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d47369-af32-463c-bbcb-bb3769956cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2223cf4a-f9ff-4b40-b083-47f727c12848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "691255c9-ac88-44e3-a877-efcabe13c97f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13de0c9f-ece6-488a-9420-35f5aec80873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1aba202-60e8-4743-afce-22e2e6abe19a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1e0a08-32e8-4614-af01-9f54a76f5d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef046c2c-be1f-4bb9-beb6-e6c16ae8320c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03cbc88-f202-4cd8-8a8e-d11140582b28",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a9661d-5973-4648-92a5-309aaa8f7165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef07b76a-3cb6-4e41-bb31-851d26b54305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253bff97-58df-4f07-83ce-cc795190bdf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "769e3e63-558d-46f4-b2f6-bec776055462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf7e6e9-00d4-41f7-9ef7-2958e3fa0afc",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e152dcf-b03a-4dd1-b46b-f917961a2cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70211a35-a109-4b73-b3c7-e488582cd5c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c054a78f-e286-40f9-b5b5-7020d6945a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b2d4c32-f589-4add-86e1-8c93f34dabac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fcf66b12-a3c3-4e87-82ff-44c5d524798d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4b58fb4b-515e-402a-9eb2-50f9f9a020ee",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b78f67-23b3-4100-b50e-07dfc8cfef1f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "02d62a46-4f9f-4ff2-a315-0afaf1076b79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9ee2b6-62ec-4188-a317-776c67774f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80f07507-be42-4a4c-91ca-392abcc2fe28"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec7c51f4-10cc-4485-9dcc-ca22232422db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42f87438-60e0-4e7d-98f2-f0e830f194ef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "979ae133-8450-4bef-af90-b74e6c6ab39d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79ec37fc-f159-4721-ae55-42f8f7588514"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ef1ef52-352b-41f5-a51e-851aefb32177",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1b747727-1660-4265-b049-11407369461c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0b9f62c1-65f1-412e-baca-9c25f5de9ac9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "81d3e9a9-4b30-46b7-b690-922593a5489f"
            }
          }
        ]
      },
      {
        "id": "572e8717-3793-4549-ad7d-e5137f476d1a",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "2cca0203-235b-4c1a-954a-cbc9f413425a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "15b0acbd-dcfa-4a71-ba34-4c8463661008",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b26b588f-cdd7-4688-8cdd-b38308612571",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9abc18c7-e0ba-4e3a-aac3-d648bf383804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0192fed4-c539-4044-b2eb-6c732fd40f69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a45031-15dd-409b-8eb8-d0909e029b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc6bb718-736d-46b2-863b-13e29b454769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ca3079-5e71-4994-a429-745f42611d70",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0a13cf-959e-47d7-841e-90b630b30d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8558c3c-75e0-408d-9334-eb1225029714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4423fb-78fd-429d-b03e-d4b6fc2b1463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "df3ee795-935c-4fc9-9559-55893eca2001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c462db-9605-4910-8dee-983e7f7cf160",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0f71c2-58ff-45ea-a41c-a5f1d41c6a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa459678-7e96-47cb-832a-5432fc97bd17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f594b5a-fce0-4d61-a16b-5c9076ffb26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6035ec81-4a6b-423c-8cec-f5f579d78a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f47c3e4-b9c3-4740-8b35-8693da8e46ce",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "740a1f9d-b723-47b4-a732-a463cab78977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2706af7d-7a1c-46b4-b068-b941621a6c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074efd01-7124-45c3-9e09-0f283ceb38b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "89cd38fc-dbd7-44ae-9bb7-686934232ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61756f83-0755-4357-a0ce-5676052d7506",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "256cf303-a4f8-4c8d-aa5b-39bff7922884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74881528-49bf-4826-baad-71485137b625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e38b78-869f-4d19-9268-5e6c7ec9c706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68f33052-4502-4af2-abc1-b5e595fefff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8865a0a-00d3-4314-9a02-3921bdceaf39",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c09f1b5-324b-47ac-8793-9456c1e78df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e38405d0-eaa3-455c-8521-adc8c11c9d7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06251d13-226d-4020-b3fa-f8c644d53588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e434e2d7-3910-490f-bc4a-ad5394b381b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432f710d-d7ec-4f8d-a222-1d0ece2aba6e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "704afa88-f2fd-4eb7-84c1-c59d4d047c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0480d0b8-4fbd-40ac-8d4a-d993c2aa020a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4be992-1d1a-47a4-9cb0-973174ffa241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "877f4192-39d0-4a31-bd1a-bdcec4e9e872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a72d1e8-bfa4-4f4c-bd34-dab95537a250",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c2415c-ace8-4fc3-8196-400dd3a578f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df03a29a-cefc-4fb7-b3e0-75eef56a82b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0fa960d-3ac4-4169-a0f2-8b4a6eb5b5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdb5d5a0-df7a-4cd7-9054-d7feb1bdeca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d45554-ffd3-44a3-a809-173866c160ad",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d679c7-d573-4931-8689-d57b11b2c723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f20bb12d-3f15-420d-b219-63e710f1b3e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a58c4f-7314-4c99-bf08-b972d5742489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "80bcbb74-d148-4b68-b1c0-2102aac5989b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d240cd6a-f8b5-44e7-a723-bb9572c73167",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6393fb-332a-4102-a12a-0ca595fec803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87cfda76-794a-4fef-b242-4a77ef8facdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee62bd65-5765-4b49-9d55-cfa7a1b08571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "617ffff0-b7db-4056-9e52-94d51a2ac3da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2855b8e3-750f-4543-8c37-107c87f7b3ff",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e967ab4c-b5b1-418e-813b-f08e8e1925b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2b44f4-d1e5-4b4b-b421-68f5e36cb11b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d76bfa1-78ef-479f-87ff-1c817b9baf80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1206e05d-7c49-42ee-b776-0f060aa97524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5478125-cfff-438f-85aa-eb3e80a10446",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93a38c4-2062-4b91-bd12-dd6881bb6f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be6f46f6-da7d-4319-832d-b486cc9ac36a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a88bc94-bd76-4e88-aeb6-8d568f471b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cc0b4845-7db7-49bf-8d46-52ebd5516949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33cbc2b8-c386-4055-bc14-47eb9cb4a9b2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43fb6780-e3f7-4770-afe9-388820520276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ccc2c77-8cf9-4ced-97ec-04a510b2ce59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092c0262-9bb0-4345-b62a-9b5e95d2733c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd60a1cd-0ee2-44c1-bf94-492ce749353f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84c4780-7043-4763-973a-b322ad25f7ee",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7095236-26e8-40c3-b03f-466cf4b58806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6822e94-795f-4bea-b040-a515edfa9eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d2893e-d6d3-4b4f-9493-7caa935e9af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1eddf2ce-6a76-4cf0-8eae-5980ae89f8a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9c266a-afb9-4cf1-9da5-10d913ca5131",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "783b9931-34b9-4cdb-aaa7-2107bf8d1f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6915292-7fef-4c58-ad7d-0016c6c43aca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9baf97f-6213-49d8-a9e3-e481a2406b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c67f4b2e-009f-4588-939a-371d243a6301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f75246-38c8-40d0-8b9e-8e336ce7560d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d76221-7f19-45c7-a261-64641e4c1776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "782291e5-245e-4c8e-924b-7c7922e5d38d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a163d6-fffd-407a-b652-2c8a1dfabe2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "98a69368-c0f9-4496-aab9-7b4212476bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cda5a7b-a2b2-4bc2-b201-2e92f57563d1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70ad2a0-d5b4-47c6-b083-0c7f254eff3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aef0a82-3996-42df-b36d-f1a6b86c9542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12ee701-0989-4ff9-8d37-00f948b6c357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6093e60a-d3c7-4e84-a7da-ebb659d98de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee312dd1-1332-4ba2-b813-908097538910",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "561faa9e-ecd8-45a9-8a28-865b142d62d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df2a7614-5d32-477a-86fc-5127800ccc82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "992bb56c-31f3-43d1-8097-89449126228d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4e02270-29ff-4fa2-9d63-095270df1184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d589ea3-16c1-4ad4-98d6-cba42e5ef31a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa357b31-e19f-48f3-a8af-24a369abd63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02cd1da1-4978-4694-9c0f-8a27245da933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c60b1ef-6a11-4b35-9628-c559d7d417c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d70491b6-bd69-4e6d-9ef0-c3f6b15a0d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61131e90-484e-44ae-a13b-c144242464f4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf51f8a-73e6-4a70-9642-b2019dd1bcd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eb1556c-c608-40b9-9398-2ece760d9a54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a56c77-b213-4be6-b84a-6a3912a21589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6a93c59-3037-436b-8e76-2c446329bfe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8e6d60-c077-40cb-a451-83d05a55c087",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1111e9-0cc6-4329-95d1-29e3b41d94ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d01704-d11f-4da8-a091-bedd5b1a5a2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d547b500-1a26-4901-a592-6027002c404d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40a690b0-bf7f-4906-9dfb-3ad140c7a63a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5067aed6-99df-472e-afc7-16c903c98333",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f62eb0-6617-435c-9800-a6e66bdf752e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b756b6fb-b978-470f-a2f0-22aa3ddd9f9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86504691-e54a-42a9-a158-353303cd8f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd6a485e-7350-4949-8f00-6087c795f89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d399b41-b0f3-4c2e-8d71-0a30d7c7e93e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2944246-e742-45e0-b4b7-18421cfc5fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e364df79-dd0b-4714-b08a-e99848695692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21154ba1-92f2-48bb-9ca5-6fe95caf940d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c681517-93de-4a31-99e1-d770ec74d202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b43384-abe6-4186-a20a-0200ada9a15b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67bfd8b-aac1-4700-b193-6d773f46784c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f49c008-4ccb-4c60-b370-0e4e03c286c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f61f3a-1e3f-45c5-ab40-d03bf1907f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa373db-2648-4829-91c0-8bf26b2f49d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5abc37b1-44b1-42b9-ad98-e134440aedd9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ecdb8e-e432-4f97-abf9-7462402c25fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbb15428-8918-42a7-ac64-9ce9bdeeabc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8d4481-af12-4757-b9d8-5c3bc2c1262c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffac8143-0262-42bc-9fd9-91663b90aa81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64ab9fe-9b7a-49e7-bfa6-bf9ea625997c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "324e735f-abb8-4f4a-9cf8-dad4b60d0b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23acf093-234c-4301-88ee-00964892a684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5306e75b-141d-46fd-a502-d7c779bb7312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c33169e2-b766-498e-9060-297c9c849427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f0057f-4db2-40ee-b593-e6346e1013ed",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a993e82-26b1-4f46-bd87-13a6f18360a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a952c519-1059-450b-a0d3-929cbb0bf647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39bcce0-67ef-48ff-baca-3de13b408acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31d1f47c-b97f-44e7-b0c2-516d196e35a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e02ad052-4167-40fb-8dec-1cc937192244",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0becd5c-ca85-4dcd-a788-cd9ba2aa9f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd7a2154-5545-4731-92e5-fa84905c00b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095f4d41-b4d4-4bfb-a3eb-f182d1239109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db2c51d5-6464-4ef3-9561-db3bdceaff60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d027a1b9-16c0-48bc-8bcf-dfd8f456d9ac",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a674de0-8483-47e3-9dc0-bd3c8ceca75b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2dca6d1-22d3-44b9-a123-82dd7166f0fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f75c04-6efb-409a-9f28-4b69665b6876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdc14e60-9acf-4aab-ac23-c57e8822d005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8841e9-f8d1-468c-86f9-af41a808c518",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca55391-0e5e-4cfe-b3b7-f632fd43779b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b1f7369-6739-41b7-8ced-da190e5d2814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc6cca2-243f-4f1b-9a6d-f03a14007c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63d98726-c04f-455d-88c6-e6ed80e1861a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924de7a5-4a79-4bd5-8b7b-f44c3e4718e7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7f279b-9c9f-4a06-8b2e-7493e658c2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc07d797-37c6-4c7a-be7d-5a4f26569dde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437390e9-8333-472d-a927-0f557569b91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13e5651a-4800-476b-af68-344b16fed53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e4f3ff-1203-42dd-9f7b-0ba78aaf23a9",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d0c144-60b4-42cc-baaa-a6d116bb375f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea0675b0-0e0c-4f00-afb3-6e59abceda59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30274992-25be-4c51-9d25-a1e1c210f4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b331fe5-8a07-4dbf-ad0f-0b3d61bc78b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6853bf-6bc3-4398-9bd9-bbe83d534633",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93fc92e0-e436-438e-bb19-b92bb3c5411f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1afaef97-9f5b-4ed9-8930-c5d8c569d5d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ab97c0-11a2-4e7a-a287-8ed334c3378b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbad1125-d8b6-4c35-9274-aa321b199d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db420bec-ce25-47ac-84bb-2c46b83978ea",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ebed11-5745-4750-8eb5-e910216471a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32015122-7c6b-4d97-9a3c-c3dee4476234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb6599c-b7a0-4d4d-a698-2c817725abd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b078c56-efcf-4c5b-b8fc-2147d5b7d8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d872063b-64b1-41b1-bd9b-8d663a052164",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "319b27ec-4f7a-43ab-b2ad-1d03816bb4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb199751-f15b-4b95-82e4-2f8bd71242c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c651e4fe-62c2-4463-9a89-4aef217b644c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9812cb2-d666-4e71-842a-df293e1656dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bbac953-de06-413b-b926-e6858d886a15",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1b8014-fc82-4e3e-a309-efe0e9a8f2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "482838b3-07db-4c97-942a-b3b487caf591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d41e3cc-a08b-4b04-9f9b-5a545e4965ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11268612-f0bd-46a6-bdc5-2f86a9f36b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe69bdd-4f15-47ec-9598-34f52250d663",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960e9079-7d54-4c5b-b244-1a778084756e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01cf742b-a059-4d7b-b69a-5b43e9529cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5398e70d-fb33-4132-bf56-342a643a6bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36ad29ca-96a2-45e9-a288-e6bde7efd1dd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9e25ff4a-f45f-4888-8322-ef2a23e3e3da",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e56ca372-518b-451f-930c-aa61944db2d5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46e009c-9aec-4fc4-b854-c4d754682ccb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f29f433f-8263-494e-b095-2c76cebdd2a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92ba11c-b65e-486f-8d04-3f369dce6574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42a78509-a253-4d9a-a7e1-8cd4f01f748f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "420601af-ea92-461e-b9c4-fb69c13ca56c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8faf91fe-368f-4ef6-80ec-5856fd7fe4bc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "26cef0d5-63c0-40e5-ac55-0afb5d199a68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b729ef60-6e6b-4e61-9322-e17aa0371b01"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0b60fafc-a6fb-4c3d-bc2d-c94152b5dacf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bf8de58e-b156-46bc-ae7e-563418040c58"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0241aeed-560e-487d-b415-c388de2468ee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "214d7bb1-88c5-493a-a22e-952cd7ec328b"
            }
          }
        ]
      },
      {
        "id": "9970ad1a-2c01-428a-a55c-6571e36abc9e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8b8fe057-4de6-476b-80c6-b008a6ab2a83",
            "name": "Negative Testing",
            "item": [
              {
                "id": "901d6a61-5ce2-4934-bb8c-21429ae80063",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9d4c08fd-e036-4f30-b7dd-2a018cdc3ee7",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "922a1cbb-c955-461a-892e-03b014a12f4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccf777db-3574-445f-86c8-4c4aa94e7c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc783ea-a76d-4d49-8a82-647d01c39709",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "506fffcd-72c2-49be-90ee-4f7488bb277e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab73a77e-9714-4053-936f-c8ba2fc4b9c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f277b76e-1b77-46a3-b49e-6c65b31c64ce",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0a88c8-deb7-43f5-a5f6-12602e90d7b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dcd4b12-7716-434b-9abd-fdc8738fb2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8689de-bdd7-49d9-b966-79ee1e9402f2",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73c9f3b-faa6-41c9-a17e-0353fdf7d6a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7ac1ff5-87fa-4d8a-8462-0e8fa38d7003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89bf0677-7a0b-4248-ac85-acd86b120e8b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5961ada-07c4-4ab9-93e7-0aaa8335cfa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd352fdd-57e6-4d04-9e57-7deb1f85e50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cba887e-5dd8-4e1a-8237-c7ccbf3ea66a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2f9f99-3f58-437f-a7eb-0880efaba0ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96d5d557-1954-431d-b30f-31c09ccf9c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4011f8d8-5ee1-4c02-a974-b2c00dcbfa52",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "858cb6ce-4b56-4ccf-a3f1-59154d33d6bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64d15b12-fa65-4fce-aa9a-bd7889ab59a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b68fa6-5fcd-43e4-bf49-653699ffeb3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69be040f-6709-4d88-80b1-2e4b1bcd145a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd70c0f3-e10d-416e-af0c-ddd59d3de5c2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295280be-a90d-41d0-8c45-7aba95ff554d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e889b76-8fb0-4e92-99d5-0123f2f2d6dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c5b59f-7570-481b-8af2-65a3ea663545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adfb9395-82b6-41df-8477-52e8c6289417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3210309-6e1e-4010-9672-de89c616edcf",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5d6f8f-72ae-4e51-b33e-b4bd447aa866",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc904ae5-9e3e-421d-b942-055c091f1842"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eecf6c3-eea5-4be1-8aa5-37f0e632248b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5786245f-62f2-4cd2-811c-1895ce8f74d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b60d06-3c45-4b35-84e5-dea66365f6c4",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f323bc9b-e839-4b41-8fcd-d19d68e40702",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4982fd4f-4cc2-4e94-aff4-d7583e5a684a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f19e690-f0ff-47ac-8bcc-ab9b3a62c62c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd71cb7f-b99b-48e5-bd8c-9b3fb2e06218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3949799c-c233-4140-8315-6ecd81b7080d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f66e78-4fcf-4104-ab6b-bab03220a0a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fd91bc8-6981-42dc-9fcc-4b7747756878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b0c33c3-d1b5-43dd-92d2-03e595a78219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40fa5e2b-3462-427c-adf2-0608f718e35a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d673ab-0260-4087-8625-3da2f1e80ba3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f512a7-5e28-4b5b-90b6-f5695af3d2ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdccb35d-b210-42e0-bf29-cc44329dbd6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e852042-ec52-44b0-9e1f-56be90834e88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d51c72b-0c14-40af-bb83-1cebb8e9bf44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d595eac2-a249-4814-a705-805213110528",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaaf9e91-a16c-4e56-8842-e7c2ddeca20d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "107a2d9f-9c49-4e79-9acb-f29e9b79747b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42a61fd-af39-4550-92f7-b0ad945b91d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba04c888-b8f5-4460-9d26-d400e292b7b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a2e0b8-8dfd-45a4-9b50-103764372dbb",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f0c305-5882-4b40-b9b1-c276ffd8d428",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b3f047b-a2e0-4b93-b411-fff62a68ba1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2e52d1-7b1b-4eed-a365-94b079f9d391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8679b3f6-a0d6-49e3-ac23-5595c5ab630c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "793d75d7-97a5-4664-b598-2434c4edcf05",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c177b7c2-6067-4a22-8a78-04d335975c90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2d7896e-ee93-4a5f-9ac2-cf7c297f01e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d765c8a-62d8-4d76-8efc-5388da59ed81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f3eae5-c29a-48f4-a951-16d62585045c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b040534-abc2-4a27-b683-1d02e36d51bc",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b488e21c-02ca-47a6-b559-c9d29376efd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "501ce60f-e544-4379-804a-e4fc9a7be109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be542d5-1218-4ba7-8e76-e38cd451d20d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbc6d1a0-4303-4e6c-a1d9-c88ad95d3e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34460348-79c2-43bd-ad66-ad55fd739405",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9bbb90-e3cc-45fa-b5fa-91e27dd27b12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae4a5a1b-5617-488b-99d0-f0609f2d57b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "409d44c2-7b2c-405f-a225-8e6312743bdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43ff33b2-1771-4561-8987-b6eba08c568c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554b91ae-bd3a-48cb-a211-5ea1034876c4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ceb656-1981-4416-bc50-a50d578e5e4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372250f2-2d53-4b91-9434-bf78ec5128e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9300e6e-0752-4d90-bb73-264cb174ea5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36cfda7e-0da2-470d-9665-f52bcd1c7a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae27018-b739-4c79-940f-8cb0d31ae36c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b942b93-a113-4f06-a3ad-517723b7aca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95cab35e-bd99-4399-8d26-84f0cc752f1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70ba4fc-3261-40cc-927c-0f51fc66fc5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32a1327a-2f90-465e-ab8a-25f8c91edb30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82a1a85-2817-4718-8f47-f2271bed3322",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e26632-7fbb-425b-92a6-5b91a3f455b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c0bc629-6e5c-43bc-80a2-caa8b97b25f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "943bc174-9884-46ae-9ca6-ab26576615ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bde1dd0-a058-4039-99bd-23a709a784d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da5a5ba-5835-49d7-94ee-8a14a9a1be38",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4b3a46-3f81-43b4-a8c3-d45591f377fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a23c708b-c014-4eae-9386-713752fae679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a18bfe-33d9-419e-92ee-8997e23f1452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9485f194-4206-4963-a1fd-64faaaf89b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b32f2db-21ee-46d1-9262-647946142350",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2110770b-4f19-43e7-a6bd-12e9243e7a27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3bf3369-61ea-4870-a16a-98b737b1d626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4813a2-ea6b-4a9a-b6f8-19463cd8bfc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ee4389e-c3c6-43bf-8430-64ff5bb5392c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9c25e7-a6be-4652-89fe-0ca9e2049235",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd13c3f-9134-4d4f-81ba-7552f88cec84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceb53c1f-5ae2-46e0-a5d5-a32c15936f8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fca24fc-a1de-40d5-bf4d-b0642528d887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "845c543c-618e-4509-8067-902aae3f65bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503c1c82-9d6d-4480-b206-078a75ddb9e2",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11dca33d-5370-4629-80a8-b516c183aec3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93f31403-d42c-4769-b1cc-51326e1151ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e078ad1c-305a-48ef-8e15-4b38f138e8c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "892f4517-f023-44d3-bed6-509aeb2462e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912e4bdf-f65f-4034-ba55-91eda9f77946",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc0ef32-0d52-43fc-ae44-1864108e2f1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "929a56f6-1948-4420-868a-a35bf399e3df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c25929b-c511-48e3-be4b-d5366adcf185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82b3bce4-8a60-43b1-b232-187f7aa2183a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8df28b1-e7db-4d0f-a4f0-4b031e8b5568",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba99fcb-b4d3-4503-86c0-457383363018",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb5978ec-5b64-4094-8524-d06472248c89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5aa0cc-67b9-4ddb-bf3f-cab8b29ce942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a9fdd8e-25d6-4116-9611-cd9cb8190b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28c3965-0898-4dbc-aa79-336a99906365",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed51878-32a8-41db-bea7-b5a46071a819",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc808c88-e9d4-4643-b98a-ec1c426921fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92448166-c36a-414a-a7d4-83b491dda652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba795f6c-9118-444a-bd5c-dfa31b7a8c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0cec504-c2d3-4ba1-bbe0-333df1fb05c7",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1e48c1-adbd-4170-b775-5632830e6e01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb38a44b-e537-43b8-a003-b0dfd3473c25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5940df2-e8e0-42d1-b8cf-435019586233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd4e93fb-739b-486b-a6c6-e16a846130c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49947a00-1228-4d2d-b3d2-ba4ec178d958",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6445ef3d-d719-400a-b89d-1a2bd6545b3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b5d16ac-76d7-4fa3-a9b5-08b1dc36ed4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7669e445-26a7-48cd-a9ff-2925b223e925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59f41949-1b85-4275-9e43-173fa6ac552f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f32765-9f08-467c-8471-6a97f71c3efd",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e147af-5d7e-4ce3-9b8b-2f02d6ace3b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43eaab90-7885-4095-90b6-aff0bcc04cc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11236e6-a697-4bda-9eea-1274b1b91383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f43e99eb-cbf1-4771-9f45-b625f0230c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6dfb6d-48e1-4d74-98a2-f7c61b97cc76",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "088f7c6e-81a2-455f-a740-b2d36fb90fd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c62e8c4b-7398-4551-ad91-a14d21975dea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f460352-fe3c-4b6e-87bb-3b343b96bec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd9f9943-59a6-45d3-8545-023d1be468a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98cac8e-4f28-4ed7-b90b-7dcac1e0d17c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7346bf78-751d-42cd-8187-7695ead071bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a212491b-f37d-4002-bcfa-9f799bf3df02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "204ede86-4149-4450-9baa-35de6ecd8d88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a075cb4-b2bf-4ccb-81de-711c57316281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a07f766-a776-4062-a386-a9108addf09e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d614d6-c7e2-47fa-af10-d3f2031259f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b0d0688-3b4d-437b-a330-58685eb2953a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b3ee75-0f8f-4045-9eee-68464320f762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13800f03-78b2-4498-a61e-5d86d65a167f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3bb1f0-5d49-4845-9860-a6117ad9f9c3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa19d39-1cbb-4099-9259-158d8e508ecd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc5de8cb-3b57-46fb-b427-7c9d64c7a445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9741e253-d2f8-4b09-8eec-68e932bac2a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "617bfb0f-b223-431d-b028-f6c5c243cf2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0335dc8-9b42-4d8f-884b-da8d78db801d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98958753-b354-46ff-94a2-30beca26f5d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b71502-746f-4841-839a-d3fa228d323a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "916e2223-e4d8-403b-891b-3ba516f51e0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b91d77c-e259-41ee-b225-753e5ca944bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33179977-3c9e-4944-bf69-7f9f332ab4a9",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d7aa63-cdcb-4b6a-a04e-3d508fd26d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1da5b71-50f8-4765-9f79-a255b3b1b7ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c328ca0-3af8-4d68-883c-1e9e90d1872e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f17e2d51-7f81-41ba-be88-4944e8490b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8831c13-a4d6-4cbc-a318-fc63ee0f33b4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3adc03ec-dfad-4b59-aef1-791e7b92a8c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1837eb5a-16fe-4c14-8dea-bc7811c46813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6fca82e-8209-40c4-80bf-a7c09b6db18c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d628ad19-0ed5-462f-b7aa-ab5e1dc51a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47301c2e-e4e7-4fea-8de9-d378fa311ba7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d65ca3-6ef6-4fb5-8eed-72df45bd2721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f10c0934-a0a9-46d2-acae-dae988b89772"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac3c325-4549-497d-97d5-17589e5e5e9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bb82c23-1c1f-4822-88f6-fadf5da5193d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca31984d-6648-4916-b984-5f7ed7ebaf72",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7c67a7-0838-4a3e-b67c-6374e8f449ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33b3e447-ec9b-476c-90e2-b396fa4726e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7398a6b7-67a2-435f-b604-99e08b1888fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "515393d9-84e7-4bf0-8cf8-f87d2fcafc75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4234ce-26ff-44b0-bc91-f70454c1e852",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b163ffc-effe-4eb2-a939-c2b68f752e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7cbdf9e-f92a-4453-8824-66cd61287a69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61eb70c6-a574-4a22-a663-d460a129150e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "492e3025-1880-4737-9485-bdb19f8101ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6546a342-b650-441b-bede-023d450c744d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4d23f5-59f6-4cff-9f74-bb71b1e63043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32a7060a-7bcb-443a-b25d-2ffad58110d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb0c904-fe8b-4711-8260-821ee864b29f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96645c30-eba3-4a7a-b753-9d76a9c03ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a049044-55af-4200-b5be-d87d9949afe7",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac4cbc5-6602-4e98-8dbe-06d96858cac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0092c4d2-9dd9-4ed5-ac83-81c5d1b24010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6647cb28-a7a5-4773-a018-ffe9e388edb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2895b64e-081a-42f8-8eda-8a53747b96ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bcfca75-e2bd-4e8d-b3f8-5c963e428b2e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d38ce7-509d-484e-a225-03b9d8ba6aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4787cf6-a01b-4f84-ac60-89be4125e7d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6229411-3e1d-4d35-a80c-2358970229cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e438ae1-0fe7-47ac-92f0-1069a8e566bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29cd0e63-e035-4b49-b539-670d890cbee6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b854753-88b4-432d-b5c0-0d31c291f3d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa31bc14-f27b-4c1b-a1ca-d2930d63a7b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f6fba2-dca4-44ad-9a42-162b94b25b0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69fd353d-7c4f-46ae-afcf-80e1efa4119d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e02da218-38aa-4d20-a45c-bd961a6da4d7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1a8c71-a04f-4463-b4a9-24d65b808444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02ebff43-cc30-4b46-9d41-8141d0579f94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5def1653-713b-43cf-a5cb-b689584a7be6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0fed5d8-26d1-4194-b094-63672e6a088c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d01167-1d5c-4ef2-b206-aacb54898354",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d9c9a5-2111-43e2-af11-84303447b9ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d984de55-f776-4170-987c-4664905d8062"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "129a4adf-636f-4a81-82ba-4f80f3a5a445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "310e610e-17fd-4816-9000-21d6344ecb19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a171ef-198d-46f7-9b88-b002c861886c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78884f6c-4220-4cf1-aa51-02c0af36a421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2b899b7-b18d-4b5f-818a-ec8559889892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1276a0f9-cac4-4d7a-a8a9-eb54d1abd0e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00afc9cb-1658-48d3-8b50-fc8d716b6511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae02ddf-2222-4337-a066-c4225896b11d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "678f4fea-2829-4474-8220-1205bbf90ee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5adf02e-70af-440a-82e2-b6044bb7de8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c70990-3561-4043-a83e-3667241f4bcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85c9bb26-0c01-4981-a994-78ba0dc3b662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7996561a-f658-44c3-8b7f-8b3a4d38bf42",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc5731fc-5e51-43d6-ba92-d468f9eee453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b72b932-011f-4e7d-84ce-e7aa92eaedcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f84afe-0278-4939-85e5-eb37e18103d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "065c8eb4-7269-4561-9db8-bfef6cc1de64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d6489c-8252-4fcb-90a6-f6da9921e0f3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc1e565-d365-46a0-a81b-da46d67bf7e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d77d2b56-80da-4edb-a1e7-a4b4b0fbd9df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4730717-176e-4b58-ad6a-02e57237c274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6545ef05-eceb-49b8-a384-46e374cc1da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7243edc0-be36-43b3-9a74-552798829225",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457aa83c-4a59-4b90-a6a3-e46a1bbfcec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28f75e48-cd2b-4376-b52f-4e110719712b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc44ce1-4c68-45d4-9eda-b0b13bc31329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64e36978-61e0-4e59-a1e8-ae5b55562b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c1ce89-3ee8-4e71-a21d-11d21464e473",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7586d39f-80f6-4cb6-b019-e91db5cb9b65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6515cbd8-3617-4581-9550-c4a8c32b17bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39dd1914-c7b1-482c-ab38-b6ac72c7f91a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad9f8e5-d52c-43a2-b378-41c4a6a7d7b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e722ff4-b693-4181-894b-cc2bf43f5d61",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd682bd-ca76-42b2-82f1-446b00f758c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a384e8d-e576-47d8-ae3f-84d92ed72661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bafb653-6663-49a6-adc7-32111dc60f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47cd9df9-fa5c-44f4-b995-9c92afb2f6ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd702ab1-c543-4298-a5b1-050e1619dc74",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9377ad8-1c4d-4a22-b9eb-0587cc58923d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c436225-d116-45f0-811e-1e7e0d470da1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31efe6d2-384d-4827-8b72-b1d45d00d790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17ff3183-84f8-4117-b306-349e1cf5d4b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6899dbcf-a3fd-4dd9-81a0-1bd007ff360a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea571efd-156c-42ea-a479-d8ed78d7f3b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5125f08-b275-4303-b039-5e066d36d5ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db38b98-1a40-4a9a-aa88-96cabd308170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a5fe124-040f-45a5-8cd6-5f7bf69a7547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012f5f4b-35ff-4fc2-9bb9-183160ab2f95",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41949477-b010-4cd5-b57a-c0ba743b7952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87e79e62-fe34-429d-a4ee-fb0a169e32bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b425cdf3-9f4d-4270-a794-1d3f72aebb7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18707b36-6055-4078-9633-f36a60bf1fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0bb1e2-2ad5-4923-b708-ad722b12ef9c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ab568a-efd0-4ed7-9f2a-82688f02b2dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7767c6ad-70e6-4bdb-931a-1357404fe019"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "667efa66-a94c-4286-8ac9-df4a59793163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c56e9ac4-cd74-4c3a-b9f4-4ea77c4254b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "601f8e9c-73f1-4fbc-ad18-dfada5cbb96d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327fdfbb-a618-46c0-9b16-50e2cf6d2069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18fc4764-fa79-4216-9ba0-afb979ccbe62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa09f93-e20f-41c3-b80d-b19a6cb11dea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1050320d-1bf2-4378-9890-15c06d542cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cebd5d8-b163-45c8-bb15-ed779478d2eb",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0f16e3-8add-4c49-a14c-01c8bb673349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c995db4-b458-4cd3-b1e1-00abae482b93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4297798b-335a-4ae2-99ac-352023feb9d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a34e9b9-7232-40ed-b745-a8e196692c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b7c5a7-d96e-4398-8d2c-417dd9152f0d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f527f1df-3479-4816-b1e9-42eace694a05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08f95df9-0d52-4b3b-8a21-0a5e9262d3e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76cba6c6-c446-4c95-baea-3195565f80ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "474c9e02-50dc-4820-8940-a8336070caed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e90a24-f1b0-4d51-9c0e-283e175dee23",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4b3d85-9089-4cc3-bceb-ae89a816757f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3ce205b-fc3b-4716-a840-7e28564b0100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c364b097-099e-4bb7-bc63-253999d6b6f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a79bfd7d-acf2-4e92-9ca5-8f83eb9349c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a719ab3-e9cb-43bf-9a22-93abfff47ef1",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81995314-87e1-4891-8153-e554b56d033e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92461bad-2c5b-4d5c-8e2e-bbf6ef571bd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2357ddbc-6d8f-4c56-9a7f-c0a3ba4e0d1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56f2f247-4afb-4b8a-aeba-006a01a37864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe240753-197c-455c-a8a0-27df3962db52",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e446df-06a5-4633-a15f-596fe59f35ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50808875-bebd-4e78-8091-e5b372c4ef82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b8dcbc-1134-4130-94be-dbda4bfe27f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f68c20e-9a33-4e48-b6ca-5925cfa4224f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1fa7e8a-a8fd-4eed-b8de-924fdc362108",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bece6a66-86d9-486e-8eea-13c64f0bbaba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e478fa79-42b0-4934-9d6d-c4fa0ed12a1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8169f7fc-767d-4890-acf7-74262dae0fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d94240bf-9d4c-4798-a064-acf622481ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55298ff7-a2f7-4f00-bf73-35c6f9f0ec1b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe8f6c4-fe70-416b-bc9b-593b07cf17b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df07cedf-fa17-4a19-ad32-fa0c4a75d306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cbcc19d-9a9b-4566-bb71-d7363f69521d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ce8b12d-f7a4-4295-8a7c-fdf089deda3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c26245a-3164-49f7-85ee-c0e6acddd16f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e83558-dca4-4054-997c-6a7e1e335d50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6a41289-8c91-4495-b474-68c9f0b16407"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cea5f06-6ec9-4240-afd5-f9b428ea3875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af1e60b4-5f11-414d-a517-c01a8f3a21a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee37684-4519-4bda-8d25-20e379f88745",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a0bd8de-51a0-405e-9cca-2adaf2b3ebc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f5ed050-1594-4e88-a104-813eab9c3be2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce94352-eb77-45c3-8ad8-6939f4514258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "150c8732-cc5f-40ca-96de-9cf32cc99574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143d5a25-419e-443f-ad6e-137cbf5ff7ac",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "767de29d-6e1e-4b30-a6ee-fa4747d07be7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7c37c7a-a7a6-4b77-8cf6-ab75023a3a5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5b6ba4-3c99-4b1b-8d5a-375fcf067b32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ed6466-a506-46de-a9d7-def4f821b9fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63049aec-d0bd-4e71-beee-5231341b4f63",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7d6756-fcc2-47cc-bef2-0d94e29fe231",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e131f855-5d25-4293-9294-f502e0f0ce67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1eeffa-fcc7-481a-9e02-5f61bcc7e44b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "845cb62b-b8e8-411e-ab66-ecec6c70cbe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427dacc2-8214-4af7-b7f1-6b33bb4a489f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe9a1ec-bdee-4120-9cfb-c041dd6f1010",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dba5ade4-6acb-4a05-8717-3bd30a29227a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd4569e8-2f54-4b0b-b765-571f8aee0f07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3de3b5fb-7167-4f2d-8ee4-15b67e7820e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba5f8d3-bd38-4d18-a032-f02edd2a30cf",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acef4ef6-71c8-4f85-bab9-2210e4433d5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc83a86f-04c4-4a44-908b-96aae801a011"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d08ab3b-9fd3-4722-ae56-6a1e12024c2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f38a128-3571-4e03-a172-f3c8cafda69f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a52fd1-870e-477b-ba4e-35e74816bbe5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ddf61e-fbe7-4fcb-9c98-96d4fd5eddd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b871471-370e-49e5-bae2-c5f5ad80afbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7faa9f23-6b7e-4749-b3a6-c415f61758d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26920e6a-ad25-459b-a321-14d94bdbced8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6089b1f5-32db-4913-8f98-defb3544009d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97296fa6-8ec2-47ac-8657-b1959fefcfec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dc00e0b-26b3-4828-91f2-7bc2e0e2fe3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "324cd775-a13b-422c-9f3a-1475763b0f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb40afdb-3060-4e59-92e1-6bcd03f9ab6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e5e2cc-9942-44ca-8418-bf5b6e3a5426",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4831fa-de07-48a6-ba43-45967d2037ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75836202-443a-4ec9-be17-b12ef199eaac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f129a90-4e75-4ffa-879f-b62bddd182ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "036f0bff-2255-4a4c-b12b-daa480ed5da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5092e869-4a19-4911-b185-5a81c8e0f04f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c89fb7a-cd2f-47b9-af82-c9a6028187ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ec23359-0cc1-45ec-bc83-e239f66175d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba0a4da-638b-434b-8d6c-28b83f4613f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df1f4500-b9a5-44aa-b81d-d2f5106f1cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea114f8-ddc7-4615-aa4d-8149c61bce80",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24493dd8-2185-4e00-a1b9-f31619a2c75f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f482024-4d0a-4dca-9814-96b5971dc2a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feec22c8-556e-4cec-b3e2-27b612e5ccb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d0a3ce-f2b7-48ad-a694-7d0e2badb211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0faaecc5-aa5f-44b2-8a29-ad84c1c57485",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74218124-5650-41b4-8dd8-7a0abfbe0a06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "951e5a5b-77ef-40cf-9131-dcb99c415900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b501d6-10ae-4db6-99f5-1da675ea6e4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d21db4-61fb-4552-8eee-0510d342ef3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd8687a-ce96-4ec3-bf63-851dea2cceee",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1d6808-dd52-47f4-a978-f056b5cf5617",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d476a957-e827-41d1-8305-d018d547c1f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6fba081-f806-4245-8dc1-55c8e74f917d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a738068-60c7-478d-b2f7-e46cea616dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4adcefc-8938-40d0-82f2-bff0ad39fbd8",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9e2b66-b892-4d18-aa26-f704989ed72a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35fde7df-4085-4910-ae31-258700d27f43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb89879-556b-4b9e-93db-401edf33ffbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12d4e04e-8eb3-4006-a330-c14066d4f3cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b4d22f-8c23-495c-92d0-22252a8224c4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7174e772-99ff-4cc6-9600-9facc15b53ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0976193-44b7-490b-812d-6673633bfc70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5caae41e-3b77-4cd7-b6d7-050b95ea47a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "239dc8b9-190c-4b16-8c5c-b89967318bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab85a577-8ffb-48b0-bee5-f16c583ba444",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02a8890-5286-4ce4-830c-575dfd3c68f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e9c4240-168c-4f5b-9cf9-55a041a62008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7743561f-50e0-4c62-98a9-636416c3ef22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "555385b5-e746-4e3d-93c7-b0919fbd9043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2be1486-8b9a-44a9-97f0-34fdec4e1172",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45679c37-00c5-4ddc-a895-a98be5d25021",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2fea2c5-2c75-4ebf-8195-2f487e88a4a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adecfc1d-596c-4e9e-b432-771113544ffa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0040eab-b276-4f38-bb71-8443afa248fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4fa27e9-d9da-4fce-83bc-32075987628a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f47d1f-8654-4829-bea8-9285cddee143",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bbe9c39-5c21-4ace-b16b-5511062e4efe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f8acaf-b0a5-45ed-998f-5233daa2d17b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b963235-1284-415a-815a-8e6bd7c24ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ab7ca4-4408-4a1e-a810-9bf866580f3c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c821f6e-db5d-4859-b362-a20b3d0ea1f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28dff29d-a4d2-4504-a556-d477b3cd356b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f5eb2b-3f10-48ad-8a37-fe7ec01aacce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "218bf08e-8651-4a3d-a510-c13eacb3a7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732ad443-acb7-4838-8943-61395edfb774",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa49c31-7da4-4b31-9425-f7df89893f70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f0e168c-453f-4682-b4d7-d64098395cab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cbf59e6-9dae-499d-a41d-fce3f0eae78f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c91851a7-4dd8-440b-9e88-0d20002743dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5063b55-d8ba-4be5-89b1-5550a49c9b23",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4537a224-0e9d-4c9c-a0da-7e16e18ff709",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c696dff4-4d9f-4577-b6dd-5c5257d03475"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a010428b-499d-41b4-ac81-83347c4b839a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf891bc-522e-4a93-87e1-fc59a666854f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b041667c-b586-46fc-bbc9-5e809eeffcaa",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b430931-1af2-46cf-adcb-5b6eef5538ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99f4a82a-d4f5-4d39-abad-327a84944560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc003625-d71c-43da-bb1e-81524409cb74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "703e0ce5-9aa6-4f2e-9c40-66727ef49ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9f2c8b-1799-44f8-9a17-6922b44c0fd8",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f8daa8-492f-48a8-9893-2ce708174daa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ed3cd5d-c70a-42d9-bb79-c06622058df8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42fb8b02-8120-452b-b85c-fcfee0bef8fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b25eafa4-4b36-48fc-92a3-54ef9d3918e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d9489c-c07d-4916-aeca-88cbbd6e8dca",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374a13b7-5493-4bc3-a55d-7fe225fd8d7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5882fb9e-ca4d-40e3-ba3e-d269681df9e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4234cff-12fd-42b4-942a-fac5e71407af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d066e6e5-8100-4644-b4f6-9a4c6aa0b7ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1227ab3-8056-4602-8447-55935998af03",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8363d6-981d-4a96-bce9-8c6e050e6f37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46976163-578f-49d3-93d4-4f65d388c6a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "262378fa-5800-4fb1-baf8-19a969d6a0ec",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d12696f2-5454-40f4-956b-588bac052436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45299cc1-9396-4571-8383-a99c851c2acc",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3730fe81-f45f-4f79-8d89-71490a28c664",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9aa5fc7-208c-4fcd-995b-ed6715ce03bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b9ce62-3d95-489f-b7dd-d11ea30ea7b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb80250a-a4bc-4e98-ac8f-0b6b4eecd8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e082b873-8229-46da-b872-bdea8d2d432b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7764b40f-d5fe-4efe-abf3-21d5c0a1a050",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d22f1ecb-d442-4076-bf83-6332c24d6243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "760f7109-2c34-44c3-8e70-940f35e67cfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b05f16f4-2751-413e-9a9e-8ab3b1a95b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80aab3d-8863-4b6a-9a68-7bf8894d2fb5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9132eb1-43eb-4042-b80e-c873bba5a266",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fae559a1-463f-40e9-b367-ed3e3b6ebc50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e6b0fe0-feff-477d-8f1b-83f2b053ed20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e91cffc5-f239-4e3f-8244-566cba6eacef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a4ae8f-fcc0-422a-8ab2-3e411e4661f9",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d4c3a7-1b0c-415e-a750-625a70170b85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7417c88d-8d82-4443-8eda-4fb34ad68435"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f4f066-1485-4a2c-8cfb-abcc324a90d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d63ee66-0c3f-4f23-8552-8979a9889509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8b13a1-37cc-4103-9b40-bf887522c18f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed394df1-0e03-448b-b0d5-28ea3eef46f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "038237b1-1a82-4df6-a129-60142aadd78b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4032a400-8d63-4833-a813-20fd2fac21c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66e2e5b8-f89c-424a-80c4-2252deb4c2dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a2c7e9-5490-4078-bae4-1dae328489d9",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abd8a39-9885-4b48-a7f9-343da1fa10a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6246eec4-1742-4784-bf1b-f88cc800c43d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d602e7c1-250f-411d-8b68-384a7fa0eba2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe4da7ef-e107-4f68-aa9b-95bac93a1979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ca6742-b426-4d29-b93f-c0d747259c75",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63052a8-85e7-4fdd-a9f3-35907ca12c83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4900860e-6d16-47ae-aea6-df4e009da6d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2ce443-355a-41d7-8f0b-aefeb15bc1dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f2eede5-2152-46b2-843e-2663071e5ffd"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df2626ac-5aed-4fca-bf3b-2b47ab7745f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5e5b217-894e-414f-9263-eda024f121dc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e55f91bb-212e-4c6b-9de8-062ab53bd209",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f3ea7a3a-694f-493c-94d1-e43fa87dc3bb"
                    }
                  }
                ]
              },
              {
                "id": "ef687936-fdd6-45bc-89a8-a3aaf197518b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "259bbd8a-1646-4d04-b84f-eacc4c8cd94f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21dbed6-7b5a-4fc6-899f-882433fdd577",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f498a574-c5c8-45d7-9ce6-de21f5baff21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c2324c-f390-4ceb-85d6-af6380c31dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05410c7c-ed68-4f59-bda2-1628e10185c5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb029b4c-86fd-4c3b-90c9-af2a08a70fd3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f894f080-b54f-45bf-ab9d-a2eb218cf91a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "27d08c9d-71a1-4c54-8ba3-13f46767b709",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cddfa84c-9a3c-463f-9d5f-d315e9802d04"
                    }
                  }
                ]
              },
              {
                "id": "401c83ca-b160-4f7c-bb2c-33192efac72e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c6099eb4-ffba-41fc-b81b-91fc6bd10ec0",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afa66c3-6286-4cfb-be75-dfea53e0e5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "321f9d99-7be1-45fa-a290-d0f4c964729b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782140e0-a225-41aa-92b8-06bfdd309840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c51d6733-8f70-4918-ac58-c4ef624be994"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "21f6a476-9aef-4dc5-8b1f-680e437ee16f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2494ac94-ffe6-410c-b197-ce640b33d646",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "841f1d32-53bf-4fe8-8977-f5035866d284",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b16ca414-c8ec-4a36-98af-28992cf4bd5d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "715b52b6-b034-48e8-b9c0-fe329c6a5b67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5271ad71-bc54-4037-9b6e-896a06ca7e54"
                    }
                  }
                ]
              },
              {
                "id": "3ba3752d-b037-4d4d-9131-24acbbcf2a24",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2906933e-b511-4b2d-a402-f86b61eeca8f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a4fec2fe-36be-4eab-9c09-d108dbcdfd23"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6000292-4ab6-449c-8546-d4251c05d41a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7b17e2f-3c9d-47ce-8157-3ccb3818ab66"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d72548ce-22d7-4d73-b9ce-9b33fa869738",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5e7ef1be-818f-4d9a-b64b-f1305c24593d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "49307858-affd-480e-8b08-f82de0ebfd92",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1653e4fb-ff71-4dea-b713-cf8b5c7f5444"
            }
          }
        ]
      },
      {
        "id": "dc65e5ae-bb79-468e-a80b-94227ac9db99",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0863dd0b-6656-4501-a361-a1235724af62",
            "name": "Negative Testing",
            "item": [
              {
                "id": "10313842-4468-4754-96a7-7ba0ec4f22e9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ecb027d3-8b6b-45f8-8c15-e2aab7baa23f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0207918-d55e-454c-8464-f32a78b1dfa1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2b119023-8f2c-4adb-8fd2-6ded008b4267"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41711f28-a65f-49d0-a38a-f755d8522e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "516703c7-5169-4173-a844-b824e4841fd8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dcfcd9e9-0530-421c-a788-afebdad00d6d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec82031f-8b5e-4506-98f0-61082ea3718f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4651f768-4e2c-4721-90a4-d4e7b3bdb0a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d36f974-3460-4a81-8a98-706abb6e67d2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c2024238-bdaa-48c8-b160-85f2877bf3d3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0aca6744-65e3-41be-8552-d95b9bc846e7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc2e4def-3349-474c-9daa-3938c4a31ae0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "30868070-2737-4bd7-86bf-ee16af582bc0"
            }
          }
        ]
      },
      {
        "id": "a3ec96c0-a21f-41f4-83db-4252fbc91d24",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c0140228-0ba4-429e-b0fb-0ef4aa3278e6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7060266d-abdd-4717-80f9-a8fcadc46213",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "355e6a69-74a7-439e-b266-ff00ae7983b1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a4ec87-e73c-4ebe-8060-9eb3a94e6409",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c637d011-93e3-4735-bc6b-fd01673520b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27142697-f405-4823-a755-311a68690cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75b84953-1949-4f08-91d8-180b4fe2a21f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df4ba48a-5aa6-4ae6-a43a-88907bb0e050",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76658c22-953d-4bd3-a8dd-6e06ea76908c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f545ff4-739c-4817-81fe-229a53a82118",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff098d80-911c-4738-be67-cbdbadabd6df"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2dc1935a-9d16-4ed6-a6a4-219b3ae35362",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "54e7a512-67b7-4fb9-9976-51159266737d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe449de2-5ec2-4c5f-83c2-3f7435f7c502",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fabb6c02-3f28-45d6-9aee-bfe683bdfd2d"
            }
          }
        ]
      },
      {
        "id": "3b5e2100-3445-4f9a-9631-7c1c1cc68fc2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2e99e646-d6b3-4031-a8a8-09e4e04928fe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b2ae43f6-0e50-4507-aed1-6e9b3aa68a95",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "605fdcc1-0fb6-4fb9-a89f-24bf3cd82929",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ecd24c-3fd0-4ae0-a0e7-7409950adf54",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb397057-0fdf-4080-97c9-c8e86e0b73ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a943c7-d030-4245-ac2b-a642216e9f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cdb2a9ff-de78-4301-9c32-42d654956197"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79b026ee-5c89-4805-b67f-e7e151d31f4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "339f15b8-4431-4ce7-b712-86ee422a420c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a131a28-dd96-400e-a4f0-7eb0c9da20e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1b45135-a6ad-4f11-91d4-55ea029fbe7a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20e208d4-185b-4723-8ad8-0740c1070c06",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "02108f7c-2424-456a-88a4-03ea3e6635ae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7319a824-0978-474a-a1a4-d8623ee6df40",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5f52a114-9693-4d18-b5a9-cdb0a63cba51"
            }
          }
        ]
      },
      {
        "id": "2bffc352-f383-49d6-86c9-0a3352ae16d7",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3af260d3-8970-473d-b71a-36ae2c6ca228",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "976cfc83-c471-4070-9f5d-fa2d57fd4178",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ffdc355c-2566-488c-b8cb-0b61d1e254e0",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2cf59d0c-70e1-41c1-8b4f-0860e771547b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "84e0dbe7-2e32-45ff-b0b4-ee73fca27578",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 77.74385964912281,
      "responseMin": 4,
      "responseMax": 8447,
      "responseSd": 550.5437130747713,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1709080370716,
      "completed": 1709080401749
    },
    "executions": [
      {
        "id": "a520e99f-6800-4c32-bbbc-33d7085162eb",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "484525f0-b4a8-4aaa-8a3e-9c97686b6e9c",
          "httpRequestId": "006ab6a9-cc57-40b9-81f4-791a72288aa4"
        },
        "item": {
          "id": "a520e99f-6800-4c32-bbbc-33d7085162eb",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "337f0329-a674-4c3d-aa3d-9273814d2412",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 0
        }
      },
      {
        "id": "fe6504a2-d0a1-449c-8ade-56dc113051c5",
        "cursor": {
          "ref": "4d492807-7b70-421c-8a71-25d71a75ce9b",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "fbe93461-8925-495b-b952-30cf49f2be52"
        },
        "item": {
          "id": "fe6504a2-d0a1-449c-8ade-56dc113051c5",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "57d44a36-7d50-4cb3-b7e3-d57b256dc818",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "aa6beaf5-2f9f-4b14-a7f9-1bf60878184f",
        "cursor": {
          "ref": "6cc56f0d-a99d-417d-83dd-fb6d6370f524",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "aeb3f06b-5be5-462a-a6e0-75d0caa48715"
        },
        "item": {
          "id": "aa6beaf5-2f9f-4b14-a7f9-1bf60878184f",
          "name": "did_json"
        },
        "response": {
          "id": "e369c816-53d2-4c75-8cdb-aa9ce1957130",
          "status": "OK",
          "code": 200,
          "responseTime": 91,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336a4ff5-3a6b-423f-b4e6-03a60834844c",
        "cursor": {
          "ref": "a7415e3f-b952-48b0-9705-cca613e8ca68",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7582bc88-c0bc-486e-9298-aa2c6cddccf3"
        },
        "item": {
          "id": "336a4ff5-3a6b-423f-b4e6-03a60834844c",
          "name": "did:invalid"
        },
        "response": {
          "id": "e0c19211-251b-4403-b7e7-93f65ebafb7c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 933,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336a4ff5-3a6b-423f-b4e6-03a60834844c",
        "cursor": {
          "ref": "a7415e3f-b952-48b0-9705-cca613e8ca68",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7582bc88-c0bc-486e-9298-aa2c6cddccf3"
        },
        "item": {
          "id": "336a4ff5-3a6b-423f-b4e6-03a60834844c",
          "name": "did:invalid"
        },
        "response": {
          "id": "e0c19211-251b-4403-b7e7-93f65ebafb7c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 933,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb470f0-b635-438d-89ef-234c5aeb85a2",
        "cursor": {
          "ref": "8b8bb882-617a-4b12-81eb-0004bb9f1089",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7273b9a3-beab-40b3-9d96-1a44854103e8"
        },
        "item": {
          "id": "6bb470f0-b635-438d-89ef-234c5aeb85a2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b7888ff4-baa0-482e-91fd-02aafcb742d8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 24,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1b9469-08ff-48d6-a7f0-3b87ec4cc101",
        "cursor": {
          "ref": "fe508d23-0c8d-456d-a6f0-67afbd991ca3",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c6abead7-a1dd-47e7-8acc-71eefc4f4a46"
        },
        "item": {
          "id": "3f1b9469-08ff-48d6-a7f0-3b87ec4cc101",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e65fb71d-f4d6-4e2b-9e3d-bc24b825fa1f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 15,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "700c965b-3045-4cc8-a700-8dd7b469f118",
        "cursor": {
          "ref": "88b8b8bf-df5f-472e-9612-4e6ef925e624",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ac3b41f5-3671-408b-93bb-ecbfe01fc511"
        },
        "item": {
          "id": "700c965b-3045-4cc8-a700-8dd7b469f118",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c85c20d8-cedb-4e41-8d23-b6d85666be76",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 17,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287fbe80-017c-457f-94f6-2ef55ebb5b67",
        "cursor": {
          "ref": "3c75a9df-cf51-4d60-818e-5b720bdab75f",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6608ebef-1567-41c8-b4a6-d9597377fbab"
        },
        "item": {
          "id": "287fbe80-017c-457f-94f6-2ef55ebb5b67",
          "name": "identifiers"
        },
        "response": {
          "id": "d61754c6-6aad-4850-9190-a9784f0ea737",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6819a7f-ce2e-423a-9a7b-e4080a3f4bf9",
        "cursor": {
          "ref": "3375043b-e606-4b74-a744-6c8589b790c9",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "820975b2-1949-4451-aa58-45460601b03c"
        },
        "item": {
          "id": "d6819a7f-ce2e-423a-9a7b-e4080a3f4bf9",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "830dd7dc-954a-44d5-815b-715895685e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2c6807-4a79-4edb-919b-b1947badcf5c",
        "cursor": {
          "ref": "ee0add4a-c3c6-43db-876e-d0c531c9ba2b",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ae1839e5-b01d-46e5-9331-0f372758c1c7"
        },
        "item": {
          "id": "ed2c6807-4a79-4edb-919b-b1947badcf5c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9779b543-8c64-450b-8730-e3a476f5c370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "938f15f3-3091-4b92-858b-f0949b214e60",
        "cursor": {
          "ref": "b8d43d01-c66e-42b3-9be8-f797c992cd10",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0c5ceb3b-ddd6-4d8f-ac37-e443a36bc76a"
        },
        "item": {
          "id": "938f15f3-3091-4b92-858b-f0949b214e60",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a825c3be-5b65-4665-814e-044e31228bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70469eb8-bad0-433c-a3a5-46b5e576e1de",
        "cursor": {
          "ref": "495adacf-d8a9-41e6-b3a1-26fa0f5c544d",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "58350741-5729-4d5f-a0fa-db701b30d92b"
        },
        "item": {
          "id": "70469eb8-bad0-433c-a3a5-46b5e576e1de",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "739a1590-10bb-42c3-a536-4f242358a17d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11f7798-981d-499b-be95-5baf83dc7029",
        "cursor": {
          "ref": "833e593a-5b5e-4690-bf99-fed5b3454ec3",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "40f88455-a961-4714-98e2-e1442157ce70"
        },
        "item": {
          "id": "c11f7798-981d-499b-be95-5baf83dc7029",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "31f8347d-037b-4029-b7c9-8dc0ce592644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e4e995-25ac-4b82-8f47-a66a336632fe",
        "cursor": {
          "ref": "e9603f0a-ed3f-434e-af2f-6ea4570faa34",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9faeae6d-5d53-48fe-9512-b68bd969030e"
        },
        "item": {
          "id": "79e4e995-25ac-4b82-8f47-a66a336632fe",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "798eb225-6bc5-4882-b0e2-a8a6850c0188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0705ba91-c7c2-455b-97b6-f4e2d0d90d42",
        "cursor": {
          "ref": "c4445aec-77c8-4763-8fb5-df62ee6e849e",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8058c176-ec7f-48fc-9eb8-dc02539a5a64"
        },
        "item": {
          "id": "0705ba91-c7c2-455b-97b6-f4e2d0d90d42",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "08c9724a-7949-44c1-8647-1a70746e741b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913661dd-036c-4899-9d43-cebfc42048e9",
        "cursor": {
          "ref": "96067b9f-3f32-4b16-8aea-aee4c4526c4e",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7c8b3275-9035-4751-978d-7601a59efe99"
        },
        "item": {
          "id": "913661dd-036c-4899-9d43-cebfc42048e9",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "95540d3b-3049-4508-94d2-2cf6eaff1747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295e4480-1107-4468-af88-a4d6edd69912",
        "cursor": {
          "ref": "b9985e14-40d7-48bc-9a71-e526d5f468ad",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "023dd436-e177-4b01-9f64-5b02aa8412c9"
        },
        "item": {
          "id": "295e4480-1107-4468-af88-a4d6edd69912",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ecfdbfe6-1cf0-4694-9976-93b917922a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037a5e65-a5f3-491f-a30e-705aab90fd9e",
        "cursor": {
          "ref": "9b145096-ea3e-4b4b-bd8f-8d5e57aefa6d",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f4b9d618-3cde-43ef-a978-29cad73f7fdf"
        },
        "item": {
          "id": "037a5e65-a5f3-491f-a30e-705aab90fd9e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8153321b-dfb1-4b43-849a-c89c6a3bdc85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba08614e-f449-4cf5-bcac-637ecfb9aedf",
        "cursor": {
          "ref": "ed665644-cff7-4c9a-8c9a-a8285bc003f7",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a0bf4c16-2a09-492f-aa9c-8848dd3f7b22"
        },
        "item": {
          "id": "ba08614e-f449-4cf5-bcac-637ecfb9aedf",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "dc682f49-c483-4ad4-ae91-16205e011497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d39432-a69f-464e-a3aa-935d8c0c1c7b",
        "cursor": {
          "ref": "4d60b188-f677-4b77-99eb-23401ce68edc",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "601bf796-6892-489a-a84c-22459def0a45"
        },
        "item": {
          "id": "83d39432-a69f-464e-a3aa-935d8c0c1c7b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "fc24b2d9-0f15-4641-918c-8bcc66b9b5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f992e2-7090-499a-b395-7817a547d20d",
        "cursor": {
          "ref": "bd043db7-428f-4d3a-9997-2810eabfc140",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "38f34ce3-9f6c-4e8b-8919-25f71f7c24d7"
        },
        "item": {
          "id": "b6f992e2-7090-499a-b395-7817a547d20d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "956f1447-cb79-4417-aade-9fdbe94dd185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06ea5eb-2ca0-4ef5-914b-52e7a7f5f6a5",
        "cursor": {
          "ref": "09aa50b5-c225-4a7b-8b65-47aeb15f2568",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7cb2a9ba-cceb-4e1e-8f54-646443507837"
        },
        "item": {
          "id": "d06ea5eb-2ca0-4ef5-914b-52e7a7f5f6a5",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "42d5478c-28f6-4343-9301-03f7106df479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ddc11af-81c4-4fac-917d-bff9cd9e02c4",
        "cursor": {
          "ref": "763be48a-6e49-40b4-9fc2-35b49503ac3a",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ce83adbe-60f2-45cd-8e23-52d274845b91"
        },
        "item": {
          "id": "2ddc11af-81c4-4fac-917d-bff9cd9e02c4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "aadbacd4-5a64-4a41-83af-e8797d423234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7696af35-3e66-4f7e-a885-414848df4634",
        "cursor": {
          "ref": "2ceae41b-2d85-45c7-9272-77d371aaf63a",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7626e261-bcd9-452f-9f67-b380c24697bd"
        },
        "item": {
          "id": "7696af35-3e66-4f7e-a885-414848df4634",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "91ac396a-512e-4638-ac9a-51a1e617fdd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "757b7a7d-c9aa-46d1-b6c3-d54e376b8bcd",
        "cursor": {
          "ref": "f1ba0eb9-862a-40e0-9a4c-618b8bbda7c2",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4f69743b-2164-4db9-8889-ac35f61f6ae2"
        },
        "item": {
          "id": "757b7a7d-c9aa-46d1-b6c3-d54e376b8bcd",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d86aa4ad-67f0-4a77-9c91-538ebcc5cd8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea686fd-34ce-4d16-a9da-0a0c1ecc6b8e",
        "cursor": {
          "ref": "b7a3c948-2895-45b6-a296-0769a68492dd",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6a203c3a-be8e-4196-8212-0fd99bfd7229"
        },
        "item": {
          "id": "2ea686fd-34ce-4d16-a9da-0a0c1ecc6b8e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "19c715d2-8a79-47d3-b9b0-51d1fe4d2fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d8233c-6bd2-4890-a6ec-adb08a537879",
        "cursor": {
          "ref": "04e9d8a2-0c1c-4e35-a4da-83a64a8517cc",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c97b49df-2de5-41f2-a2af-baa4772c7005"
        },
        "item": {
          "id": "65d8233c-6bd2-4890-a6ec-adb08a537879",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c6536c3d-f1c0-48e9-a962-1ec73de26194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9678aa4-292f-4d45-ac92-4a94ee6554fd",
        "cursor": {
          "ref": "3472a929-168f-449e-b0b6-7335577757dd",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1f0dfa56-c739-4418-8a86-be9a0eb215cf"
        },
        "item": {
          "id": "b9678aa4-292f-4d45-ac92-4a94ee6554fd",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ae4d9637-fc79-4f80-aff9-d91655ce4763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c88c05-3009-4b0d-b0a4-ee13d7c75909",
        "cursor": {
          "ref": "3688e069-dfd4-45d3-bbf6-b4fd20f8efe0",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "08b1e5b9-6cde-41e2-a004-193a57783006"
        },
        "item": {
          "id": "08c88c05-3009-4b0d-b0a4-ee13d7c75909",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0a0957cd-9ede-4b1b-be0a-765dd03c5381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c721ff-6413-45e7-81f3-2c19c2b79e93",
        "cursor": {
          "ref": "4fce4eb9-3fbf-42e0-989d-f3264ca0e212",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0bff6ec0-74aa-4c7a-bd97-e4151bcee839"
        },
        "item": {
          "id": "05c721ff-6413-45e7-81f3-2c19c2b79e93",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ce33ce1b-492a-4969-90ff-1d2a4f8ae932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f4e403-2e23-4c7a-9892-751a584b03b5",
        "cursor": {
          "ref": "aaea739e-ec70-4cb9-be12-6f575e870b84",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "09bd23a4-7312-4320-baa8-56caa7bd6fa7"
        },
        "item": {
          "id": "62f4e403-2e23-4c7a-9892-751a584b03b5",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7a28ef08-f713-4696-a43c-0e3c5be90bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8bdc75d-33d4-4705-a5c0-430afbe08a35",
        "cursor": {
          "ref": "de7f92c3-3470-49fe-92d7-9f6569fda327",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a2e1e7e0-c1ea-4b57-9b7a-8e8b53a8c6ef"
        },
        "item": {
          "id": "b8bdc75d-33d4-4705-a5c0-430afbe08a35",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "762f7dad-6d11-4eb1-9599-8fa18421b081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a63c470-6c92-47b9-a1c9-19cc85ecaab3",
        "cursor": {
          "ref": "d5697794-1d5d-4a32-b866-197a0fa8512b",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "56b3ab0a-b7ba-476e-be3f-aa6d2e8a0424"
        },
        "item": {
          "id": "9a63c470-6c92-47b9-a1c9-19cc85ecaab3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "982967a9-6a8e-4bab-bf6c-442cbb99f213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42dbb53-c683-4f16-b284-e87fe3867a18",
        "cursor": {
          "ref": "c0d481a0-e006-4cba-81f7-886c80ee9d00",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0db3ef9b-ecc4-4df4-aa33-79633a71aa2a"
        },
        "item": {
          "id": "a42dbb53-c683-4f16-b284-e87fe3867a18",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b20291fe-725a-4542-8e74-9728f4a73254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd847c77-bcc8-444e-a687-bc36a445617c",
        "cursor": {
          "ref": "789e8f15-4cdb-465f-ac84-22b963634e36",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "69648c4a-cec2-46ea-b979-dde2081a4a1f"
        },
        "item": {
          "id": "bd847c77-bcc8-444e-a687-bc36a445617c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a6f02428-7ea9-4346-826b-fd44e9fe6372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb375af-8559-4416-93e1-43fc091bbf85",
        "cursor": {
          "ref": "e09cbd99-6153-4cf4-97f9-5d27dc1dabff",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0d139148-7774-47b8-9356-fc6267b5c098"
        },
        "item": {
          "id": "2bb375af-8559-4416-93e1-43fc091bbf85",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "cd609673-4b70-4ff5-8f5f-24fc1753e6d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b1aa505-d810-41e5-bbdc-68cfd244400e",
        "cursor": {
          "ref": "28757da5-0753-4557-a4c8-bbbe9d53c3f7",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6e64e269-ae59-4e39-86ef-6ddd1990dec5"
        },
        "item": {
          "id": "8b1aa505-d810-41e5-bbdc-68cfd244400e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7aa1cf75-fec1-41f9-aa45-a8ae225fb698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e492d5-f70b-408a-95a4-6304ab1e8b3b",
        "cursor": {
          "ref": "56095849-230a-48ac-b5e0-83fdbe6aa512",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6472a837-546d-4e13-b1cc-aba86ca6167f"
        },
        "item": {
          "id": "d2e492d5-f70b-408a-95a4-6304ab1e8b3b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "985c5228-0454-4a61-a649-161d81a81399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f5e39b-396a-485e-95d0-096a609765f7",
        "cursor": {
          "ref": "227cefb8-7995-444b-8d36-d856099ee728",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9c0d2e40-8330-4090-9a89-c7d9d2e1367b"
        },
        "item": {
          "id": "88f5e39b-396a-485e-95d0-096a609765f7",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e648a525-bb9f-41e8-b4ee-2711d029cafc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43a6ab8-5b50-4f86-9676-0eeddbbf2a96",
        "cursor": {
          "ref": "4b6a84a1-febe-43c4-ad4d-3157d0a5c6ba",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "94f5799f-4aa5-4bea-a3e9-7a730b5fca9e"
        },
        "item": {
          "id": "f43a6ab8-5b50-4f86-9676-0eeddbbf2a96",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6c07b2cc-4f3c-49c6-b55f-b64d5a451e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a406af11-df03-4d78-9fa5-6d827420b972",
        "cursor": {
          "ref": "cee78132-af72-4f5f-b5e8-638e847b78f0",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "66c514e6-fbcf-4348-969e-5ad2bce136b8"
        },
        "item": {
          "id": "a406af11-df03-4d78-9fa5-6d827420b972",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e30b01ae-d9e0-4340-b417-0c2c6abf6ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17270241-c6bc-4420-8962-e99f20b31daa",
        "cursor": {
          "ref": "a0ce9e69-1667-440f-bd11-d9aa5ed95469",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a299cb46-d8c2-4634-bd6e-756c4ca32c61"
        },
        "item": {
          "id": "17270241-c6bc-4420-8962-e99f20b31daa",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "28b113de-565c-442c-b533-007eac6363ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d9e7f9-7604-4cac-a9bb-1d7a6ff596c1",
        "cursor": {
          "ref": "6c08d59d-39a5-4de9-9a8f-d76458420f65",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "41c55790-a0f3-4d41-92f0-c3548ca4792d"
        },
        "item": {
          "id": "93d9e7f9-7604-4cac-a9bb-1d7a6ff596c1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f8d19fbc-a146-43e6-ba82-116a3436ec77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfac28e-0782-4dcf-a4b1-21f3f780bbfe",
        "cursor": {
          "ref": "4445b30b-f3ad-400a-b98d-8b5c144eb33b",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1e3bf9cf-e264-44f3-bff2-b94132088dcf"
        },
        "item": {
          "id": "8cfac28e-0782-4dcf-a4b1-21f3f780bbfe",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "376feede-d53c-435d-88d1-7577beb5f3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1030000-044a-41f2-9d4c-2d466a6c8aa2",
        "cursor": {
          "ref": "d85b9fb1-9db0-4cef-8f49-17793a2e1ae0",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "13eb6b52-d3fd-4c8c-ad80-c2665c3b3a2b"
        },
        "item": {
          "id": "b1030000-044a-41f2-9d4c-2d466a6c8aa2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "012a31ee-c973-4238-8fea-170dbfc98d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b461be7-baa9-4b6a-a092-df5f1d11b0a1",
        "cursor": {
          "ref": "d845ecb5-b84e-4f51-bf16-f4575e7c4742",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "800b0d6c-9c37-4af4-91b9-a1c81a3ce217"
        },
        "item": {
          "id": "4b461be7-baa9-4b6a-a092-df5f1d11b0a1",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d334bc78-44c9-4799-b114-a4078ee76f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5087aa-2bce-4a7b-9bac-f892c92d74eb",
        "cursor": {
          "ref": "5511a8c4-8e3d-4901-b7d0-94a9d199540f",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d59753f8-3d27-4d51-a434-2fa64d3790e6"
        },
        "item": {
          "id": "8b5087aa-2bce-4a7b-9bac-f892c92d74eb",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "98b69158-8eb1-4824-a9d4-57264bdec0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac730484-6de3-42cc-8015-64bf222f4a7c",
        "cursor": {
          "ref": "91282b5a-5f4a-4065-bbe7-8b4bdde46d70",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b43eb765-77c9-488e-8199-4fbf326a8c5d"
        },
        "item": {
          "id": "ac730484-6de3-42cc-8015-64bf222f4a7c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e99faa59-e853-4013-876c-a788631585e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2c3e4c-d9a7-4e30-a60d-c6cda41e577e",
        "cursor": {
          "ref": "73b4782a-f28f-48c1-be21-b6f2aa579830",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e4597dcb-3103-4078-b901-c8836ad5e42c"
        },
        "item": {
          "id": "0e2c3e4c-d9a7-4e30-a60d-c6cda41e577e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "146fc3ff-b176-46e8-9590-c2d1b3853032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae5fb22-0e18-45b8-b7ed-a0037316c6e4",
        "cursor": {
          "ref": "49145357-95bf-4e48-8f5f-6330dacab481",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3f756289-aa3e-4fbb-a5c9-1e3ca7334651"
        },
        "item": {
          "id": "eae5fb22-0e18-45b8-b7ed-a0037316c6e4",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "48dd1d09-9488-4a57-a455-0cb4722b6280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3fb6060-c297-496f-b5c2-504beffdb3fc",
        "cursor": {
          "ref": "29f3f7ff-4626-49e9-8ad6-fe09d03c74e1",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1127e774-24d8-49de-b3de-3ce9d7b9978f"
        },
        "item": {
          "id": "b3fb6060-c297-496f-b5c2-504beffdb3fc",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d7ce48a0-1102-4649-ac3a-8b79c390c074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca93655-e4d3-4ccd-9c97-2cc83bb27b33",
        "cursor": {
          "ref": "d603e4e4-0812-4b50-9634-110e26411b09",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "68354f0f-48d5-49da-b513-4213bdc124ee"
        },
        "item": {
          "id": "fca93655-e4d3-4ccd-9c97-2cc83bb27b33",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "eb0b1ab9-ad91-4e78-b794-b47679ac995b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2987e9e5-1d27-4c83-b8ff-9ee20ca3ba17",
        "cursor": {
          "ref": "bc79729c-94fb-47e3-8129-24ed0273ab35",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d1ec194b-fe54-44cc-a392-bfb102cc02f9"
        },
        "item": {
          "id": "2987e9e5-1d27-4c83-b8ff-9ee20ca3ba17",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f86418bc-771d-4091-af7c-afbf865f776b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4273f5a-1eda-4850-897f-d21185f3f849",
        "cursor": {
          "ref": "fa2e05f2-5efd-4312-9faa-6809c478a796",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "de1512ac-f1a9-4d9c-83b5-102a5c5be8b1"
        },
        "item": {
          "id": "f4273f5a-1eda-4850-897f-d21185f3f849",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7c07c0d7-4f90-43fb-9826-d5667645eb08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c60a53-0506-465f-852e-b6ae54e79a92",
        "cursor": {
          "ref": "638d146d-8b89-4bb9-a038-b2d77469405c",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "dbf27bfe-aff6-4c83-8298-1d057911aeb2"
        },
        "item": {
          "id": "c4c60a53-0506-465f-852e-b6ae54e79a92",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "048c3656-06b4-4438-b5a1-3abb28f77553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3169edfd-3987-4d98-a183-d217485b22e5",
        "cursor": {
          "ref": "41806671-b9d1-41ef-bf93-3484eadba720",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b2fe804d-0d79-4ca9-ad72-f2e8d81796fa"
        },
        "item": {
          "id": "3169edfd-3987-4d98-a183-d217485b22e5",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "af60bc4d-9a2b-4ef0-be1c-4621e71d8349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b12c1e-9a8d-439b-88ab-382a8d496640",
        "cursor": {
          "ref": "d5b5c212-bc78-4053-a714-24ab83c62cbd",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "59ac1ef3-a106-48dc-917d-578f525af81f"
        },
        "item": {
          "id": "40b12c1e-9a8d-439b-88ab-382a8d496640",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "255aa99e-b2c0-4717-babd-e0b3dbf3c23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8e615e-0640-439d-a7c4-926182298d65",
        "cursor": {
          "ref": "82086ee0-b6ad-450d-951e-83e1b10a9586",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8ab4fd47-cfd7-4c84-8da8-768c6ad68b35"
        },
        "item": {
          "id": "ef8e615e-0640-439d-a7c4-926182298d65",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "01d97170-74e1-4050-9839-5816ccc47c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb1ea1e-50b7-4944-a6e1-c417aadd980a",
        "cursor": {
          "ref": "abdd1561-98da-46f3-894f-f9b7ae019a96",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "72068c8d-bcb8-4585-beb6-7f74577afa09"
        },
        "item": {
          "id": "7cb1ea1e-50b7-4944-a6e1-c417aadd980a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "0915c845-0c99-4a27-bc52-2afe8b94115e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3574dbfe-b197-4f79-916c-fa27c92eef9f",
        "cursor": {
          "ref": "959b9f03-1a01-4c3a-90ae-5e90f8e48d39",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "71e659ee-4f27-4265-af78-7de5e574ad96"
        },
        "item": {
          "id": "3574dbfe-b197-4f79-916c-fa27c92eef9f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2ab9487d-8cde-4a21-9da1-cb23a413d3f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff56498-8356-4037-8352-e228b2d04c40",
        "cursor": {
          "ref": "c4d0c617-f361-4814-91cc-b5c2678ff34d",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c9355a6b-2509-4cde-8c9e-86cafd4e36c5"
        },
        "item": {
          "id": "0ff56498-8356-4037-8352-e228b2d04c40",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "cc6e188e-72fe-48d9-9aa8-8dc4b5858ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "904d8cd2-17f9-473f-a88a-66506535999f",
        "cursor": {
          "ref": "006f98a8-ce79-4dc3-8628-dbb4698df578",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f88cc9d4-3963-4188-8994-7601ec2f0a62"
        },
        "item": {
          "id": "904d8cd2-17f9-473f-a88a-66506535999f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "22459b5f-8bd6-4a95-a501-f7b7d94b77a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23aa8175-546a-490b-bae1-d5be87bbdba2",
        "cursor": {
          "ref": "8ed92b4f-0170-4c36-8fe5-2160f75daeba",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b531c8bc-d538-4e44-9a7d-08a5b9b1b5ea"
        },
        "item": {
          "id": "23aa8175-546a-490b-bae1-d5be87bbdba2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a2da45b6-8b13-46ea-a75c-f6aaa39ea4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48216e13-bb7f-444e-b725-68cd184eb91a",
        "cursor": {
          "ref": "a5e123e4-28a8-4e53-b6d5-a0d1211c6778",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8002cd98-2595-47c4-ad54-302a13aea583"
        },
        "item": {
          "id": "48216e13-bb7f-444e-b725-68cd184eb91a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "18b37fdc-731d-4d1f-acf5-cfa2a8590024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c51a9b3-2c54-465b-92af-68f34ae1eced",
        "cursor": {
          "ref": "414a8da5-4b82-4616-895c-0115a00cc60b",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7574439c-7eb9-4a03-b8bb-43efbed57db1"
        },
        "item": {
          "id": "3c51a9b3-2c54-465b-92af-68f34ae1eced",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9859ed14-5fca-4171-bb3b-d460a55af629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b340351-7d36-4085-9f14-1e96722b1561",
        "cursor": {
          "ref": "1553806d-f7b8-4e69-b065-5cc89a4fa4ad",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "980b217e-5911-4dc5-ba00-e9aaa1a5bf65"
        },
        "item": {
          "id": "4b340351-7d36-4085-9f14-1e96722b1561",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "bea192f3-f8f9-4269-9c0a-671e4ca36d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab84fd0-3a44-4ab8-aa8e-8c61af209d27",
        "cursor": {
          "ref": "c8f66dd7-9bd9-4586-addf-17c8c12f555c",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "db74b903-3044-46a1-90fb-796e6c3c5024"
        },
        "item": {
          "id": "dab84fd0-3a44-4ab8-aa8e-8c61af209d27",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7c747ed4-4314-4948-8df9-d43a3f0d8ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162d07bb-368f-42c0-baa9-0796f5bd9e7f",
        "cursor": {
          "ref": "f360d34c-5d0e-407b-aab1-630e5b540e62",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b454c374-8310-4619-813d-c363c985d870"
        },
        "item": {
          "id": "162d07bb-368f-42c0-baa9-0796f5bd9e7f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "81d658d1-5ce3-4368-a966-3f84fb31463a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0c84f4-69ae-4cf4-8267-5f792ae6d53b",
        "cursor": {
          "ref": "73136193-cd02-42ce-8e53-81c6d3278f8c",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "62474d07-f79c-48af-aebd-de8faf52f199"
        },
        "item": {
          "id": "5c0c84f4-69ae-4cf4-8267-5f792ae6d53b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "28887288-4896-4105-9a78-31169ee3c51c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fd7ba6-13c7-4c1a-8ad8-d54482aa9b31",
        "cursor": {
          "ref": "2d003d02-e45a-4007-805f-c13302044000",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6f33a49b-c379-4a66-9a3f-9aa61327d98d"
        },
        "item": {
          "id": "64fd7ba6-13c7-4c1a-8ad8-d54482aa9b31",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "47d60d34-f9c5-4984-ae79-dc5542bec079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3122132f-5590-47d0-b586-ea8640b1b5cb",
        "cursor": {
          "ref": "eebe26d6-0728-4614-8b30-e5e671e09a4d",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f726503b-0bef-4bc9-8184-1ab46c94621c"
        },
        "item": {
          "id": "3122132f-5590-47d0-b586-ea8640b1b5cb",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1640be5d-6714-4b58-aa8e-044f4fbbfe22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7881475b-9dec-4dec-9c60-439bb1bb415a",
        "cursor": {
          "ref": "c8481f99-c7b3-4a91-846b-7c913da8e85c",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "255dc447-a4b8-467e-a735-69c2e6b69cf0"
        },
        "item": {
          "id": "7881475b-9dec-4dec-9c60-439bb1bb415a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "55be1e4e-8fad-4c8d-86f0-018ef80bbd18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610f8263-4d63-458f-99d1-61c7f5d4fc58",
        "cursor": {
          "ref": "64bc649c-f15c-4437-b3ff-0145890f13ea",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d8d415d2-65ee-41a9-a5aa-4f87f5dfe2eb"
        },
        "item": {
          "id": "610f8263-4d63-458f-99d1-61c7f5d4fc58",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4e318365-1cc4-4a46-9b2a-f76a56be7ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07137cf0-d557-4b68-89da-995c9cc999a6",
        "cursor": {
          "ref": "32014348-28bb-43b9-b545-3abc3e4715db",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8399b2ab-99eb-46e8-8493-e0282c05fcd2"
        },
        "item": {
          "id": "07137cf0-d557-4b68-89da-995c9cc999a6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3c79eb25-c21a-40a1-b1de-b57489e07684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d026fd-5cc4-44f8-848a-442aecb5ece2",
        "cursor": {
          "ref": "56adea1f-7481-4c9b-a691-be222580c9f1",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5244a8df-19b3-4558-880e-8fcf26459e37"
        },
        "item": {
          "id": "23d026fd-5cc4-44f8-848a-442aecb5ece2",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e681a8b9-c97b-44c4-8127-3d41cd400c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b9a5be-f912-4b99-8ed0-9528a24aad70",
        "cursor": {
          "ref": "d9e4cad4-9261-4f77-981b-58f6f872c7a4",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "45fcbb61-8d1c-41f8-aac8-e8d6323b63fd"
        },
        "item": {
          "id": "b0b9a5be-f912-4b99-8ed0-9528a24aad70",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4481e25d-9610-4155-9ffc-2b26526c9854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be549372-debb-4bbd-a7e8-84ccbcf2bf4c",
        "cursor": {
          "ref": "8e4a83f2-b16b-4e55-81f2-52182d20535c",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "cf623d1f-a0d4-4306-9e7c-383013133dd0"
        },
        "item": {
          "id": "be549372-debb-4bbd-a7e8-84ccbcf2bf4c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ab2725e9-0c5e-42e0-bfaa-e71448b2753c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297ffbfa-6aba-4c82-8a4f-a7c9b1cdfde4",
        "cursor": {
          "ref": "abd06740-1398-4a8b-af28-c84546bab7e9",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "2486dc80-f074-410d-9f64-becae6ed619a"
        },
        "item": {
          "id": "297ffbfa-6aba-4c82-8a4f-a7c9b1cdfde4",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e521aa4c-b577-43c4-ac98-1734a66a49cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842096a7-fe1f-48af-aed0-57f95d8e5991",
        "cursor": {
          "ref": "07e4b481-bfe3-410a-b192-14ddb4bb2286",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "17647947-2e7b-47f1-b80b-f9e67dc3a017"
        },
        "item": {
          "id": "842096a7-fe1f-48af-aed0-57f95d8e5991",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ba088660-624e-4cf4-b343-adefda5698ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d31c583-4672-400c-889c-ce84d30bfa47",
        "cursor": {
          "ref": "abfe9314-b586-4296-a249-f06bfe15ca6e",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "52b544e2-9b20-4652-b797-011c7e4b648e"
        },
        "item": {
          "id": "4d31c583-4672-400c-889c-ce84d30bfa47",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "109764ba-3a2b-4789-bf42-bba3d9c15050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd88a87b-7702-43ba-b7af-b60709fbaeea",
        "cursor": {
          "ref": "29140ecc-aee9-425a-b469-277fd49f8e33",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3fe1056d-ab11-4a09-bc83-b57f796464f8"
        },
        "item": {
          "id": "fd88a87b-7702-43ba-b7af-b60709fbaeea",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "15a41bfd-ce16-4459-b785-5cd48c74143b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec8ad081-7544-409d-9c71-4009336b546c",
        "cursor": {
          "ref": "386ee624-c1f2-4c69-a869-bd3d564604a4",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "63ed2263-8dc4-4a18-8dac-f98ac8bb25e3"
        },
        "item": {
          "id": "ec8ad081-7544-409d-9c71-4009336b546c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "eb4bf5b7-26b0-455a-98f2-17301fdadc11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee255b57-da06-43b8-a29a-a44fe8da5cc9",
        "cursor": {
          "ref": "bc5087b3-fba8-46a7-9f2c-fadafa9322e9",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "84e727ae-28c4-456c-b33a-475a91de5551"
        },
        "item": {
          "id": "ee255b57-da06-43b8-a29a-a44fe8da5cc9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e277bf07-7d18-4761-a05a-54beade2ddf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbdd920-31cb-473b-b4b2-c076ac0cfc76",
        "cursor": {
          "ref": "d87476dd-79e6-43b0-9cd8-209c6469e8cf",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e37cee2f-252c-4984-b80f-58c0f93fb520"
        },
        "item": {
          "id": "7fbdd920-31cb-473b-b4b2-c076ac0cfc76",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ebc008c9-2b10-4a97-916e-e1bcf3635c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "701703fb-72cf-45d4-a56c-8a606272693f",
        "cursor": {
          "ref": "a61e6ebd-92ad-40e0-951c-3b6101065a5f",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "15fac04e-0ad6-44bb-b2fa-019940034ad9"
        },
        "item": {
          "id": "701703fb-72cf-45d4-a56c-8a606272693f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6847a927-99ec-4ee1-89ee-94aa54c61eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa07f74-c5c3-4be1-9964-f51617dc260e",
        "cursor": {
          "ref": "cd17aed1-5c54-413a-be2d-65eed64d65b6",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "dd37dd1a-c200-4757-a766-c582b5115a58"
        },
        "item": {
          "id": "cfa07f74-c5c3-4be1-9964-f51617dc260e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d9cd7162-61df-490c-aad6-f36a6ba67d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633cbdb1-4bb2-4a3b-812f-2ab05514c720",
        "cursor": {
          "ref": "70a8c636-e288-471e-acb4-a36da18edac9",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "99b33a95-e890-467f-91c9-a389f9c6ee6e"
        },
        "item": {
          "id": "633cbdb1-4bb2-4a3b-812f-2ab05514c720",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8b725e18-02b6-4ed8-8504-ab8d59598137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c344c62-735a-47cb-a325-2ff62553ff31",
        "cursor": {
          "ref": "ff19094f-713e-41de-a9cd-a7e8e20e8932",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "9041e74a-a18a-4533-99fb-ad4b4c50c760"
        },
        "item": {
          "id": "2c344c62-735a-47cb-a325-2ff62553ff31",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f7c91873-8ac9-49dc-af85-9969fdf494ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f334b6e1-21d5-4786-a97b-4db008bf1d5b",
        "cursor": {
          "ref": "6d905aa8-42c5-4f95-9f45-39cb7604f18d",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2849d544-919c-45b8-a2e0-ac4f086acd77"
        },
        "item": {
          "id": "f334b6e1-21d5-4786-a97b-4db008bf1d5b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d46f6536-2af1-42b4-8df4-80c3e1a2b59f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847e5d5b-ebac-4bda-92f1-9ac7ff27fc24",
        "cursor": {
          "ref": "7368014e-85ef-4937-978c-8b420c8fcc28",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3ad918e3-7381-49e2-9061-d4c281551ba3"
        },
        "item": {
          "id": "847e5d5b-ebac-4bda-92f1-9ac7ff27fc24",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e9275af7-adbd-42c4-8e8c-fd38bbd5a10f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b6f812-1a0b-4e75-b3d7-ce17f6c55c34",
        "cursor": {
          "ref": "a20a60be-7821-41de-80de-68a266e21257",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7980ad1e-bee9-478f-af60-203f7154b625"
        },
        "item": {
          "id": "20b6f812-1a0b-4e75-b3d7-ce17f6c55c34",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b2d01cba-b403-4bed-94f4-d86439f6ad54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3556ab66-cf42-49d6-921e-22137e68ed65",
        "cursor": {
          "ref": "c7ade641-933b-4522-9b1a-d985e146fece",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "78faf754-c9bc-45ab-b7df-695152e117ba"
        },
        "item": {
          "id": "3556ab66-cf42-49d6-921e-22137e68ed65",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "777d0a9d-b6d1-47fd-9042-2e4f4219dbfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c21600c-5b6a-44ae-a6cc-0f76727ee16e",
        "cursor": {
          "ref": "2decb6e6-57da-4d2d-8919-04019ce67627",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a12a5bb1-4397-4df7-ad37-bcbbcf9a3277"
        },
        "item": {
          "id": "6c21600c-5b6a-44ae-a6cc-0f76727ee16e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ddf4db5e-5933-4d1e-a53f-bfd81b4a0b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c01da816-d41e-45fb-bdb0-b9f6da42429e",
        "cursor": {
          "ref": "bcf3d90a-19e9-4f2a-9e95-909fcf8a2878",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7c43e08b-095f-496d-89b2-a64f16f26b5d"
        },
        "item": {
          "id": "c01da816-d41e-45fb-bdb0-b9f6da42429e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "22247133-1263-4684-953c-3225f7a92e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d11422e-2c64-4beb-af3e-b33f504f6e65",
        "cursor": {
          "ref": "d1541461-7fb0-4ffd-b8d6-023af765315d",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c37e9210-1d46-479f-9625-19e02455e651"
        },
        "item": {
          "id": "3d11422e-2c64-4beb-af3e-b33f504f6e65",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7bfcb8ba-0eb7-4a9d-9428-653433eb1d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0bb5560-0cd0-4fb8-8800-3f315db57359",
        "cursor": {
          "ref": "a3347b42-a322-4ae4-b0c8-7d46d101d49f",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "13e99f2e-d6fd-44fc-81e2-e4386895ad8f"
        },
        "item": {
          "id": "f0bb5560-0cd0-4fb8-8800-3f315db57359",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a98585b6-cb6d-4e31-88fe-44d653ba6b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b11e217-422b-4db4-9602-e91038ba1d2a",
        "cursor": {
          "ref": "81b7b9c5-769e-42b4-869e-89ecfe6d5322",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "65daf869-7218-4d7e-b070-e45685e0b8ef"
        },
        "item": {
          "id": "5b11e217-422b-4db4-9602-e91038ba1d2a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "298add57-d3a7-4eea-aa7a-c98dad550c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1231fd3c-ad4a-4fbf-8300-c4d8f5770f4f",
        "cursor": {
          "ref": "fdb75fe4-b6a6-4c8d-b038-76452625b841",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "cc317f33-ee19-485c-825a-92c867123351"
        },
        "item": {
          "id": "1231fd3c-ad4a-4fbf-8300-c4d8f5770f4f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e93c5a87-6c60-4274-94b7-e22237d22848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba2e3d9-c148-46d4-afdd-aab79e02b299",
        "cursor": {
          "ref": "6340f78c-5db9-47e2-8720-00694db03585",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1adb7540-48a1-483c-9853-cd093386da63"
        },
        "item": {
          "id": "0ba2e3d9-c148-46d4-afdd-aab79e02b299",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "913fffae-dc67-40a7-8676-7e50f41b5d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06afe74e-9800-4da6-a652-d4a18cfd8797",
        "cursor": {
          "ref": "60db5dd4-6219-4e93-930c-5aad7bad2277",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "97f46bae-f0d4-4310-981d-dcb7a5d89cf8"
        },
        "item": {
          "id": "06afe74e-9800-4da6-a652-d4a18cfd8797",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "04aafde5-521f-4803-b78b-732cb612c144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4532e6-aae8-4995-b2a5-8455d1226899",
        "cursor": {
          "ref": "74bc2b06-7571-496e-8125-794460997200",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "db259552-d817-4051-bdf6-debd4b4febf1"
        },
        "item": {
          "id": "7d4532e6-aae8-4995-b2a5-8455d1226899",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "39cab004-7cbf-4ac3-ad7c-38ae38ac023f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c10cc5d-edfd-4e5f-8b0b-5a46ac47f633",
        "cursor": {
          "ref": "a404c664-9fd1-4128-be64-ceee62fdcaa5",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "11cac7f6-bbd4-45a0-9707-e1647e110d17"
        },
        "item": {
          "id": "2c10cc5d-edfd-4e5f-8b0b-5a46ac47f633",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "0867e2be-6b9c-4a60-a914-fbf92a0c80d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "c419249a-33a6-450a-87b0-277e46dc06d1",
        "cursor": {
          "ref": "715091e3-bd6f-4cbc-8abb-892fcfb33936",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7920635d-9cd1-4a1b-8b3f-3f2f91a0b3a8"
        },
        "item": {
          "id": "c419249a-33a6-450a-87b0-277e46dc06d1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "03a8eca8-5066-4b0f-bde6-f2237e52eda2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "047e8246-d33f-4899-8461-19eb5c780c75",
        "cursor": {
          "ref": "2d368bd4-114c-4920-9c14-e7b087a823fd",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c6432b3b-c9df-4c1b-a1e2-d35b5b04bd9b"
        },
        "item": {
          "id": "047e8246-d33f-4899-8461-19eb5c780c75",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4ba2cd81-c581-4727-9178-ee640634753a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "c3eff014-ec97-4b3e-a536-2799af7bee6e",
        "cursor": {
          "ref": "8b4feb08-1da8-417f-bf41-c5b76c300546",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9dec267b-af4d-41bb-a0c8-8bb9d5716dde"
        },
        "item": {
          "id": "c3eff014-ec97-4b3e-a536-2799af7bee6e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "fc4811ea-5eaf-479e-8d11-c8675a9b8c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "3c12bc43-15f8-432e-b03f-e2015033f4a0",
        "cursor": {
          "ref": "c282b523-af87-412f-a433-66f6503c544a",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6da45518-f07e-402b-a165-8ff544f17db9"
        },
        "item": {
          "id": "3c12bc43-15f8-432e-b03f-e2015033f4a0",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e849596f-edc3-405e-b806-45a75748468c",
          "status": "Created",
          "code": 201,
          "responseTime": 8447,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "02fd87c9-21a0-4509-8f58-f6b4730d9d68",
        "cursor": {
          "ref": "a90de379-56bc-4c6b-a35c-6cd6ee298da8",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "32bda9d6-cd04-454b-a6d7-cf21ca972e5e"
        },
        "item": {
          "id": "02fd87c9-21a0-4509-8f58-f6b4730d9d68",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "926ae8fb-5a35-4995-81fc-7645c6ba73ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "a5cf4a88-1d04-41d9-bb06-280ce526d801",
        "cursor": {
          "ref": "47a191d1-4918-4493-9b72-e26701a5834e",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1398db1a-c4b9-44ff-8b20-8467c5bc68a7"
        },
        "item": {
          "id": "a5cf4a88-1d04-41d9-bb06-280ce526d801",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6b3f4507-ffe0-4876-bb2e-dae525ed8549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "12560941-18a3-4b6e-a785-1df17b802f28",
        "cursor": {
          "ref": "60ae6f40-629d-44ce-bc5f-655d9ba1d545",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "54a608b6-53c8-483f-a336-6394eb29e04a"
        },
        "item": {
          "id": "12560941-18a3-4b6e-a785-1df17b802f28",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7e7b3cbb-1ece-4f3d-bfa0-c16f864a895c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da092465-fb21-4fa0-9d03-76f71bf3657e",
        "cursor": {
          "ref": "1142804c-e785-4a40-9a3e-246432045d6f",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fb35e673-f331-4e69-8fe0-9c958274c4af"
        },
        "item": {
          "id": "da092465-fb21-4fa0-9d03-76f71bf3657e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "66669489-bbdf-4209-b2ab-7d777335df38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b442d109-b6e5-4963-a98d-49f7690b859b",
        "cursor": {
          "ref": "2dcabf14-53a3-444a-b44f-4bc3200fa407",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f67e322f-06ec-4d72-9ca2-cfb96cc4b842"
        },
        "item": {
          "id": "b442d109-b6e5-4963-a98d-49f7690b859b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1796d0aa-b456-42df-b24c-f3a8dd8b8474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d76dc22-bb07-4903-8b17-1b894a16596c",
        "cursor": {
          "ref": "f9a6de1a-5959-477f-bbf5-26363854e083",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2e045731-1808-48db-9ff0-548730437be1"
        },
        "item": {
          "id": "1d76dc22-bb07-4903-8b17-1b894a16596c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "567e06c2-bca6-4287-a79a-3a8a14ec0b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23fc2d0-f1f8-431a-a550-5594ecc56a47",
        "cursor": {
          "ref": "fe4dad2a-6d50-4615-83fb-dcdb990ca1af",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3e415c07-3807-4b89-a74b-858d6c7a39b9"
        },
        "item": {
          "id": "b23fc2d0-f1f8-431a-a550-5594ecc56a47",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1904db45-d590-4568-bd44-c1464228bd3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39966bdd-a337-42be-881c-d689f553a627",
        "cursor": {
          "ref": "33bee886-2e44-401a-a3fc-12feec265229",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2f41dcae-969a-4233-9b0b-a831557f78e6"
        },
        "item": {
          "id": "39966bdd-a337-42be-881c-d689f553a627",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "781c23ca-3747-4509-85ac-9bc8b9aa8ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4cf32cf-efb6-4df4-af2d-50163a4ae1bf",
        "cursor": {
          "ref": "7a8999c7-3a19-4cea-84e1-b7fa9e6f3243",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8704ec10-9c18-4c30-8151-711e04b0f87b"
        },
        "item": {
          "id": "b4cf32cf-efb6-4df4-af2d-50163a4ae1bf",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ac3248bc-7bf3-4500-834b-f0df572df6b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c5e6bc-fcf8-4693-8cfc-d73873fac524",
        "cursor": {
          "ref": "32525310-b102-45b3-9030-f36218a35883",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9f4e2b52-81ab-4f08-81b8-b2e6701e71ea"
        },
        "item": {
          "id": "75c5e6bc-fcf8-4693-8cfc-d73873fac524",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "06c11a1d-5455-4436-b2a4-daf5ccc9a3d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250546c4-4ded-419a-a3ac-89889c27551f",
        "cursor": {
          "ref": "ea0928e4-8162-41e9-9cfc-cfc704646d2b",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "53580139-cf8a-4277-a3c9-2a17a6483c2f"
        },
        "item": {
          "id": "250546c4-4ded-419a-a3ac-89889c27551f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "cf4bc974-7375-4354-a9d4-37f18b93839a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3143100a-d0ed-44dd-bb5b-c79b2c09729c",
        "cursor": {
          "ref": "74b6df43-b496-40e0-a97d-64578fff6891",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "bcddf349-d0ad-475a-b927-2293bfe62366"
        },
        "item": {
          "id": "3143100a-d0ed-44dd-bb5b-c79b2c09729c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "97cc4e05-e976-4837-9b42-505599c742c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce0db78-ff1d-4d57-9490-819df0a4c7c3",
        "cursor": {
          "ref": "190d27d1-84c8-4291-b469-4c947255c474",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d59181ef-9fa6-443b-8bc2-a974508b524e"
        },
        "item": {
          "id": "5ce0db78-ff1d-4d57-9490-819df0a4c7c3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "92181700-70d9-4803-8b2d-acb3bcfcee76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18a78de-7dd0-40d5-9f36-343360b53187",
        "cursor": {
          "ref": "9e6d4751-0cec-4232-8eb7-b96e030f1433",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f1f05b7f-8f04-4c12-a900-fa1307988b9b"
        },
        "item": {
          "id": "c18a78de-7dd0-40d5-9f36-343360b53187",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0d89fa2d-f043-494c-afc5-d0117d1cb7f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9edab68-3d7e-4299-875e-6f23fe4bbb2a",
        "cursor": {
          "ref": "47dd23e0-bf31-43ca-b858-f77597ac6504",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bfa84e76-e81f-46f9-94eb-bfbb111e79f7"
        },
        "item": {
          "id": "f9edab68-3d7e-4299-875e-6f23fe4bbb2a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "35e2050a-66df-4073-9363-bea441f4fcbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20421963-3d3d-4e9a-90dd-658d3f712096",
        "cursor": {
          "ref": "523e182c-c466-4e6d-8dae-3742cd075438",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "6fb0c4ba-1bc3-4c08-974f-f1c0e9504af9"
        },
        "item": {
          "id": "20421963-3d3d-4e9a-90dd-658d3f712096",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "59001e12-5a66-43e7-b24a-fd40743fd75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbede3ad-e1c5-48a3-b4c9-3e390c18afad",
        "cursor": {
          "ref": "1e94a88c-d5d5-4879-b082-578a03605893",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "14053a08-5936-42fc-991b-f13f3244ac6c"
        },
        "item": {
          "id": "cbede3ad-e1c5-48a3-b4c9-3e390c18afad",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "78cf4920-391b-44cf-8e99-f6fe4f8e22c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1bb84c8-f359-48b4-b29b-322cf0460729",
        "cursor": {
          "ref": "414a25e8-39fc-43de-a4e5-d7c0c609638c",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b999ab96-36a9-4f27-be8c-d02437b60b71"
        },
        "item": {
          "id": "e1bb84c8-f359-48b4-b29b-322cf0460729",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1a29a607-3890-4668-996a-274ba516da4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e81b30-2c0c-46c3-b48d-852e809fe495",
        "cursor": {
          "ref": "017b283e-1892-4b79-bb12-81f194a29fc2",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7e1b7589-ac06-46db-a0db-d80be331b7dd"
        },
        "item": {
          "id": "62e81b30-2c0c-46c3-b48d-852e809fe495",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c397ed8c-bb43-4a90-a3a6-16e8451cedd1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "4ee0f5a1-d96a-40b6-a0fe-0313f940a3ec",
        "cursor": {
          "ref": "44f7e8a3-c5ef-4cf8-8aea-cd5f0c53192c",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a18c835b-2d58-4fb3-b73c-c6131966bb97"
        },
        "item": {
          "id": "4ee0f5a1-d96a-40b6-a0fe-0313f940a3ec",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0449b0de-901f-482e-89c4-26a4300ba09a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1634367e-fefa-4810-9916-887a0f654983",
        "cursor": {
          "ref": "ad7af841-9511-47cd-99b6-ee18b687e6ed",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e5afb551-9507-470b-9782-a92eff0754f2"
        },
        "item": {
          "id": "1634367e-fefa-4810-9916-887a0f654983",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "440b3799-0f44-41b3-97f3-3c7731b8f911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645d120f-95a8-473b-bf9f-772a8ed77d77",
        "cursor": {
          "ref": "d52ee9a1-9714-4861-b8e4-bb3edb3c7301",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0570e27f-7e53-46f3-9dee-160809c53437"
        },
        "item": {
          "id": "645d120f-95a8-473b-bf9f-772a8ed77d77",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d025d5ce-e1ea-4979-a730-0626fa583d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21748680-6236-4355-8ad8-107c9cf524d7",
        "cursor": {
          "ref": "d423d1d4-0823-4211-97ad-8e5278149570",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "eaec2694-3530-47b8-b6d5-5bc8704dbd2e"
        },
        "item": {
          "id": "21748680-6236-4355-8ad8-107c9cf524d7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8a4fc7e8-9fe9-41ff-93db-e88e5b48bfc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aaadb3f-12bc-446f-a8de-f2bb3d0a44b8",
        "cursor": {
          "ref": "defd3d0e-7a5d-4856-9464-673c26a2bf27",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7bba4f9e-146e-4d72-950e-25f202d64ee8"
        },
        "item": {
          "id": "7aaadb3f-12bc-446f-a8de-f2bb3d0a44b8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7685e67f-1ab0-40f0-b54d-afa4b44acc31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d210f5-654c-4218-8498-cbfcc11bb283",
        "cursor": {
          "ref": "83ace53f-cdc9-4f96-833f-b81b86c29bab",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "73ecda07-fba3-4ec5-8721-c552fd3879c0"
        },
        "item": {
          "id": "b3d210f5-654c-4218-8498-cbfcc11bb283",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "702b1164-65f5-428a-8f0c-d5b5fe658eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efaa7d29-e948-4d4d-8abe-d4bb62cb8572",
        "cursor": {
          "ref": "e947e1b3-8cd2-41bb-9d6f-a99f6425e0f7",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c92b8469-2eb3-4e68-8ab6-6bde203e2ac7"
        },
        "item": {
          "id": "efaa7d29-e948-4d4d-8abe-d4bb62cb8572",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b8f2e121-d60b-4afd-ae8d-9a4d8fbae0f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d2ebbe-a02f-47f7-a07a-334c716ac10d",
        "cursor": {
          "ref": "5c973e43-cc82-44ed-a8f5-19a0f57bcb03",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "882a4421-63ac-4aed-96c0-1bbd700ddf60"
        },
        "item": {
          "id": "f7d2ebbe-a02f-47f7-a07a-334c716ac10d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6db6cca1-d0b1-4334-b327-d0e7d923be56",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 25,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "1968a3f4-f9d7-4162-a2e7-b68d2eb99d2f",
        "cursor": {
          "ref": "76ff0a61-f78e-4afc-8878-81fc0f58e970",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "bef1ffce-2ef6-40a9-a282-8db04813d98a"
        },
        "item": {
          "id": "1968a3f4-f9d7-4162-a2e7-b68d2eb99d2f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0b2ec3a3-d585-45fe-9d61-117c256cfff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc409ae-3d97-4313-aa68-e2ab10e37dce",
        "cursor": {
          "ref": "b06750ef-ff3f-4a08-b597-151c8b03eb09",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b368d786-22d2-489f-942e-846b5fbdd0ec"
        },
        "item": {
          "id": "5dc409ae-3d97-4313-aa68-e2ab10e37dce",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ee39bbf9-8c17-4c9c-915d-fe72fb2de9fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f934fe98-b40c-4749-bce0-cdd4355980d8",
        "cursor": {
          "ref": "8e76ecca-5eef-49ed-8c0d-1e2dc951195f",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5464b0fc-f5c0-4e39-bbd1-15dd1390268a"
        },
        "item": {
          "id": "f934fe98-b40c-4749-bce0-cdd4355980d8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "69bba9a1-36fa-4de5-bb3c-87fd4b6d552c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a037d36-40fd-4418-85e2-17d04ccabe5f",
        "cursor": {
          "ref": "b0f42825-6e05-4557-a86f-2f2b7253d9de",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "056facde-194c-4145-b47e-a7f0096db916"
        },
        "item": {
          "id": "9a037d36-40fd-4418-85e2-17d04ccabe5f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c6a7f292-00b0-4d45-86c0-e39b414712a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691255c9-ac88-44e3-a877-efcabe13c97f",
        "cursor": {
          "ref": "6a1f0f89-588b-475b-8fa8-2c4a915ff25a",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ad4c2355-dee3-4872-b2cc-75cbae2a70dc"
        },
        "item": {
          "id": "691255c9-ac88-44e3-a877-efcabe13c97f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6bdf5528-1218-462e-977f-3b4b93855e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03cbc88-f202-4cd8-8a8e-d11140582b28",
        "cursor": {
          "ref": "c0981b0f-a96b-4ad4-acff-c55f323b9825",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ca1ccfb4-e710-4f85-b13a-43a6b3a6c2b1"
        },
        "item": {
          "id": "c03cbc88-f202-4cd8-8a8e-d11140582b28",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6998cfe7-6cb1-4a92-a033-8b42f781b206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf7e6e9-00d4-41f7-9ef7-2958e3fa0afc",
        "cursor": {
          "ref": "0ebfe0ea-3130-418e-9c45-4c71292e8a8d",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "19d9f72b-e152-4331-9e2c-80e64dc93f8e"
        },
        "item": {
          "id": "dcf7e6e9-00d4-41f7-9ef7-2958e3fa0afc",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "0f84cd25-4d73-45e1-9991-6c1482913ba8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "4b58fb4b-515e-402a-9eb2-50f9f9a020ee",
        "cursor": {
          "ref": "244afe6e-b982-41d3-b394-6fbe56e78833",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "82fecdd9-627d-4547-b50f-3fcb3fb8531a"
        },
        "item": {
          "id": "4b58fb4b-515e-402a-9eb2-50f9f9a020ee",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d12fc9c4-22eb-430b-84c9-f703ccfead24",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26b588f-cdd7-4688-8cdd-b38308612571",
        "cursor": {
          "ref": "406002df-b640-4708-8950-89b8808191a2",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ec822fa1-44a4-4296-a92d-ddc930166b21"
        },
        "item": {
          "id": "b26b588f-cdd7-4688-8cdd-b38308612571",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c1f038c4-354d-48f8-8d6c-cf1de3b2a00d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 219,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ca3079-5e71-4994-a429-745f42611d70",
        "cursor": {
          "ref": "f4430635-6309-4766-a0fb-00d4c03528b9",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7452f6b6-3bdd-44ac-bae0-b22b06eae98c"
        },
        "item": {
          "id": "e6ca3079-5e71-4994-a429-745f42611d70",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bae5e9c5-da07-4404-a426-739393785477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c462db-9605-4910-8dee-983e7f7cf160",
        "cursor": {
          "ref": "5916b3c2-350b-4ac0-ad98-95d1eb45eb39",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b73f16f3-3781-4114-85d0-6a96c4153319"
        },
        "item": {
          "id": "b2c462db-9605-4910-8dee-983e7f7cf160",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7438a510-3cef-483f-a041-55073fd6452d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f47c3e4-b9c3-4740-8b35-8693da8e46ce",
        "cursor": {
          "ref": "cff67aca-9ea6-4861-9da6-14e5a189c5aa",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "97ed79cb-2ede-4824-8d53-8549799e62fc"
        },
        "item": {
          "id": "1f47c3e4-b9c3-4740-8b35-8693da8e46ce",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bf785215-3a1f-49c9-b241-74741854f7e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61756f83-0755-4357-a0ce-5676052d7506",
        "cursor": {
          "ref": "f36bf47c-6105-4b93-8cac-89e768d364cc",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "aadba9bd-d91c-4665-b66c-2a3d6c33baca"
        },
        "item": {
          "id": "61756f83-0755-4357-a0ce-5676052d7506",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e131f32e-8442-4cea-b2d8-ab7e0b148bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8865a0a-00d3-4314-9a02-3921bdceaf39",
        "cursor": {
          "ref": "84a94c9b-ab66-4c10-b51b-c9953c4c2cfb",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6a41f22d-0fdf-4e17-92e0-8d90c1e339ff"
        },
        "item": {
          "id": "b8865a0a-00d3-4314-9a02-3921bdceaf39",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8b643a9d-8536-4aa3-ba27-1e034c6f39bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432f710d-d7ec-4f8d-a222-1d0ece2aba6e",
        "cursor": {
          "ref": "3b80b29c-dcab-44b5-a346-f0c522af5fef",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "398a318c-5495-4881-8cd7-dbd60743c09a"
        },
        "item": {
          "id": "432f710d-d7ec-4f8d-a222-1d0ece2aba6e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9505feec-3596-4c65-a14b-f6ea6aab48f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a72d1e8-bfa4-4f4c-bd34-dab95537a250",
        "cursor": {
          "ref": "64b1a5a4-2f00-447b-bda6-a980ecdc3900",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "00601994-7154-4f79-b77b-0fa353c8a0b2"
        },
        "item": {
          "id": "0a72d1e8-bfa4-4f4c-bd34-dab95537a250",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "97fb1603-5195-4141-af07-8a739464e33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d45554-ffd3-44a3-a809-173866c160ad",
        "cursor": {
          "ref": "1eeaed68-78b8-4da4-8a53-191a4e56723a",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "20bd7ea8-8523-4f29-bcd5-7c731bea8062"
        },
        "item": {
          "id": "c1d45554-ffd3-44a3-a809-173866c160ad",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "598bcf60-f6c7-4736-9b2e-7a645c114a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d240cd6a-f8b5-44e7-a723-bb9572c73167",
        "cursor": {
          "ref": "4e817ade-2d28-414f-9a40-b6ce5d539425",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3832076b-da96-49bd-a4aa-162628e8bdf0"
        },
        "item": {
          "id": "d240cd6a-f8b5-44e7-a723-bb9572c73167",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b79befbf-5f34-4677-b9cd-684d3c3baed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2855b8e3-750f-4543-8c37-107c87f7b3ff",
        "cursor": {
          "ref": "8fdc7b34-8a6e-4f43-bf38-e93a2d85c4a4",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3ddc0f8a-fbb7-4a22-a57e-429a209f94cb"
        },
        "item": {
          "id": "2855b8e3-750f-4543-8c37-107c87f7b3ff",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "84821b79-f5f1-4470-b6c9-6373c9344018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5478125-cfff-438f-85aa-eb3e80a10446",
        "cursor": {
          "ref": "85ce2962-116c-45b3-978f-759b95a8c45a",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "97942066-4d90-4362-9bf2-6ad977ce9cc9"
        },
        "item": {
          "id": "a5478125-cfff-438f-85aa-eb3e80a10446",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fb07d279-20f9-45f0-947d-c0ef1860bc21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33cbc2b8-c386-4055-bc14-47eb9cb4a9b2",
        "cursor": {
          "ref": "4125e082-ead5-4fa5-9449-6fe9e4a5d9f7",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "776574a8-7be1-4f92-87fc-04cffd546802"
        },
        "item": {
          "id": "33cbc2b8-c386-4055-bc14-47eb9cb4a9b2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bf75fc1e-e867-4286-8d70-be561743b3b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84c4780-7043-4763-973a-b322ad25f7ee",
        "cursor": {
          "ref": "65efa454-7999-46eb-a9e4-80390d5d18bc",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b277908e-a6f2-49ea-a200-16b3e6974613"
        },
        "item": {
          "id": "f84c4780-7043-4763-973a-b322ad25f7ee",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "dcd56d7b-56b5-4907-9e6f-82c854402924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9c266a-afb9-4cf1-9da5-10d913ca5131",
        "cursor": {
          "ref": "86d07e8f-52cf-4122-aa64-d2d715b98189",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "bea692a7-ced5-47b8-bc5f-fb8511b84d05"
        },
        "item": {
          "id": "3a9c266a-afb9-4cf1-9da5-10d913ca5131",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "dba82f33-1e1b-4738-8554-41fd0e745ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f75246-38c8-40d0-8b9e-8e336ce7560d",
        "cursor": {
          "ref": "3b6f57fb-c193-4fe3-9f83-a2388a399f39",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c8d67ea7-b7bb-48a9-b749-f2e7fbc6371e"
        },
        "item": {
          "id": "09f75246-38c8-40d0-8b9e-8e336ce7560d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "06b50478-85b7-4fc0-aa0f-38e4e699d20c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cda5a7b-a2b2-4bc2-b201-2e92f57563d1",
        "cursor": {
          "ref": "dc9762bc-e84d-476e-a2f9-1dbf781abf8b",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3383f8cf-7dad-4f8b-a175-985d32428521"
        },
        "item": {
          "id": "8cda5a7b-a2b2-4bc2-b201-2e92f57563d1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9580ead9-b6f1-4791-8392-d29868cf3af8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 22,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "ee312dd1-1332-4ba2-b813-908097538910",
        "cursor": {
          "ref": "5351c40d-29c2-4dbd-afef-eeddc5dfccc4",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7e4292ee-5b9f-473c-8e16-3d1919425c67"
        },
        "item": {
          "id": "ee312dd1-1332-4ba2-b813-908097538910",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f896d29e-9c99-4ccd-b777-f913fa0e8f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d589ea3-16c1-4ad4-98d6-cba42e5ef31a",
        "cursor": {
          "ref": "e9c0ac5d-95cc-43c6-bfbb-864fad0998a7",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "bda537ff-0414-4aab-8a5d-c9d9ccbf9cfd"
        },
        "item": {
          "id": "7d589ea3-16c1-4ad4-98d6-cba42e5ef31a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b7e23b23-42e0-4869-b755-4bda76d87393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61131e90-484e-44ae-a13b-c144242464f4",
        "cursor": {
          "ref": "17af24d3-f171-4466-a50c-db191ce603c9",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "de54ae54-5785-48e5-a326-dcefcde4941e"
        },
        "item": {
          "id": "61131e90-484e-44ae-a13b-c144242464f4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4ba91335-dab2-4dfd-854e-0ca638542472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8e6d60-c077-40cb-a451-83d05a55c087",
        "cursor": {
          "ref": "054f3334-8703-457c-96ec-9ca859cb3785",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "eb5e5693-a019-4b73-a77d-a219c09af46d"
        },
        "item": {
          "id": "bc8e6d60-c077-40cb-a451-83d05a55c087",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "41f471f7-1170-42a3-aec9-67fa7af06170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5067aed6-99df-472e-afc7-16c903c98333",
        "cursor": {
          "ref": "96614c32-cbf9-4fbd-ab49-be7b9d6868f7",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7138bbf0-86b7-4bc4-a1bb-b283e8a5c013"
        },
        "item": {
          "id": "5067aed6-99df-472e-afc7-16c903c98333",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "db06cd52-525f-471e-9bc5-5af9f5451522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d399b41-b0f3-4c2e-8d71-0a30d7c7e93e",
        "cursor": {
          "ref": "da50b737-3d1a-4061-9442-0520ede6b6c3",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "fbf8a403-24a0-4b3a-b864-ad673904d041"
        },
        "item": {
          "id": "2d399b41-b0f3-4c2e-8d71-0a30d7c7e93e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "56cde3e7-ba63-4b99-8a51-61355d7aa0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b43384-abe6-4186-a20a-0200ada9a15b",
        "cursor": {
          "ref": "e1ade9a5-7b4b-4ea1-9c5b-42c9f8e9a439",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b663170c-99a9-4097-a43c-30cf66602841"
        },
        "item": {
          "id": "30b43384-abe6-4186-a20a-0200ada9a15b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6f0678d2-228c-4a0a-a3fe-815400564d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5abc37b1-44b1-42b9-ad98-e134440aedd9",
        "cursor": {
          "ref": "14835008-8dca-4397-aa7f-1827bdbea378",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a700b8dd-cad0-4e4a-9f18-f1cabb5f6453"
        },
        "item": {
          "id": "5abc37b1-44b1-42b9-ad98-e134440aedd9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "90da953d-82fe-45a3-af57-6541c9e4b355",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 29,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "f64ab9fe-9b7a-49e7-bfa6-bf9ea625997c",
        "cursor": {
          "ref": "93120273-2c08-4bdf-8d13-e7191e18e2ba",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "820fda5d-ab5e-48d1-81a7-7bc01f599281"
        },
        "item": {
          "id": "f64ab9fe-9b7a-49e7-bfa6-bf9ea625997c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4047f08e-71d9-4e9c-8490-076ed29e6e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f0057f-4db2-40ee-b593-e6346e1013ed",
        "cursor": {
          "ref": "602bb082-b5d7-443a-ab4c-6e1680c394db",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4d509f67-210e-466c-a89c-1d0b5991d1c3"
        },
        "item": {
          "id": "a7f0057f-4db2-40ee-b593-e6346e1013ed",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1f684cc4-786e-4cd4-a477-b46f9e6b24c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02ad052-4167-40fb-8dec-1cc937192244",
        "cursor": {
          "ref": "18ce94d4-05eb-42cd-a3da-a4b73738cc2d",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f2e75a8c-fa9d-4ba2-9502-2bac0a357ff0"
        },
        "item": {
          "id": "e02ad052-4167-40fb-8dec-1cc937192244",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9ebe008a-25c9-461e-9b0f-168fa3f15520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d027a1b9-16c0-48bc-8bcf-dfd8f456d9ac",
        "cursor": {
          "ref": "739afb18-6750-4772-a4ae-96662c018c19",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "cf7178e1-b4d5-4429-b99d-6aeb58145d61"
        },
        "item": {
          "id": "d027a1b9-16c0-48bc-8bcf-dfd8f456d9ac",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "97e88518-1552-4d28-b98e-e9a1ee670ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8841e9-f8d1-468c-86f9-af41a808c518",
        "cursor": {
          "ref": "646e69c9-c302-469f-aff2-b1ab819220dc",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8e8b4886-5d00-46f4-ba6b-73fe8eed472c"
        },
        "item": {
          "id": "3b8841e9-f8d1-468c-86f9-af41a808c518",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "badf7bb3-0f13-4e37-acd2-000c69914ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924de7a5-4a79-4bd5-8b7b-f44c3e4718e7",
        "cursor": {
          "ref": "16a1f083-8bbf-46ce-8620-5d0a84b8292a",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d1f05a45-d37a-46a0-bf83-cba0ddafc4a9"
        },
        "item": {
          "id": "924de7a5-4a79-4bd5-8b7b-f44c3e4718e7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "48808004-1d4d-422f-9b54-e6b6a5328be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e4f3ff-1203-42dd-9f7b-0ba78aaf23a9",
        "cursor": {
          "ref": "5bcde147-f89e-4b39-9180-13126a33406e",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "bdf6b74f-84d5-4f1a-a126-6abbcd2cf8b4"
        },
        "item": {
          "id": "b4e4f3ff-1203-42dd-9f7b-0ba78aaf23a9",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f8708c05-bb63-4f09-b1ed-59458aac9dea",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 29,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "7d6853bf-6bc3-4398-9bd9-bbe83d534633",
        "cursor": {
          "ref": "4ffb5550-ee57-4c9e-ae0f-245beb6daf6d",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f304a0fd-0e86-4bb8-93fe-3872f26f1896"
        },
        "item": {
          "id": "7d6853bf-6bc3-4398-9bd9-bbe83d534633",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7cf0f56e-f935-425e-881b-cfb9cd791105",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "db420bec-ce25-47ac-84bb-2c46b83978ea",
        "cursor": {
          "ref": "b1733304-433b-4c6a-9aae-c1303f74df02",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5891be0b-90f1-45b7-b1a0-0ef3491f5318"
        },
        "item": {
          "id": "db420bec-ce25-47ac-84bb-2c46b83978ea",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b2fcea74-2d3c-43c1-9eb0-f12aba246362",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "d872063b-64b1-41b1-bd9b-8d663a052164",
        "cursor": {
          "ref": "2d3bc3f5-2bde-4758-8261-fd9889bdf26a",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ef4dbe3e-58d5-4585-a322-eff32879fbb1"
        },
        "item": {
          "id": "d872063b-64b1-41b1-bd9b-8d663a052164",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "07998a40-5814-4059-beda-1b6ea0653c0c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 25,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "9bbac953-de06-413b-b926-e6858d886a15",
        "cursor": {
          "ref": "dd038eef-a521-47f2-9955-cbac2331393b",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d5889272-88dc-4dc5-a758-ac2792a6f455"
        },
        "item": {
          "id": "9bbac953-de06-413b-b926-e6858d886a15",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "8e5e6881-9ced-44cb-9030-2580d793d9db",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 12,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "2fe69bdd-4f15-47ec-9598-34f52250d663",
        "cursor": {
          "ref": "c457d85e-b2ef-44bb-b93b-c26206bb0af8",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "320c9202-78f0-47be-a829-c6391c97669d"
        },
        "item": {
          "id": "2fe69bdd-4f15-47ec-9598-34f52250d663",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "942e8ab1-8652-452f-8d06-37efc1bac8f4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 11,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "e56ca372-518b-451f-930c-aa61944db2d5",
        "cursor": {
          "ref": "62649c9e-6a54-48f6-9821-01da87b9db2c",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "92c99899-964e-4645-af30-dc661062e711"
        },
        "item": {
          "id": "e56ca372-518b-451f-930c-aa61944db2d5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2a106c23-c7cc-4f8b-86f6-856b8a3694f6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4c08fd-e036-4f30-b7dd-2a018cdc3ee7",
        "cursor": {
          "ref": "54703c8a-0a2f-4498-8027-d07a455405c9",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e71322e9-59a9-4260-b03d-8340e7396e3e"
        },
        "item": {
          "id": "9d4c08fd-e036-4f30-b7dd-2a018cdc3ee7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ed46dfef-2678-46f9-9a2d-dd2dacdc6c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc783ea-a76d-4d49-8a82-647d01c39709",
        "cursor": {
          "ref": "3bc2112f-523b-4483-8c1b-d242a350c152",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "cfffb03b-0e85-4f33-ab3c-2384fcdf4e2d"
        },
        "item": {
          "id": "7dc783ea-a76d-4d49-8a82-647d01c39709",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "64fa3b1b-eb93-4ea2-9c0b-c41af45c7235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f277b76e-1b77-46a3-b49e-6c65b31c64ce",
        "cursor": {
          "ref": "32de692a-73f8-42c3-a0dd-0c26cc3c733c",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b8440b39-9dd0-43fc-bf95-d1469b567881"
        },
        "item": {
          "id": "f277b76e-1b77-46a3-b49e-6c65b31c64ce",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "35ee26f3-06b8-4bce-9d89-0d7068b71a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8689de-bdd7-49d9-b966-79ee1e9402f2",
        "cursor": {
          "ref": "323fe84d-3b96-4c34-ad7b-93e69b0eb3e5",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "86708c95-2070-4bfe-bd7c-723e607a8b68"
        },
        "item": {
          "id": "5a8689de-bdd7-49d9-b966-79ee1e9402f2",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2adfc377-c3fd-4e13-9dda-b3c0fc1a476a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89bf0677-7a0b-4248-ac85-acd86b120e8b",
        "cursor": {
          "ref": "90da233c-be4d-439d-8185-103ba5edc157",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b270b359-06eb-4bfa-9832-b726899c6595"
        },
        "item": {
          "id": "89bf0677-7a0b-4248-ac85-acd86b120e8b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "1daba378-6ec3-4425-afb2-5724e511a3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cba887e-5dd8-4e1a-8237-c7ccbf3ea66a",
        "cursor": {
          "ref": "fe8031c7-d58f-45ca-8d96-f8fea69138b6",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "76d8d832-18e0-4de8-8de7-3b88064a9dfc"
        },
        "item": {
          "id": "4cba887e-5dd8-4e1a-8237-c7ccbf3ea66a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9b1fc0ff-9421-46a9-97d7-c1ec45ef6376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4011f8d8-5ee1-4c02-a974-b2c00dcbfa52",
        "cursor": {
          "ref": "b91cbb2c-b081-444a-8ce5-005416fa9450",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "cbe1eb28-b69e-4d2c-96c2-ffcedbebf949"
        },
        "item": {
          "id": "4011f8d8-5ee1-4c02-a974-b2c00dcbfa52",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "842f4122-fe30-4b8b-8a30-58b3dde55fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd70c0f3-e10d-416e-af0c-ddd59d3de5c2",
        "cursor": {
          "ref": "60f26518-2e45-47f3-a282-80028e20587e",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0ab3de8e-9dcf-4ca4-ba58-f83bf416096e"
        },
        "item": {
          "id": "dd70c0f3-e10d-416e-af0c-ddd59d3de5c2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9ea35ccf-c06c-4d1e-89de-d4dd2eb150fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3210309-6e1e-4010-9672-de89c616edcf",
        "cursor": {
          "ref": "2b14fc0d-fe3b-433f-a4ee-e7359ac438af",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "425f1310-0e74-4faf-839b-dab2f3a72cc6"
        },
        "item": {
          "id": "c3210309-6e1e-4010-9672-de89c616edcf",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6531e5c2-e854-4c3f-839f-46d175567bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b60d06-3c45-4b35-84e5-dea66365f6c4",
        "cursor": {
          "ref": "8021f392-ff11-48f5-8f47-85f356394abb",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c465e1d6-9c11-41aa-abdc-2542f433a8d4"
        },
        "item": {
          "id": "f4b60d06-3c45-4b35-84e5-dea66365f6c4",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0b338e2a-3796-4fe7-9533-476fc99b853d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3949799c-c233-4140-8315-6ecd81b7080d",
        "cursor": {
          "ref": "a55fdee2-6771-44d4-be7c-13f568cfda29",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ca0b3087-4f30-4090-bea7-583907ea61db"
        },
        "item": {
          "id": "3949799c-c233-4140-8315-6ecd81b7080d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b898dba5-6748-4456-a719-3853fa37557a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d673ab-0260-4087-8625-3da2f1e80ba3",
        "cursor": {
          "ref": "75b2701c-9738-4ad3-804d-64ef10d0eb0e",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d1641d5c-7004-4b3d-9a14-ab76427cd7f2"
        },
        "item": {
          "id": "02d673ab-0260-4087-8625-3da2f1e80ba3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1a05fbde-09ee-48b0-ab9b-735d50d57d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d595eac2-a249-4814-a705-805213110528",
        "cursor": {
          "ref": "6c88866d-1066-4cec-a222-8edc7b276e3f",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "32ab4018-bda6-4275-a7c9-43c88699e04a"
        },
        "item": {
          "id": "d595eac2-a249-4814-a705-805213110528",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "23326616-a1b9-477d-8282-480f52182f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a2e0b8-8dfd-45a4-9b50-103764372dbb",
        "cursor": {
          "ref": "ad0f1548-0841-49de-9b90-2ce80870c6d7",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "920fe5f2-c146-4141-805e-61f611effe0b"
        },
        "item": {
          "id": "92a2e0b8-8dfd-45a4-9b50-103764372dbb",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d23a1c3d-e76e-4c0f-b1b8-c0b8d73ee091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "793d75d7-97a5-4664-b598-2434c4edcf05",
        "cursor": {
          "ref": "9ab96eb0-415c-4880-9cb3-d3208dc66972",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "28b020ce-0fb7-44cc-ba00-30c610289085"
        },
        "item": {
          "id": "793d75d7-97a5-4664-b598-2434c4edcf05",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c25baa6b-d2a5-4cbb-be3d-44c9c5b23245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b040534-abc2-4a27-b683-1d02e36d51bc",
        "cursor": {
          "ref": "8e91c54d-f8ef-47ee-a072-f9297afdc4fd",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a90bfdd7-acb3-45c5-bb4b-b894ba2799d9"
        },
        "item": {
          "id": "7b040534-abc2-4a27-b683-1d02e36d51bc",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "dfb5ed20-d2ff-4ba0-a9b5-79ed6e120804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34460348-79c2-43bd-ad66-ad55fd739405",
        "cursor": {
          "ref": "5f54dee1-ad21-4d22-a87e-26f20d6bc20c",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "41eba44a-8a69-411a-91e1-78ee0b4bc5de"
        },
        "item": {
          "id": "34460348-79c2-43bd-ad66-ad55fd739405",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "da3ef568-5920-4952-99bd-bd90f8b6ce0f",
          "status": "OK",
          "code": 200,
          "responseTime": 163,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "554b91ae-bd3a-48cb-a211-5ea1034876c4",
        "cursor": {
          "ref": "3c6187e1-c4bd-4049-a30b-f0314f34b347",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8d772c2d-d9fe-4a83-9ac5-e3a5ec30af2d"
        },
        "item": {
          "id": "554b91ae-bd3a-48cb-a211-5ea1034876c4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5266b8a1-5d97-462f-a969-47c47336d48e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae27018-b739-4c79-940f-8cb0d31ae36c",
        "cursor": {
          "ref": "17fa8b06-3170-4040-8712-857b4df18a3b",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "bf4e879d-1c11-42f3-b71f-65221b8879d6"
        },
        "item": {
          "id": "5ae27018-b739-4c79-940f-8cb0d31ae36c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "82baf2b3-8102-4405-a162-45c20e6160fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82a1a85-2817-4718-8f47-f2271bed3322",
        "cursor": {
          "ref": "10887363-4291-4157-81e6-7256dc3dc2cb",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6667325b-d38b-4e0d-93a6-449fb3660f68"
        },
        "item": {
          "id": "d82a1a85-2817-4718-8f47-f2271bed3322",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1e3d5a6c-1db5-4399-925d-0efca74b5670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da5a5ba-5835-49d7-94ee-8a14a9a1be38",
        "cursor": {
          "ref": "a77279a2-ff12-45ed-a24c-46bbaaf4d192",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "abe5d83a-357f-4d30-903d-77bccc2dc101"
        },
        "item": {
          "id": "3da5a5ba-5835-49d7-94ee-8a14a9a1be38",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3d51f76b-f947-4daf-b7a2-a0c7dc038bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b32f2db-21ee-46d1-9262-647946142350",
        "cursor": {
          "ref": "c94949aa-5abc-4d45-89fa-99688a843de1",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "6e39f37b-64e3-447a-8d59-44ca316fcf29"
        },
        "item": {
          "id": "9b32f2db-21ee-46d1-9262-647946142350",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "744e4564-7c2c-482a-bda9-a1e642e2368a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9c25e7-a6be-4652-89fe-0ca9e2049235",
        "cursor": {
          "ref": "eec0a20e-0b03-497c-a59a-0baca08420ee",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9aacd0e7-9859-4610-be1e-81128dafc786"
        },
        "item": {
          "id": "3b9c25e7-a6be-4652-89fe-0ca9e2049235",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a0c7fdb3-b5fe-4031-97e5-41b6ab2c289e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503c1c82-9d6d-4480-b206-078a75ddb9e2",
        "cursor": {
          "ref": "705f2459-1c39-4512-8fd0-b4694f1de290",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3c8ea848-cc03-47c6-9928-0804ab712676"
        },
        "item": {
          "id": "503c1c82-9d6d-4480-b206-078a75ddb9e2",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "dabc3d34-1ac9-44a5-b9f5-ebeaeb79679b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912e4bdf-f65f-4034-ba55-91eda9f77946",
        "cursor": {
          "ref": "ffc6831c-1e15-4583-918e-45abacc733ec",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c7d2595e-2ddb-4fde-94d2-3168cb6de4e8"
        },
        "item": {
          "id": "912e4bdf-f65f-4034-ba55-91eda9f77946",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "81ff35b3-7071-45b4-a7c7-2a5b80cff4f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8df28b1-e7db-4d0f-a4f0-4b031e8b5568",
        "cursor": {
          "ref": "8520c8a4-f505-4dd5-b5c9-218e81643678",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "fb736325-19f4-494f-8d29-6babb08d60ff"
        },
        "item": {
          "id": "d8df28b1-e7db-4d0f-a4f0-4b031e8b5568",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "86d3470a-3644-43af-b420-965ab2a8f807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28c3965-0898-4dbc-aa79-336a99906365",
        "cursor": {
          "ref": "49d89d70-4ab8-4ecf-8ab1-fc929f5b3995",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "fd736824-ea31-427d-b737-369c751d45ef"
        },
        "item": {
          "id": "b28c3965-0898-4dbc-aa79-336a99906365",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a01afbca-bdfb-4c13-96e8-7b9c0013741e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0cec504-c2d3-4ba1-bbe0-333df1fb05c7",
        "cursor": {
          "ref": "8da0a450-1a53-45a1-82f9-754c953f03ef",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "400ab322-dd57-4cec-a2fd-d1b7d24529e5"
        },
        "item": {
          "id": "b0cec504-c2d3-4ba1-bbe0-333df1fb05c7",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6f49e1d1-69ec-4962-9382-68effb44f12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49947a00-1228-4d2d-b3d2-ba4ec178d958",
        "cursor": {
          "ref": "e8325b5f-dbe6-4470-8ce9-9815773ac501",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b6190f76-1f20-4dc2-90cc-977ca709c0f3"
        },
        "item": {
          "id": "49947a00-1228-4d2d-b3d2-ba4ec178d958",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d83a6669-6dcf-4fd1-84eb-31a004154b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f32765-9f08-467c-8471-6a97f71c3efd",
        "cursor": {
          "ref": "0fa3ef6e-b249-4947-b108-9ac937d69606",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e0893885-a72e-45b0-98ee-0dfeeae113b4"
        },
        "item": {
          "id": "93f32765-9f08-467c-8471-6a97f71c3efd",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "20987058-ce0d-417b-8b40-22b6e1a82f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6dfb6d-48e1-4d74-98a2-f7c61b97cc76",
        "cursor": {
          "ref": "b11bd1d6-5c22-4945-8b86-3274afd3cb87",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4dddf397-e0c6-49b2-890f-989e3299d9ae"
        },
        "item": {
          "id": "3e6dfb6d-48e1-4d74-98a2-f7c61b97cc76",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9d7f227d-9549-4ba3-a700-e9eac113f57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98cac8e-4f28-4ed7-b90b-7dcac1e0d17c",
        "cursor": {
          "ref": "438a1636-abd0-4d2a-ac4e-bb20cd32147d",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3f255cd6-af2e-4cbd-adcb-6cfe0e8cff57"
        },
        "item": {
          "id": "f98cac8e-4f28-4ed7-b90b-7dcac1e0d17c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "78edc688-5b05-4939-b1b8-dfaa7ce6aa03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a07f766-a776-4062-a386-a9108addf09e",
        "cursor": {
          "ref": "cb0abd8b-e887-4db2-b376-fbfae3c69d8c",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8244ad2c-9f8e-4de0-91d7-d556c321ffda"
        },
        "item": {
          "id": "6a07f766-a776-4062-a386-a9108addf09e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d05b5984-5b83-47a4-8073-717cd5e8b578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3bb1f0-5d49-4845-9860-a6117ad9f9c3",
        "cursor": {
          "ref": "8bf8507c-b93c-4b64-9dee-95ebadb26eab",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "3efcd4f3-1af1-4d3e-a676-3ff3126bb429"
        },
        "item": {
          "id": "3b3bb1f0-5d49-4845-9860-a6117ad9f9c3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7fe16109-a126-41f9-85c8-d11387153e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0335dc8-9b42-4d8f-884b-da8d78db801d",
        "cursor": {
          "ref": "830a6626-957f-4bdc-8573-8b3f386f67b6",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c58b9e7e-b91f-4d2e-a468-1f1158220685"
        },
        "item": {
          "id": "f0335dc8-9b42-4d8f-884b-da8d78db801d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "bd01d486-1cad-4c33-ae48-6637ae81d6b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33179977-3c9e-4944-bf69-7f9f332ab4a9",
        "cursor": {
          "ref": "93c96cd5-317f-4cab-9275-9630c6e18b70",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "faae7f01-673c-4a2a-a2fd-07785ff411d4"
        },
        "item": {
          "id": "33179977-3c9e-4944-bf69-7f9f332ab4a9",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7dbdb07a-be28-4e87-bfc9-3c7517ecebc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8831c13-a4d6-4cbc-a318-fc63ee0f33b4",
        "cursor": {
          "ref": "54bcb90d-ae4f-4758-8d63-df8b034df520",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "332d04d0-8dcf-4c98-b2b8-85e3343d60f9"
        },
        "item": {
          "id": "c8831c13-a4d6-4cbc-a318-fc63ee0f33b4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e4e6aa22-075a-4442-ba0c-8bc5813bfc56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47301c2e-e4e7-4fea-8de9-d378fa311ba7",
        "cursor": {
          "ref": "f918a477-793e-4de6-b371-07f1786e75f9",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "445ba85d-6399-4066-b204-750ca7df1649"
        },
        "item": {
          "id": "47301c2e-e4e7-4fea-8de9-d378fa311ba7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6df3ffdc-b0c8-4a7f-87ee-a2a80abd7370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca31984d-6648-4916-b984-5f7ed7ebaf72",
        "cursor": {
          "ref": "38606177-6104-4943-817e-e9cc2629e580",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d6a0663e-ebbe-4b8c-8a64-cb7508b9af48"
        },
        "item": {
          "id": "ca31984d-6648-4916-b984-5f7ed7ebaf72",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "348c226f-d1cc-45a1-8bb0-adb3ac663d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4234ce-26ff-44b0-bc91-f70454c1e852",
        "cursor": {
          "ref": "1beafeaf-fb29-4894-9f74-96c799e6be90",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ca00ee49-e6e7-43dc-aede-0f3139406cf0"
        },
        "item": {
          "id": "ae4234ce-26ff-44b0-bc91-f70454c1e852",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2e921e58-a43a-4a77-b5a3-127b0fd8e01b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6546a342-b650-441b-bede-023d450c744d",
        "cursor": {
          "ref": "46fd4a00-30f1-4e4e-be7a-3d8ee4a55114",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5ed2715e-5315-4b03-a8a7-f64859864e79"
        },
        "item": {
          "id": "6546a342-b650-441b-bede-023d450c744d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7e4c3471-ca4d-4ae3-868b-2fb69bcbf090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a049044-55af-4200-b5be-d87d9949afe7",
        "cursor": {
          "ref": "98143ac1-81da-4a03-861e-607aa8dfa78e",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d3a8fe2b-33a2-4d17-b4d9-e9dc2b7e7b43"
        },
        "item": {
          "id": "4a049044-55af-4200-b5be-d87d9949afe7",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c526e445-17da-4198-9464-077b2829b28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bcfca75-e2bd-4e8d-b3f8-5c963e428b2e",
        "cursor": {
          "ref": "7882adeb-3540-485f-b0e3-bf811c389154",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "1a10bf8c-731f-435c-a552-cd94c4c3aefe"
        },
        "item": {
          "id": "1bcfca75-e2bd-4e8d-b3f8-5c963e428b2e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7fe53345-9e9b-46ea-8698-c12a317c87b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29cd0e63-e035-4b49-b539-670d890cbee6",
        "cursor": {
          "ref": "3ae84611-64b3-4d63-bd6a-4c0581944a42",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1a202e35-65ae-495a-b1f2-760e1a5263f3"
        },
        "item": {
          "id": "29cd0e63-e035-4b49-b539-670d890cbee6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3225c4e3-5d55-4772-8cb1-93d56e7b4d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02da218-38aa-4d20-a45c-bd961a6da4d7",
        "cursor": {
          "ref": "adcb3c57-55e0-46b8-982b-27941aab2434",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7d786910-e368-48fd-affb-4fb9827618c3"
        },
        "item": {
          "id": "e02da218-38aa-4d20-a45c-bd961a6da4d7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "75cfa1e6-d2a3-435e-9f6e-01c0b915e1cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d01167-1d5c-4ef2-b206-aacb54898354",
        "cursor": {
          "ref": "4f3b1262-c076-4e48-b22b-2d71c37d9ce7",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1cb849a6-3330-4de5-9b40-a3c84c1cb098"
        },
        "item": {
          "id": "27d01167-1d5c-4ef2-b206-aacb54898354",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7c151e5b-3307-40a7-9877-8c62cc5bfd0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a171ef-198d-46f7-9b88-b002c861886c",
        "cursor": {
          "ref": "cb7d10c6-dd71-4b4d-bed4-853ee7f643ac",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3b458a0f-db8e-41d3-891d-6f57f0d4ab91"
        },
        "item": {
          "id": "60a171ef-198d-46f7-9b88-b002c861886c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1a01422a-54e9-45e0-9297-9646bdf24972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae02ddf-2222-4337-a066-c4225896b11d",
        "cursor": {
          "ref": "9e01a3ff-6aba-4b0d-98f4-36b298094913",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "505557e8-9262-4a53-8e16-44f878e056da"
        },
        "item": {
          "id": "cae02ddf-2222-4337-a066-c4225896b11d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "af8e6311-5d90-465f-9e70-033f1b6d9709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7996561a-f658-44c3-8b7f-8b3a4d38bf42",
        "cursor": {
          "ref": "eb481cf7-b5f0-4708-8499-4140ee338cf2",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c82d95ee-34aa-4fde-b851-d6ddb4be3736"
        },
        "item": {
          "id": "7996561a-f658-44c3-8b7f-8b3a4d38bf42",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f4b21a09-ed17-488b-bf49-d215b3862ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d6489c-8252-4fcb-90a6-f6da9921e0f3",
        "cursor": {
          "ref": "017be8e9-6b7d-4546-98c0-c3a5fffc7094",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e3628292-89a0-49f2-8f7b-c34b43ce7252"
        },
        "item": {
          "id": "70d6489c-8252-4fcb-90a6-f6da9921e0f3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b44d5774-d687-4121-9bbf-36e4306f9cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7243edc0-be36-43b3-9a74-552798829225",
        "cursor": {
          "ref": "baa77eeb-e9a9-4e9f-8f52-12594144fe10",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f27d0ae2-6da9-4917-9c33-3c23d041e826"
        },
        "item": {
          "id": "7243edc0-be36-43b3-9a74-552798829225",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d373f9b9-52ae-46b0-96a2-938398bab9fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c1ce89-3ee8-4e71-a21d-11d21464e473",
        "cursor": {
          "ref": "1cec4038-0bf0-4d89-992b-7894ae1cff33",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "47cfc21b-6cdd-4054-8b4e-93f2d97c26f7"
        },
        "item": {
          "id": "65c1ce89-3ee8-4e71-a21d-11d21464e473",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c4e77ef0-6262-4e35-8a5f-572ae5c49429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e722ff4-b693-4181-894b-cc2bf43f5d61",
        "cursor": {
          "ref": "32536934-67ed-475c-bd6a-5d40b9601519",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b84c9f3a-69d0-4dce-8f16-a9babaceb8b8"
        },
        "item": {
          "id": "9e722ff4-b693-4181-894b-cc2bf43f5d61",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d1b407cf-1095-4e71-a6ee-4468a5beb130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd702ab1-c543-4298-a5b1-050e1619dc74",
        "cursor": {
          "ref": "7cd77490-d1bf-423c-9836-790d64b2f43f",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a49c8c33-e4c9-4577-862b-a320cdf02a92"
        },
        "item": {
          "id": "bd702ab1-c543-4298-a5b1-050e1619dc74",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ae46667c-8f70-4b03-9803-c3b8ff88ac97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6899dbcf-a3fd-4dd9-81a0-1bd007ff360a",
        "cursor": {
          "ref": "fc808ac0-1a11-4430-bb3f-f571b8fac83f",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "29d82d1b-790d-4d9d-93d8-1eeb9d07573f"
        },
        "item": {
          "id": "6899dbcf-a3fd-4dd9-81a0-1bd007ff360a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "81fd85cd-5ab9-4723-96a7-b1df61b263fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012f5f4b-35ff-4fc2-9bb9-183160ab2f95",
        "cursor": {
          "ref": "0ff9aefa-8a08-4182-8744-0c578be14614",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6bb23ef1-be31-4bc8-b9a4-e00e92f83c19"
        },
        "item": {
          "id": "012f5f4b-35ff-4fc2-9bb9-183160ab2f95",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "22d742fa-2538-4638-96c2-97e936e8519d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0bb1e2-2ad5-4923-b708-ad722b12ef9c",
        "cursor": {
          "ref": "2af3b2df-c4dd-4972-b9b4-fbde0b6713b9",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5bc0877e-eb16-45d5-843d-1339a09697d7"
        },
        "item": {
          "id": "8e0bb1e2-2ad5-4923-b708-ad722b12ef9c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "05ebabb9-7555-461b-bcb0-167d2e20e803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601f8e9c-73f1-4fbc-ad18-dfada5cbb96d",
        "cursor": {
          "ref": "091131fd-defd-4bc7-b358-3218f21dc808",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "67ebdd82-0943-40f0-ab47-2082b89d7702"
        },
        "item": {
          "id": "601f8e9c-73f1-4fbc-ad18-dfada5cbb96d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4617d89c-57fa-4b7b-bb39-a49efdc2678d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cebd5d8-b163-45c8-bb15-ed779478d2eb",
        "cursor": {
          "ref": "47816b42-f176-4c3f-ac01-079d33003a98",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d94141c6-395d-460c-b052-af1378c0d809"
        },
        "item": {
          "id": "7cebd5d8-b163-45c8-bb15-ed779478d2eb",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6c947ac2-3cfb-4857-8dfc-0d6ce956a62d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b7c5a7-d96e-4398-8d2c-417dd9152f0d",
        "cursor": {
          "ref": "ef35f8d0-9dad-4c51-bfd1-995768f19d43",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "629ba2e5-c96e-4f06-87df-3e01320217b3"
        },
        "item": {
          "id": "e0b7c5a7-d96e-4398-8d2c-417dd9152f0d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a26fde9f-a109-41aa-a589-656204c9cf73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e90a24-f1b0-4d51-9c0e-283e175dee23",
        "cursor": {
          "ref": "f9e8a426-aad9-4a46-9330-3d2a2a5b2b3a",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "891ac3aa-3499-4877-9c01-83aa0401012f"
        },
        "item": {
          "id": "18e90a24-f1b0-4d51-9c0e-283e175dee23",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "64015a0a-2de3-4b6f-afca-6ddc73115e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a719ab3-e9cb-43bf-9a22-93abfff47ef1",
        "cursor": {
          "ref": "f3b5f05f-9d12-4364-bb4c-acb76efc0c1b",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7dcc5d8b-bd97-4f9d-98f1-3a1c603db587"
        },
        "item": {
          "id": "3a719ab3-e9cb-43bf-9a22-93abfff47ef1",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0ccf82af-d292-4994-8b14-bcdb3f9aa1b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe240753-197c-455c-a8a0-27df3962db52",
        "cursor": {
          "ref": "071e84ca-00b2-4d48-aaa5-160c51b73af9",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "dbf19a84-7649-4dc3-91fb-b9f3610e54d4"
        },
        "item": {
          "id": "fe240753-197c-455c-a8a0-27df3962db52",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e624d149-e325-42fe-af17-5c13cddc9d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1fa7e8a-a8fd-4eed-b8de-924fdc362108",
        "cursor": {
          "ref": "8567a7b1-7ec0-4345-a857-22dd8b258443",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0b80ec4e-21f3-491b-8898-d7fbaaf5f7f4"
        },
        "item": {
          "id": "c1fa7e8a-a8fd-4eed-b8de-924fdc362108",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5cc0f8df-c1c5-4710-86a0-f430d4c396a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55298ff7-a2f7-4f00-bf73-35c6f9f0ec1b",
        "cursor": {
          "ref": "32c778f0-ca3f-4018-86c4-f081e1f4ee6c",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "dcac0c9e-1fe7-49dc-8065-a8410dbdc527"
        },
        "item": {
          "id": "55298ff7-a2f7-4f00-bf73-35c6f9f0ec1b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2ef9eee6-96fb-4b4b-89db-bf0aab14c637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c26245a-3164-49f7-85ee-c0e6acddd16f",
        "cursor": {
          "ref": "27f5a76a-7691-4f15-9ff2-2adb54da6213",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b120e1d2-ce7e-4e9c-b34b-a04e463937c3"
        },
        "item": {
          "id": "6c26245a-3164-49f7-85ee-c0e6acddd16f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "432c0bb1-2b5c-4272-a84e-5dd9e3632ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee37684-4519-4bda-8d25-20e379f88745",
        "cursor": {
          "ref": "228e3460-9fcf-438b-8614-d0f35332a426",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "142af725-7d8b-407f-b8ad-db1d6c635884"
        },
        "item": {
          "id": "8ee37684-4519-4bda-8d25-20e379f88745",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "432fd011-8bd2-4ca5-ab89-d1e94d39f5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143d5a25-419e-443f-ad6e-137cbf5ff7ac",
        "cursor": {
          "ref": "46e53706-bd4d-49ed-8813-60440e2e83cd",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7ede3245-5d88-4ca2-abb0-2cb175e3416b"
        },
        "item": {
          "id": "143d5a25-419e-443f-ad6e-137cbf5ff7ac",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "69d98584-0aa6-4be7-ab2b-1c71e8b4ceeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63049aec-d0bd-4e71-beee-5231341b4f63",
        "cursor": {
          "ref": "ffe570f4-82bf-45c8-86a4-07b0d7c47d36",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c325f9a4-2338-438b-9149-bd0cad221edf"
        },
        "item": {
          "id": "63049aec-d0bd-4e71-beee-5231341b4f63",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8c17cede-37b4-4a71-9431-24210cae01f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427dacc2-8214-4af7-b7f1-6b33bb4a489f",
        "cursor": {
          "ref": "e94cd472-f367-425e-ac65-e9ac9d01f10a",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "342a9e22-3ea5-4a97-80b0-f400404ee7e2"
        },
        "item": {
          "id": "427dacc2-8214-4af7-b7f1-6b33bb4a489f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "820ce6ba-c34d-4674-95c0-c878d2c5ecad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba5f8d3-bd38-4d18-a032-f02edd2a30cf",
        "cursor": {
          "ref": "ae7da0e0-2451-4cc5-a939-29008d5fb37a",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "06d823ce-9117-4b83-b6f3-93a2d0d3f5b9"
        },
        "item": {
          "id": "8ba5f8d3-bd38-4d18-a032-f02edd2a30cf",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "031ac0ca-94eb-40ff-b812-f3b6e8f8e945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a52fd1-870e-477b-ba4e-35e74816bbe5",
        "cursor": {
          "ref": "6242fb70-7771-4cdc-87d1-32d35d81ec20",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f5845208-4917-4a38-8e14-c1c6eac51a4f"
        },
        "item": {
          "id": "44a52fd1-870e-477b-ba4e-35e74816bbe5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "bdc2dfb0-999f-4fec-a945-c2195aff38f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6089b1f5-32db-4913-8f98-defb3544009d",
        "cursor": {
          "ref": "40165718-4126-4071-96de-f0ab222e2c35",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "b7d2c217-5955-432d-ba82-ad0f435bae84"
        },
        "item": {
          "id": "6089b1f5-32db-4913-8f98-defb3544009d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "64773bab-a50f-432f-8814-eb744e03ae29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e5e2cc-9942-44ca-8418-bf5b6e3a5426",
        "cursor": {
          "ref": "b9084f77-e35b-4ed8-86ce-b8963cf8fe0f",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "efd9d4a0-db11-4057-a261-a026dc654ff0"
        },
        "item": {
          "id": "96e5e2cc-9942-44ca-8418-bf5b6e3a5426",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "425d118c-7b97-4711-8efb-b8cd9428a337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5092e869-4a19-4911-b185-5a81c8e0f04f",
        "cursor": {
          "ref": "4a95ee16-9c55-489d-89a4-b788abdfb788",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "dc4789da-8fbc-4976-85c6-ef9367bcec20"
        },
        "item": {
          "id": "5092e869-4a19-4911-b185-5a81c8e0f04f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "96e1b49a-e016-4628-9931-19a9eccf91ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea114f8-ddc7-4615-aa4d-8149c61bce80",
        "cursor": {
          "ref": "6f1bf6f3-324e-4c69-9621-11eaf049f433",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "cd98eb1b-efc3-4594-8f7f-dcda0c711211"
        },
        "item": {
          "id": "7ea114f8-ddc7-4615-aa4d-8149c61bce80",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "20d31c8b-ccea-47cd-8155-53ce70f2c2eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0faaecc5-aa5f-44b2-8a29-ad84c1c57485",
        "cursor": {
          "ref": "1d35ca34-cd64-47b0-9590-ca170339e973",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "e277d0a2-c759-41a6-b53f-27e0f42d21b0"
        },
        "item": {
          "id": "0faaecc5-aa5f-44b2-8a29-ad84c1c57485",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "044efcf0-1f32-4806-8e09-b87e88b7d3a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd8687a-ce96-4ec3-bf63-851dea2cceee",
        "cursor": {
          "ref": "2dbc5bd1-a9bc-473a-b484-e7f30e4c3c1e",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "44738bc4-81e0-4850-8567-2273fed504fc"
        },
        "item": {
          "id": "dbd8687a-ce96-4ec3-bf63-851dea2cceee",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "32829619-5e7a-4a15-ba4e-841248b91ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4adcefc-8938-40d0-82f2-bff0ad39fbd8",
        "cursor": {
          "ref": "eecdabd1-f40a-4185-a941-8dd993f11bf8",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "775aa164-a520-4901-bb04-a3718437238e"
        },
        "item": {
          "id": "a4adcefc-8938-40d0-82f2-bff0ad39fbd8",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "371fb663-ec71-4196-8036-494caeffbb03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b4d22f-8c23-495c-92d0-22252a8224c4",
        "cursor": {
          "ref": "6e1a308c-bfb9-437f-87c5-99d6884dfca2",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3731f41d-e962-40b0-af29-f1f6003c7f18"
        },
        "item": {
          "id": "59b4d22f-8c23-495c-92d0-22252a8224c4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3f921a15-fe3e-42ac-8507-6d966fe53d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab85a577-8ffb-48b0-bee5-f16c583ba444",
        "cursor": {
          "ref": "6f0857d8-5bcd-42a6-a6da-cb2d8de27a8e",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "cc027cdc-3f43-451f-a029-f99b1c522b14"
        },
        "item": {
          "id": "ab85a577-8ffb-48b0-bee5-f16c583ba444",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a6cf4353-21df-4d77-847b-9a751d756ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2be1486-8b9a-44a9-97f0-34fdec4e1172",
        "cursor": {
          "ref": "50ce02cb-d8b0-4a5c-8e6b-0b32100692f9",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "5d878caa-0162-4a8f-a37e-2ba74336da6b"
        },
        "item": {
          "id": "e2be1486-8b9a-44a9-97f0-34fdec4e1172",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a36b55e0-7243-45b7-ae29-2786baf011b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4fa27e9-d9da-4fce-83bc-32075987628a",
        "cursor": {
          "ref": "47d15329-e003-46dc-866f-facb9eef0486",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "a047ecfa-15aa-4eef-9515-b5945886288b"
        },
        "item": {
          "id": "b4fa27e9-d9da-4fce-83bc-32075987628a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "40ee21ad-db42-43bc-885f-1b4698abbe33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ab7ca4-4408-4a1e-a810-9bf866580f3c",
        "cursor": {
          "ref": "95dffe60-bbe7-43fa-9956-3659d90974fa",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "98c53c1c-f120-465c-bbd3-a40e91281fe7"
        },
        "item": {
          "id": "e8ab7ca4-4408-4a1e-a810-9bf866580f3c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "504229ce-edc4-4ec7-ae5a-ce15482a0c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732ad443-acb7-4838-8943-61395edfb774",
        "cursor": {
          "ref": "b1f7c258-5408-40a2-93c0-5b7cd4614fa8",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "bb97a57d-bdba-4c39-bfba-d055d4d191aa"
        },
        "item": {
          "id": "732ad443-acb7-4838-8943-61395edfb774",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c00c9b6c-06d0-45da-a516-beca443e778e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5063b55-d8ba-4be5-89b1-5550a49c9b23",
        "cursor": {
          "ref": "c543dde2-86c0-4cf6-bd1a-b83401bb0741",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "417f4760-7baf-4b2b-ba9a-96046e3df296"
        },
        "item": {
          "id": "b5063b55-d8ba-4be5-89b1-5550a49c9b23",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f358f525-df98-463e-a494-1b1b23757c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b041667c-b586-46fc-bbc9-5e809eeffcaa",
        "cursor": {
          "ref": "ab0a90d0-b631-4ec6-95aa-0f61875c61d6",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "70f21c7a-3f34-464f-8f45-9e97b19ab0f0"
        },
        "item": {
          "id": "b041667c-b586-46fc-bbc9-5e809eeffcaa",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "392ae857-7204-489b-8348-3c8c48b47eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9f2c8b-1799-44f8-9a17-6922b44c0fd8",
        "cursor": {
          "ref": "1ad40da5-c95c-4f5d-9828-8881cd842914",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "20934058-6ced-4fd1-b597-42edd5d31119"
        },
        "item": {
          "id": "cf9f2c8b-1799-44f8-9a17-6922b44c0fd8",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1e0289ad-6971-488e-a33b-d42353295635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d9489c-c07d-4916-aeca-88cbbd6e8dca",
        "cursor": {
          "ref": "b2e0981a-0af4-40e4-8fbc-b43c9b29243b",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "16614eee-4c5a-44e7-b278-4f6dcc5056f0"
        },
        "item": {
          "id": "11d9489c-c07d-4916-aeca-88cbbd6e8dca",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4ec167da-ecbe-4c0e-a022-441954e0a42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1227ab3-8056-4602-8447-55935998af03",
        "cursor": {
          "ref": "1d5af724-3123-4960-81a7-33d99255417f",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "1ef70898-53ad-44a7-bff6-51f3cb865597"
        },
        "item": {
          "id": "d1227ab3-8056-4602-8447-55935998af03",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "532a8166-0ef7-43b2-a541-e20c7cac7e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45299cc1-9396-4571-8383-a99c851c2acc",
        "cursor": {
          "ref": "cf9e8e14-995f-40a6-9fea-0881b8134f61",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "63f033bc-2093-4ac9-b3ce-3b4997811d6d"
        },
        "item": {
          "id": "45299cc1-9396-4571-8383-a99c851c2acc",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "55d293a8-5c9f-4107-baa3-f56fdfbc4c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e082b873-8229-46da-b872-bdea8d2d432b",
        "cursor": {
          "ref": "1407fc34-a9d4-49aa-a6fc-34c83a3668cb",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "ffe5393f-7bed-4925-98b6-ab6ece0cc76e"
        },
        "item": {
          "id": "e082b873-8229-46da-b872-bdea8d2d432b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "77aa1ecd-5395-4e91-9426-5c56e0a1a8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80aab3d-8863-4b6a-9a68-7bf8894d2fb5",
        "cursor": {
          "ref": "a34f0875-9c7e-451e-bf54-5a6339da5f4c",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "350ae59e-1f9d-470e-bbb9-a148ba5978c0"
        },
        "item": {
          "id": "f80aab3d-8863-4b6a-9a68-7bf8894d2fb5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4b80ef5e-06e3-4f45-ad0b-1cca5bbe27ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a4ae8f-fcc0-422a-8ab2-3e411e4661f9",
        "cursor": {
          "ref": "19b930d2-6bc3-4f38-b286-71c5a285cef8",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "3381e325-4e1a-44a0-9025-e43aec7905ed"
        },
        "item": {
          "id": "25a4ae8f-fcc0-422a-8ab2-3e411e4661f9",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "47a714ef-4792-409f-89be-fabadb267de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8b13a1-37cc-4103-9b40-bf887522c18f",
        "cursor": {
          "ref": "485b05c0-7e5c-4ce0-a95a-33eb772ad32d",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "7721be43-b3cd-4e20-9211-700787d5a562"
        },
        "item": {
          "id": "1a8b13a1-37cc-4103-9b40-bf887522c18f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "88908735-5009-480b-99fd-38443d17a8cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a2c7e9-5490-4078-bae4-1dae328489d9",
        "cursor": {
          "ref": "32fe3a4c-86b6-4725-a381-e4209817779e",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "2bee6e3f-cfbc-43f2-a85e-ffca2fc1d6ef"
        },
        "item": {
          "id": "b5a2c7e9-5490-4078-bae4-1dae328489d9",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "59cb7664-f2ee-4812-8dd3-318af5eaec80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ca6742-b426-4d29-b93f-c0d747259c75",
        "cursor": {
          "ref": "2b5083bb-e38c-477e-9400-318b5afa44d4",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "9c2bae79-02a7-458f-9a58-2619b9222624"
        },
        "item": {
          "id": "c3ca6742-b426-4d29-b93f-c0d747259c75",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6584b3d7-f0f6-43ca-8958-b3d026f0654e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259bbd8a-1646-4d04-b84f-eacc4c8cd94f",
        "cursor": {
          "ref": "7a037459-043d-4ed7-a9dc-db2566cb2f4e",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "ad7ee27e-1ed0-4156-a224-dbd708b85e6d"
        },
        "item": {
          "id": "259bbd8a-1646-4d04-b84f-eacc4c8cd94f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1c829e87-305e-47d8-a87c-e67774e1ff4e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6099eb4-ffba-41fc-b81b-91fc6bd10ec0",
        "cursor": {
          "ref": "d29e6d75-0139-4934-ad3f-20fc85f94c31",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "8adba733-d2d9-41b0-8a7e-6898f2e2d6bc"
        },
        "item": {
          "id": "c6099eb4-ffba-41fc-b81b-91fc6bd10ec0",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5a76dc87-94ad-4b87-bd70-7936e6cd646e",
          "status": "OK",
          "code": 200,
          "responseTime": 34,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2494ac94-ffe6-410c-b197-ce640b33d646",
        "cursor": {
          "ref": "b2ae775b-da61-4e3d-994e-34b338ce129c",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "c155ccbd-d0e5-468f-a785-5d248327afce"
        },
        "item": {
          "id": "2494ac94-ffe6-410c-b197-ce640b33d646",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6b16995f-7a1f-4f19-a2a6-03c567ae1d25",
          "status": "OK",
          "code": 200,
          "responseTime": 2906,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba3752d-b037-4d4d-9131-24acbbcf2a24",
        "cursor": {
          "ref": "b6415ced-02e8-44a3-aa5c-a333fbcae07e",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "1ee434fb-de3c-4b75-8b19-1d500b0781b4"
        },
        "item": {
          "id": "3ba3752d-b037-4d4d-9131-24acbbcf2a24",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "073089ca-e150-48f3-a7d8-58dcb83b05fa",
          "status": "OK",
          "code": 200,
          "responseTime": 2310,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb027d3-8b6b-45f8-8c15-e2aab7baa23f",
        "cursor": {
          "ref": "bfe0c84b-c060-43d2-9967-46cadc0c66d3",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "fb529a0a-6449-4636-9820-33f08318507f"
        },
        "item": {
          "id": "ecb027d3-8b6b-45f8-8c15-e2aab7baa23f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f85269d1-9531-488a-9e62-cd1a22b5d520",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb027d3-8b6b-45f8-8c15-e2aab7baa23f",
        "cursor": {
          "ref": "bfe0c84b-c060-43d2-9967-46cadc0c66d3",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "fb529a0a-6449-4636-9820-33f08318507f"
        },
        "item": {
          "id": "ecb027d3-8b6b-45f8-8c15-e2aab7baa23f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f85269d1-9531-488a-9e62-cd1a22b5d520",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355e6a69-74a7-439e-b266-ff00ae7983b1",
        "cursor": {
          "ref": "1aede504-4240-477d-b945-b55256c41730",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "44438954-cbf5-4636-9929-390944a131f6"
        },
        "item": {
          "id": "355e6a69-74a7-439e-b266-ff00ae7983b1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "882f3be1-cd56-4930-beb1-7c8f46e395c1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "605fdcc1-0fb6-4fb9-a89f-24bf3cd82929",
        "cursor": {
          "ref": "0980ffb7-58d2-4ed6-b200-8ed9ac144c8b",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "930135a2-9c70-43a3-85ba-e0576d5f07ca"
        },
        "item": {
          "id": "605fdcc1-0fb6-4fb9-a89f-24bf3cd82929",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5869043c-f757-48f9-b40f-9396e331c836",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}